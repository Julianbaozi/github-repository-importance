full_name,size,stars,watches,forks,owner_type,if_fork,description,homepage,license,files,language,formats,commits,branches,releases,contributors,topics,age,has_issues,open_issues,closed_issues,open_issues_recent,closed_issues_recent,open_prs,closed_prs,open_prs_recent,closed_prs_recent,labels,milestones,recent_contributors,recent_commits,recent_added,recent_deleted,dependent_repositories,dependent_packages,repositories,people,followers,info,readme
crdroidandroid/android_packages_services_Telecomm,15721,0,11,6,Organization,False,,,,14,Java,"{'': 3, 'bp': 1, 'xml': 1, 'mk': 1, 'flags': 1}",8590,14,0,58,0,2385,True,0,0,0,0,0,3,0,1,7,0,4,8,608,56,0,0,458,19,,,
tspannhw/nifi-extracttext-processor,909,25,4,15,User,False,Apache NiFi Custom Processor Extracting Text From Files with Apache Tika,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 2, 'xml': 2, 'md': 1, 'sh': 2}",15,1,4,3,4,1232,True,1,2,0,0,0,1,0,0,7,0,0,0,0,0,0,0,1,,327,,# nifi-extracttext-processor√æApache NiFi Custom Processor Extracting Text From Files with Apache Tika√æ√æ√æ√æ√æ√æSee my article and example here: √æ√æhttps://community.hortonworks.com/articles/163776/parsing-any-document-with-apache-nifi-15-with-apac.html√æ√æTry this setup√æhttps://community.hortonworks.com/storage/attachments/56409-tika.xml√æ√æhttps://community.hortonworks.com/articles/81694/extracttext-nifi-custom-processor-powered-by-apach.html√æ√æ√æFor the latest version see here:√æ√æhttps://community.hortonworks.com/articles/177370/extracting-html-from-pdf-excel-and-word-documents.html
jagrosh/JagTag,43,22,3,9,User,False,üìù JagTag is a simple - yet powerful and customizable - interpretted text parsing language!,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 1, 'md': 1, 'xml': 2}",10,4,3,1,5,1315,True,2,3,0,1,3,1,2,0,8,0,0,0,0,0,0,0,27,,51,,"## JagTag√æJagTag is a simple - yet powerful and customizable - interpretted text parsing language!√æSome methods are included in the built-in libraries, and additional methods can be defined that utilize the parser environment veriables, as well as the method's input.√æ√æ## Simple Example√æ```java√æimport com.jagrosh.jagtag.*;√æpublic class Example√æ{√æ  public static void main(String[] args)√æ  {√æ    Parser parser = JagTag.newDefaultBuilder()√æ                .addMethod( new Method(""exclaim"", (env,in) -> in[0]+""!!!"") )√æ                .build();√æ    String result = parser.parse(""{exclaim:{if:this|=|that|then:Foo Bar|else:Hello World}}"");√æ    System.out.println(result);√æ  }√æ}√æ```√æResult: `Hello World!!!`√æ√æ## Maven√æTo use Maven with JagTag, simply add the following sections to your pom.xml√æ```xml√æ  <repository>√æ    <id>central</id>√æ    <name>bintray</name>√æ    <url>http://jcenter.bintray.com</url>√æ  </repository>√æ```√æ```xml√æ  <dependency>√æ    <groupId>com.jagrosh</groupId>√æ    <artifactId>JagTag</artifactId>√æ    <version>0.5</version>√æ  </dependency>√æ```√æ√æ## Current Projects√æHere are some other projects that utilize JagTag:√æ* [**Spectra (Discord Bot)**](https://github.com/jagrosh/Spectra) - Spectra uses JagTag in its customizable ""tags"" (user-created commands), and in welcome and leave messages for servers. (https://github.com/jagrosh/Spectra/blob/master/src/spectra/jagtag/libraries/Discord.java)√æ√æ## Other Libraries√æBelow are JagTag-related libraries available for other languages or purposes:√æ* [**TheSharks/JagTag-JS**](https://github.com/TheSharks/JagTag-JS) - A JavaScript port of the JagTag text parsing language√æ* [**TheMonitorLizard/JagTagXML**](https://github.com/TheMonitorLizard/JagTagXML) - a JagTag to XML transpiler written in Java"
graphik-team/graal,421967,30,5,10,Organization,False,"Graal is a Java toolkit for querying knowledge bases within the framework of existential rules, aka Datalog+/-. See Graal's homepage: ",http://graphik-team.github.io/graal/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",27,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1, 'sh': 1}",1512,7,46,4,6,2191,True,6,7,0,0,1,0,0,0,7,0,0,0,0,0,0,0,9,0,,,# Graal√æ√æ[See Graal homepage](https://graphik-team.github.io/graal)√æ√æ## How to build graal? ##√æ√æ* install [git](http://www.git-scm.com/)√æ* clone the repository√æ~~~√æ  git clone git@github.com:graphik-team/graal.git√æ~~~√æ√æ* build the project√æ~~~√æmvn package√æ~~~√æ√æ## How to generate Javadoc? ##√æ√æ~~~√æmvn javadoc:javadoc√æmvn javadoc:aggregate√æ~~~√æ√æ## How to check code with code analyzer? ##√æ√æ~~~√æmvn pmd:check√æmvn findbugs:check√æ~~~√æ√æ## How to build graal when you don't want to get all stuff maven brings?√æ√æ~~~√æ./prepare_ant.sh√æant√æ~~~
Derachmatt20/UTS_1157050036,707,0,0,0,User,False,UTS Mobile Programing,,,9,Java,"{'': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",3,1,0,2,0,595,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,5,,1,,
wepay/WePay-Java-SDK,2579,16,35,22,Organization,False,WePay API SDK for Java Developers,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",11,Java,"{'': 3, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 1}",259,1,26,16,1,,False,,,,,0,59,0,0,6,0,0,0,0,0,0,0,33,3,,,"WePay-Java-SDK√æ================================√æ√æNote√æ================================√æThis WePay-Java-SDK is for WePay API Version 2019-04-03. The jars for the previous API versions can be found in the lib folder. From Dec 13, 2018, the default jar name will include the SDK version.√æ√æBuilding√æ================================√æ```√æmvn clean install√æ```√æ√æOverview√æ================================√æTo use this SDK, first add the WePay jar (com.wepay.jar) to your project. You'll need to add GSON and JSON jars as well (gson-2.2.4.jar and java-json.jar are also included in the lib folder). √æ√æThe lib folder contains the jars necessary to use the SDK to make API calls to WePay. The src folder contains all source code used to build the WePay jar (com.wepay.jar). You'll also need to import the necessary classes and packages into your own code. √æ√æ```java√æimport com.wepay.WePay;                     // WePay object needed for API initialization√æimport com.wepay.model.*;                   // contains call classes and all API call functions√æimport com.wepay.model.data.*;              // contains all data objects needed for making calls√æimport com.wepay.net.WePayResource;         // network resource used to execute calls√æimport com.wepay.exception.WePayException;  // handles WePay exceptions√æimport org.json.*;                          // SDK uses JSON when handling API call parameters√æimport com.google.gson.*;                   // SDK uses GSON for building objects from API responses√æ```√æBefore making actual API calls, you'll need to initialize a new WePay object with your WePay application's client ID, client secret, and whether you want to use the stage environment (true) or the production environment (false).√æ```java √æWePay wepay = new WePay();√æwepay.initialize(myClientId, myClientSecret, useStageEnv);√æ``` √æOnce the WePay object is initialized, you can make all of the API calls described by the documentation on WePay's website. For a full listing of available API calls, visit https://www.wepay.com/developer and explore the API Calls section. √æ√æAPI calls through the Java SDK generally take two arguments, a data object argument and an accessToken argument. For API calls where authorization is needed, you'll need to include the accessToken argument appropriately; for calls that don't require authorization, you can set accessToken to null. √æ√æData objects facilitate the passing of valid parameters to API call classes. Most data objects are designed specifically as parameters to certain types of API calls. Other data objects are utilized by multiple API calls. You can learn what types of data objects are taken as arguments by API call functions in the <a href=""https://github.com/wepay/WePay-Java-SDK/blob/master/APICalls.txt"">APICalls.txt</a> file. This file contains a listing of all available API calls available through this SDK, their return types, and which data object parameters each call takes. √æ√æYou can find examples from all API call classes in the <a href=""https://github.com/wepay/WePay-Java-SDK/tree/master/sample_calls"">sample_calls</a> folder. Each file in that folder contains an example of each of its available API calls and the effect of that call. You should structure the API calls in your code after these examples. It may also be beneficial to explore the source code in the <a href=""https://github.com/wepay/WePay-Java-SDK/tree/master/src/main/java/com/wepay/model"">model</a> and <a href=""https://github.com/wepay/WePay-Java-SDK/tree/master/src/main/java/com/wepay/model/data"">data</a> folders to learn a bit more about the way data objects are used.√æ√æYou *must* include all *required* parameters to successfully execute API calls. You can also include as many optional parameters as you'd like to the data object before executing the API call. For a full listing of required parameters for each call, visit the API documentation. √æ√æThe following examples show how to make a few simple API calls and how you can use the returned objects to obtain information. You can find more examples in the <a href=""https://github.com/wepay/WePay-Java-SDK/tree/master/sample_calls"">sample_calls</a> folder.√æ```java√æ// create a new account√æAccountData aData = new AccountData();√æaData.name = ""Test Person"";                          // required parameter for this API call√æaData.description = ""This is an example account"";    // required parameter for this API call√æaData.type = ""personal"";                             // optional parameter for this API call√æAccount newAccount = Account.create(aData, myAccessToken);√æ√æ// get an accessToken for the new account√æOAuth2Data data = new OAuth2Data();√ædata.redirectUri = ""http://www.mywebsite.com/oauth2/"";√ædata.scope = ""manage_accounts,collect_payments,view_user,preapprove_payments,send_money"";√æString sendUserToThisURL = OAuth2.authorize(data, null);√æ//send user to the returned URL to complete OAuth2 authorization form√æ√æ//on completion of authorization, user is redirected to redirectUri with a code parameter√æ//once you have the code you can exchange it for an access token√æOAuth2Data data = new OAuth2Data();√ædata.redirectUri = ""http://www.mywebsite.com/oauth2/"";√ædata.code = code;√æString userNewAccessToken = OAuth2.token(data, null);√æ√æ// create a new checkout√æCheckoutData cData = new CheckoutData();√æcData.accountId = newAccount.getAccountId();       // use a returned object to access information√æcData.shortDescription = ""Soccer Ball Purchase"";√æcData.type = ""GOODS"";√æcData.amount = 29.95;√æcData.currency = ""USD"";√æCheckout newCheckout = Checkout.create(cData, userNewAccessToken);√æ```√æA demo of the WePay API Java SDK can be found at WeFarm, an online demo marketplace built on the WePay API using this SDK. WeFarm is live online at http://wefarm.herokuapp.com/. You can also find the Java source code for WeFarm at https://github.com/wepay/WeFarm-Java to see how WeFarm uses this SDK to execute WePay API calls. √æ√æFor further information, visit https://www.wepay.com/developer. "
zidoshare/Elise,957,33,5,9,User,False,":hand: A simple, extensible, and support for a distributed crawler framework.‰∏Ä‰∏™ÁÆÄÂçïÁöÑÔºåÈ´òÂ∫¶ÂèØÊâ©Â±ïÁöÑÔºåÂπ∂‰∏îÊîØÊåÅÂàÜÂ∏ÉÂºèÁöÑÁà¨Ëô´Ê°ÜÊû∂",https://elise.zido.site,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 3, 'gradle': 2}",242,5,0,2,6,831,True,1,6,0,0,1,11,1,2,9,0,1,3,702,1758,0,0,80,,72,,
umakantdubey/Menus-App,250,1,0,0,User,False,This app is made by menu bar.,,,11,Java,"{'': 3, 'zip': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",2,1,0,1,6,657,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,11,,1,,
alphagov/pay-connector,26509,7,22,11,Organization,False,The Payments Connector in Java (Dropwizard),,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",21,Java,"{'': 6, 'yaml': 1, 'yml': 3, 'md': 2, 'sh': 3, 'xml': 3}",5563,142,3904,53,2,,True,0,0,0,0,14,2390,11,394,11,0,15,276,22289,12476,0,0,1,38,,,"# pay-connector√æThe GOV.UK Pay Connector in Java (Dropwizard)√æ√æ√æ## Environment Variables√æ√æ| Variable | Default | Purpose |√æ|---------|---------|---------|√æ| `AUTH_READ_TIMEOUT_SECONDS` | `10 seconds` | the timeout before the resource responds with an awaited auth response (202), so that frontend can choose to show a spinner and poll for auth response. Supports any duration parsable by dropwizard [Duration](https://github.com/dropwizard/dropwizard/blob/master/dropwizard-util/src/main/java/io/dropwizard/util/Duration.java)|√æ| `SECURE_WORLDPAY_NOTIFICATION_ENABLED` | false | whether to filter incoming notifications by domain; they will be rejected with a 403 unless they match the required domain |√æ| `SECURE_WORLDPAY_NOTIFICATION_DOMAIN` | `worldpay.com` | incoming requests will have a reverse DNS lookup done on their domain. They must resolve to a domain with this suffix (see `DnsUtils.ipMatchesDomain()`) |√æ| `NOTIFY_EMAIL_ENABLED` | false | Whether confirmation emails will be sent using GOV.UK Notify |√æ| `NOTIFY_PAYMENT_RECEIPT_EMAIL_TEMPLATE_ID` | - | ID of the email template specified in the GOV.UK Notify to be used for sending emails. An email template can accept personalisation (placeholder values which are passed in by the code). |√æ| `NOTIFY_API_KEY` | - | API Key for the account created at GOV.UK Notify |√æ| `NOTIFY_BASE_URL` | `https://api.notifications.service.gov.uk` | Base URL of GOV.UK Notify API to be used|√æ| `LEDGER_URL` | - | Base URL of Ledger |√æ| `GDS_CONNECTOR_WORLDPAY_TEST_URL` | - | Pointing to the TEST gateway URL of Worldpay payment provider. |√æ| `GDS_CONNECTOR_WORLDPAY_LIVE_URL` | - | Pointing to the LIVE gateway URL of Worldpay payment provider. |√æ| `GDS_CONNECTOR_SMARTPAY_TEST_URL` | - | Pointing to the TEST gateway URL of Smartpay payment provider. |√æ| `GDS_CONNECTOR_SMARTPAY_LIVE_URL` | - | Pointing to the LIVE gateway URL of Smartpay payment provider. |√æ| `GDS_CONNECTOR_EPDQ_TEST_URL` | - | Pointing to the TEST gateway URL of ePDQ payment provider. |√æ| `GDS_CONNECTOR_EPDQ_LIVE_URL` | - | Pointing to the LIVE gateway URL of ePDQ payment provider. |√æ| `COLLECT_FEE_FEATURE_FLAG` | false | enable or disable collecting fees for the Stripe payment gateway. |√æ| `STRIPE_TRANSACTION_FEE_PERCENTAGE` | - | percentage of total charge amount to recover GOV.UK Pay platform costs. |√æ| `STRIPE_PLATFORM_ACCOUNT_ID` | - | the account ID for the Stripe Connect GOV.UK Pay platform. |√æ| `DISABLE_INTERNAL_HTTPS` | false | disable secure connection for calls to internal APIs |√æ| `DEFAULT_DO_NOT_RETRY_EMITTING_EVENT_UNTIL_DURATION_IN_SECONDS` | 7200 | Sets the default duration in seconds for events (emitted by parity checker worker) until which the emitted events sweeper ignores to re-emit. Value can be overridden by passing `do_not_retry_emit_until` query parameter to parity checker worker or historical event emitter tasks |√æ| `EMIT_PAYOUT_EVENTS` | false | enable or disable emitting payout specific events to payment queue |√æ√æ√æ### Queues√æ| Variable | Default | Purpose |√æ|---------|---------|---------|√æ| `AWS_SQS_REGION`            | - | SQS capture queue region |√æ| `AWS_SQS_CAPTURE_QUEUE_URL` | - | SQS capture queue URL  |√æ| `AWS_SQS_EVENT_QUEUE_URL`   | - | SQS event queue URL    |√æ| `AWS_SQS_PAYOUT_RECONCILE_QUEUE_URL` | - | SQS payout reconcile queue URL | √æ| `AWS_SQS_NON_STANDARD_SERVICE_ENDPOINT`  | false | Set to true to use non standard (eg: http://my-own-sqs-endpoint) SQS endpoint |√æ| `AWS_SQS_ENDPOINT`          | - |  URL that is the entry point for SQS. Only required when AWS_SQS_NON_STANDARD_SERVICE_ENDPOINT is `true` |√æ| `AWS_SECRET_KEY`            | - | Secret key. Only required when AWS_SQS_NON_STANDARD_SERVICE_ENDPOINT is `true` |√æ| `AWS_ACCESS_KEY`            | - | Access key. Only required when AWS_SQS_NON_STANDARD_SERVICE_ENDPOINT is `true`|√æ| `AWS_SQS_MESSAGE_MAXIMUM_WAIT_TIME_IN_SECONDS` | `20` | Maximum wait time for long poll message requests to queue. |√æ| `AWS_SQS_MESSAGE_MAXIMUM_BATCH_SIZE` | `10` | Maximum number of messages that should be received in an individual message batch. |√æ√æ### Background captures√æ√æThe background capture mechanism will capture all payments in the `CAPTURE_APPROVED` state that have been published to√æthe SQS queue (`AWS_SQS_CAPTURE_QUEUE_URL`).√æ√æA background thread managed by dropwizard runs on all connector nodes. It polls the SQS capture queue to retrieve the√æ list of charges that are waiting to be captured.√æ√æIf a capture attempt fails it will be retried again after a specified delay (`CAPTURE_PROCESS_FAILED_CAPTURE_RETRY_DELAY_IN_SECONDS`).√æIt is achieved by setting up the visibility timeout with the delay value which prevents consumers from receiving the message.√æAfter this timeout the message becomes visible for consumers again.√æMore information of how the visibility timeout works can be found [here](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html).√æ√æThe following variables control the background process:√æ√æ| Variable | Default | Purpose |√æ|---------|---------|---------|√æ| `BACKGROUND_PROCESSING_ENABLED` | `true` | enables registering scheduled processes - at the moment it includes only queue based capture methods |√æ| `CHARGES_CONSIDERED_OVERDUE_FOR_CAPTURE_AFTER` | `60 minutes` | this value is used for calculating the metric gauge of messages awaiting capture (not attempted within this interval) |√æ| `CAPTURE_PROCESS_MAXIMUM_RETRIES` | `96` | connector keeps track of the number of times capture has been attempted for each charge. If a charge fails this number of times or more it will be marked as a permanent failure. An error log message will be written as well. This should *never* happen and if it does it should be investigated. |√æ| `CAPTURE_PROCESS_FAILED_CAPTURE_RETRY_DELAY_IN_SECONDS` | `3600` | the duration in seconds that a message should be deferred before it should be retried. |√æ| `CAPTURE_PROCESS_QUEUE_SCHEDULER_THREAD_DELAY_IN_SECONDS` | `1` | the duration in seconds that the queue message receiver should wait between running threads. |√æ| `CAPTURE_PROCESS_QUEUE_SCHEDULER_NUMBER_OF_THREADS` | `1` | the number of polling threads started by the queue message scheduler. |√æ√æ## Graceful shutdown√æWhen the connector is being stopped it needs to gracefully terminate its background tasks (managed in `QueueMessageReceiver`).√æThe main concern is to drain the in-memory queue (StateTransitionQueue) that stores all the state transition events.√æKilling the `stateTransitionMessageExecutorService` of QueueMessageReceiver (that reads from this in-memory queue)√æwithout making sure the queue is empty would cause state transition events to be lost and Ledger not having the full√æhistory of changes that happened to the payment.√æThe current logic will check whether the emitter process is ready for shutdown (by verifying whether the queue is√æempty) before actually invoking it.√æIn order to make sure that the `StateTransitionEmitterProcess` is shutdown eventually, there is a limit to the number of√æattempts to check readiness for shutdown.√æ√æExample log from the connector shutdown:√æ ```shell script√æ[2019-08-27 10:53:01.231] [thread=Thread-1] [logger=u.g.p.c.p.s.CardExecutorService] - Shutting down CardExecutorService√æ[2019-08-27 10:53:01.285] [thread=Thread-1] [logger=u.g.p.c.p.s.CardExecutorService] - Awaiting for CardExecutorService threads to terminate√æ[2019-08-27 10:53:01.369] [thread=Thread-11] [logger=o.e.j.s.AbstractConnector] - Stopped application@72fedd85{HTTP/1.1,[http/1.1]}{0.0.0.0:9300}√æ[2019-08-27 10:53:01.400] [thread=Thread-11] [logger=o.e.j.s.AbstractConnector] - Stopped admin@5cd9439a{HTTP/1.1,[http/1.1]}{0.0.0.0:9301}√æ[2019-08-27 10:53:01.405] [thread=Thread-11] [logger=o.e.j.s.h.ContextHandler] - Stopped i.d.j.MutableServletContextHandler@2b843043{/,null,UNAVAILABLE}√æ[2019-08-27 10:53:01.455] [thread=Thread-11] [logger=o.e.j.s.h.ContextHandler] - Stopped i.d.j.MutableServletContextHandler@35ac70a{/,null,UNAVAILABLE}√æ[2019-08-27 10:53:01.460] [thread=Thread-11] [logger=u.g.p.c.q.m.QueueMessageReceiver] - State transition receiver is not ready for shutdown√æ[2019-08-27 10:53:01.514] [thread=Thread-11] [logger=u.g.p.c.q.m.QueueMessageReceiver] - State transition receiver is not ready for shutdown√æ[2019-08-27 10:53:01.561] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=0] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.563] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=9] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.564] [thread=Thread-11] [logger=u.g.p.c.q.m.QueueMessageReceiver] - State transition receiver is not ready for shutdown√æ[2019-08-27 10:53:01.566] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=8] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.568] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=7] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.570] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=6] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.573] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=5] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.574] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=4] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.576] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=3] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.578] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=2] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.580] [thread=payment-state-transition-message-poller] [logger=u.g.p.c.e.StateTransitionEmitterProcess] - Emitted new state transition event for [eventId=1] [eventType=PaymentCreated]√æ[2019-08-27 10:53:01.617] [thread=Thread-11] [logger=u.g.p.c.q.m.QueueMessageReceiver] - State transition receiver - number of not processed messages 0√æ√æ```√æ√æ## Integration tests√æ√æTo run the integration tests, the `DOCKER_HOST` and `DOCKER_CERT_PATH` environment variables must be set up correctly. On OS X the environment can be set up with:√æ√æ√æ## Contract tests√æ√æ`$GDS_CONNECTOR_WORLDPAY_PASSWORD` and`$GDS_CONNECTOR_WORLDPAY_PASSWORD` environment variable must be set for Worldpay contract tests.√æ`GDS_CONNECTOR_SMARTPAY_USER`, `GDS_CONNECTOR_SMARTPAY_PASSWORD` must be set for the smartpay contract tests.√æ√æ```√æ    eval $(boot2docker shellinit)√æ    eval $(docker-machine env <virtual-machine-name>)√æ√æ```√æ√æThe command to run all the tests is:√æ√æ```√æ    mvn verify√æ```√æ√æ## API Specification√æ√æThe [API Specification](docs/api_specification.md) provides more detail on the paths and operations including examples.√æ√æ### Tasks namespace√æ√æ| Path                                                                                                 | Supported Methods | Description                                                                                                                      |√æ|:-----------------------------------------------------------------------------------------------------|:------------------|:---------------------------------------------------------------------------------------------------------------------------------|√æ| [```/v1/tasks/expired-charges-sweep```](docs/api_specification.md#post-v1tasksexpired-charges-sweep) | POST              | Spawns a task to expire charges with a default window of 90 minutes                                                              |√æ| [```/v1/tasks/emitted-events-sweep```](docs/api_specification.md#post-v1tasksemitted-events-sweep)   | POST              | Spawns a task to verify whether all the events from the state transition in-memory queue have been processed                     |√æ| [```/v1/tasks/gateway-cleanup-sweep```](docs/api_specification.md#post-v1tasksgateway-cleanup-sweep) | POST              | Spawns a task to check ePDQ charges in an authorisation error state with the gateway and cancel them on the gateway if necessary |√æ√æ√æ### Command line tasks√æ√æThere are a number of√æ[commands](http://www.dropwizard.io/1.1.0/docs/manual/core.html#commands)√æwhich can run from the command line. Invoke the all-in-one jar to see a list√æof the commands:√æ√æ```√æ$ java -jar target/pay-connector-0.1-SNAPSHOT-allinone.jar√æ```√æ√æ* `waitOnDependencies [-h] [file]` - Waits for dependent resources to become available√æ√æ   positional arguments: `file` - application configuration file√æ√æ* `render-state-transition-graph` - Outputs a representation of the connector state√æ                                    transitions as a graphviz 'dot' file√æ√æ### API namespace√æ√æ| Path                          | Supported Methods | Description                        |√æ| ----------------------------- | ----------------- | ---------------------------------- |√æ|[```/v1/api/accounts```](docs/api_specification.md#post-v1apiaccounts)              | POST    |  Create a new account to associate charges with            |√æ|[```/v1/api/accounts```](docs/api_specification.md#get-v1apiaccounts)              | GET    |  Retrieves a collection of all the accounts |√æ|[```/v1/api/accounts/{gatewayAccountId}```](docs/api_specification.md#get-v1apiaccountsaccountsid)     | GET    |  Retrieves an existing account without the provider credentials  |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}```](docs/api_specification.md#get-v1apiaccountsaccountidchargeschargeid)                 | GET    |  Returns the charge with `chargeId`  belongs to account `accountId` |√æ|[```/v1/api/accounts/{accountId}/charges```](docs/api_specification.md#post-v1apiaccountsaccountidcharges)                                  | POST    |  Create a new charge for this account `accountId`           |√æ|[```/v1/api/notifications/worldpay```](docs/api_specification.md#post-v1apinotificationsworldpay)                                  | POST |  Handle charge update notifications from Worldpay.            |√æ|[```/v1/api/notifications/smartpay```](docs/api_specification.md#post-v1apinotificationssmartpay)                                  | POST |  Handle charge update notifications from Smartpay.            |√æ|[```/v1/api/notifications/epdq```](docs/api_specification.md#post-v1apinotificationsepdq)                                  | POST |  Handle charge update notifications from ePDQ.                |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}/cancel```](docs/api_specification.md#post-v1apiaccountsaccountidchargeschargeidcancel)  | POST    |  Cancels the charge with `chargeId` for account `accountId`           |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}/events```](docs/api_specification.md#post-v1apiaccountsaccountidchargeschargeidevents)  | GET     |  Retrieves all the transaction history for the given `chargeId` of account `accountId`           |√æ|[```/v1/api/accounts/{accountId}/email-notification```](docs/api_specification.md#post-v1apiaccountsaccountidchargeschargeidevents)  | PATCH   |  Changes settings for email notifications for the given account `accountId`           |√æ|[```/v1/api/accounts/{accountId}/description-analytics-id```](docs/api_specification.md#patch-v1apiaccountsdescriptionanalyticsid)  | PATCH   |  Allows editing description and/or analyticsId for the given account `accountId`           |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}/refunds```](docs/api_specification.md#post-v1apiaccountschargesrefunds)  | POST   |  Submits a refund for a given charge `chargeId` and a given `accountId`           |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}/refunds```](docs/api_specification.md#get-v1apiaccountschargesrefunds)  | GET   |  Retrieves all refunds associated to a charge `chargeId` and a given `accountId`           |√æ|[```/v1/api/accounts/{accountId}/charges/{chargeId}/refunds/{refundId}```](docs/api_specification.md#get-v1apiaccountschargesrefundsrefundid)  | GET   |  Retrieves a refund by `refundId` for a given charge `chargeId` and a given `accountId`           |√æ|[```/v1/api/accounts/{accountId}/stripe-setup```](docs/api_specification.md#get-v1apiaccountsaccountidstripe-setup)|GET|Retrieves which Stripe Connect account setup tasks have been completed for a given `accountId`√æ|[```/v1/api/accounts/{accountId}/stripe-setup```](docs/api_specification.md#post-v1apiaccountsaccountidstripe-setup)|POST|Updates which Stripe Connect account setup tasks have been completed for a given `accountId`√æ|[```/v1/api/reports/performance-report```](docs/api_specification.md#get-v1apireportsperformance-report)|GET|Retrieves performance summary |√æ|[```/v1/api/reports/gateway-account-performance-report```](docs/api_specification.md#get-v1apireportsgateway-account-performance-report)|GET|Retrieves performance summary segmented by gateway account |√æ|[```/v1/api/reports/daily-performance-report```](docs/api_specification.md#get-v1apireportsdaily-performance-report)|GET|Retrieves performance summary for a given day |√æ√æ### Frontend namespace√æ√æ| Path                          | Supported Methods | Description                        |√æ| ----------------------------- | ----------------- | ---------------------------------- |√æ|[```/v1/frontend/accounts/{accountId}```](docs/api_specification.md#get-v1frontendaccountsaccountid)              | GET    |  Retrieves an existing account together with the provider credentials             |√æ|[```/v1/frontend/accounts/{accountId}```](docs/api_specification.md#put-v1frontendaccountsaccountid)              | PUT    |  Update gateway credentials associated with this account             |√æ|[```/v1/frontend/charges/{chargeId}/status```](docs/api_specification.md#put-v1frontendchargeschargeidstatus)         | PUT    |  Update status of the charge     |√æ|[```/v1/frontend/charges/{chargeId}```](docs/api_specification.md#get-v1frontendchargeschargeid)                                  | GET |  Find out the status of a charge            |√æ|[```/v1/frontend/charges/{chargeId}/cards```](docs/api_specification.md#post-v1frontendchargeschargeidcards)                      | POST |  Authorise the charge with the card details            |√æ|[```/v1/frontend/charges/{chargeId}/capture```](docs/api_specification.md#post-v1frontendchargeschargeidcapture)                      | POST |  Confirm a card charge that was previously authorised successfully.            |√æ|[```/v1/frontend/charges?gatewayAccountId={gatewayAccountId}```](docs/api_specification.md#get-v1frontendchargesgatewayAccountIdgatewayAccountId)    | GET |  List all transactions for a gateway account     |√æ|[```/v1/frontend/tokens/{chargeTokenId}```](docs/api_specification.md#get-v1frontendtokenschargetokenid) | GET |  Retrieve the status of and charge associated with a secure redirect token.|√æ|[```/v1/frontend/tokens/{chargeTokenId}/charge```](docs/api_specification.md#get-v1frontendtokenschargetokenidcharge) | GET |  Retrieve the charge associated with a secure redirect token.|√æ|[```/v1/frontend/tokens/{chargeTokenId}/used```](docs/api_specification.md#post-v1frontendtokenschargetokenidused) | POST |  Mark a secure redirect token as used.|√æ|[```/v1/frontend/tokens/{chargeTokenId}```](docs/api_specification.md#delete-v1frontendtokenschargetokenid) | DELETE |  Delete a secure redirect token.|√æ√æ√æ## Licence√æ√æ[MIT License](LICENSE)√æ√æ## Responsible Disclosure√æ√æGOV.UK Pay aims to stay secure for everyone. If you are a security researcher and have discovered a security vulnerability in this code, we appreciate your help in disclosing it to us in a responsible manner. We will give appropriate credit to those reporting confirmed issues. Please e-mail gds-team-pay-security@digital.cabinet-office.gov.uk with details of any issue you find, we aim to reply quickly."
dmchitra/Learning,49,0,0,0,User,False,Learning,,,5,Java,"{'java': 2, '': 3}",13,1,0,1,0,544,True,0,0,0,0,0,0,0,0,8,0,1,1,55,0,0,0,3,,0,,
academiadev-jlle/backend-batatacombacon,407,1,2,4,Organization,False,"PetCodes - Projeto objetivo do AcademiaDev Joinville, este √© o Reposit√≥rio de Backend",https://github.com/academiadev-jlle/wiki-batatacombacon,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 2, 'gradle': 2, 'bat': 1}",203,3,4,4,1,611,True,5,59,0,0,0,43,0,0,16,0,0,0,0,0,0,0,31,1,,,# ReadMe√æ√æ* Veja no reposit√≥rio [Wiki](https://github.com/academiadev-jlle/wiki-batatacombacon)
ToBe-Liu/monitor,22,0,0,0,User,False,,,,2,Java,{'xml': 1},1,1,0,0,0,587,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,17,,0,,
YogenRaii/microservice-examples,237,0,1,2,User,False,Demo projects for creating micro-services using Spring Cloud Technologies. Some of projects are part of articles published in LinkedIn.,,,12,Java,"{'': 1, 'java': 1, 'md': 1}",43,1,0,1,6,1264,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,18,,60,,# microservice-examples
Guardianofthecode/Activity_example,125,0,0,0,User,False,Push texts to next screen,,,10,Java,"{'': 3, 'gradle': 2, 'properties': 1, 'bat': 1}",1,1,0,1,0,733,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,3,,0,,
Dolois/File-Copy-and-Find,17,0,0,0,User,False,,,,5,Java,"{'': 2, 'md': 1}",11,1,0,1,0,613,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,55,,10,,#### Le but : copier un fichier (lecture) en entree vers un fichier (ecriture) en sortie√æ####√æ#### Exercice : Sauvegarder le programme FileCopyFile.java√æ####            Generer le fichier readme.md a partir des differents commentaires du programme FileCopyFile.java√æ####√æ#### Ouverture du fichier FileCopyFile.java en lecture√æ#### Ouverture du fichier FileCopyFile.save en ecriture√æ#### Ouverture du fichier readme.md en ecriture√æ####√æ#### Initialisations des delimiteurs de commentaires√æ√æ#### Boucle sur le fichier en entree tant qu'il y a un enregistrement√æ* si l'enregistrement debute avec deux slash√æ* apres suppression des espaces d'entete√æ* alors√æ  * ecriture du commentaire dans le fichier FileCopyFile.save√æ  * ecriture du commentaire dans le fichier readme.md√æ* sinon si l'enregistrement contient un des delimiteurs√æ  * alors√æ    * ecriture du commentaire dans le fichier readme.md√æ  * sinon√æ    * ecriture de l'enregistrement dans le fichier de sauvegarde FileCopyFile.save√æ  * fin si√æ* fin si√æ#### Fermeture du fichier FileCopyFile.java√æ#### Fermeture du fichier FileCopyFile.save√æ#### Fermeture du fichier readme.md√æ####√æ####     ecriture du commentaire dans le fichier FileCopyFile.save√æ####     ecriture du commentaire dans le fichier readme.md√æ#### sinon si l'enregistrement contient un des delimiteurs√æ####       alors√æ####           ecriture du commentaire dans le fichier readme.md√æ####       sinon√æ####           ecriture de l'enregistrement dans le fichier de sauvegarde FileCopyFile.save√æ####√æ#### Fermeture du fichier FileCopyFile.java√æ#### Fermeture du fichier FileCopyFile.save√æ#### Fermeture du fichier readme.md√æ####√æ#### lancement de la methode copyFile en passant en arguments√æ#### le fichier en entree en acces lecture  de FileCopyFile.java√æ#### le fichier en sortie en acces ecriture de FileCopyFile.save√æ#### le fichier en sortie en acces ecriture de readme.md
teocci/JavaFX-UISamples,15347,0,1,0,User,False,This is a very simple and straight-forward implementation of solutions based on JavaFX Framework.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",8,Java,"{'': 2, 'md': 1, 'iml': 1, 'sh': 1, 'xml': 1}",16,3,0,0,0,698,True,0,0,0,0,2,3,2,2,9,0,0,0,0,0,0,0,383,,40,,"## JavaFX: UISamples√æThis is a very simple and straight-forward implementation of solutions based on JavaFX Framework.√æ√æ### Disclaimer√æ√æThis repository contains a sample code intended to demonstrate the capabilities of JavaFX, solving small issues or implementing basic features. The current version is not intended to be used as-is in applications as a library dependency, and will not be maintained as such. Bug fix contributions are welcome, but issues and feature requests will not be addressed.√æ√æ### Pre-requisites√æ√æ- Java 8√æ- JavaFX√æ- Maven 3√æ√æ## Credits√æ√æThis project was based on these libraries:√æ√æ- [Java WebSockets][1] for the WebSockets implementation√æ- [JmDNS library][2] for the Service discovery.√æ- [SystemTray][3] for the SystemTray implementation.√æ- [JavaFxSVG][4] for adding SVG support to JavaFX√æ- [Apache Commons Math][5] for addressing the most common practical problems not immediately available in the Java programming language or commons-lang. √æ- [jackson-databind][6] for general data-binding package for Jackson.√æ√æ## License√æ√æThe code supplied here is covered under the MIT Open Source License..√æ√æ [1]: https://github.com/TooTallNate/Java-WebSocket√æ [2]: https://github.com/jmdns/jmdns√æ [3]: https://git.dorkbox.com/dorkbox/SystemTray√æ [4]: https://github.com/codecentric/javafxsvg√æ [5]: https://mvnrepository.com/artifact/org.apache.commons/commons-math3√æ [6]: https://github.com/FasterXML/jackson-databind"
tashaezileen/TashaCodeReader,123,0,0,0,User,False,,,,9,Java,"{'': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",1,1,0,1,0,931,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,10,,0,,
FINRAOS/jenkins-build-collector,21,0,5,1,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 2, 'md': 1, 'xml': 1}",2,1,0,2,0,1256,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,22,10,,,"Build Collector Plugin Jenkins√æ============================√æ√æPersists build information.√æ√æInformation reported includes:√æ* Name of the build.√æ* Start time of the build.√æ* Duration of the build.√æ* Result of the build: success, failed, aborted etc.√æ* System properties.√æ* Environment variables.√æ√æRecorders√æ---------√æ### Coming Soon...√æ√æThis plugin has the ability to save additional information about your build that is gathered by other plugins. Examples include subversion and git changelog information, Junit and Cobertura √ætest results etc. These extensions can be developed and installed as a separate plugin. The core library for this plugin should discover them at runtime and persist the information.√æ√æPersistors√æ----------√æ### Elasticsearch √æ* `URL` - HTTP URL to an Elasticsearch instance, example: `https://cluster01/`.√æ* `Index name` - Name of the index to use, example: `jenkins`.√æ* `Type name` - Name of the type, example: `build`.√æ* `Pattern` - Regex expression that matches the builds you want to persist information for: `(?i).*(CIBUILD).*`.√æ* `Connection Timeout` - Time to wait to establish a connection to the Elasticsearch server. √æ* `Read Timeout` - Time to wait to for a response from the Elasticsearch server. This is used by the plugin to determine if the insert to the service was successful.√æ* `Username` - Username for authentication to your elasticsearch instance.√æ* `Password` - Password for authentication to your elasticsearch instance.√æ√æ### MongoDB√æ* `Hostname` - Host on which your MongoDB instance is running., example: `localhost`.√æ* `Port` - Port on which your MongoDB instance is running., example: `27017`.√æ* `Collection Name` - Name of your collection in MongoDB., example: `build`.√æ* `Pattern` - Regex expression that matches the builds you want to persist information for: `(?i).*(CIBUILD).*`.√æ* `Timeout` - Time to wait to for a response from Mongo. √æ* `Username` - Username for authentication to your elasticsearch instance.√æ* `Password` - Password for authentication to your elasticsearch instance.√æ√æ### Other Extensions√æThis plugin can be extended to accomodate more peristors. See our Mongo and Elasticsearch extension in our repository. New extensions can be installed as separate plugin√æand the core library should discover them at runtime.√æ√æ√æBuilding√æ--------√æ√æ### Setup√æ√æIn order to build the plugin Maven must be able to pull the necessary dependencies from Jenkins repository.√æ[settings.xml](docs/settings.xml) contains the necessary Maven settings.√æ√æ### Build√æ√æRun `mvn clean install`.√æ√æInstallation√æ------------√æ√æLaunch Jenkins and go to *Manage Jenkins*, *Manage Plugins*, *Advanced*. Use *Upload Plugin* to upload the hpi file."
JerryJHC/FindThePositions,5602,0,0,0,User,False,App for find objects from an XML with digital compass,,,27,Java,"{'': 2, 'xml': 16, 'gradle': 2, 'properties': 1, 'bat': 1}",23,1,7,1,0,1292,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,14,,0,,
allexamples/spring-framework-hello-world-annotation-way,2,0,1,0,Organization,False,Spring framework hello world example using annotations,,,4,Java,"{'': 1, 'md': 1, 'xml': 1}",2,1,0,1,3,772,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,5,0,,,# spring-framework-hello-world-annotation-way√æSpring framework hello world example using annotations
saikok87/solrbasics,17,0,0,0,User,False,Solr Search Engine and Mongo,,,1,Java,{},1,1,0,1,0,1355,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,9,,0,,
vnnvanhuong/chatbot_rivescript_backend,8,1,1,0,User,False,Java REST APIs for rivescript chabot,https://vhandit.blogspot.com/2018/03/creating-chatbot-with-rivescript-in-java.html,,4,Java,"{'': 1, 'md': 1, 'xml': 1}",1,1,0,0,3,813,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,21,,8,,# Chatbot using RiveScript in Java√æThis is a module beeing used as a backend. It provides a RESTful API as a service replying received messages from users√æ√æ## Used tools and technologies√æ- Oracle JDK 1.8√æ- Apache Maven 3.5.2√æ√æ## How to use√æDeploy the app into an application server such as Tomcat
wayshall/onetwo,57523,16,3,10,User,False,‰∏Ä‰∏™Âü∫‰∫éspringÂíåspring bootÁöÑÂø´ÈÄüÂºÄÂèëÊ°ÜÊû∂‚Ä¶‚Ä¶,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 2, 'md': 1}",4308,12,29,2,3,2601,True,2,27,2,4,1,3,1,1,9,2,0,0,0,0,0,0,53,,19,,# zifish√æ------√æÂü∫‰∫éspring bootÁöÑÂø´ÈÄüÂºÄÂèëÊ°ÜÊû∂   √æ√æspring-bootÊäÄÊúØ‰∫§ÊµÅÁæ§Ôºö  604158262√æ√æ√æ√æ## ÁéØÂ¢ÉË¶ÅÊ±ÇÂíå‰∏ªË¶ÅÊ°ÜÊû∂‰æùËµñÁâàÊú¨√æ- JDK 8+√æ- Spring 4.x+√æ- Spring Boot 1.5.16.RELEASE (bootÊ®°ÂùóË¶ÅÊ±ÇÔºâ√æ- Spring Cloud Edgware (cloudÊ®°ÂùóË¶ÅÊ±Ç)√æ√æ## maven   √æÂΩìÂâçsnapshotÁâàÊú¨Ôºö**4.7.4-SNAPSHOT**   √æ√æËã•‰ΩøÁî®snapshotÁâàÊú¨ÔºåËØ∑Ê∑ªÂä†snapshotRepository‰ªìÂÇ®Ôºö   √æ```xml   √æ<repository>√æ     <id>oss</id>√æ     <url>https://oss.sonatype.org/content/repositories/snapshots/</url>√æ    <snapshots>√æ        <enabled>true</enabled>√æ    </snapshots>√æ</repository>   √æ```√æ√æ## Á§∫‰æãÈ°πÁõÆ   √æÂü∫‰∫ézifishÁöÑwebÁ§∫‰æãÈ°πÁõÆÔºö√æ[web-sample](https://github.com/wayshall/onetwo-web-sample)  √æÂü∫‰∫ézifishÁöÑÂêéÂè∞ÁÆ°ÁêÜÁ§∫‰æãÈ°πÁõÆÔºö√æ[web-manager](https://github.com/wayshall/onetwo-web-manager)   √æ√æ√æ## [commonÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/common)√æÈÄöÁî®Ê®°ÂùóÔºå‰∏Ä‰∫õÂ∑•ÂÖ∑Á±ªÂ∞ÅË£Ö„ÄÇ√æ√æ## [springÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/spring)√æ‰æùËµñÂà∞springÁõ∏ÂÖ≥ÁöÑÂ∞ÅË£Ö√æ√æ√æ## [ÂÜÖÂµåtomcatÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/tomcat)√æÁÆÄÂçïÁöÑÂÜÖÂµåtomcatÂÆπÂô®ÂÆûÁé∞√æ√æ## [poiÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/poi)√æÂü∫‰∫époiÔºåÂØπÊìç‰ΩúexcelÁöÑÁÆÄÂçïÂ∞ÅË£Ö„ÄÇ√æ√æ## [dbmÊ®°Âùó](https://github.com/wayshall/dbm)√æ√æÂü∫‰∫éspring jdbcÂÆûÁé∞ÁöÑÁÆÄÂçïorm   √æ√æÂçïÁã¨‰ΩøÁî®dbmÁöÑÁ§∫‰æãÈ°πÁõÆÔºö√æ[boot-dbm-sample](https://github.com/wayshall/boot-dbm-sample)√æ√æ## [securityÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/security)√æÂü∫‰∫éspring securityÂÆûÁé∞ÁöÑÂä®ÊÄÅ RBAC ÊùÉÈôêÁÆ°ÁêÜ  √æ√æ√æ## [bootÊ®°Âùó](https://github.com/wayshall/onetwo/tree/master/core/modules/boot)√æbootÊ®°ÂùóÔºö√æ- Âü∫‰∫éboot‰πã‰∏äÂ∞ÅË£ÖÊèí‰ª∂Êú∫Âà∂√æ- freemarkerÂ¢ûÂä†Êèí‰ª∂Ë∑ØÂæÑÂàÜÊ¥æÊîØÊåÅ√æ- Â∞ÅË£ÖÁ¨¨‰∏âÊñπÂ∫ì‰ΩøÁî®√æ  √æ√æ## [zifish-pluginsÊèí‰ª∂È°πÁõÆ](https://github.com/wayshall/zifish-plugins)√æÂåÖÂê´‰∫ÜÂü∫‰∫éÊú¨Ê°ÜÊû∂ÂºÄÂèëÁöÑÊèí‰ª∂„ÄÇ√æ- web-adminÊèí‰ª∂Ôºö‰ΩøÁî®jquery-easyuiÁºñÂÜôÁöÑÁÆÄÂçïÂêéÂè∞ÁÆ°ÁêÜÔºåÂåÖÂê´‰∫ÜÂü∫Êú¨ÁöÑÊùÉÈôêÁÆ°ÁêÜÂíåËèúÂçïÂäüËÉΩ„ÄÇ√æ- swaggerextÊèí‰ª∂√æ√æ√æ## ÊçêËµ†√æÂ¶ÇÊûú‰Ω†ËßâÂæóËøô‰∏™È°πÁõÆÂ∏ÆÂà∞‰∫Ü‰Ω†ÔºåËØ∑Áî®ÊîØ‰ªòÂÆùÊâìËµè‰∏ÄÊùØÂíñÂï°Âêß~~~   √æ√æ![ÊîØ‰ªòÂÆù](doc/alipay2.jpg) 
BlueFire-LLC/BlueFire-API-for-Android-Studio,65320,6,1,3,User,False,Android API for direct connection to the BlueFire J1939/J1708 Bluetooth Data Adapters,,,18,Java,"{'': 2, 'apk': 1, 'docx': 1, 'pdf': 2, 'iml': 1, 'md': 1, 'gradle': 2, 'properties': 2, 'bat': 1, 'json': 1}",119,1,0,1,0,1328,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,2,,10,,"# BlueFire-API-for-Android√æAndroid API for direct connection to the BlueFire J1939/J1708 Bluetooth Data Adapters.√æ√æVersion 1:<ul>√æ <li>Initial version.√æ</ul>√æ √æVersion 2:<ul>√æ <li>Code updates.√æ</ul>√æ √æVersion 3:<ul>√æ <li>Handles Adapter looping errors.√æ</ul>√æ √æVersion 4:<ul>√æ <li>Added Adapter Name and Password retrieval and update.√æ <li>Connects to any adapter that starts with the Adapter Name.√æ <li>Reboots the adapter on receiving adapter errors (firmware version 2.12).√æ <li>Supports Adapter Firmware 2.13.√æ</ul>√æ √æVersion 5:<ul>√æ <li>Added Adapter Name update to Main page.√æ <li>Added Truck Make, Model, Serial No, and Unit No to Next Pages.√æ <li>Added App Settings class for BlueFire settings.√æ <li>Added rebooting the adapter when disconnecting.√æ <li>Added LastConnectedId and ConnectToLastAdapter Bluetooth settings.√æ <li>Added Incompatible version check.</li>√æ <ul>√æ  <li>Adapter Firmware 2.7 and less</li>√æ  <li>Adapter Firmware 3.0 and greater</li>√æ </ul>√æ</ul>√æ √æVersion 6:<ul>√æ <li>Created an API document. Contact BlueFire Support for a copy.√æ <li>Removed exposure to the Comm, J1939, and J1587 classes, and, moved all properties and methods to the Adapter class.√æ <li>Added option to set the Interval on retrieving truck data (default is on change of data). This is useful when the data is coming in too fast (ie. RPM) and you want to slow it down.√æ <li>Added SendPGN method and PGNData property for sending non-API defined PGNs.√æ <li>Added sample code for SendPGN and MonitorPGN.√æ <li>Added commons-codec-1.10.jar to the project libs folder. This is only required for the API Demo App.√æ <li>Added a projects docs folder that contains the commons javadoc files. You must set the Javadoc Location project property to point to this folder.√æ</ul>√æ √æVersion 7:<ul>√æ <li>GetVehicleData is now threaded for performance.√æ <li>Compatible with Adapter Firmware 3.x.√æ</ul>√æ √æVersion 8:<ul>√æ <li>Fixed retrieving J1939 Component Id (Make, Model, Serial No, Unit No).√æ <li>Added retrieving J1708 VIN, Component Id and Faults.√æ <li>Added additional exception handling.√æ</ul>√æ √æVersion 9:<ul>√æ <li>Added additional exception handling.√æ <li>Added additional debug logging to the Demo App (Main).√æ</ul>√æ √æVersion 10:<ul>√æ <li>Added J1708 filtering.√æ <li>Truck numerical data is initialized to -1.√æ <li>Demo App (Main) shows NA if truck data is negative (no data).√æ</ul>√æ √æVersion 11:<ul>√æ <li>Renamed FWVersion property to FirmwareVersion.√æ <li>Renamed HWVersion property to HardwareVersion.√æ <li>J1587 filtering caters for a 0 value where appropriate.√æ</ul>√æ √æVersion 12:<ul>√æ <li>Supports Adapter Firmwares 3.4+.√æ <li>Added User Name and Password authentication.√æ <li>Added updating adapter data (led brightness) while offline to the Demo App (Main).√æ</ul>√æ √æVersion 13:<ul>√æ <li>Added Key State to API Demo (Key On/Off).√æ <li>Renamed source folder and apk from ""bluefire.apidemo"" to ""com.bluefire.apidemo"".√æ</ul>√æ √æVersion 14:<ul>√æ <li>Minor improvements to the Bluetooth Discovery process.√æ <li>Changed SetMaxConnectRetrys default to 10 retries.√æ <li>Changed SetDiscoveryTimeOut default to 30 seconds.√æ</ul>√æ √æVersion 15:<ul>√æ <li>Supports Adapter Firmware 3.7.√æ <li>GetVehicleData, GetFuelData, and GetEngineHours retrieves data more accurately (firmware 3.6 and lower work, but better performance with firmware 3.7). √æ</ul>√æ √æVersion 16:<ul>√æ <li>When J1939 and J1708 data are retrieved, J1939 data will take precedence over J1708 data. √æ</ul>√æ √æVersion 17:<ul>√æ <li>Supports Adapter Firmware 3.8+.√æ <li>Added Get/Set PerformanceMode that will improve the retrieval of PGNs that have an interval of one second. √æ <li>Minor improvement to the retrieval of vehicle data (vin, make, model, serial no). √æ</ul>√æ√æVersion 18:<ul>√æ <li>App heartbeat will be sent to the adapter every second. √æ</ul>√æ√æVersion 19:<ul>√æ <li>Supports the BLE (Bluetooth Low Energy) adapters (see limitations below).√æ <li>The API will automatically find and select the correct adapter (BLE or BT21 (Bluetooth Classic)).√æ <li>Added properties UseBLE, UseBT21 that will improve connection speed if set.√æ <li>Added properties IsUsingBLE, IsUsingBT21 that will be set according to the type of Bluetooth connected to. √æ <li>Added property MinInterval that defaults to 500 ms for BLE adapters. √æ <li>Supports the new 500K CAN adapter (green Deutsch connector). √æ <li>Removed the Settings class from the Demo App.√æ <li>No longer compatible with Adapter firmware 2.x.√æ <li>Requires Android 4+ for Bluetooth Classic adapter and 5+ for BLE adapter.√æ <li>Supports the Android Studio IDE.√æ</ul>√æ√æVersion 19.1:<ul>√æ <li>Patch for discovering an adapter using Bluetooth Classic and Android 6.0+.√æ</ul>√æ√æVersion 20.0:<ul>√æ <li>Renamed the Adapter class to the BlueFire class to avoid confusion with the Android Adapter widget.√æ <li>Added an Adapter BT2.1 and a BLE checkbox that will select the appropriate Adapter type. Leaving both unchecked will cause the API to auto select the Adapter type.√æ <li>Added GetTransmissionGears method that will retrieve the current and selected gears from the transmission ECM if the data is available.√æ</ul>√æ√æVersion 20.1:<ul>√æ <li>Removed IsUsingBT21 and IsUsingBLE properties in lieu of using properties UseBT21 and UseBLE which if not set will be set automatically by the API.√æ <li>The Demo App's Disconnect button will be shown immediately after connecting to allow for disconnecting while the API is attempting to discover an Adapter.√æ</ul>√æ√æVersion 20.2:<ul>√æ <li>The API will only raise Connection State 'Reconnected' when the Adapter is reconnected. Connection State 'AdapterConnected' will only be raised upon initial connection.√æ <li>The Demo App has been modified to reflect the above 'Reconnected' Connection State.√æ <li>Added API method ResetAdapter which will reset the Adapter to factory settings.√æ <li>The Demo App will edit for invalid hex characters in Send PGN Data.√æ <li>Fixed API fatal exception in SendPGN when sending data.√æ</ul>√æ√æVersion 21.0:<ul>√æ <li>Added optional Source and MID parameters to the GetVehicleInfo method.√æ    <li>Added optional Source and MID parameters to the GetFaults method.√æ    <li>Removed property IsFaultDataChanged.√æ    <li>Added Truck property IsJ1587Fault.√æ    <li>All methods take Source, PGN, and MID as integers.√æ    <li>Demo App shows Fault source.√æ</ul>√æ√æVersion 22.0:<ul>√æ <li>Added support for Adapter Firmware 3.10 and ELD Recording (see API 22.0 documentation).√æ    <li>Changed and renamed many properties and methods. Refer to the API documentation for all the changes.√æ    <li>Backward compatible with Adapter Firmware 3.7 to 3.9 (no ELD Recording).√æ    <li>No additional functionality except for features in Firmware 3.10 and ELD Recording.√æ    <li>Added Adapter Id security.√æ    <li>Fixed BLE issues however using the BLE Adapter requires Android 6+.√æ    <li>New Demo App that supports ELD Recording.√æ    <li>Demo App request location permissions if connecting to a BLE adapter.√æ    <li>API and Demo App are compiled with minimum Android version of 23.√æ    <li>Demo App no longer references commons-codec-1.10.√æ</ul>√æ √æVersion 22.1:<ul>√æ <li>Changed ConnectionStates, SleepModes, and ELD.RecordIds to be exposed outside of the BlueFire class.√æ <li>Internal changes.√æ</ul>√æ √æVersion 22.2:<ul>√æ <li>Requires Adapter Firmware Beta 3.10.3 for ELD functionality.√æ <li>Removed duplicate ELD records.√æ <li>Better re-connection while ELD recording.√æ</ul>√æ √æVersion 22.3:<ul>√æ <li>Compatible with Adapter Firmware Beta 3.10.5 for ELD functionality.√æ <li>Better time sync with the Adapter.√æ</ul>√æ √æVersion 22.4:<ul>√æ <li>Requires Adapter Firmware Beta 3.10.5 for ELD functionality.√æ <li>Added getEngineVIN method.√æ <li>Added synchronization to Truck Data methods.√æ <li>Added retrievalMethod parameter to Truck Data methods.√æ <li>Demo App only retrieves truck data when navigating to the specific data page.√æ <li>API documentation has been updated to reflect the above changes.√æ</ul>√æ √æVersion 22.5:<ul>√æ <li>Requires Adapter Firmware Beta 3.10.6 for ELD functionality.√æ <li>Fixed J1708 data retrieval.√æ <li>Added property AndroidVersion.√æ    <li>Added property SyncTimeout.√æ    <li>Added ConnectionState CANFilterFull.√æ    <li>Renamed property DiscoveryTimeOut to DiscoveryTimeout.√æ    <li>Renamed property MaxConnectRetrys to MaxConnectAttempts.√æ    <li>Added method ELD.SetStreaming.√æ    <li>Added property ELD.LocalRecordNo.√æ    <li>Added ELD Enum RecordingModes.√æ    <li>Added property ELD.RecordingMode and method SetRecordingMode.√æ    <li>Added property ELD.IsRecordingLocally.√æ    <li>Added property ELD.IsRecordingConnected.√æ    <li>Added property ELD.IsRecordingDisconnected.√æ    <li>Included the API documentation in the GitHub repository.√æ    <li>Added to the API documentation Appendix instructions for manually resetting the Adapter.√æ</ul>√æ √æVersion 22.6:<ul>√æ <li>Requires Adapter Firmware Beta 3.10.8 for ELD functionality.√æ <li>Removed VIN from GetVehicleData method.√æ <li>Added Boolean return value to Truck Data methods for synchronized calls.√æ <li>Added synchronized VIN retrieval to Demo App.√æ <li>ELD rules are sent to the Adapter from the API.√æ <li>The Adapter will reboot after ELD StopEngine if the API is not connected.√æ</ul>√æ √æVersion 22.7:<ul>√æ <li>Requires Adapter Firmware 3.10 for ELD functionality.√æ <li>Fixed issue with retrieving VIN and Vehicle Data in the Demo App.√æ</ul> √æ√æVersion 22.8:<ul>√æ <li>Fixed compatability with Firmware 3.9 and below.√æ <li>API will generate and update the Adapter Serial Number if it is missing. This can occur if the adapter firmware is flashed over the top of an older incompatible firmware.√æ</ul>√æ√æVersion 22.9:<ul>√æ <li>Requires Adapter Firmware 3.11. Note, Firmware 3.10 is broken and should be updated to 3.11.√æ    <li>Compatable with Firmware 3.9 and below.√æ <li>API method GetEngineVIN automatically sets the sync timeout if RetrievalMethod Synchronized is specified. The default sync timeout is 2 seconds.√æ <li>The call to VIN retrieval SetSyncTimeout in the Demo App has been commented out to allow the API method to set the default.√æ <li>Faults have been moved to their own page in the Demo App in order to allow faults to be retrieved by themselves (recommended).√æ <li>VIN and Truck data (Component Id) retrieval have been improved. It is recommended to retrieve VIN and Truck data before retrieving any other data.√æ</ul>√æ√æVersion 22.10:<ul>√æ <li>The API now disconnects properly from the Adapter while ELD is recording.√æ    <li>The Demo App disconnectAdapter method WaitForDisconnect parameter is set to false for Adapter Firmware 3.11.√æ</ul>√æ√æVersion 22.11:<ul>√æ <li>The SetDiscoveryTimeOut method is renamed to SetDiscoveryTimeout (TimeOut to Timeout).√æ <li>Added SetAdvertisementTimeout method for use in very crowded BLE areas (like trade shows).√æ    <li>For BLE adapters, if the ConnectToLastAdapter and SetSecurity(SecureAdapter) are not set, the API will connect to the adapter with the strongest signal.√æ</ul>√æ√æVersion 22.12:<ul>√æ <li>Added method GetDistance which is the same as GetOdometer (GetOdometer actually calls GetDistance).√æ <li>Added properties Truck.HiResDistance, LoResDistance, HiResOdometer, and LoResOdometer.√æ    <li>Truck.Odometer now returns the OEM distance (previously it returned Engine distance).√æ    <li>Truck.Odometer will return -1 if the OEM distance is not available (e.g. Volvo trucks).√æ    <li>Truck.Distance and Truck.Odometer returns the hi-resolution value unless it is not available in which case it returns the lo-resolution value.√æ    <li>Note that hi-resolution distance is at a 1 second ECM refresh rate while lo-resolution is at a 100 ms ECM refresh rate.√æ    <li>Modified the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 22.13:<ul>√æ <li>Added a Service class that emulates using the API with an Android service.√æ <li>Added a Start and Stop Service buttons to the Demo App.√æ</ul>√æ√æVersion 23.0:<ul>√æ <li>GetVehicleData is renamed to GetEngineId.√æ <li>Added methods GetVIN and GetComponentId for retrieving non-engine ECM data.√æ <li>Added synchronized calling to GetEngineVIN, GetVIN, GetEngineId, and GetComponentId.√æ <li>The SetSyncTimeout method is replaced with the SyncTimeout passed as the Interval parameter along with the Synchronized Retrieval Method parameter.√æ <li>Fixed the OnChange Retrieval Method that caused issues with the Adapter.√æ <li>Added a Notification ConnectionState that will return any API notifications.√æ <li>Added SetHeartbeatOn method that will turn the Adapter heartbeat on/off. Use with caution.√æ <li>Added SetNotificationsOn method that will turn Adapter notifications on/off.√æ <li>Change the Engine VIN/Id page in the Demo App to show using synchronous retrieval.√æ <li>Added a VIN/ComponentId page to the Demo App that shows using asynchronous retrieval.√æ <li>Added a Test All button to the Demo App that retrieves all the data at once to test loading the connection.√æ <li>Improved connection reliability with beta Firmware 3.12.x.√æ</ul>√æ√æVersion 23.1:<ul>√æ <li>Added property OptimizeDataRetrieval that optimizes retrieval of data when the same data is available from both J1939 and J1708 ECMs. Recommended.√æ <li>Added a J1708Restarting ConnectionState that will be raised if J1708 data retrieval is restarting (see Demo App). √æ <li>Not selecting a connection type (BLE or BT21) will auto connect properly.√æ <li>The Demo App re-retrieves data when the ConnectionState J1708Restarting is raised.√æ <li>The Demo App shows Key On/Off properly for J1708 vehicles.√æ <li>Better J1708 data retrieval with Firmware 3.12.√æ <li>No longer supports Android 4+ and Android 5+.√æ <li>Compatible with Android 7.1 devices that use Android 6 BLE firmware.√æ</ul>√æ√æVersion 23.2:<ul>√æ <li>Added retrieval of transmission temperature (Truck.TransTemp) to method GetTemps.√æ <li>Added retrieval of primary and secondary fuel gauge levels (Truck.PrimaryFuelLevel and SecondaryFuelLevel to GetFuelData.√æ <li>Changed property OptimizeDataRetrieval to OptimizeDataRetrieval() and SetOptimizeDataRetrieval(boolean value).√æ <li>Improved OptimizeDataRetrieval. Note, this update is required if using OptimizeDataRetrieval.√æ <li>The Demo App shows Key Off when disconnected (see checkKeyState and showConnectButton).√æ <li>Critical patch for retrieving Adapter settings (sleep mode, led brightness, ignore databuses, j1708 availability).√æ</ul>√æ√æVersion 23.3:<ul>√æ <li>Fixed bug in 23.2 that caused GetEngineVIN and GetEngineId to error.√æ <li>Added methods GetTruckVIN and GetTruckId for retrieving the OEM VIN and Component Id (Make/Model/SerialNo).√æ <li>Added methods StopRetrievingEngineVIN and StopRetrievingEngineId. Call these after Truck.EngineVIN and/or Truck.EngineMake have been retrieved.√æ <li>Added methods StopRetrievingTruckVIN and StopRetrievingTruckId. Call these after Truck.VIN and/or Truck.Make have been retrieved.√æ <li>Removed methods GetVIN and GetComponentId.√æ <li>Specifying OnChange Retrieval Method now works. The previous release changed it internally to OnInterval.√æ <li>Added AdapterMessage ConnectionState that will be raised when there is a message from the Adapter.√æ <li>Further improvements to J1708 data retrieval and connection stability.√æ <li>Improved API and Adapter error reporting.√æ <li>Updated the Demo App and Service to demonstrate the above changes.√æ</ul>√æ√æVersion 23.4:<ul>√æ <li>Critical patch to fix BLE connection issues.√æ <li>Fixed J1939 ELD VIN characters being truncated from a 17 character VIN.√æ <li>Better re-connection when the adapter reboots.√æ <li>Added property HardwareType with values HardwareTypes.HW_1_1 (old adapter), HW_6_Pin, and HW_9_Pin.√æ <li>Renamed PerformanceMode to IsPerformanceModeOn.√æ <li>Renamed SetPerformanceMode to SetPerformanceModeOn.√æ <li>Added PerformanceInterval and SetPerformanceInterval.√æ <li>Removed the ELD Waiting RecordId as it is no longer sent by the adapter.√æ <li>Added getTruckInfoThread to Demo App.√æ <li>Disconnecting the adapter in the Demo App no longer stops ELD recording.√æ</ul>√æ√æVersion 23.5:<ul>√æ <li>The default interval for GetEngineVIN and GetTruckVIN is changed from 2 seconds to 3 seconds.√æ <li>The default interval for GetEngineId and GetTruckId is changed from 2 seconds to 5 seconds.√æ <li>ELD.Date returns the correct UTC date.√æ <li>Renamed method ELD.Time to ELD.Date.√æ <li>Added ELD.LocalDate that returns the local date of the device the API is running on.√æ <li>Added ELD local date to the Demo App.√æ</ul>√æ√æVersion 23.6:<ul>√æ    <li>Added ELD.StartUpload and ELD.StopUpload methods that must be called prior to and after uploading ELD records. √æ <li>Slightly faster connection if using SetConnectToLastAdapter especially in crowded Bluetooth areas.√æ <li>Added ConnectionState 'Heartbeat' that will be raised when a heartbeat is received from the adapter.√æ <li>ConnectionState 'DataChanged' is no longer raised when a heartbeat is received from the adapter. It is now only raised when actual data is received from the adapter.√æ <li>The Demo App sets WaitForDisconnect prior to disconnecting. This is highly recommended if re-connection is possible immediately after disconnecting.√æ <li>ConnectionState 'Connected' has been removed from the Demo App. This was confusing as it only appled to the Bluetooth connection and not the adapter connection.√æ <li>The Demo App shows the heartbeat count when the ConnectionState 'Heartbeat' is raised.√æ <li>In the Demo App, showStatus{} is moved from the beginning to the end of the event handler.√æ <li>Added ConnectionState 'Heartbeat' to the Demo App's event handler.√æ <li>Enabled 'LED Brightness' and 'Connect to Last Adapter' in the Demo App so that it can be changed prior to connecting to the adapter.√æ <li>The ELD Upload and Delete buttons are enabled in the Demo App anytime there are ELD records no matter if ELD recording is occurring or not.√æ</ul>√æ√æVersion 23.7:<ul>√æ    <li>Added Security setting Secure Device which secures the device (phone, tablet, etc) to an adapter. One device can be secured to many adapters (one to many relationship).√æ    <li>Security setting Secure Adapter remains unchanged and secures the device to a single adapter and secures the adapter to the one device (one to one relationship).)√æ    <li>Security setting UserName and Password secures the device to an adapter. A device can be secured to many adapters and many adapters can be secured to a device (many to many relationship).√æ    <li>Security (UserName, Password, Adapter Id, Device Id) are all encrypted with AES encryption.√æ    <li>Requires Adapter Firmware 3.14 for all security updates.√æ    <li>Fixed Bluetooth Classic (BT21) reconnection issues. Please see the documentation for important information about Bluetooth Classic reconnection.√æ    <li>Fixed Bluetooth Classic 'Connect to Last Adapter' not working.√æ    <li>The API will automatically reconnect when the IgnoreJ1939 or Ignore1708 are changed.√æ    <li>With Firmware 3.14, ELD uploading with only 'Record while Disconnected' set will not perform any connected recording while uploading.√æ    <li>Compatible with Adapter Firmware 3.13 and below. For Firmware 3.11 - 3.13 only Secure Adapter is available. For Firmware 3.9 and below, only UserName and Password security is available.√æ    <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 23.8:<ul>√æ    <li>Critical patch for retrieving data after a reconnection.√æ    <li>MaxConnectAttempts now works for BLE adapters.√æ    <li>The default MaxConnectAttempts is changed from 10 to 5;√æ    <li>Added SetBluetoothRecycleAttempt method that will recycle (turn off/on) Bluetooth at the specified connection and reconnection attempt. The default is 2 (second attempt).√æ    <li>Updated the Demo App to reflect the above changes.√æ    <li>Updated the documentation to reflect the above changes.√æ</ul>√æ√æVersion 23.9:<ul>√æ    <li>Added method SetIgnoreDatabuses that will update the IgnoreJ1939 and IgnoreJ1708 settings and send them to the adapter. √æ    <li>Added ConnectionState ELDConnected that will be raised after the API receives ELD startup data from the adapter.√æ    <li>The ConnectionState Authenticated will now be raised after the API receives startup data from the adapter. This data includes PerformanceMode, SleepMode, LEDBrightness, IgnoreJ1939, IgnoreJ1708, HardwareType and any messages.√æ    <li>The UseBLE, UseBT21, IgnoreJ1939, and IgnoreJ1708 settings will be set appropriately if the HardwareType is HW_6_Pin.√æ    <li>Added CheckKeyState to showHeartbeat in the Demo app to ensure that the key state is checked if the ECMs are powered down.√æ    <li>Updated the Demo App to reflect the above changes.√æ    <li>Updated the documentation to reflect the above changes.√æ</ul>√æ√æVersion 23.10:<ul>√æ    <li>Improved adapter connection and reconnection. The last, secured, or previous adapter id will be used to attempt a direct connection to the adapter prior to scanning for an adapter.√æ    <li>Added default values MinIntervalDefault, DiscoveryTimeoutDefault, MaxConnectAttemptsDefault, MaxReconnectAttemptsDefault, BluetoothRecycleAttemptDefault, and AdvertisementTimeoutDefault.√æ    <li>Added API connection notifications.√æ    <li>The SetNotificationsOn method will start/stop API notifications along with Adapter notifications.√æ    <li>The Demo app saves settings when they are changed.√æ</ul>√æ√æVersion 23.11:<ul>√æ    <li>Added BleDisconnectWaitTime property and SetBleDisconnectWaitTime method that will wait for BLE to close the GATT connection. The default is 2000 (2 seconds).√æ    <li>Bluetooth is no longer turned off when the the API disconnects from the adapter if Bluetooth was turned on to connect the first time.√æ    <li>Added properties ConnectToLastAdapter, MaxConnectAttempts, MaxReconnectAttempts, BluetoothRecycleAttempt.√æ    <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 23.12:<ul>√æ    <li>Added method GetELDData that will only retrieve RPM, Speed, Distance/Odometer, and Total Hours with optimum settings. See the Demo app getTruckData, group 6.√æ    <li>Added method GetKeyState that will double check if the ECM is powered up and sending data. See the Demo app function checkKeyState for how to use it properly.√æ    <li>Added ConnectionState J1939Started that will be raised when the API is connected and the J1939 CAN bus is available (key is turned on). See the Demo app function setJ1939Starting.√æ    <li>Added property CANBusSpeed that will be returned when the ConnectionState J1939Started is raised.√æ    <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 23.13:<ul>√æ    <li>More reliable event handling.√æ    <li>Faster BLE re-connection and elimination of the BluetoothGattCallback.onConnectionStateChange exception.√æ    <li>The UseBLE, UseBT21 will not be changed if the HardwareType is HW_6_Pin. This is to allow for BT21 and BLE 6-pin adapters. The IgnoreJ1939, and IgnoreJ1708 settings will still be set appropriately.√æ    <li>ConnectionState J1939Starting will be raised only after connecting to the adapter, either when the key is turned on or immediately after authentication if the key is already on.√æ    <li>Added option for the Demo App to kill itself on exiting (see onBackPressed).√æ</ul>√æ√æVersion 23.14:<ul>√æ    <li>GetELDData settings are changed to RPM and Speed - OnInterval, one second; Distance/Odometer - OnChange, 5 seconds; Total Hours - OnChange, 10 seconds.√æ    <li>Invalid J1587 MIDs are ignored.√æ    <li>Internal exception handling.√æ</ul>√æ√æVersion 24.0:<ul>√æ    <li>Requires Adapter Firmware 3.15 unless otherwise noted.√æ    <li>Added OBD2 support. √æ    <li>Added property IsOBD2 which will be set when CAN is starting (CANStarting, see below).√æ    <li>Added property IgnoreOBD2 which when set to false (connecting to OBD2) will set IgnoreJ1939 and IgnoreJ1708 true.√æ    <li>Property IgnoreOBD2 accepts the OBD2.CANSettings parameter. Warning! Changing this from the default may cause ECM faults.√æ    <li>Renamed ConnectionState J1939Starting to CANStarting to reflect CAN Starting for either J1939 or OBD2.√æ    <li>Removed property SetIgnoreDataBuses because the properties IgnoreJ1939/J1708/OBD2 are required for the Adapter to connect to the correct ECUs.√æ    <li>Removed method UpdateSecurity because security parameters must be set prior to connecting to the Adapter.√æ    <li>Added property SetDisconnectedReboot that will instruct the Adapter to reboot at a set interval when not connected to the App (Firmware 3.12+). Note with Firmware 3.12+ the interval is fixed at one hour. With Firmware 3.15+ the interval is set with the property.√æ    <li>Added properties IsKeyOn and IsKeyOff that will check for key on/off and if off will set RPM, Speed, PctLoad, PctTorque, DrvPctTorque to 0.√æ    <li>Added property SendAllPackets that will instruct the Adapter to send all J1939 VIN, Make, Model, etc data packets at one time instead of in a conversational manner. This also applies to the ELD VIN.√æ    <li>The Adapter will wait to initiate a CAN connection until all Adapter data has been retrieved by the API. The previous API version initiated the CAN connection when the Adapter is authenticated.√æ    <li>The ConnectionState AdapterMessage will always return a complete message.√æ    <li>Compatible with Firmware 3.7.√æ    <li>The Demo App will show the API Beta version.√æ    <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 24.1:<ul>√æ    <li>Added Property Force500kBus that will instruct the Adapter to connect only to a 500K CAN bus.√æ    <li>Fixed SleepMode not being initialized by the App or Service.√æ    <li>Internal fixes to potential issues.√æ    <li>Fixed Starting Service in the Demo App.√æ</ul>√æ√æVersion 24.2:<ul>√æ    <li>Properties IgnoreJ1708 and IgnoreOBD2 default to true (ignore both J1708 and OBD2) and IgnoreJ1939 defaults to false (retrieve J1939 data); If you want to retrieve J1708 or OBD2 data you must explicitly set them to false.√æ    <li>The API will not allow retrieving J1939/J1708 data along with OBD2 data (see below).√æ    <li>Setting IgnoreJ1939 or IgnoreOBD2 to false (retrieve J1939/J1708 data) will set IgnoreOBD2 true (ignore OBD2).√æ    <li>Setting IgnoreOBD2 to false (retrieve OBD2 data) will set IgnoreJ1939 and IgnoreJ1708 true (ignore them both).√æ    <li>Setting both UseBLE and UseBT21 on will cause the API to auto discover the Adapter (same as if they are both set off). √æ    <li>If UseBLE/UseBT21 are changed, or both set, or both not set, the API will reset the Previous Adapter Id, Discovery Timeout, and Advertisement Timeout.√æ    <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 24.3:<ul>√æ    <li>Renamed the MonitorPGN method to StartMonitoringPGN.√æ    <li>Added multi-packet (BAM/RTS) PGN retrieval to the StartMonitoringPGN, StopMonitoringPGN, and RequestPGN methods.√æ    <li>SendPGN method parameters have changed to (Source, PGN, Priority, PGNData).√æ    <li>Updated the Demo App to reflect the above changes.√æ    <li>Updated the Demo App to show how to monitor multiple PGNs.√æ</ul>√æ√æVersion 24.4:<ul>√æ    <li>Fixed retrieving data from a 6-pin adapter.√æ</ul>√æ√æVersion 24.5:<ul>√æ    <li>Fixed backward compatibility with 3.7 Firmware on a 2.1 (Bluetooth Classic) adapter.√æ</ul>√æ√æVersion 25.0:<ul>√æ    <li>Changed event handling to be faster, more accurate and more reliable.√æ    <ul>√æ        <li>Uses queues to ensure messages are received.√æ        <li>Events are received as soon as they are raised by the API.√æ        <li>Connection State and any Messages (if appropriate) are returned with the event.√æ        <li>Duplicate events no longer occur.√æ        <li>Imperative that events are allowed to be handled without interruption.√æ        <li>API will attempt to deliver an event for 2 seconds before ignoring it.√æ        <li>See the Demo App for correct implementation.√æ    </ul>√æ    <li>Added ConnectionState AdapterReboot.√æ    <li>Removed ConnectionState AdapterConnected.√æ    <li>Renamed ConnectionState Authenticated to Connected.√æ    <li>Renamed ConnectionState CommTimeout to DataTimeout.√æ    <li>Renamed ConnectionState ConnectTimeout to BluetoothTimeout.√æ    <li>Added property ConnectAttempt.√æ    <li>Added property ReconnectAttempt.√æ    <li>Renamed property Message to ConnectionMessage.√æ    <li>Removed property ReconnectReason.√æ    <li>Removed property NotificationMessage.√æ    <li>Removed property NotificationLocation.√æ    <li>Removed method ClearMessages.√æ    <li>Removed method ClearNotificationMessage.√æ    <li>Fixed setting Notifications On/Off.√æ    <li>Fixed setting UserName without a Password.√æ    <li>Fixed updating security to the Adapter.√æ    <li>Fixed AdapterTimeout when connecting to a factory reset Adapter.√æ    <li>Added ignoring the Retarder and Exhaust ECMs due to failing to adhere to the J1939 standard and causing undue network traffic.√æ   <li>Updated the Demo App to reflect the above changes.√æ</ul>√æ√æVersion 25.1:<ul>√æ    <li>Added method SetKeepJ1708PortOpen that will cause the Adapter to keep the J1708 Com port open. This can be used for trucks that do not adhere to the J1708 spec and raise a fault when the Adapter is connected.√æ</ul>√æ√æVersion 25.2:<ul>√æ    <li>Added Interval to Send/Monitoring.√æ    <li>Added Send button to Send/Monitoring. Note, sending PGN data will continue based on the interval until either stopped, navigated to Truck/ELD data, or disconnected.√æ</ul>√æ√æVersion 25.3:<ul>√æ    <li>Fixed retrieving J1708 (6-pin) Distance and Odometer when they are different. Note, this can occur when the engine or cab/body/instrument ECMs are changed and the distance values are not synced between the two.√æ</ul>√æ√æVersion 25.4:<ul>√æ    <li>API is compiled with Target SDK 26 and Min SDK 22. Previous version was Target SDK 25 and Min SDK 23.√æ    <li>The Demo App checks for Min SDK 23 and Location Permission granted by the user.√æ</ul>√æ√æVersion 25.5:<ul>√æ    <li>API is compiled with Target SDK 28 and Min SDK 22. √æ</ul>√æ√æVersion 26.0:<ul>√æ    <li>Removed Eclipse support.√æ    <li>Renamed ""Truck"" to ""Vehicle"".√æ    <li>The ResetAdapter method now resets the adapter correctly. See the documentation for the changes.√æ    <li>Open sourced Bluetooth communication code Comm, CommBLE, CommBT2. Open source Comm modules use Pascal notation.√æ    <li>Added regions to Main, Comm, CommBLE, and CommBT2.√æ    <li>Updated documentation to v26.0 (pdf).√æ    <li>API is compiled with Target SDK 29 and Min SDK 23 (Android 5-10).√æ</ul>"
malozanom/repo-isi,1343,0,0,5,User,False,,,,5,Java,{'md': 1},56,1,0,1,0,621,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,32,,0,,Repositorio principal para las pr√°cticas de la asignatura ISI.√æ√æAlumnos del grupo:√æ* √Ålvaro Villalba Caba√±as.√æ* Miguel √Ångel Lozano Montero.
LineageOS/android_hardware_qcom_fm,8421,6,4,34,Organization,False,,,,7,Java,"{'bp': 1, 'mk': 1}",687,31,1,2,0,2649,False,,,,,0,0,0,0,7,0,0,0,0,0,0,0,2,89,,,
PacktPublishing/-Data-Stream-Development-with-Apache-Spark-Kafka-and-Spring-Boot,4057,27,6,41,Organization,False," Data Stream Development with Apache Spark, Kafka and Spring Boot by Packt Publishing",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 1, 'md': 1}",104,1,0,2,0,620,True,1,0,1,0,0,0,0,0,8,0,0,0,0,0,0,0,5,30,,,"# Data Stream Development with Apache Spark, Kafka, and Spring Boot [Video]√æThis is the code repository for [Data Stream Development with Apache Spark, Kafka, and Spring Boot [Video]](https://www.packtpub.com/application-development/data-stream-development-apache-spark-kafka-and-spring-boot-video?utm_source=github&utm_medium=repository&utm_campaign=9781789539585), published by [Packt](https://www.packtpub.com/?utm_source=github). It contains all the supporting project files necessary to work through the video course from start to finish.√æ√æ[For video and source code matching please check the wiki page](https://github.com/PacktPublishing/-Data-Stream-Development-with-Apache-Spark-Kafka-and-Spring-Boot/wiki/Source-code)√æ√æ## About the Video Course√æLearn to build a data stream pipeline using Apache Spark and Kafka from scratch. Start with a blueprint architecture: developing a completely functional data streaming pipeline. With live coding sessions, get hands-on with architecting every tier of the pipeline.√æ√æ<H2>What You Will Learn</H2>√æ<DIV class=book-info-will-learn-text>√æ<UL>√æ<LI>Attain a solid foundation in the most powerful and versatile technologies involved in data streaming: Apache Spark and Apache Kafka √æ<LI>Form a robust and clean architecture for a data streaming pipeline √æ<LI>Implement the correct tools to bring your data streaming architecture to life √æ<LI>Isolate the most problematic tradeoff for each tier involved in a data streaming pipeline √æ<LI>Query, analyze, and apply machine learning algorithms to collected data √æ<LI>Display analyzed pipeline data via Google Maps on your web browser √æ<LI>Discover and resolve difficulties in scaling and securing data streaming applications </LI></UL></DIV>√æ√æ## Instructions and Navigation√æ### Assumed Knowledge√æTo fully benefit from the coverage included in this course, you will need:<br/>√æNo prior knowledge required√æ### Technical Requirements√æThis course has the following software requirements:<br/>√æ- Java 8√æ- OpenSSL installed (optional)√æ- Java compatible IDE (e.g., Visual Studio Code, NetBeans, etc)√æ√æ[For video and source code matching please check the wiki page](https://github.com/PacktPublishing/-Data-Stream-Development-with-Apache-Spark-Kafka-and-Spring-Boot/wiki/Source-code)√æ√æ## Related Products√æ* [Serverless Deep Learning with TensorFlow and AWS Lambda [Video]](https://www.packtpub.com/big-data-and-business-intelligence/serverless-deep-learning-tensorflow-and-aws-lambda-video?utm_source=github&utm_medium=repository&utm_campaign=9781789618679)√æ√æ* [Apache Spark: Tips, Tricks, & Techniques [Video]](https://www.packtpub.com/application-development/apache-spark-tips-tricks-techniques-video?utm_source=github&utm_medium=repository&utm_campaign=9781789801125)√æ√æ* [Concurrent and Distributed Computing with Python [Video]](https://www.packtpub.com/application-development/concurrent-and-distributed-computing-python-video?utm_source=github&utm_medium=repository&utm_campaign=9781788996020)"
DiscordBolt/CommandAPI,110,0,1,2,Organization,False,,,,9,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1}",35,3,5,1,0,921,True,5,4,0,0,0,12,0,0,8,0,0,0,0,0,0,0,5,1,,,"# CommandAPI√æ√æ# Javadocs√æ[Latest Release](https://jitpack.io/com/github/DiscordBolt/CommandAPI/master-SNAPSHOT/javadoc/index.html)  √æ[Latest Dev](https://jitpack.io/com/github/DiscordBolt/CommandAPI/dev-SNAPSHOT/javadoc/index.html)√æ√æ# Initialization√æ```java√æCommandManager commandManager = new CommandManager(discordClient, ""my.toplevel.package"");√æ```√æ√æ# Registering Commands√æMethods annotated with `@BotCommand` are automatically registered.  √æCommands created via extending `CustomCommand` must be registered by hand.  √æ```java√æcommandManager.registerCommand(new HelpCommand());√æ```√æ√æ# Setting Command Prefixes√æCommands by default are prefixed by `!` but can be cutomized per guild.  √æPrefixes are not persistent and must be set on restart.  √æ```java√æcommandManager.setCommandPrefix(guildID, ""$"");√æ```√æ√æ# Examples√æ√æ### `@BotCommand` Annotation Example√æThese methods must be `public` and `static` in order to be registered.   √æThey will be found automatically and regestered when you create `CommandManager`  √æ```java√æ@BotCommand(command = ""ping"", description = ""ping"", usage = ""ping"", module = ""misc"")√æpublic static void ping(CommandContext context) {√æ    context.replyWith(""Pong!"").subscribe();√æ}√æ```√æ√æ### `CustomCommand` Class Example√æ```java√æpublic class HelpCommand extends CustomCommand {√æ√æ    private static String[] command = {""help""};√æ    private static String description = ""View all commands"";√æ    private static String usage = ""help"";√æ    private static String module = ""Command API"";√æ√æ    public HelpCommand() {√æ        super(command, description, usage, module);√æ        super.setAliases(""h"");√æ    }√æ√æ    @Override√æ    public void execute(CommandContext cc) {√æ        cc.replyWith(""Command List:"").subscribe();√æ    }√æ}√æ```√æOr with no details for the !Help command:√æ```java√æpublic class HelpCommand extends CustomCommand {√æ√æ    private static String[] command = {""help""};√æ√æ    public HelpCommand() {√æ        super(command);√æ        super.setAliases(""h"");√æ    }√æ√æ    @Override√æ    public void execute(CommandContext cc) {√æ        cc.replyWith(""Command List:"").subscribe();√æ    }√æ}√æ```"
BriData/DBus,52711,859,87,423,User,False,DBus,https://bridata.github.io/DBus/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",24,Java,"{'': 2, 'md': 1, 'xml': 1}",283,9,5,3,0,1035,True,38,7,3,1,10,7,8,4,11,0,2,8,579088,61199,0,0,5,,88,,"---√ælayout: global√ædisplayTitle: Dbus Ê¶ÇËßà√ætitle: Ê¶ÇËßà√ædescription: DbusÊñáÊ°£È¶ñÈ°µ DBUS_VERSION_SHORT√æ---√æ√æ### ËÉåÊôØ√æ√æ‰ºÅ‰∏ö‰∏≠Â§ßÈáè‰∏öÂä°Êï∞ÊçÆ‰øùÂ≠òÂú®ÂêÑ‰∏™‰∏öÂä°Á≥ªÁªüÊï∞ÊçÆÂ∫ì‰∏≠ÔºåËøáÂéªÈÄöÂ∏∏ÁöÑÂêåÊ≠•Êï∞ÊçÆÁöÑÊñπÊ≥ïÊúâÂæàÂ§öÁßçÔºåÊØîÂ¶ÇÔºö√æ√æ- ÂêÑ‰∏™Êï∞ÊçÆ‰ΩøÁî®ÊñπÂú®‰∏öÂä°‰ΩéÂ≥∞ÊúüÂêÑÁßçÊäΩÂèñÊâÄÈúÄÊï∞ÊçÆÔºàÁº∫ÁÇπÊòØÂ≠òÂú®ÈáçÂ§çÊäΩÂèñËÄå‰∏îÊï∞ÊçÆ‰∏ç‰∏ÄËá¥Ôºâ√æ- Áî±Áªü‰∏ÄÁöÑÊï∞‰ªìÂπ≥Âè∞ÈÄöËøásqoopÂà∞ÂêÑ‰∏™Á≥ªÁªü‰∏≠ÊäΩÂèñÊï∞ÊçÆÔºàÁº∫ÁÇπÊòØsqoopÊäΩÂèñÊñπÊ≥ïÊó∂ÊïàÊÄßÂ∑ÆÔºå‰∏ÄËà¨ÈÉΩÊòØT+1ÁöÑÊó∂ÊïàÊÄßÔºâ√æ- Âü∫‰∫étriggerÊàñÊó∂Èó¥Êà≥ÁöÑÊñπÂºèËé∑ÂæóÂ¢ûÈáèÁöÑÂèòÊõ¥ÔºàÁº∫ÁÇπÊòØÂØπ‰∏öÂä°Êñπ‰æµÂÖ•ÊÄßÂ§ßÔºåÂ∏¶Êù•ÊÄßËÉΩÊçüÂ§±Á≠âÔºâ√æ√æËøô‰∫õÊñπÊ°àÈÉΩ‰∏çËÉΩÁÆóÂÆåÁæéÔºåÊàë‰ª¨Âú®‰∫ÜËß£ÂíåËÄÉËôë‰∫Ü‰∏çÂêåÂÆûÁé∞ÊñπÂºèÂêéÔºåËÆ§‰∏∫Ë¶ÅÊÉ≥ÂêåÊó∂Ëß£ÂÜ≥Êï∞ÊçÆ‰∏ÄËá¥ÊÄßÂíåÂÆûÊó∂ÊÄßÔºåÊØîËæÉÂêàÁêÜÁöÑÊñπÊ≥ïÂ∫îËØ•ÊòØÂü∫‰∫éÊó•ÂøóÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂêåÊó∂ËÉΩÂ§üÊèê‰æõÊ∂àÊÅØËÆ¢ÈòÖÁöÑÊñπÂºèÁªô‰∏ãÊ∏∏Á≥ªÁªü‰ΩøÁî®„ÄÇ√æ√æDBusÔºàÊï∞ÊçÆÊÄªÁ∫øÔºâÈ°πÁõÆÂ∞±ÊòØÂ∫îËøô‰∏™ÈúÄÊ±ÇËÄåÁîüÁöÑÔºå DBus‰∏ìÊ≥®‰∫éÊï∞ÊçÆÁöÑÊî∂ÈõÜÂèäÂÆûÊó∂Êï∞ÊçÆÊµÅËÆ°ÁÆóÔºåÈÄöËøáÁÆÄÂçïÁÅµÊ¥ªÁöÑÈÖçÁΩÆÔºåÊó†‰æµÂÖ•ÁöÑÊñπÂºèÂØπÊ∫êÁ´ØÊï∞ÊçÆËøõË°åÈááÈõÜÔºåÈááÁî®È´òÂèØÁî®ÁöÑÊµÅÂºèËÆ°ÁÆóÊ°ÜÊû∂ÔºåÂØπÂÖ¨Âè∏ÂêÑ‰∏™ITÁ≥ªÁªüÂú®‰∏öÂä°ÊµÅÁ®ã‰∏≠‰∫ßÁîüÁöÑÊï∞ÊçÆËøõË°åÊ±áËÅöÔºåÁªèËøáÂ§ÑÁêÜÂêéËΩ¨Êç¢ÊàêÁªü‰∏ÄJSONÁöÑÊï∞ÊçÆÊ†ºÂºèUMSÔºåÊèê‰æõÁªô‰∏çÂêå‰∏ãÊ∏∏ÂÆ¢Êà∑ËÆ¢ÈòÖÂíåÊ∂àË¥πÔºåÂÖÖÂΩìÊä•Ë°®Êï∞ÊçÆÊ∫ê„ÄÅÂ§ßÊï∞ÊçÆÂàÜÊûêÊï∞ÊçÆÊ∫êÁ≠â„ÄÇ ÁõÆÂâçDBusÂú®ÂÖ¨Âè∏ÂÜÖÈÉ®ÂπøÊ≥õ‰ΩøÁî®ÔºåÊîØÊåÅoracleÔºåmysqlÔºålog, RocketMQÁ≠âÊï∞ÊçÆÊ∫êÔºåËøôÊ¨°ÂºÄÊ∫êÁâàÊú¨ÊîØÊåÅmysqlÊï∞ÊçÆÊ∫ê„ÄÇ√æ√æDBusÁöÑ‰∏ªË¶ÅÊΩúÂú®ÂÆ¢Êà∑ÂåÖÊã¨Ôºö√æ√æ- Êï∞‰ªìÂπ≥Âè∞ÂíåÊï∞ÊçÆÂàÜÊûêÂπ≥Âè∞√æ- ÂÆûÊó∂Ëê•ÈîÄÂÜ≥Á≠ñ√æ- ÂÆûÊó∂Êä•Ë°®Â±ïÁ§∫√æ- ÂºÇÊûÑÊï∞ÊçÆÂÆûÊó∂ÂêåÊ≠•√æ- ÂÖ∂‰ªñÂÆûÊó∂ÊÄßË¶ÅÊ±ÇÈ´òÁöÑÁ≥ªÁªü√æ√æ### È°πÁõÆ‰ªãÁªç√æ√æ- È°πÁõÆÂêçÁß∞ÔºöDBus Êï∞ÊçÆÊÄªÁ∫ø√æ- ËØ≠Ë®ÄÔºöjava/js√æ√æ‰∏ìÊ≥®‰∫éÊï∞ÊçÆÁöÑÊî∂ÈõÜÂèäÂÆûÊó∂Êï∞ÊçÆÊµÅËÆ°ÁÆóÔºåÈÄöËøáÁÆÄÂçïÁÅµÊ¥ªÁöÑÈÖçÁΩÆÔºå‰ª•Êó†‰æµÂÖ•ÁöÑÊñπÂºèÂØπÊ∫êÁ´ØÊï∞ÊçÆËøõË°åÈááÈõÜÔºåÈááÁî®È´òÂèØÁî®ÁöÑÊµÅÂºèËÆ°ÁÆóÊ°ÜÊû∂ÔºåÂØπÂÖ¨Âè∏ÂêÑ‰∏™ITÁ≥ªÁªüÂú®‰∏öÂä°ÊµÅÁ®ã‰∏≠‰∫ßÁîüÁöÑÊï∞ÊçÆËøõË°åÊ±áËÅöÔºåÁªèËøáËΩ¨Êç¢Â§ÑÁêÜÂêéÊàê‰∏∫Áªü‰∏ÄJSONÁöÑÊï∞ÊçÆÊ†ºÂºèÔºàUMSÔºâÔºåÊèê‰æõÁªô‰∏çÂêåÊï∞ÊçÆ‰ΩøÁî®ÊñπËÆ¢ÈòÖÂíåÊ∂àË¥πÔºåÂÖÖÂΩìÊï∞‰ªìÂπ≥Âè∞„ÄÅÂ§ßÊï∞ÊçÆÂàÜÊûêÂπ≥Âè∞„ÄÅÂÆûÊó∂Êä•Ë°®ÂíåÂÆûÊó∂Ëê•ÈîÄÁ≠â‰∏öÂä°ÁöÑÊï∞ÊçÆÊ∫ê„ÄÇ√æ√æ### Áõ∏ÂÖ≥ÊñáÊ°£√æ√æËØ¶ÁªÜ‰ªãÁªç DBusËØ∑ÂèÇËÄÉ [wiki](https://bridata.github.io/DBus/index.html)√æ√æÂ∏∏ËßÅÈóÆÈ¢òÂèØÂèÇËÄÉ [FAQ](https://bridata.github.io/DBus/more-faq.html)√æ√æÁ≥ªÁªü‰ªãÁªçÂèÇËÄÉ [system architecture](https://bridata.github.io/DBus/more-system-architecture.html)√æ√æ### Á≥ªÁªüÊû∂ÊûÑÂíåÂ∑•‰ΩúÂéüÁêÜ√æ√æDBUS‰∏ªË¶ÅÂàÜ‰∏∫‰∏§‰∏™ÈÉ®ÂàÜÔºöË≤ºÊ∫êÊï∞ÊçÆÈááÈõÜÂíåÂ§öÁßüÊà∑Êï∞ÊçÆÂàÜÂèë„ÄÇ‰∏§‰∏™ÈÉ®ÂàÜ‰πãÈó¥‰ª•Kafka‰∏∫Â™í‰ªãËøõË°åË°îÊé•„ÄÇÊó†Â§öÁßüÊà∑ËµÑÊ∫ê„ÄÅÊï∞ÊçÆÈöîÁ¶ªÈúÄÊ±ÇÁöÑÁî®Êà∑ÔºåÂèØ‰ª•Áõ¥Êé•Ê∂àË¥πÊ∫êÁ´ØÊï∞ÊçÆÈááÈõÜËøô‰∏ÄÁ∫ßËæìÂá∫Âà∞kafkaÁöÑÊï∞ÊçÆÔºåÊó†ÈúÄÂÜçÈÖçÁΩÆÂ§öÁßüÊà∑Êï∞ÊçÆÂàÜÂèë„ÄÇ√æ√æ![GlobalOverview](docs/img/index/ds_and_projdispatch.png)√æ√æ### **1 DBUSÊ∫êÁ´ØÊï∞ÊçÆÈááÈõÜ**√æ√æDBUSÊ∫êÁ´ØÊï∞ÊçÆÈááÈõÜÂ§ß‰ΩìÊù•ËØ¥ÂàÜ‰∏∫2ÈÉ®ÂàÜÔºö√æ√æ- ËØªÂèñRDBMSÂ¢ûÈáèÊó•ÂøóÁöÑÊñπÂºèÊù• ÂÆûÊó∂Ëé∑ÂèñÂ¢ûÈáèÊï∞ÊçÆÊó•ÂøóÔºåÂπ∂ÊîØÊåÅÂÖ®ÈáèÊãâÂèñÔºõ√æ- Âü∫‰∫élogtashÔºåflumeÔºåfilebeatÁ≠âÊäìÂèñÂ∑•ÂÖ∑Êù•ÂÆûÊó∂Ëé∑ÂæóÊï∞ÊçÆÔºå‰ª•ÂèØËßÜÂåñÁöÑÊñπÂºèÂØπÊï∞ÊçÆËøõË°åÁªìÊûÑÂåñËæìÂá∫Ôºõ√æ√æ‰ª•‰∏ã‰∏∫ÂÖ∑‰ΩìÂÆûÁé∞ÂéüÁêÜ ![system arch](docs/img/more-system-architecture.png)√æ√æ√æ‰∏ªË¶ÅÊ®°ÂùóÂ¶Ç‰∏ãÔºö√æ√æ- Êó•ÂøóÊäìÂèñÊ®°ÂùóÔºö‰ªéRDBMSÁöÑÂ§áÂ∫ì‰∏≠ËØªÂèñÂ¢ûÈáèÊó•ÂøóÔºåÂπ∂ÂÆûÊó∂ÂêåÊ≠•Âà∞kafka‰∏≠Ôºõ√æ- Â¢ûÈáèËΩ¨Êç¢Ê®°ÂùóÔºöÂ∞ÜÂ¢ûÈáèÊï∞ÊçÆÂÆûÊó∂ËΩ¨Êç¢‰∏∫UMSÊï∞ÊçÆÔºåÂ§ÑÁêÜschemaÂèòÊõ¥ÔºåËÑ±ÊïèÁ≠âÔºõ√æ- ÂÖ®ÈáèÊäΩÂèñÁ®ãÂ∫èÔºöÂ∞ÜÂÖ®ÈáèÊï∞ÊçÆ‰ªéRDBMSÂ§áÂ∫ìÊãâÂèñÂπ∂ËΩ¨Êç¢‰∏∫UMSÊï∞ÊçÆÔºõ√æ- Êó•ÂøóÁÆóÂ≠êÂ§ÑÁêÜÊ®°ÂùóÔºöÂ∞ÜÊù•Ëá™‰∏çÂêåÊäìÂèñÁ´ØÁöÑÊó•ÂøóÊï∞ÊçÆÊåâÁÖßÁÆóÂ≠êËßÑÂàôËøõË°åÁªìÊûÑÂåñÂ§ÑÁêÜÔºõ√æ- ÂøÉË∑≥ÁõëÊéßÊ®°ÂùóÔºöÂØπ‰∫éRDMSÁ±ªÊ∫êÔºåÂÆöÊó∂ÂêëÊ∫êÁ´ØÂèëÈÄÅÂøÉË∑≥Êï∞ÊçÆÔºåÂπ∂Âú®Êú´Á´ØËøõË°åÁõëÊéßÔºåÂèëÈÄÅÈ¢ÑË≠¶ÈÄöÁü•ÔºõÂØπ‰∫éÊó•ÂøóÁ±ªÔºåÁõ¥Êé•Âú®Êú´Á´ØÁõëÊéßÈ¢ÑË≠¶„ÄÇ√æ- webÁÆ°ÁêÜÊ®°ÂùóÔºöÁÆ°ÁêÜÊâÄÊúâÁõ∏ÂÖ≥Ê®°Âùó„ÄÇ√æ√æ√æ### **2 Â§öÁßüÊà∑Êï∞ÊçÆÂàÜÂèë**√æ√æÂØπ‰∫é‰∏çÂêåÁßüÊà∑ÂØπ‰∏çÂêåÊ∫êÁ´ØÊï∞ÊçÆÊúâ‰∏çÂêåËÆøÈóÆÊùÉÈôê„ÄÅËÑ±ÊïèÈúÄÊ±ÇÁöÑÊÉÖÂΩ¢ÔºåÈúÄË¶ÅÂºïÂÖ•RouterÂàÜÂèëÊ®°ÂùóÔºåÂ∞ÜÊ∫êÁ´ØË≤ºÊ∫êÊï∞ÊçÆÔºåÊ†πÊçÆÈÖçÁΩÆÂ•ΩÁöÑÊùÉÈôê„ÄÅÁî®Êà∑ÊúâÊùÉËé∑ÂèñÁöÑÊ∫êÁ´ØË°®„ÄÅ‰∏çÂêåËÑ±ÊïèËßÑÂàôÁ≠âÔºåÂàÜÂèëÂà∞ÂàÜÈÖçÁªôÁßüÊà∑ÁöÑTopic„ÄÇËøô‰∏ÄÁ∫ßÁöÑÂºïÂÖ•ÔºåÂú®DBUSÁÆ°ÁêÜÁ≥ªÁªü‰∏≠ÔºåÊ∂âÂèäÂà∞Áî®Êà∑ÁÆ°ÁêÜ„ÄÅSinkÁÆ°ÁêÜ„ÄÅËµÑÊ∫êÂàÜÈÖç„ÄÅËÑ±ÊïèÈÖçÁΩÆÁ≠â„ÄÇ‰∏çÂêåÈ°πÁõÆÊ∂àË¥πÂàÜÈÖçÁªô‰ªñÁöÑtopic„ÄÇ√æ√æ![route2Project](docs/img/index/route2Project.png)√æ√æ### ‰∏ªË¶ÅÂäüËÉΩÔºö√æ√æ- **Êó†‰æµÂÖ•ÊñπÂºèÊé•ÂÖ•Â§öÁßçÊï∞ÊçÆÊ∫ê**Ôºö ‰∏öÂä°Á≥ªÁªüÊó†ÈúÄ‰ªª‰Ωï‰øÆÊîπÔºå‰ª•Êó†‰æµÂÖ•ÊÄßËØªÂèñÊï∞ÊçÆÂ∫ìÁ≥ªÁªüÁöÑÊó•ÂøóËé∑ÂæóÂ¢ûÈáèÊï∞ÊçÆÂÆûÊó∂ÂèòÂåñ„ÄÇÁõÆÂâçRDBMSÊîØÊåÅmysqlÔºåoracleÊï∞ÊçÆÊ∫êÔºàOracleÊï∞ÊçÆÊ∫êËØ∑ÂèÇËÄÉOracleÁõ∏ÂÖ≥ÂçèËÆÆÔºâÔºå Êó•ÂøóÊñπÈù¢ÊîØÊåÅÂü∫‰∫élogstashÔºåflumeÂíåfilebeatÁöÑÂ§öÁßçÊï∞ÊçÆÊó•ÂøóÊäΩÂèñÊñπÊ°à„ÄÇ√æ- **Êµ∑ÈáèÊï∞ÊçÆÂÆûÊó∂‰º†Ëæì**Ôºö ‰ΩøÁî®Âü∫‰∫éStormÁöÑÊµÅÂºèËÆ°ÁÆóÊ°ÜÊû∂ÔºåÁßíÁ∫ßÂª∂Êó∂ÔºåÊï¥‰ΩìÊó†ÂçïÁÇπ‰øùËØÅÈ´òÂèØÁî®ÊÄß„ÄÇ√æ- **Â§öÁßüÊà∑ÊîØÊåÅÔºö** Êèê‰æõÁî®Êà∑ÁÆ°ÁêÜ„ÄÅËµÑÊ∫êÂàÜÈÖç„ÄÅTopologyÁÆ°ÁêÜ„ÄÅÁßüÊà∑Ë°®ÁÆ°ÁêÜÁ≠â‰∏∞ÂØåÁöÑÂäüËÉΩÔºåÂèØÊ†πÊçÆÈúÄÊ±ÇÔºå‰∏∫‰∏çÂêåÁßüÊà∑ÂàÜÈÖç‰∏çÂêåÁöÑÊ∫êÁ´ØË°®Êï∞ÊçÆËÆøÈóÆÊùÉÈôêÔºåÂ∫îÁî®‰∏çÂêåÁöÑËÑ±ÊïèËßÑÂàôÔºå‰ªéËÄåÂÆûÁé∞Â§öÁßüÊà∑ËµÑÊ∫êÈöîÁ¶ª„ÄÅÂ∑ÆÂºÇÂåñÊï∞ÊçÆÂÆâÂÖ®„ÄÇ√æ√æ![grafana](docs/img/index/2intr_proj_mgr.png)√æ√æ![2intr_proj_table](docs/img/index/2intr_proj_table.png)√æ√æ![2intr_router_topo](docs/img/index/2intr_router_topo.png)√æ√æ- **ÊÑüÁü•Ê∫êÁ´ØschemaÂèòÊõ¥**Ôºö ÂΩìÊ∫êÁ´ØÂèëÁîüschemaÂèòÊõ¥Êó∂ÔºåËÉΩËá™Âä®ÊÑüÁü•schemaÂèòÂåñÔºåË∞ÉÊï¥UMSÁâàÊú¨Âè∑ÔºåÂπ∂ÈÄöËøáKafkaÊ∂àÊÅØÂíåÈÇÆ‰ª∂ÈÄöÁü•‰∏ãÊ∏∏![diff](docs/img/index/2intr_diff.png)√æ√æ- **Êï∞ÊçÆÂÆûÊó∂ËÑ±Êïè**Ôºö ÂèØÊ†πÊçÆÈúÄÊ±ÇÂØπÊåáÂÆöÂàóÊï∞ÊçÆËøõË°åÂÆûÊó∂ËÑ±Êïè„ÄÇËÑ±ÊïèÁ≠ñÁï•ÂåÖÊã¨ÔºöÁõ¥Êé•ÊõøÊç¢„ÄÅMD5„ÄÅmurmurÁ≠âËÑ±ÊïèÁÆóÊ≥ïÔºåËÑ±ÊïèÂä†ÁõêÔºåÊ≠£ÂàôË°®ËææÂºèÊõøÊç¢Á≠â„ÄÇÊîØÊåÅÁî®Êà∑ÂºÄÂèëjarÂåÖÂÆûÁé∞DBUSÊú™Ë¶ÜÁõñÁöÑ‰∏™ÊÄßÂåñËÑ±ÊïèÁ≠ñÁï•„ÄÇ ![docs/encode](docs/img/index/2intr_encode.png)√æ√æ- **ÂàùÂßãÂåñÂä†ËΩΩ**Ôºö ÊîØÊåÅÈ´òÊïàÁöÑÂàùÂßãÂåñÂä†ËΩΩÂíåÈáçÊñ∞Âä†ËΩΩÔºåÊîØÊåÅ‰ªªÊÑèÊåáÂÆöËæìÂá∫topicÔºåÁÅµÊ¥ªÂ∫îÂØπÂÆ¢Êà∑ÈúÄÊ±Ç„ÄÇ ![docs/fuller](docs/img/index/2intr_full.png)√æ√æ- **Áªü‰∏ÄÊ†áÂáÜÂåñÊ∂àÊÅØ‰º†ËæìÂçèËÆÆ**Ôºö ‰ΩøÁî®Áªü‰∏ÄÁöÑUMS(JSONÊ†ºÂºè)Ê∂àÊÅØschemaÊ†ºÂºèËæìÂá∫‰æø‰∫éÊ∂àË¥πÔºåÊèê‰æõÊï∞ÊçÆÁ∫øÁ∫ßums_id‰øùËØÅÊï∞ÊçÆÈ°∫Â∫èÊÄß,ËæìÂá∫insert,Update(before/after),Delete eventÊï∞ÊçÆ„ÄÇ ![ums](docs/img/index/2system-ums.png)√æ√æ- **ÂèØÈù†Â§öË∑ØÊ∂àÊÅØËÆ¢ÈòÖÂàÜÂèë**Ôºö ‰ΩøÁî®KafkaÂ≠òÂÇ®Âíå‰º†ÈÄíÊ∂àÊÅØ‰øùËØÅÂèØÈù†ÊÄßÂíå‰æøÊç∑ÁöÑÂ§öÁî®Êà∑ËÆ¢ÈòÖ√æ√æ- **ÊîØÊåÅÂàÜÂå∫Ë°®/Á≥ªÂàóË°®Êï∞ÊçÆÊ±áÈõÜ**Ôºö ÊîØÊåÅÂàÜÂå∫Ë°®ÁöÑÊï∞ÊçÆÊ±áÈõÜÂà∞‰∏Ä‰∏™‚ÄúÈÄªËæëË°®‚Äù „ÄÇ‰πüÂèØÂ∞ÜÁî®Êà∑Ëá™ÂÆö‰πâÁöÑÁ≥ªÂàóË°®Êï∞ÊçÆÊ±áÈõÜÂà∞‰∏Ä‰∏™‚ÄúÈÄªËæëË°®‚Äú„ÄÇ‰æãÔºö√æ√æ  ![grafana](docs/img/index/2intr_mergetable.png) √æ√æ- **ÂÆûÊó∂ÁõëÊéß&È¢ÑË≠¶**Ôºö ÂèØËßÜÂåñÁõëÊéßÁ≥ªÁªüËÉΩÈöèÊó∂Êü•ÁúãÂêÑÊï∞ÊçÆÁ∫øÂÆûÊó∂ÊµÅÈáèÂíåÂª∂Êó∂Áä∂ÂÜµÔºõÂΩìÊï∞ÊçÆÁ∫øÂèëÁîüÂºÇÂ∏∏Êó∂ÔºåÊ†πÊçÆÈÖçÁΩÆÁ≠ñÁï•Ëá™Âä®ÂèëÈÇÆ‰ª∂ÊàñÁü≠‰ø°ÈÄöÁü•Áõ∏ÂÖ≥Ë¥üË¥£‰∫∫ √æ√æ  ![grafana](docs/img/index/2intr_grafana.png)√æ√æ# ÂÖ∂‰ªñ√æ√æ##### ÁºñËØëÊâìÂåÖ‰ª£Á†Å√æ√æÂÖ≥‰∫éÁºñËØë‰ª£Á†ÅÔºåÂèÇËÄÉ [compile](https://bridata.github.io/DBus/more-compile-code.html)√æ√æ##### ÁâàÊú¨Áõ∏ÂÖ≥:√æ√æÂª∫ËÆÆÁâàÊú¨Ôºö0.6.x√æ√æ‰∏ãËΩΩÂèëÂ∏ÉÂåÖÔºöËØ∑ÂèÇËÄÉÔºö[downloads](https://github.com/BriData/DBus/releases)√æ√æ##### ÁâàÊùÉÂ£∞Êòé√æ√æDBus Ëá™Ë∫´‰ΩøÁî® Apache v2.0 ÂçèËÆÆ√æ√æÂÖ≥‰∫éDBus Ëá™Ë∫´ÂçèËÆÆÔºå‰øÆÊîπÁ¨¨‰∏âÊñπÂåÖ‰ª£Á†ÅÔºå‰ª•Âèä‰∏âÊñπÂåÖÂçèËÆÆÂèÇËÄÉÔºö [License](https://bridata.github.io/DBus/more-license.html)√æ√æ##### ÂÖ∂‰ªñÁõ∏ÂÖ≥ËµÑÊñô:√æ√æ‰∏éÂºÄÊ∫êÈ°πÁõÆ [Wormhole](https://github.com/edp963/wormhole) È°πÁõÆÊê≠ÈÖç‰ΩøÁî®Â∞ÜÊòØÊúÄ‰Ω≥ÈÄâÊã©„ÄÇ √æ√æÂèÇËÄÉÔºö[Â¶Ç‰ΩïÂü∫‰∫éÊó•ÂøóÔºåÂêåÊ≠•ÂÆûÁé∞Êï∞ÊçÆÁöÑ‰∏ÄËá¥ÊÄßÂíåÂÆûÊó∂ÊäΩÂèñ?](http://dbaplus.cn/news-21-872-1.html)√æ√æÂèÇËÄÉÔºö [Âü∫‰∫éÂèØËßÜÂåñÈÖçÁΩÆÁöÑÊó•ÂøóÁªìÊûÑÂåñËΩ¨Êç¢ÂÆûÁé∞](http://dbaplus.cn/news-134-1860-1.html)√æ√æÂèÇËÄÉÔºö[ÂÆûÊó∂ÊïèÊç∑Â§ßÊï∞ÊçÆÂú®ÂÆú‰ø°ÁöÑÂÆûË∑µ](http://server.51cto.com/News-576556.htm) √æ√æ##### ‰∫§ÊµÅÂíåÈóÆÈ¢òÂèçÈ¶à:√æ√æÈÇÆ‰ª∂‰∫§ÊµÅÔºö √æ√æÊèê‰∫§issue Ôºö [issue](https://github.com/BriData/DBus/issues)√æ√æ## Get Help√æ√æThe fastest way to get response from our developers is to send email to our mail list [edp_support@groups.163.com](mailto:edp_support@groups.163.com) or [bridata@126.com](mailto:bridata@126.com)√æ√æand welcome to join our WeChat group for online discussion.√æ√æ![](docs/img/WeChat.jpg)"
MetaMind/quickstart,38,7,45,15,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",6,Java,"{'': 1, 'md': 2}",30,1,0,7,9,1258,True,0,0,0,0,0,12,0,2,8,0,2,2,3,3,0,0,7,3,,,"<img src=""https://einstein.ai/static/images/pages/home-einstein.svg"" width=""100px"">√æ √æ# Einstein Vision Code Samples√æThese code samples show you how to generate a JWT access token, refresh a token, and make a prediction using the Einstein Image Classification API. √æ√æThere's more documentation in the [Einstein Platform Services Developer Guide](https://metamind.readme.io/).√æ√æ**Note:** Avoid security vulnerabilities and CVEs by using the latest versions of code libraries and dependencies."
ANRGenstar/gamaplugin,12919,2,9,2,Organization,False,[Deprecated] This repository contains all feature that connect Gen* api to the Gama platform ,,,17,Java,"{'': 3, 'yml': 1, 'md': 1, 'gradle': 2, 'sh': 3, 'bat': 1}",106,3,0,4,4,1287,True,10,4,0,0,0,1,0,0,7,0,0,0,0,0,0,0,7,0,,,"# Temporary install procedure in GAMA√æ√æThis install procedure has been tested the 19th of April 2018. It has many drawbacks (copy-paste of jars, incompatible with the continuous built, use of very heavy jars for genstar, with duplicated libraries, Eclipse-dependent...) but has the main advantage to integrate very well in a classical IDE for GAMA. So it is only temporary!√æ√æTo use and develop the Genstar Plugin in GAMA, you need:√æ- GAMA in its development version√æ- the genstar library√æ- the genstar GAMA plugin√æ√æ√æ# 1. Install Eclipse and GAMA source code√æcf. as presented here: https://github.com/gama-platform/gama/wiki/InstallingGitVersion√æ√æ# 2. Get the source code of the genstar library and genstar plugin.√æ√æClone the following GitHub repository Github: √æ * the genstar library:  https://github.com/ANRGenstar/genstar.git√æ * [Optional] the genstar templates (i.e. examples): https://github.com/ANRGenstar/template.git√æ * the gama plugin: https://github.com/ANRGenstar/gamaplugin.git√æ√æWith Eclipse: √æ* Open the Git perspective√æ* In the View Git Repositories, Click on the icon ""Clone a Git Repository and add the clone to this view""√æ√æIn the View Git Repositories, you should have 4 repositories: gama, gamaplugin, genstar and template.√æ√æ# 3. Import the genstar library as Eclipse projects.√æ * File > Import ...√æ * [Window: Import] Select: Git / Projects from Git (Click on Next button)√æ * [Window: Import Project from Git] Select: Existing local repository (Next)√æ * [Window: Import Projects from Git] Select: genstar (Next)√æ * [Window: Import Projects from Git] ""Import existing Eclipse projects"" should be checked and ""Working Tree"" selected (Next)√æ * [Window: Import Projects from Git] Check ""Search for nested projects"", select the 5 projects (genstar-core, genstar-gospl, genstar-spin, genstar-spll and parent) (Finish)√æ√æ√æ# 4. Import the genstar plugin as Eclipse projects.√æ * File > Import ...√æ * [Window: Import] Select: Git / Projects from Git (Click on Next button)√æ * [Window: Import Project from Git] Select: Existing local repository (Next)√æ * [Window: Import Projects from Git] Select: gamaplugin (Next)√æ * [Window: Import Projects from Git] ""Import existing Eclipse projects"" should be checked and ""Working Tree"" selected (Next)√æ * [Window: Import Projects from Git] Check ""Search for nested projects"", select the last project (genstar.plugin.bundle-all, the last one, the deepest one, among the 2 available) (Finish)√æ√æ# 5. Import the template as Eclipse projects. (similarly)√æ√æ# 6. Associate genstar library with the GAMA plugin.√æThe GAMA Plugin comes with all the necessary jar libraries and in particular the genstar library.√æ  √æ√æIf you want to modify the genstar library, after a modifications you need to build again the genstar libraries:√æ  * right-click on the modified plugin > Run As > Maven install√æ  * in the genstar project, in the target folder, copy the genstar*.jar and paste it in the plugin lib_genstar folder.√æ√æIn the case where a ClassNotFoundException appears in GAMA, when running a model using Genstar operators, it could be due to a missing .jar in the gamaplugin plugin. You should thus need to add the missing library in the lib folder (you also have to add it in the plugin.xml, in the classpath pane).√æ√æA sure case to avoid any missing library, you can follow the following procedure, to prouce the genstar library with all the needed libraries:√æ  * Right-click on the `parent` plugin > Run As >  Maven install√æ  * in the 4 genstar projects (genstar-core, -gospl, -spll, -spin), in the target folder, take the genstar-*-jar-with-dependencies.jar and paste them in the plugin `lib_genstar` folder.√æ  * add these 4 libraries to the classpath of the gamaplugin plugin and to the classpath in the plugin.xml.√æ√æ# 7. Ask GAMA to call the plugin at start√æ  * In ummisco.gama.feature.core.extensions plugin, feature.xml, add the genstar plugin to the Included Plug-ins√æ√æ√æ√æ√æ# √æ# √æ√æBelow are the old install instructions. √æ√æ# Plugin Genstar for GAMA platform simulation.√æ√æ[![Build Status](https://travis-ci.org/ANRGenstar/gamaplugin.svg?branch=master)](https://travis-ci.org/ANRGenstar/gamaplugin)√æ√æThis repository contains all features that connect [GenStar](http://www.agence-nationale-recherche.fr/Projet-ANR-13-MONU-0006) project and [Api](https://github.com/ANRGenstar/) to the [Gama simulation platform](http://gama-platform.org/)√æ√æIn order to build the **genstar-plugin** for Gama, the Gradle build system use multiples dependencies from :√æ- [Genstar](https://github.com/ANRGenstar/genstar) bundles, built with Maven, and stored/updated on [Bintray repository](https://bintray.com/anrgenstar)√æ- [Gama](https://github.com/gama-platform/) bundles, built with Maven and stored/updated on [Eclipse P2 repository](http://gama-platform.org/updates/)√æ√æ# A - Information about structure of folder√æ√æ- `/build.gradle` : Define the maven dependencies site and the dependencies needed to merge the p2/maven repository  (__goomph__) and build the p2 site (__bnd-platform__). √æ√æ- `genstar.plugin.bundle-all/build.gradle` : Compile sources from plugin, generate gaml primitive, and create an osgi bundle of genstar plugin : `genstar.plugin.bundle-all`.√æ√æ- `genstar.plugin.platform/build.gradle` : Create the p2 site for the genstar-plugin bundle.√æ√æ- `target.p2/build.gradle` : Define repository for p2 dependencies√æ√æ- `target.maven/build.gradle` : Converts maven dependencies into OSGi bundles√æ√æ# B - Prerequisites√æ√æ## Terminal (1)√æ√æ- Follow [Gradle >= 3.x installation](https://docs.gradle.org/current/userguide/installation.html) instructions on your computer√æ√æ## Gradle & Intellij IDE (2)√æ√æ- Import project using Intellij.√æ- Configure Gradle options, use if it's possible the **Gradle wrapper** option during import of the project.√æ√æIf it not works, install a local Gradle using Terminal like described in step **(1)**√æthen copy/paste the path given by `which gradle` in your terminal in your Intellij Gradle settings, in the **Local installation directory** box.√æ√æ## Gradle & Eclipse IDE (3)√æ√æ- Install [Gradle plugin](https://projects.eclipse.org/projects/tools.buildship) available on Eclipse Marketplace (already installed in Eclipse Oxygen).√æ- Import the project and config your Gradle, use if it's possible the **Gradle wrapper** option during import of the project.√æ√æIf it not works, install a local Gradle using Terminal like described in step **(1)**√æthen copy/paste the path given by `which gradle` in your terminal in your Intellij Gradle settings, in the **Local installation directory** box.√æ√æYou could also use the `gradle eclipse` command in root folder to generate *.classpath*, *.project* files for import into Eclipse.√æ√æ# C - Build and/or deploy genstar-gama bundles√æ√æ## How to build genstar-plugin-all bundle ?√æ√æUsing Eclipse/Idea build, or directly by using the terminal with the command `gradle clean build`,√æyou could find the final jar into `genstar-gama-plugin/genstar.plugin.bundle-all/build/libs`√æ√æ## How to generate P2 Eclipse Site√æ√æUsing Eclipse/Idea build, or directly by using the terminal with `genstar.plugin.platform:updateSite` command,√æyou could find the generated **update site** (or also know as [P2 Repository](http://www.vogella.com/tutorials/EclipseP2Update/article.html#creating-p2-update-sites)√æinto `genstar.plugin.platform/build/updatesite`√æ√æ## How to generate P2 Eclipse Site and also deploy (project member only) ?√æ√æWe use the plugin [gradle-credentials-plugin](https://github.com/etiennestuder/gradle-credentials-plugin) to encrypt the password during deploy on travis.√æ√æIf you want to deploy with your local gradle you need to follow this procedure :√æ√æ- Get the `gradle.xxx.encrypted.properties` file in the Genstar vault.√æ- Unzip it in your `~/.gradle/` folder.√æ- Get the Genstar sftp password Genstar vault and copy/paste in place of __****__ in this command `gradle deploy -PcredentialsPassphrase= **** -i`√æ√æActually we work to fix the P2 site __http://genstar.unthinkingdepths.fr__ but you could already√ædownload a dev version of the plugin for gama at this url : __http://genstar.unthinkingdepths.fr/genstar-plugin.zip__√æ√æ# D - Install genstar-gama-plugin plugin√æ√æ## Install plugin into Gama√æ√æDownload and run the release or the latest version of Gama simulation software directly on [github](https://github.com/gama-platform/gama/releases)√æ√æ### Using P2 repository√æ√æ- Go to `help > install new software` and add the web repository __http://genstar.unthinkingdepths.fr__.√æ- Install the feature proposed. √æ√æ### Using local updateSite√æ√æ- Go to `help > install new software`, choose local, and add the folder `genstar.plugin.platform/build/updatesite` generated by Gradle.√æ- Install the feature proposed.√æ√æ# E - Debug ?!√æ√æSome notes for genstar plugin future developper :)√æ√æ## OSGI debug√æ√æIt's very difficult to debug OSGI bundle when it failed during install or loading. You could debug OSGI directly into Gama using this command : `.\Gama -consolelog -console localhost:5467 -debug`√æ√æAfter that, connect to OSGI bus using `telnet localhost 5437` and then help yourself with [OSGI command](http://www.vogella.com/tutorials/OSGi/article.html)√æ√æ## Manifest explanation√æ√æHere the specific command in [bnd](https://github.com/bndtools/bnd) section of `build.gradle` into `genstar.gama.bundle-all` folder :√æ√æ- **Conditional-Package** at `!org.w3c.*, !org.xml.*, !javax.*, !org.jfree.*, !org.graphstream.*, !msi.*, *`: Static linking, see the [documentation](http://njbartlett.name/2014/05/26/static-linking.html) We remove all class given by some dependencies from the jar, especially some `msi.*` class which already exists in `msi.gama.core`.√æ- **Import-Package** at `!*` : All dependencies are normally included.√æ- **Require-Bundle** : We need `msi.gama.core` bundle, this bundle is given by Gama OSGI bus at runtime.√æ√æ# F - Thanks to !!√æ√æ- [@nedTwigg](https://github.com/nedtwigg) which release the great [goomph](https://github.com/diffplug/goomph) library√æ- [@Stempler](https://github.com/stempler) which release the great [bnd-platform](https://github.com/stempler/bnd-platform) library"
dyreriket/rdfvizler,502,1,2,1,Organization,False,"RDF visualisation tool, requires Java 8 and Graphviz",http://rdfvizler.dyreriket.xyz,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",11,Java,"{'xml': 2, 'yml': 2, '': 2, 'md': 1}",193,4,2,2,5,1008,True,11,20,0,0,1,16,1,0,9,0,0,0,0,0,0,0,2,0,,,[![Build Status](https://travis-ci.org/dyreriket/rdfvizler.svg?branch=develop)](https://travis-ci.org/dyreriket/rdfvizler)√æ√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/5e38c0b5c6884a67890dcafb112c1ba5)](https://www.codacy.com/app/m-g-skjaeveland/rdfvizler?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mgskjaeveland/rdfvizler&amp;utm_campaign=Badge_Grade)√æ[![BCH compliance](https://bettercodehub.com/edge/badge/dyreriket/rdfvizler?branch=master)](https://bettercodehub.com/)√æ[![codebeat badge](https://codebeat.co/badges/5bd18d8a-6496-4142-bd6e-e7a65934de5d)](https://codebeat.co/projects/github-com-mgskjaeveland-rdfvizler-develop)√æ[![Maintainability](https://api.codeclimate.com/v1/badges/f8f7610ef8122ec94deb/maintainability)](https://codeclimate.com/github/mgskjaeveland/rdfvizler/maintainability)√æ√æ√æ[![codecov](https://codecov.io/gh/dyreriket/rdfvizler/branch/develop/graph/badge.svg)](https://codecov.io/gh/dyreriket/rdfvizler)√æ[![Test Coverage](https://api.codeclimate.com/v1/badges/f8f7610ef8122ec94deb/test_coverage)](https://codeclimate.com/github/mgskjaeveland/rdfvizler/test_coverage)√æ√æ[![Known Vulnerabilities](https://snyk.io/test/github/mgskjaeveland/rdfvizler/develop/badge.svg)](https://snyk.io/test/github/mgskjaeveland/rdfvizler/develop)√æ√æ# RDFVizler
topcoder-platform/tc-online-review,468845,2,17,20,Organization,False,Topcoder Online Review.,https://coder.topcoder.com/tcs/clients/cronos/applications/online_review/trunk/,,23,Java,"{'': 3, 'txt': 1, 'xml': 4, 'sh': 3, 'example': 2}",2311,41,32,23,0,5225,True,19,4,4,0,5,71,3,5,7,0,2,14,433,33,0,0,242,6,,,"Notes on testing some actions from Project Admin & Review√æ√æ  1. Upload Submission√æ√æ     To go to the upload submission page you should enter the following into√æ     the Address field of your browser:√æ√æ       http://localhost:8080/review/actions/UploadSubmission.do?method=uploadSubmission&pid=<id-of-project>√æ√æ     where <id-of-project> part is the ID of any of the existing projects. The√æ     user you are logged under must have a Submitter role for that project to√æ     be able to upload submission.√æ     After uploading a file to the server you may inspect a folder the path to√æ     which is specified by the ""FileStorePath"" property in the configuration√æ     file. You may also excute the following SQL commands to verify the state√æ     of the database after uploading the file:√æ√æ       SELECT * FROM upload;√æ       SELECT * FROM submission;√æ√æ     Also, it is possible to use an ID of the newly-created submission in√æ     subsequent testing of actions from Project Review assembly.√æ√æ  2. Download Submission√æ√æ     To download a submission you need to know an ID of its corresponding active√æ     upload (Managers can download even uploads that have ""Deleted"" status√æ     though). Here is the link to start download:√æ√æ       http://localhost:8080/review/actions/DownloadSubmission.do?method=downloadSubmission&uid=<id-of-upload>√æ√æ     It is advisable to first use Upload Submission action to create some√æ     uploads in the file store.√æ√æ√æNotes on testing some actions from Project Review assembly.√æ√æ  1. Create Screening√æ√æ     To create screening you should enter the following into the Address field of√æ     your browser:√æ√æ       http://localhost:8080/review/actions/CreateScreening.do?method=createScreening&sid=<id-of-submission>√æ√æ     where <id-of-submission> part is an integer number. If you used helper SQL√æ     scripts, which insert test data into the database, there are following√æ     submission IDs available: 3000, 3001, and 3002.√æ√æ  2. Create Review & Create Approval√æ√æ     The links for these two actions are almost the same as the link for Create√æ     Screening action:√æ√æ       http://localhost:8080/review/actions/CreateReview.do?method=createReview&sid=<id-of-submission>√æ√æ     for Create Review, and√æ√æ       http://localhost:8080/review/actions/CreateApproval.do?method=createApproval&sid=<id-of-submission>√æ√æ     for Create Approval actions.√æ√æ  3. Edit Screening√æ√æ     To edit screening you should create its draft version first (by using√æ     Create Screening action). After that, you can use the following link to√æ     edit screening:√æ√æ       http://localhost:8080/review/actions/EditScreening.do?method=editScreening&rid=<id-of-review>√æ√æ     where <id-of-review> is the ID of screening review created by Create Screening√æ     action. You may find out the actual value for this ID by inspecting the contents√æ     of your database (table ""review"" in particular).√æ√æ  4. Edit Review & Edit Approval√æ√æ     The links for these two actions are:√æ√æ       http://localhost:8080/review/actions/EditReview.do?method=editReview&rid=<id-of-review>√æ     and√æ       http://localhost:8080/review/actions/EditApproval.do?method=editApproval&rid=<id-of-review>√æ√æ     respectively. Refer to the previous section to find out where to ged a value√æ     for <id-of-review> part of the above two links.√æ√æ  5. Save Screening, Save Review, and Save Approval√æ√æ     You don't have to undertake special actions to access these Struts Actions.√æ     They may easily be accessed from appropriate Create/Edit pages.√æ√æ  6. View Screening√æ√æ     To view screening you must finish (commit) some screening review.√æ     The link for this Struts Action is:√æ√æ       http://localhost:8080/review/actions/ViewScreening.do?method=viewScreening&rid=<id-of-review>√æ√æ     Refer to section 3 for information on <id-of-review>.√æ     Note, that you may view only finished (committed) screenings.√æ√æ  7. View Review & View Approval√æ√æ     The links for these two actions are:√æ√æ       http://localhost:8080/review/actions/ViewReview.do?method=viewReview&rid=<id-of-review>√æ     and√æ       http://localhost:8080/review/actions/ViewApproval.do?method=viewApproval&rid=<id-of-review>√æ√æ     Refer to section 3 for information on <id-of-review>.√æ     Note, that you may view only finished (committed) reviews and approvals.√æ√æ  8. Edit Aggregation√æ√æ     To edit Aggregation you need to have review of type Aggregation in your√æ     database. File ""I-7 - Add Reviews.Sql"", which can be found in /src/sql√æ     directory, contains appropriate SQL scripts that create such sample√æ     Aggregation. The review created by these scrips will have ID 4000. When√æ     you populated your database with Aggregation (either by executing scripts√æ     from sample file, or by any other means), you should be able to open Edit√æ     Aggregation page by following this link:√æ√æ       http://localhost:8080/review/actions/EditAggregation.do?method=editAggregation&rid=<id-of-review>√æ√æ  9. View Aggregation√æ√æ     To view Aggregation you must commit it first. Use Edit Aggregation action√æ     to edit and submit (or commit) Aggregation (detailed descriptions of how it√æ     can be done now are contained in item 8). When you have commited√æ     Aggregation you should be able to open View Aggregation page by following√æ     this link:√æ√æ       http://localhost:8080/review/actions/ViewAggregation.do?method=viewAggregation&rid=<id-of-review>√æ√æ     Note, that review ID will be the same as the one you used with Edit√æ     Aggregation action.√æ√æ 10. Edit Aggregation Review√æ√æ     User is allowed to review an Aggregation only if that Aggregation was√æ     committed first (refer to item 8 for information on how to edit√æ     Aggregation). The following link will lead you to Edit Aggregation Review√æ     page:√æ√æ       http://localhost:8080/review/actions/EditAggregationReview.do?method=editAggregationReview&rid=<id-of-review>√æ√æ     As with View Aggregation action, the ID of review is the same as the one√æ     used to Edit Aggregation.√æ√æ 11. Committing Aggregation Review√æ√æ     Aggregation Review must be committed by all reviewers and a submitter who√æ     this Aggregation was made for. If some reviewer is also an Aggregator (who√æ     committed Aggregation), he does not need to commit the Aggregation Review.√æ√æ 12. View Aggregation Review√æ√æ     Users are allowed to view reviewed Aggregation once it has been reviewed√æ     and commited by all users who had to do that. Refer to items 10 and 11 to√æ     get more information on how an Aggregation can be reviewed and committed.√æ     The following link will open View Aggregaton Review with comments from all√æ     participants for you:√æ√æ       http://localhost:8080/review/actions/ViewAggregationReview.do?method=viewAggregationReview&rid=<id-of-review>√æ√æ 13. Edit Final Review√æ√æ     To perform Final Review you need to have review of type ""Final Review"" in√æ     your database. File ""I-7 - Add Reviews.Sql"", which can be found in /src/sql√æ     directory, contains appropriate SQL scripts that create such sample√æ     Final Review. The review created by these scrips will have ID 5000. When√æ     you populated your database with Final Review (either by executing scripts√æ     from sample file, or by any other means), you should be able to open Edit√æ     Final Review page by following this link:√æ√æ       http://localhost:8080/review/actions/EditFinalReview.do?method=editFinalReview&rid=<id-of-review>√æ√æ 14. View Final Review√æ√æ     To view Final Review you must commit it first. Use Edit Final Review action√æ     to edit and submit (or commit) Final Review (detailed descriptions of how√æ     it can be done now are contained in item 13). When you have commited Final√æ     Review you should be able to open View Final Review page by following this√æ     link:√æ√æ       http://localhost:8080/review/actions/ViewFinalReview.do?method=viewFinalReview&rid=<id-of-review>√æ√æ     Note, that review ID will be the same as the one you used with Edit√æ     Final Review action.√æ√æ 15. Save Aggregation, Save Aggregation Review, and Save Final Review√æ√æ     You don't have to undertake any special actions to access these Struts√æ     Actions. They may easily be accessed from appropriate Edit pages.√æ√æ 16. Note also, that you must log in under an appropriate user to be able to√æ     perform the aforementioned actions.√æ√æ√æNotes about logging in into the application.√æ√æ  1. If you used the data from the sample SQL scripts supplied with this√æ     submission to insert some data to the database (seek for notes about√æ     these scripts below), then you should be able to login into the√æ     application providing the following information in the Login form:√æ         Username: admin√æ         Password: admin√æ     You may login under any other user (though the rights (roles) should be√æ     different), only the user should exist in the database. User handles√æ     (Usernames) are taken from the ""user"" table (that one for User Project√æ     Data Store component), and the password is simply the same as the handle,√æ     case insensitive. Note, that Username is case sensitive, although.√æ√æ√æ√æNotes about Informix version√æ√æ  Although we used Informix v9.4 JDBC driver during the development of Admin√æ  part of assembly, we had to switch to the Informix v10.0 one, because of√æ  the read-only feature used by one of the componets (the Deliverables√æ  Management Persistence one). So, from now on, only the driver from evaluation√æ  version of Informix 10.0 is included with the submission. If you have√æ  Informix 9.4 installed on your machine, it should work pretty well with the√æ  newer version of the driver (at least it worked for us).√æ√æ√æNotes about building / preparing distributive packages / deploying / testing.√æ√æ  1. This submission includes sample topcoder_global.properties file. We recommend√æ     you to use it to get an idea which properties should be overridden.√æ√æ  2. You should be able to compile the application by executing ""ant compile"".√æ√æ  3. You should be able to prepare distibutive package by executing ""ant dist"".√æ√æ  4. You should be able to deploy application to JBoss automatically by executing√æ     ""ant deploy"".√æ√æ  5. You may run tests by executing ""ant test"".√æ     Note, you must have Tomcat 5.5 Web Server to run the tests.√æ√æ√æ√æNotes about database tables creation / population / cleaning / deletion.√æ√æ  1. All the needed SQL scripts can be found in /src/sql folder of this package.√æ√æ  2. Scripts which names begin with the digit denote scripts that contain commands√æ     essintial for the normal operation of the application.  These scripts should√æ     be executed in exactly that order as specified by the number on the beginning√æ     of their filename.√æ√æ  3. Scripts which names have letter ""I"" at the beginning contain commands to√æ     populate database with some sample data.  These scripts should not be used√æ     when the application is deployed to its final destination, they have been√æ     provided for testing purposes only to help reviewers/testers quickly start√æ     verifying the operation of the application.√æ√æ  4. Note, that if you do not use the scripts described in the previuos section,√æ     you should populate the database with so-called Global Managers, i.e.√æ     resources who have the Manager role, and have no project assigned.√æ√æ  5. If the contents of some tables should be removed (deleted), scripts with√æ     letter ""X"" at the beginning of their names may be used.  These scripts√æ     contain commands that delete volatile data from the database only.  They√æ     neither delete lookup data, nor do they delete (drop) any tables from the√æ     database.√æ     Note, there is special script named ""X - Drop All.Sql"".  See next item for√æ     more information on its purpose.√æ√æ  6. The script file named ""X - Drop All.Sql"" contains commands to remove all the√æ     data (including lookups and tables) from the database.  This file doesn't√æ     destroy the database itself, though.  You'll need to recreate all tables and√æ     insert lookup data at the minimum in order to return the application back to√æ     working state after using this script."
apache/felix,96620,282,41,339,Organization,False,Mirror of Apache Felix,,,2,,"{'': 1, 'md': 1}",15556,23,1013,29,3,5452,False,,,,,63,160,2,7,1,0,4,17,3868,945597,0,0,2,869,,,
UncleWangKing/Demos,521,20,2,4,User,False,Êó∫ÂèîÂèîÁöÑ‰ª£Á†ÅÂ∫ì,,,8,Java,"{'': 1, 'md': 1, 'xml': 1}",55,1,0,1,0,918,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,9,,17,,# Demos√æÊó∫ÂèîÂèîÁöÑ‰ª£Á†ÅÂ∫ì
cdap-solutions/dre,409,9,21,6,Organization,False,Yet-Another-Rules-Engine -- A easy-to-understand Business Readable DSL for defining production rules.,http://docs.cask.co/cdap,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 2, 'md': 2, 'xml': 1}",92,23,6,10,6,1065,True,0,1,0,0,1,43,0,3,7,0,2,2,15,15,0,0,5,0,,,# rules-engine
apache/atlas,58930,568,52,349,Organization,False,Apache Atlas,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",28,Java,"{'': 3, 'txt': 3, 'xml': 2}",3168,14,33,92,1,2041,False,,,,,38,60,10,12,10,0,18,151,32713,29179,4,0,2,869,,,"# Licensed to the Apache Software Foundation (ASF) under one√æ# or more contributor license agreements.  See the NOTICE file√æ# distributed with this work for additional information√æ# regarding copyright ownership.  The ASF licenses this file√æ# to you under the Apache License, Version 2.0 (the√æ# ""License""); you may not use this file except in compliance√æ# with the License.  You may obtain a copy of the License at√æ#√æ#     http://www.apache.org/licenses/LICENSE-2.0√æ#√æ# Unless required by applicable law or agreed to in writing, software√æ# distributed under the License is distributed on an ""AS IS"" BASIS,√æ# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ# See the License for the specific language governing permissions and√æ# limitations under the License.√æ√æApache Atlas Overview√æ=====================√æ√æApache Atlas framework is an extensible set of core√æfoundational governance services ‚Äì enabling enterprises to effectively and√æefficiently meet their compliance requirements within Hadoop and allows√æintegration with the whole enterprise data ecosystem.√æ√æThis will provide true visibility in Hadoop by using both a prescriptive√æand forensic model, along with technical and operational audit as well as√ælineage enriched by business taxonomical metadata.  It also enables any√æmetadata consumer to work inter-operably without discrete interfaces to√æeach other -- the metadata store is common.√æ√æThe metadata veracity is maintained by leveraging Apache Ranger to prevent√ænon-authorized access paths to data at runtime.√æSecurity is both role based (RBAC) and attribute based (ABAC).√æ√æ√æBuild Process√æ=============√æ√æ1. Get Atlas sources to your local directory, for example with following commands√æ   $ cd <your-local-directory>√æ   $ git clone https://github.com/apache/atlas.git√æ   $ cd atlas√æ√æ   # Checkout the branch or tag you would like to build√æ   #√æ   # to checkout a branch√æ     $ git checkout <branch>√æ√æ   # to checkout a tag√æ     $ git checkout tags/<tag>√æ√æ2. Execute the following commands to build Apache Atlas√æ√æ   $ export MAVEN_OPTS=""-Xms2g -Xmx2g""√æ   $ mvn clean install√æ   $ mvn clean package -Pdist√æ√æ3. After above build commands successfully complete, you should see the following files√æ√æ   distro/target/apache-atlas-<version>-bin.tar.gz√æ   distro/target/apache-atlas-<version>-hbase-hook.tar.gz√æ   distro/target/apache-atlas-<version>-hive-hook.tar.gz√æ   distro/target/apache-atlas-<version>-impala-hook.tar.gz√æ   distro/target/apache-atlas-<version>-kafka-hook.tar.gz√æ   distro/target/apache-atlas-<version>-server.tar.gz√æ   distro/target/apache-atlas-<version>-sources.tar.gz√æ   distro/target/apache-atlas-<version>-sqoop-hook.tar.gz√æ   distro/target/apache-atlas-<version>-storm-hook.tar.gz√æ√æ4. For more details on installing and running Apache Atlas, please refer to https://atlas.apache.org/#/Installation"
adempiere/adempiere,1302125,491,118,614,Organization,False,"ADempiere Business Suite ERP/CRM/MFG/SCM/POS done the Bazaar way in an open and unabated fashion. Focus is on the Community that includes Subject Matter Specialists, Implementors and End-Users.",www.adempiere.net,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",72,Java,"{'': 6, 'yml': 1, 'md': 1, 'iml': 1, 'psf': 1, 'sbt': 1, 'xml': 1, 'html': 1, 'txt': 1, 'properties': 1}",15110,19,24,19,0,4966,True,422,1874,84,21,29,823,21,113,69,2,0,0,0,0,0,0,32,2,,,"# ADempiere√æADempiere Business Suite ERP/CRM/MFG/SCM/POS done the Bazaar way in an open and unabated fashion. Focus is on the Community that includes Subject Matter Specialists, Implementors and End-Users. √æ- The official page is in: http://www.adempiere.net√æ- The official Wiki is in: http://wiki.adempiere.net√æ- The installation steps are in: http://wiki.adempiere.net/Installation_Steps√æ- For download and debug the source see: http://adempiere.net/web/guest/sourcecode√æ- For see a demo see: http://adempiere.net/web/guest/demo√æ- You can see the business process on: http://adempiere.net/web/guest/business-process√æ- If you need report a bug see: https://github.com/adempiere/adempiere/issues√æ√æ[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/adempiere/adempiere?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)"
omnirom/android_packages_apps_OmniGears,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
zentim/ooteam4,20127,0,0,2,User,False,Java EE web project,,,10,Java,"{'': 3, 'md': 1, 'sql': 2, 'xml': 1}",181,2,17,2,0,636,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,61,,7,,"## Version√æ* [oo teamwork 1](https://github.com/zentim/ooteam4/releases/tag/v0.4.5)√æ* [oo teamwork 2](https://github.com/zentim/ooteam4/releases/tag/v0.4.8)√æ√æ√æ## How To Start√æ1. use ""XAMPP"" to start MySQL√æ2. use ""HeidiSQL"" to operate MySQL (password is empty)√æ  * network type: MySQL(TCP/IP)√æ  * host name/IP: 127.0.0.1√æ  * user: root√æ  * password:√æ  * port: 3306√æ3. execute SQL file (choose file ""[mysql_shoppingcart.sql](https://github.com/zentim/ooteam4/blob/master/mysql_shoppingcart.sql) (only table)"" or ""[ooteam4_db_snapshot.sql](https://github.com/zentim/ooteam4/blob/master/ooteam4_db_snapshot.sql) (with data)"")√æ4. use ""Eclipse Jee Photon"" to open this project√æ* install ""Maven"" ([How to install Maven on Windows](https://www.mkyong.com/maven/how-to-install-maven-in-windows/))√æ* setting system variables√æ  - ""JAVA_HOME"": ""C:\Program Files\Java\jdk1.8.0_171""√æ  - ""JUNIT_HOME"": ""D:\junit4""√æ  - ""Path"": add ""D:\apache-maven-3.5.3\bin;""√æ* use ""tomcat 8.5"" as server√æ5. startup project on the server, then open in the browser :√æ* font-end page: [http://localhost:8080/ooteam4/](http://localhost:8080/ooteam4/)√æ* back-end page: [http://localhost:8080/ooteam4/admin](http://localhost:8080/ooteam4/admin)"
apache/incubator-taverna-language,16306,19,10,21,Organization,False,Mirror of Apache Taverna Language (incubating),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",24,Java,"{'': 5, 'yml': 1, 'md': 1, 'xml': 1}",3560,4,50,14,1,3820,False,,,,,0,44,0,0,7,0,1,2,66,58,0,0,2,869,,,"<!--√æ   Licensed to the Apache Software Foundation (ASF) under one or more√æ   contributor license agreements.  See the NOTICE file distributed with√æ   this work for additional information regarding copyright ownership.√æ   The ASF licenses this file to You under the Apache License, Version 2.0√æ   (the ""License""); you may not use this file except in compliance with√æ   the License.  You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ   Unless required by applicable law or agreed to in writing, software√æ   distributed under the License is distributed on an ""AS IS"" BASIS,√æ   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ   See the License for the specific language governing permissions and√æ   limitations under the License.√æ-->√æ√æ√æ## Taverna Project Retired√æ√æ> tl;dr: The Taverna code base is **no longer maintained** √æ> and is provided here for archival purposes.√æ√æFrom 2014 till 2020 this code base was maintained by the √æ[Apache Incubator](https://incubator.apache.org/) project _Apache Taverna (incubating)_√æ(see [web archive](https://web.archive.org/web/20200312133332/https://taverna.incubator.apache.org/)√æand [podling status](https://incubator.apache.org/projects/taverna.html)).√æ√æIn 2020 the Taverna community √æ[voted](https://lists.apache.org/thread.html/r559e0dd047103414fbf48a6ce1bac2e17e67504c546300f2751c067c%40%3Cdev.taverna.apache.org%3E)√æto **retire** Taverna as a project and withdraw the code base from the Apache Software Foundation. √æ√æThis code base remains available under the Apache License 2.0 √æ(see _License_ below), but is now simply called √æ_Taverna_ rather than ~~Apache Taverna (incubating)~~.√æ√æWhile the code base is no longer actively maintained, √æPull Requests are welcome to the √æ[GitHub organization taverna](http://github.com/taverna/), √æwhich may infrequently be considered by remaining √ævolunteer caretakers.√æ√æ√æ### Previous releases√æ√æReleases 2015-2018 during incubation at Apache Software Foundation√æare available from the ASF Download Archive <https://archive.apache.org/dist/incubator/taverna/>√æ√æReleases 2014 from the University of Manchester are on BitBucket <https://bitbucket.org/taverna/>√æ√æReleases 2009-2013 from myGrid are on LaunchPad <https://launchpad.net/taverna/>√æ√æReleases 2003-2009 are on SourceForge <https://sourceforge.net/projects/taverna/files/taverna/>√æ√æBinary JARs for Taverna are available from √æMaven Central <https://repo.maven.apache.org/maven2/org/apache/taverna/>√æor the myGrid Maven repository <https://repository.mygrid.org.uk/>√æ√æ√æ√æ# Taverna Language√æ√æTaverna Language is a set of APIs for workflow definitions (SCUFL2),√æResearch Object Bundles and workflow inputs/outputs/run (DataBundle), √æas consumed and produced by the √æ[Taverna](https://web.archive.org/web/*/https://taverna.incubator.apache.org/) workflow system.√æ√æThe API includes support for the legacy formats from Taverna 2 and Taverna√æ1, and can be also used independently of Taverna 3.√æ√æThe command line tool `tavlang` can be used for conversion and√æinspection of research objects and workflow bundles.√æ√æ## License√æ√æ* (c) 2010-2014 University of Manchester√æ* (c) 2014-2020 Apache Software Foundation√æ√æThis product includes software developed at The [Apache Software√æFoundation](http://www.apache.org/).√æ√æLicensed under the√æ[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file√æ[LICENSE](LICENSE) for details.√æ√æThe file [NOTICE](NOTICE) contains any additional attributions and√ædetails about embedded third-party libraries and source code.√æ√æ√æ# Contribute√æ√æAny contributions received are assumed to be covered by the [Apache License√æ2.0](https://www.apache.org/licenses/LICENSE-2.0). √æ√æ√æ√æ## Modules√æ√æOfficial modules:√æ√æ* [taverna-robundle](taverna-robundle/) load/save/manage [Research Object bundles](https://w3id.org/bundle), (ZIP-based container)√æ* [taverna-databundle](taverna-databundle/) load/save RO bundle with workflow√æ  inputs/outputs/workflow run provenance√æ* [taverna-scufl2-api](taverna-scufl2-api/) Inspect and build SCUFL2 workflow√æ  definitions√æ* [taverna-scufl2-wfbundle](taverna-scufl2-wfbundle/) load/save Taverna 3 `.wfbundle` workflows√æ* [taverna-scufl2-t2flow](taverna-scufl2-t2flow/) load Taverna 2 `.t2flow` workflows√æ* [taverna-scufl2-schemas](taverna-scufl2-schemas) SCUFL2 XML Schemas and OWL ontologies√æ* [taverna-scufl2-wfdesc](taverna-scufl2-wfdesc/) save [wfdesc](https://w3id.org/ro#wfdesc) workflow structure as RDF Turtle√æ* [taverna-scufl2-examples](taverna-scufl2-examples) Example usage of the SCUFL2 APIs√æ* [taverna-tavlang-tool](taverna-tavlang-tool) Taverna Language tool `tavlang`√æ√æExperimental modules:√æ√æ* [taverna-scufl2-cwl](taverna-scufl2-cwl/) Load/save [Common Workflow Language](https://www.commonwl.org/)√æ* [taverna-scufl2-scufl](taverna-scufl2-scufl/) Load Taverna 1 `.xml` workflows (SCUFL 1)√æ* [taverna-scufl2-annotation](taverna-scufl2-annotation/) Annotation utillity functions√æ* [taverna-baclava-language](taverna-baclava-language) Load Taverna 2 data documents (workflow inputs/outputs)√æ√æDeprecated modules:√æ* [taverna-scufl2-ucfpackage](taverna-scufl2-ucfpackage/): API for [Adobe√æ  UCF](https://wikidocs.adobe.com/wiki/display/PDFNAV/Universal+Container+Format)√æ  ZIP files - superseeded by `taverna-robundle`√æ√æ√æFor more details, see the READMEs of:√æ√æ* [taverna-robundle](taverna-robundle/)√æ* [taverna-databundle](taverna-databundle/)√æ* [taverna-scufl2-api](taverna-scufl2-api/)√æ√æ√æ## Prerequisites√æ√æ* Java JDK 8 or 9√æ* [Apache Maven](https://maven.apache.org/download.html) 3.5.3 or newer (older√æ  versions probably also work)√æ√æ√æ# Building√æ√æTo build Taverna Language, use:√æ√æ    mvn clean install√æ√æThis will build each module and run their tests, producing JARs like√æ`taverna-scufl2-api/target/taverna-scufl2-api-0.16.0-incubating.jar`.√æSome of the experimental modules are not built automatically, to build√æthem separately, run the same command from within their folder.√æ√æ√æ## Building on Windows√æ√æIf you are building on Windows, ensure you unpack this source code√æto a folder with a [short path name](http://stackoverflow.com/questions/1880321/why-does-the-260-character-path-length-limit-exist-in-windows) √ælenght, e.g. `C:\src` - as √æWindows has a [limitation on the total path length](https://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29.aspx#maxpath) √æwhich might otherwise prevent this code from building successfully.√æ√æ## Skipping tests√æ√æTo skip the tests (these can be timeconsuming), use:√æ√æ    mvn clean install -DskipTests√æ√æ√æIf you are modifying this source code independent of the√æTaverna project, you may not want to run the√æ[Rat Maven plugin](https://creadur.apache.org/rat/apache-rat-plugin/)√æthat enforces Apache headers in every source file - to disable it, try:√æ√æ    mvn clean install -Drat.skip=true√æ√æ## Building for Android√æ√æTo use the workflow parsers in Android you need to use the `android` profile. This excludes any  √æmodules which use Java 8 features (Java 7 source is ok for Android API 19 and above eg `scufl2-ufcpackage` uses the diamond operator)  √æ√æ    mvn -P android clean install√æ√æ√æUsage√æ-----√æ√æTaverna Language is a Maven project, and the easiest way to use it is√æfrom other Maven projects.√æ√æReleased binaries of Taverna Language are published in [Maven√æCentral](http://search.maven.org/).√æ√æTypical users of this API will depend on these modules:√æ√æ  <dependency>√æ   <groupId>org.apache.taverna.language</groupId>√æ   <artifactId>taverna-robundle</artifactId>√æ   <version>0.16.0-incubating</version>√æ  </dependency>√æ  <dependency>√æ   <groupId>org.apache.taverna.language</groupId>√æ   <artifactId>taverna-databundle</artifactId>√æ   <version>0.16.0-incubating</version>√æ  </dependency>√æ  <dependency>√æ   <groupId>org.apache.taverna.language</groupId>√æ   <artifactId>taverna-scufl2-api</artifactId>√æ   <version>0.16.0-incubating</version>√æ  </dependency>√æ  <dependency>√æ   <groupId>org.apache.taverna.language</groupId>√æ   <artifactId>taverna-scufl2-wfbundle</artifactId>√æ   <version>0.16.0-incubating</version>√æ  </dependency>√æ  <dependency>√æ   <groupId>org.apache.taverna.language</groupId>√æ   <artifactId>taverna-scufl2-t2flow</artifactId>√æ   <version>0.16.0-incubating</version>√æ  </dependency>√æ√æTo find the latest `<version>` to use above (this README might√ænot have been updated), see the [Taverna Language downloads]√æ(https://web.archive.org/web/*/https://taverna.incubator.apache.org/download/language/).√æ√æAll Scufl2 modules are also valid [OSGi](http://www.osgi.org/) bundles,√æproviding [OSGi services](taverna-scufl2-api#osgi-services).√æ√æ√æYou can alternatively copy and add these JARs from the build to add√æto your classpath:√æ√æ* `taverna-robundle/target/taverna-scufl2-robundle-0.16.0-incubating.jar`√æ* `taverna-databundle/target/taverna-scufl2-databundle-0.16.0-incubating.jar`√æ* `taverna-scufl2-api/target/taverna-scufl2-api-0.16.0-incubating.jar`√æ* `taverna-scufl2-wfbundle/target/taverna-scufl2-wfbundle-0.16.0-incubating.jar`√æ* `taverna-scufl2-ucfpackage/target/taverna-scufl2-ucfpackage-0.16.0-incubating.jar`√æ* `taverna-scufl2-t2flow/target/taverna-scufl2-t2flow-0.16.0-incubating.jar`√æ√æ## Javadoc√æ√æSee the [Taverna Language√æJavadoc](https://web.archive.org/web/*/https://taverna.incubator.apache.org/javadoc/taverna-language/) for√ædocumentation of classes and methods of Taverna Language.  Good starting√æpoints:√æ * [org.apache.taverna.scufl2.api](https://web.archive.org/web/*/https://taverna.incubator.apache.org/javadoc/taverna-language/org/apache/taverna/scufl2/api/package-summary.html)√æ * [org.apache.taverna.robundle](https://web.archive.org/web/*/https://taverna.incubator.apache.org/javadoc/taverna-language/org/apache/taverna/robundle/package-summary.html)√æ * [org.apache.taverna.databundle](https://web.archive.org/web/*/https://taverna.incubator.apache.org/javadoc/taverna-language/org/apache/taverna/databundle/package-summary.html)√æ√æ√æ# Export restrictions√æ√æThis distribution includes cryptographic software.√æThe country in which you currently reside may have restrictions√æon the import, possession, use, and/or re-export to another country,√æof encryption software. BEFORE using any encryption software,√æplease check your country's laws, regulations and policies√æconcerning the import, possession, or use, and re-export of√æencryption software, to see if this is permitted.√æSee <http://www.wassenaar.org/> for more information.√æ√æThe U.S. Government Department of Commerce, Bureau of Industry and Security (BIS),√æhas classified this software as Export Commodity Control Number (ECCN) 5D002.C.1,√æwhich includes information security software using or performing√æcryptographic functions with asymmetric algorithms.√æThe form and manner of this Apache Software Foundation distribution makes√æit eligible for export under the License Exception√æENC Technology Software Unrestricted (TSU) exception√æ(see the BIS Export Administration Regulations, Section 740.13)√æfor both object code and source code.√æ√æThe following provides more details on the included cryptographic software:√æ√æ* The shaded JAR of [taverna-tavlang-tool](taverna-tavlang-tool) include√æ  [Apache HttpComponents](https://hc.apache.org/)√æ  Core and Client,√æ  which can initiate encrypted `https://` connections using√æ  [Java Secure Socket Extension](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)√æ  (JSSE)."
Asqatasun/Contrast-Finder,14052,33,9,17,Organization,False,"Contrast-Finder finds correct color contrasts (background / foreground) for web accessibility (a11y, WCAG, RGAA). https://app.contrast-finder.org",,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",15,Java,"{'': 3, 'yml': 1, 'md': 4, 'xml': 1}",741,6,35,13,10,2419,True,11,232,3,37,0,24,0,9,19,2,5,54,1092,2315,0,0,26,8,,,"[![License : AGPL v3](https://img.shields.io/badge/License-AGPL3-blue.svg)](https://github.com/Asqatasun/Contrast-Finder/blob/master/LICENSE)√æ[![Build Status](https://travis-ci.org/Asqatasun/Contrast-Finder.svg)](https://travis-ci.org/Asqatasun/Contrast-Finder)√æ[![Release](https://img.shields.io/github/release/asqatasun/Contrast-Finder.svg)](https://github.com/Asqatasun/Contrast-Finder/releases/latest)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c3374c9913d24a9c91e91552f1796672)](https://www.codacy.com/app/Asqatasun/Contrast-Finder)√æ[![Code of Conduct](https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square)](https://github.com/Asqatasun/Contrast-Finder/blob/develop/CODE_OF_CONDUCT.md)√æ[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/Asqatasun/Contrast-Finder/blob/develop/CONTRIBUTING.md)√æ√æ# Contrast-Finder√æ![Contrast-Finder logo](https://raw.githubusercontent.com/Asqatasun/Contrast-Finder/develop/documentation/en/images/logo_contrast-finder/contrast-finder_logo_250x250.png)√æ√æ* Tool to provide color combination for a good (accessible, WCAG-compliant) contrast.√æ* This helps you in satisfying web accessibility (a11y) tests on contrasts:√æ    * [WCAG Success Criteria 1.4.3](https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast)√æ    * [WCAG Success Criteria 1.4.6](https://www.w3.org/TR/WCAG20/#visual-audio-contrast7)√æ    * [RGAA test 3.3 (in french)](http://references.modernisation.gouv.fr/rgaa-accessibilite/criteres.html#crit-3-3)√æ    * [RGAA test 3.4 (in french)](http://references.modernisation.gouv.fr/rgaa-accessibilite/criteres.html#crit-3-4)√æ√æ√æ## Demo√æhttps://app.contrast-finder.org√æ√æ[![Try Contrast-Finder](https://raw.githubusercontent.com/Asqatasun/Contrast-Finder/develop/documentation/en/images/screenshot/screenshot.EN_contrast-finder.v0.9.1_2018-09-27_grey_kraken.io-lossy.png)](https://app.contrast-finder.org/?lang=en ""Try Contrast-Finder : find good color for web accessibility"")√æ√æ√æ## Why another contrast tool ?√æ√æJust to **provide contrast solutions** !√æ√æThere are lot of tools to find a good contrast on the web, but no one to suggest valid contrasts.√æ√æAll tools just tell you whether the contrast is good or not, which is fine...√æbut insufficient. Webdesigners / webdevelopers need to easily have a good contrast.√æThat's the purpose of [Contrast-Finder.org](https://contrast-finder.org/)√æ√æ**Contrast-Finder** is a tool which computes the contrast between two colors (background, foreground) and checks if the contrast is valid. When the contrast is not valid, the main target is to suggest some correct colors contrasts.√æ√æ√æ## Contact and discussions√æ√æ* [Asqatasun forum](https://forum.asqatasun.org/c/contrast-finder)√æ* [Twitter @Asqatasun](https://twitter.com/Asqatasun)√æ* email to `asqatasun AT asqatasun dot org` (only English, French and klingon is spoken :) )√æ√æ√æ## We want you! (aka Contribute)√æ√æWe would be really glad to have you on board! You can help in many ways:√æ√æ* Use Contrast-Finder !√æ* Help translate Contrast-Finder√æ* Give us [feedback on the forum](https://forum.asqatasun.org/c/contrast-finder) or [fill in bug report](https://github.com/Asqatasun/Contrast-Finder/issues)√æ* [Pull Requests](https://github.com/Asqatasun/Contrast-Finder/pulls) are always welcome!√æ√æEverything is summarized in the [CONTRIBUTING](https://github.com/Asqatasun/Contrast-Finder/blob/master/CONTRIBUTING.md) file.√æ√æ√æ## Documentation√æ√æ* How to use ?√æ* How to install ?√æ* How to build ?√æ√æGo to the [documentation](https://github.com/Asqatasun/Contrast-Finder/blob/master/documentation/en/) !√æ√æ## Download√æ√æ* [lastest version of Contrast-Finder](https://github.com/Asqatasun/Contrast-Finder/releases/latest)√æ* and also: [Contrast-Finder Docker images](https://hub.docker.com/r/asqatasun/contrast-finder/)√æ√æ## License√æ√æ [AGPL v3](https://github.com/Asqatasun/Contrast-Finder/blob/master/LICENSE)"
qub-it/fenixedu-academic-treasury,3315,0,11,2,Organization,False,Integration between the treasury and academic fenixedu projects,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",7,Java,"{'': 3, 'md': 1, 'xml': 1}",645,31,74,10,0,1922,True,0,0,0,0,0,17,0,0,7,0,3,22,1645,677,0,0,46,8,,,[![qubIT](http://www.qub-it.com/cms/images/qubIT_logo_transparent_medium.png)](http://www.qub-it.com)√æ√æ# fenixedu-academic-treasury√æIntegration between the FenixEDU Treasury and FenixEDU Academic projects
mg365/mg-framework,363,1,0,1,Organization,False, spring + hibernate + groovy + report,,,8,Java,"{'': 1, 'md': 1, 'xml': 1}",39,6,0,2,0,928,True,0,0,0,0,5,8,5,8,9,0,1,2,8,8,1,0,26,0,,shijingsh/mg-framework,"### metadata ÂÖÉÊï∞ÊçÆÊ°ÜÊû∂√æspring + hibernate + groovy + report√æ√æ### how to use√æ√æAdd dependency to your project√æ~~~xml√æ  <dependencies>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-framework</artifactId>√æ      <version>1.0</version>√æ      <type>pom</type>√æ    </dependency>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-entity</artifactId>√æ      <version>1.0</version>√æ      <type>jar</type>√æ    </dependency>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-fw</artifactId>√æ      <version>1.0</version>√æ      <type>jar</type>√æ    </dependency>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-common</artifactId>√æ      <version>1.0</version>√æ      <type>jar</type>√æ    </dependency>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-groovy</artifactId>√æ      <version>1.0</version>√æ      <type>jar</type>√æ    </dependency>√æ    <dependency>√æ      <groupId>com.github.mg365</groupId>√æ      <artifactId>mg-report</artifactId>√æ      <version>1.0</version>√æ      <type>jar</type>√æ    </dependency>√æ  </dependencies>√æ  √æ  ~~~√æ  √æ  add plus for generate-sources√æ  √æ  ~~~xml√æ  <plugins>√æ        <plugin>√æ          <groupId>com.mysema.maven</groupId>√æ          <artifactId>apt-maven-plugin</artifactId>√æ          <version>1.1.2</version>√æ          <executions>√æ            <execution>√æ              <id>querydsl-process</id>√æ              <!--<phase>clean</phase>-->√æ              <phase>generate-sources</phase>√æ              <goals>√æ                <goal>process</goal>√æ              </goals>√æ              <configuration>√æ                <outputDirectory>√æ                  target/generated-sources/java√æ                </outputDirectory>√æ                <processor>√æ                  com.mysema.query.apt.jpa.JPAAnnotationProcessor√æ                </processor>√æ                <!--<showWarnings>true</showWarnings>-->√æ                <logOnlyOnError>true</logOnlyOnError>√æ              </configuration>√æ            </execution>√æ          </executions>√æ        </plugin>√æ  √æ        <plugin>√æ          <groupId>org.codehaus.mojo</groupId>√æ          <artifactId>build-helper-maven-plugin</artifactId>√æ          <version>1.7</version>√æ          <executions>√æ            <execution>√æ              <id>add-source</id>√æ              <phase>generate-sources</phase>√æ              <goals>√æ                <goal>add-source</goal>√æ              </goals>√æ              <configuration>√æ                <sources>√æ                  <source>target/generated-sources/java</source>√æ                </sources>√æ              </configuration>√æ            </execution>√æ          </executions>√æ        </plugin>√æ    </plugins>√æ  ~~~√æ  √æ  ### generator db sql√æ  √æ  find the class ""com.mg.common.tools.HibernateDDLGenerator""√æ√æ  debug or running the main method,The SQL statement will be entered at the console"
endeavourhealth/SFTPReader,3741,0,11,2,Organization,False,Component service of EDS for downloading and decrypting healthcare data extracts,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 1, 'md': 2, 'yml': 1, 'xml': 1}",529,2,0,6,2,1222,True,0,0,0,0,1,0,1,0,8,0,1,56,2719,619,0,0,26,0,,,![Endeavour Logo](http://www.endeavourhealth.org/github/logo-text-left-cropped.png)√æ√æ## SFTP Reader√æ√æA component of the Endeavour Data Service.
mbeccuti/4SeqGUI,32489,3,3,2,User,False,GUI,,,18,Java,"{'': 3, 'desktop': 1, 'sh': 3, 'md': 1, 'xml': 1, 'mf': 1}",278,1,0,3,0,1161,True,1,0,1,0,0,0,0,0,7,0,2,10,14163,1610,0,0,5,,3,,"# 4SeqGUI√æA GUI to **docker4seq**√æ√æ##Requirements√æ√æ[**Java-Oracle SE Runtime Environment 8.0**](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) or higher,√æ√æ**R 3.0.0** or higher, √æ√æ[**docker4seq**](https://github.com/kendomaniac/docker4seq) githhub package√æ√æ√æTo start the GUI:√æ1. open a terminal;√æ2. go to 4SeqGUI folder;√æ3. execute the GUI with the bash script ""4SeqGUI.sh""√æ√æ```√æcd /somewhere_on_PC/4SeqGUI√æ./4SeqGUI.sh√æ```√æor if ""4SeqGUI.sh"" has not the permission to being executed√æ√æ```√æcd /somewhere_on_PC/4SeqGUI√æbash ./4SeqGUI.sh√æ```"
inwc3/JMPQ3,26675,25,4,12,Organization,False,Native Java mpq archive library,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 3, 'yml': 1, 'txt': 1, 'md': 1, 'gradle': 2, 'bat': 1}",210,3,36,8,6,1883,True,6,16,2,2,2,14,1,2,9,0,3,11,236,96,0,0,6,2,,,"[![Build Status](https://travis-ci.org/inwc3/JMPQ3.svg?branch=master)](https://travis-ci.org/inwc3/JMPQ3) [![Jit](https://jitpack.io/v/inwc3/JMPQ3.svg)](https://jitpack.io/#inwc3/JMPQ3) [![Coverage Status](https://coveralls.io/repos/github/inwc3/JMPQ3/badge.svg?branch=master)](https://coveralls.io/github/inwc3/JMPQ3?branch=master) [![codebeat badge](https://codebeat.co/badges/5ccfd060-8d57-4a51-9c6b-2688482f857e)](https://codebeat.co/projects/github-com-inwc3-jmpq3-master)√æ# JMPQ3√æ## What?√æJMPQ3 is a small java library for accessing and modifying mpq (MoPaQ) archives. Common file endings are .mpq, .w3m, .w3x. √æ√æMoPaQ is Blizzard's old, proprietary archive format for storing gamedata (replaced with CASC).√æ√æYou can find more info and an excellent graphical editor here http://www.zezula.net/en/mpq/main.html√æ√æ## Get it√æ*currently only warcraft 3 maps and mpqs are confirmed supported. Mpqs from other games (WoW, starcraft) might cause problems.*√æ√æIt is recommended to use jitpack with a dependency manager like gradle.√æ√æSee https://jitpack.io/#inwc3/JMPQ3/√æ√æGradle Example:√æ```gradle√ædependencies {√æ    compile 'com.github.inwc3:JMPQ3:1.7.14'√æ}√æallprojects {√æ    repositories {√æ maven { url 'https://jitpack.io' }√æ    }√æ}√æ```√æYou can still download the jar directly if you prefer√æhttps://github.com/inwc3/JMPQ3/releases√æ√æ## How to use√æQuick API Overview:√æ√æJmpq provides the OpenOptions `READ_ONLY` which should be selfexplanatory and `FORCE_V0` which forces the mpq to be opened like warcraft3 would open it, ignoring optional data from later specifications for compatability.√æ```java√æ// Automatically rebuilds mpq after use if not in readonly mode√ætry (JMpqEditor e = new JMpqEditor(new File(""my.mpq""), MPQOpenOption.FORCE_V0)){√æ        e.hasFile(""filename""); //Checks if the file exists√æ        e.extractFile(""filename"", new File(""target location"")); //Extracts a specific file out of the mpq to the target location√æ        if (e.isCanWrite()) {√æ            e.deleteFile(""filename""); //Deletes a specific file out of the mpq√æ            e.insertFile(""filename"", new File(""file to add""), true); //Inserts a specific into the mpq from the target location√æ            e.extractAllFiles(new File(""target folder"")); //Extracts all files inside the mpq to the target folder. If a proper listfile exists,√æ            e.getFileNames(); //Get the listfile as java HashSet<String>√æ        }√æ    }√æ√æ}√æ```√æ√æ### Known issues:√æ* To work around https://bugs.openjdk.java.net/browse/JDK-4724038 jmpq creates tempfiles for every object in the mpq√æ* Unsupported decompression algorithms: sparse and bzip2√æ* Only supported compression is zlib/zopfli√æ* JMPQ doesn't build a valid (attributes) file for now. (which seems to be fine for warcraft3)"
amirzaidi/GoogleIcons,8540,76,20,23,User,False,Pls don't DMCA me,,,7,Java,"{'': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",104,1,5,6,0,849,True,5,5,0,0,0,9,0,0,8,0,2,14,111,8,0,0,58,,614,,
magarena/magarena,385452,289,21,84,Organization,False,Magarena is a single-player fantasy card game played against a computer opponent.,http://magarena.github.io,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",20,Java,"{'': 2, 'md': 2, 'txt': 1, 'xml': 1}",29212,1,101,21,2,3503,True,354,1146,1,1,1,151,1,5,19,0,4,17,1867,764,0,0,6,2,,,"[![Magarena - a single player fantasy card game](https://raw.githubusercontent.com/wiki/magarena/magarena/screenshots/bw-logo.png)](https://magarena.github.io/)√æ√æ[![CircleCI](https://circleci.com/gh/magarena/magarena.svg?style=shield)](https://circleci.com/gh/magarena/magarena)√æ[![Codacy](https://img.shields.io/codacy/grade/b6a4ee8930864225a7add5494af39a55.svg)](https://www.codacy.com/app/Magarena/magarena?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=magarena/magarena&amp;utm_campaign=Badge_Grade)√æ[![Latest version](https://img.shields.io/github/release/magarena/magarena.svg)](https://github.com/magarena/magarena/releases)√æ[![Latest version total downloads](https://img.shields.io/github/downloads/magarena/magarena/latest/total.svg)](https://magarena.github.io/)√æ[![All versions total downloads](https://img.shields.io/github/downloads/magarena/magarena/total.svg)](https://magarena.github.io/)√æ√æHomepage: http://magarena.github.io√æ√æForum   : http://www.slightlymagic.net/forum/viewforum.php?f=82√æ√æRequires Java 8 or greater (see [Getting Started](https://github.com/magarena/magarena/wiki/Getting-Started)).√æ√æ### Thanks to√æ  √æ  - ubeefx for creating such a great game√æ  - epiko for creating the first Magarena splash screen and the amazing color themes√æ  - Salasnet, pedro1973, and elias for creating beautiful themes, http://www.slightlymagic.net/forum/viewforum.php?f=89√æ  - IcoJoy, http://www.icojoy.com/blogs/, for the nice free mage logo and icon√æ  - singularita for creating the scripts to add over 300 additional creature cards√æ  - glorfindel, Old Nick, David, Grundomu, jeffwadsworth, Kuno, LSK, sponeta,√æ  - day5ive, and Excedrin for contributing premade decks√æ  - mtgrares for the publicity√æ  - Goblin Hero for providing the images for some of the symbols√æ  - Melvin Zhang for implementing the Monte Carlo Tree Search AI and general code cleanup/bug fixes√æ  - IanGrainger for contributing a patch to allow text search in the Card Explorer√æ  - Rachel for making it possible to cancel image download and fixing incorrect images√æ  - beholder for implementing new cards and general usability improvements√æ  - johncpatterson for helping to test the Mac startup script√æ  - wait321 for creating a deck editor and other UI improvements√æ  - missalexis for creating an application bundle to improve Mac installation√æ  - goonjamin for contributing a patch that makes Magarena easier to use on touchscreens√æ  - Lodici for improving the duel screen and general UI enhancements√æ  - frank for extensive play testing and bug reporting√æ  - PalladiaMors, PhazedOut, Aunukia, nado18, Erkcan √ñzcan, kdesmond, a.√æ  - benedict balbuena, spartan vi, Braullynn, mecheng, pcastellazzi, rasdel,√æ  - Tyrael, hong yie, ember hauler, Hector Marin, drooone, jericho.pumpkin,√æ  - Mike, and Guest for implementing new cards√æ  - ShawnieBoy for implementing new cards, the M logo, and general image enhancements√æ  - PalladiaMors for the Portuguese UI translation√æ  - kannikkiy for the Russian UI translation√æ  - Zac610 for the Italian UI translation√æ  - LoubiTek for the French UI translation√æ  - Pichoro, Acorntail and all at http://magicseteditor.sourceforge.net for CardBuilder components√æ  - XMage for the ArrowBuilder code√æ  - neoedmund for the download images-on-demand implementation√æ  - http://mtgjson.com for card script data√æ  - http://magiccards.info for card images√æ  - http://game-icons.net for UI icons√æ  - http://soundbible.com, http://www.freesound.org for sound effects√æ  - everyone on the CCGHQ forum, http://slightlymagic.net/forum/√æ√æThank you for your support and have fun!"
Polymap4/polymap4-core,21732,3,2,4,Organization,False,Building blocks for GIS applications based on Eclipse/RAP,,,4,Java,{'md': 1},1361,2,0,5,0,3387,True,18,56,0,0,2,34,0,0,12,0,0,0,0,0,0,0,7,2,,,"## Polymap4 core system√æ√æProvides basic building blocks for GIS applications based on [Eclipse/RAP](http://eclipse.org/rap).√æ√æ  - [Runtime](plugins/org.polymap.core) - Cache, Event System, Session Management, Config, etc.√æ  - [Data](plugins/org.polymap.core.data) - Geospatial data management based on [GeoTools](http://geotools.org)√æ  - [MapEditor](plugins/org.polymap.core.mapeditor) - Map viewer/editor based on [OpenLayers](/Polymap4/polymap4-rap/)√æ  - [Project](plugins/org.polymap.core.project) - Projects, layers, meta-data√æ  - [Catalog](plugins/org.polymap.core.catalog) - Catalog system√æ  - [Service](plugins/org.polymap.service) - Service infrastructure√æ  - [Service-Fs](plugins/org.polymap.service.fs) - WebDAV and other filesystem like services√æ  - [Service-GeoServer](plugins/org.polymap.service.geoserver) - [OGC](http://www.opengeospatial.org/) services based on [GeoServer](http://geoserver.org)√æ  - ...√æ  √æThis is work in Progress. We are about to port the code of [Polymap3](/Polymap3)."
STEMLab/InFactory,10557,10,6,6,Organization,False,Server for easily creating OGC IndoorGML document,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 3, 'md': 1, 'cmd': 1, 'log': 1, 'xml': 1}",684,6,0,7,4,1004,True,0,5,0,0,4,26,3,5,9,0,2,4,4462,593,0,0,40,3,,,"# InFactory√æ√æThis project is for creating & editing OGC IndoorGML 1.0.3 formated data. This is based on ogc-schemas https://github.com/highsource/ogc-schemas, so later I will add License about this. √æ√æ√æ## Getting Started√æ√æ### Prerequisites√æ√æ1) OS : regardless of OS  √æ2) Maven : over 3.5 version. You need to install Maven and set MAVEN_HOME & PATH.√æ   * How to set MAVEN_HOME : [link for Window](https://www.mkyong.com/maven/how-to-install-maven-in-windows/) , [link for Linux](https://maven.apache.org/install.html)√æ   * This project supports Maven wrapper. If you do not want to install Maven, follow 1-2) and 2-2)√æ3) Java : JDK over 1.8 version. You need to install JDK and set JAVA_HOME & PATH.√æ  * **JAVA 8; not working at the upper version**√æ  √æ   * How to set JAVA_HOME : [link](https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/) √æ   √æ√æ### Installing√æ√æ1-1. Project building with installed maven√æ√æ`mvn clean install`√æ√æ1-2. Project building with maven wrapper√æ√æ`./mvnw clean install`√æ√æ2-1. Spring server executing with installed maven√æ√æ`mvn jetty:run` √æ√æ2-2. Spring server executing with maven wrapper√æ√æ`./mvnw jetty:run`√æ√æIt is recommended to use the other port number(9797) with parameter √æ√æ`mvn jetty:run ""-Djetty.port=9797""` √æ   √æ √æ## Running√æ√æ1) Clone the project√æ2) Go into the cloned project folder and build the project with `mvn clean install`.√æ3) Run the server with `mvn jetty:run` (Change the port as you want.). √æ√æ√æ## Built With√æ√æ* [Maven](https://maven.apache.org/) - Dependency Management√æ* [Spring Framework 4.0](https://spring.io/) - Java web framework√æ* [h2gis](http://www.h2gis.org/) - Embedded Database√æ√æ## How to make http request√æ√æIt is explained at the wiki.  √æ√æ√æ## Authors√æ√æ* Hyemi Jeong - IndoorGML CRUD DAO developer stemlab@pnu.edu√æ* Hyung-Gyu Ryoo - IndoorGML Restful API developer hgryoo@pnu.edu√æ* Do-Hoon Kang - InFactory server developer and maintainer dhkang@pnu.edu√æ√æ## Contributing√æ√æPlease refer to each project's style guidelines and guidelines for submitting patches and additions. In general, we follow the ""fork-and-pull"" Git workflow.√æ√æ1) Fork the repo on GitHub√æ2) Clone the project to your own machine√æ3) Commit changes to your own branch√æ4) Push your work back up to your fork√æ5) Submit a Pull request so that we can review your changes√æNOTE: Be sure to merge the latest from ""upstream"" before making a pull request!√æ√æ## License √æ√æThis project is under the MIT License - see the [LICENSE](https://github.com/STEMLab/InFactory/blob/master/LICENSE)√æ√æ## More Information√æ√æMore information is found at [Wiki](https://github.com/STEMLab/InFactory/wiki)."
SuperiorOS/android_packages_apps_Settings,405545,1,0,7,Organization,False,Tipical Android Settings ü§∑‚Äç‚ôÇÔ∏è,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",16,Java,"{'': 4, 'mk': 2, 'xml': 2, 'cfg': 1, 'flags': 1, 'py': 1}",53956,2,0,323,0,4262,True,0,0,0,0,0,5,0,0,8,0,10,48,9996,1172,0,0,171,4,,,
larseknu/OOP_V2018,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
tinyMediaManager/scraper-animated,53,0,4,1,Organization,False,,,,7,Java,"{'': 4, 'xml': 1}",15,1,2,2,0,1180,False,,,,,0,0,0,0,7,0,0,0,0,0,0,0,29,1,,,
MaritimeConnectivityPlatform/mc-serviceregistry,11236,0,6,1,Organization,False,"MCP Service Registry, developed under the Horizon 2020 Project EfficienSea2, cofunded by the European Union.",,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",24,Java,"{'': 8, 'json': 4, 'yml': 1, 'docx': 1, 'md': 1, 'txt': 1, 'js': 1, 'jh': 1, 'cmd': 1, 'xml': 1, 'sh': 1}",109,7,15,4,0,1336,True,0,0,0,0,1,1,0,0,8,0,0,0,0,0,0,0,18,2,,,"# Maritime Cloud Service Registry√æ√æThis is the Service Registry for the Maritime Cloud developed as part of the EfficienSea2 project.√æ√æ## Development√æ√æBefore you can build this project, you must install and configure the following dependencies on your machine:√æ√æ1. [Node.js][]: We use Node to run a development web server and build the project.√æ   Depending on your system, you can install Node either from source or as a pre-packaged bundle.√æ√æAfter installing Node, you should be able to run the following command to install development tools (like√æ[Bower][] and [BrowserSync][]). You will only need to run this command when dependencies change in package.json.√æ√æ    npm install√æ√æWe use [Gulp][] as our build system. Install the Gulp command-line tool globally with:√æ√æ    npm install -g gulp√æ√æRun the following commands in two separate terminals to create a blissful development experience where your browser√æauto-refreshes when files change on your hard drive.√æ√æ    ./mvnw√æ    gulp√æ√æBower is used to manage CSS and JavaScript dependencies used in this application. You can upgrade dependencies by√æspecifying a newer version in `bower.json`. You can also run `bower update` and `bower install` to manage dependencies.√æAdd the `-h` flag on any command to see how you can use it. For example, `bower update -h`.√æ√æ√æ## Building for production√æ√æTo optimize the mcsr client for production, run:√æ√æ    ./mvnw -Pprod clean package√æ√æThis will concatenate and minify CSS and JavaScript files. It will also modify `index.html` so it references√æthese new files.√æ√æTo ensure everything worked, run:√æ√æ    java -jar target/*.war√æ√æThen navigate to [http://localhost:8080](http://localhost:8080) in your browser.√æ√æ## Testing√æ√æUnit tests are run by [Karma][] and written with [Jasmine][]. They're located in `src/test/javascript/` and can be run with:√æ√æ    gulp test√æ√æUI end-to-end tests are powered by [Protractor][], which is built on top of WebDriverJS. They're located in `src/test/javascript/e2e`√æand can be run by starting Spring Boot in one terminal (`./mvnw spring-boot:run`) and running the tests (`gulp itest`) in a second one.√æ√æ## Continuous Integration√æ√æTo setup this project in Jenkins, use the following configuration:√æ√æ* Project name: `mcsr`√æ* Source Code Management√æ    * Git Repository: `git@github.com:xxxx/mcsr.git`√æ    * Branches to build: `*/master`√æ    * Additional Behaviours: `Wipe out repository & force clone`√æ* Build Triggers√æ    * Poll SCM / Schedule: `H/5 * * * *`√æ* Build√æ    * Invoke Maven / Tasks: `-Pprod clean package`√æ    * Execute Shell / Command:√æ        ````√æ        ./mvnw spring-boot:run &√æ        bootPid=$!√æ        sleep 30s√æ        gulp itest√æ        kill $bootPid√æ        ````√æ* Post-build Actions√æ    * Publish JUnit test result report / Test Report XMLs: `build/test-results/*.xml,build/reports/e2e/*.xml`√æ√æ[JHipster]: https://jhipster.github.io/√æ[Node.js]: https://nodejs.org/√æ[Bower]: http://bower.io/√æ[Gulp]: http://gulpjs.com/√æ[BrowserSync]: http://www.browsersync.io/√æ[Karma]: http://karma-runner.github.io/√æ[Jasmine]: http://jasmine.github.io/2.0/introduction.html√æ[Protractor]: https://angular.github.io/protractor/"
AlirezaAzadbakht/Machine-Vision,2869,1,0,2,User,False,Projects of SBU Machine Vision course   ,,,6,Java,{'md': 1},163,1,0,2,0,605,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,21,,6,,"# Machine Vision course√æ### Shahid Beheshti University √æ    Alireza Azadbakht | Alireza Javaheri√æ    √æthis course contains four main projects and one research:√æ√æ## 1. Filters√æin this project, we try to implement 3 main filters and transformations in machine vision and an implementation of convolution:√æ SOBEL FILTER√æ& CANNY FILTER√æ& HOUGH TRANSFORMATION  √æ[Readmore](https://github.com/AlirezaAzadbakht/Machine-Vision/tree/master/Filters)√æ√æ## 2. sift algorithm√æin this project , we implement scale-invariant feature transform (SIFT) a feature detection algorithm .√æ[Readmore](https://github.com/AlirezaAzadbakht/Machine-Vision/tree/master/sift-algorithm)√æ√æ## 3. Bag of Visual Words√æin this project, we follow the steps in Wikipedia and toward data science post about BoVW to implement this method in object recognition √æ[Readmore](https://github.com/AlirezaAzadbakht/Machine-Vision/tree/master/Bag-of-Visual-Words)√æ√æ## 4. Convolutional neural network√æin this project, we try to use tensorflow api to create a Convolutional neural networkto work with mnist data set and get results√æ[Readmore](https://github.com/AlirezaAzadbakht/Machine-Vision/tree/master/Convolutional-neural-network-mnist-project)√æ√æ## 5. Recurrent neural network [Research]√æ our task here was to reasearch about Recurrent neural networks and their aplications √æ[Readmore](https://github.com/AlirezaAzadbakht/Machine-Vision/tree/master/Recurrent-neural-network)"
Xtended-Pie/frameworks_opt_telephony,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
earlaras/alphapixel,3445,1,0,1,User,False,,,,2,Java,{'md': 1},2,3,0,1,0,601,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,2,,0,,# alphapixel
vre4eic/vreportal,14535,0,2,1,Organization,False,,,,5,Java,"{'': 1, 'md': 1, 'xml': 2}",386,1,0,2,0,986,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,19,0,,,"<img src=""https://github.com/vre4eic/vreportal/blob/master/src/main/resources/static/images/AQub.2Qubes.v2.png"" width=""100"">√æ√æ# VRE4EIC Portal - AQuB√æThis is a platform that facilitates the exploration, discovery and management of semantic metadata. It incorporates a multitude of features on top of an intuitive and user friendly environment, in order for both novice and expert users to execute complex queries. The platform is agnostic to the underlying conceptual model, yet it can be configured to take advantage of the main concepts designed.√æ√æ## Technologies Used√æ√æ- **Spring Boot** ‚Äì A project built on the top of the Spring framework. It provides a simpler and faster way to set up, configure, and run both simple and web-based (Spring Web MVC) applications;√æ- **AngularJS** - A structural framework for dynamic web apps based on HTML and JavaScript;√æ- **Material Design & Bootstrap-UI** - UI component frameworks;√æ- **H2** ‚Äì A relational database management system written in Java, that can be embedded in Java applications;√æ√æ## Requirements√æRegarding the execution environment, only Java 8 or above has to be installed.√æ√æThe VRE4EIC Portal communicates with two independent components that need to be running.√æThese components are:√æ- [EVREMetadata Services](https://github.com/vre4eic/EVREMetadataServices), responsible for querying/importing data; and√æ- [Node Service](https://github.com/vre4eic/NodeService), responsible for the user authentication, RBAC and user profiling √æ√æFor that communication to be achieved, a minimum configuration, to be applied on two property files, is required. These property files are i) [application.property](https://github.com/vre4eic/vreportal/blob/master/src/main/resources/application.properties), and ii) [config.property](https://github.com/vre4eic/vreportal/blob/master/src/main/resources/config.properties)√æ√æAs an initial and minimal configuration, please edit the values at the properties√æ√æ#### config.property:√æ- **service.url** (the URI of the EVREMetadataServices component)√æ- **uri.prefix** (the prefix of the URIs of the entities that should be resolvable through the URI Reslover Component. A similar configuration parameter is available for that component and the two configuration parameters should actually match)√æ- **portal.state** (can be either ‚Äúpublic‚Äù denoting that this is a public running instance where users cannot set their own user roles or ‚Äúprivate‚Äù denoting that this is an instance where users can set their own user roles. ‚Äúpublic‚Äù should be used in most cases)√æ#### application.property:√æ- **spring.datasource.url** (the URL of the H2 database where to connect (i.e. jdbc:h2:~/evre;DB_CLOSE_ON_EXIT=FALSE))√æ√æ## Installation Instructions√æSince this is a maven web application, it can easily be deployed by first creating the big fat JAR and then executing it. The application includes an embedded Jetty server container and thus requires nothing more. Finally, the portal uses an external H2 lightweight relational SQL database for managing portal‚Äôs and users‚Äô configuration options.√æSteps:√æ√æ1. Create the H2 database by executing the java file by running the java command: <br/>>> java H2Manager.java√æ2. The JAR can be created by running the maven command: <br/>>> mvn package√æ3. The JAR is executed by running the Java command: <br/>>> java -jar <Name_Of_The_JAR.jar><br/> √æThe port to be used can also be defined by using the argument ‚Äúserver.port‚Äù√æFor example:<br/>java -jar vreportal-0.0.1-SNAPSHOT.jar --server.port=8099"
RodrigoDavy/PixelArtist,702,19,3,7,User,False,A simple app for doing Pixel Art on Android and having fun,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",105,1,4,4,0,933,True,2,7,0,0,0,25,0,0,8,0,0,0,0,0,0,0,14,,9,,"# Pixel Artist√æA simple app for creating pixel art and having fun.√æ√æBuilt using Android Studio.√æ√æSpecial thanks to Marco (the Pineapple) from Spain for helping me with the Spanish translation! :)√æ√æ[<img src=""https://fdroid.gitlab.io/artwork/badge/get-it-on.png""√æ     alt=""Get it on F-Droid""√æ     height=""80"">](https://f-droid.org/packages/rodrigodavy.com.github.pixelartist/)√æ√æIf you want to see some art I made (or share some) with this app, there's [this Telegram channel](https://t.me/PixelArtistAndroid).√æIf you want to PM me to talk, feel free to message @GladiadorDePlastico :)√æ√æ√æ## Features:√æ- Color your pixels by pressing them (duh!)√æ- Create, save, open and export your art (options available in the upper action bar)√æ√æ√æ## Hidden tips:√æ- Long pressing one of the 16 predefined colors in the lower bar will let you redefine it√æ- Long pressing one of the pixels will let you ""pick"" that color as the current one"
zaclimon/Tsutaeru,18529,13,6,20,User,False,Android TV experience for any Xtream Codes based provider,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",491,2,5,2,0,1109,True,5,7,1,0,0,0,0,0,7,0,0,0,0,0,0,0,42,,50,,"# Tsutaeru√æ√æ[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://github.com/zaclimon/Tsutaeru/blob/master/LICENSE)√æ√æBased on the Japanese word ""‰ºù„Åà„Çã"", (to transmit) Tsutaeru simplifies IPTV watching experience for Xtream Codes based providers only on Android TV. All of this in one's home sweet home.√æ√æ## Download√æ√æ[<img alt=""Get it on Google Play"" height=""80"" src=""https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png"">](https://play.google.com/store/apps/details?id=com.zaclimon.tsutaeru)√æ√æ## Screenshots√æ√æ![First screenshot](./art/screenshots/1.png)√æ![Second screenshot](./art/screenshots/2.png)√æ![Third screenshot](./art/screenshots/3.png)√æ√æ## Getting started for development√æ√æ- `git clone https://github.com/zaclimon/Tsutaeru`√æ- Open in Android Studio√æ- Enjoy!√æ√æ### Getting xipl working√æ√æYou might want to get [xipl](https://github.com/zaclimon/xipl) running alongside Tsutaeru for developping new features. (Live TV, UI or Playback) If that's the case, do the following:√æ√æ1. Clone xipl√æ√æ    `git clone https://github.com/zaclimon/xipl`√æ2. Modify `settings.gradle` to configure xipl and tiflibrary√æ    ```groovy√æ    include ':app', ':xipl', ':tiflibrary'√æ    project (':xipl').projectDir = new File('path/to/xipl')√æ    project (':tiflibrary').projectDir = new File('path/to/tiflibrary')√æ    ```√æ3. In the app's `build.gradle`√æ    ```groovy√æ    // Remove or comment this line√æ    implementation 'com.zaclimon:xipl:x.y.z'√æ    // Add this line√æ    implementation project(':xipl')√æ    ```√æ√æ## License√æ√æ    Copyright (C) 2018 Isaac Pateau√æ√æ    This program is free software: you can redistribute it and/or modify√æ    it under the terms of the GNU General Public License as published by√æ    the Free Software Foundation, either version 3 of the License, or√æ    (at your option) any later version.√æ√æ    This program is distributed in the hope that it will be useful,√æ    but WITHOUT ANY WARRANTY; without even the implied warranty of√æ    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the√æ    GNU General Public License for more details.√æ√æ    You should have received a copy of the GNU General Public License√æ    along with this program.  If not, see <http://www.gnu.org/licenses/>."
xinwucwp/osv,443588,32,11,16,User,False,Automatic fault interpretation with optimal surface voting,,,10,Java,"{'': 3, 'md': 1, 'gradle': 1}",136,1,0,1,0,647,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,14,,247,,"## Automatic fault interpretation with optimal surface voting√æ√æ#### This work will be presented at the 2018 SEG annual meeting:√æ√æ#### Presentation Date and Time: October 17, 2018 from 8:30 AM to 8:55 AM√æ#### Session Room: 210A (Anaheim Convention Center), in the Anaheim Convention Center√æ---√æThis repository contains computer programs written and used by √æ[Xinming Wu](http://www.jsg.utexas.edu/wu/) √æfor 2D and 3D fault interpretation that is discussed in our Geophysics paper √æ[Automatic fault interpretation with optimal surface voting](http://www.jsg.utexas.edu/wu/files/wu2018automaticFaultInterpretationWithOptimalSurfaceVotingLow.pdf).√æ√æIf you find this work helpful in your research, please cite:√æ√æ    @article{wu2018automatic,√æ        author = {Xinming Wu and Sergey Fomel},√æ        title = {Automatic fault interpretation with optimal surface voting},√æ        journal = {GEOPHYSICS},√æ        volume = {83},√æ        issue = {5},√æ        pages = {O67-O82},√æ        year = {2018},√æ        doi = {10.1190/GEO2018-0115.1},√æ        URL = {https://library.seg.org/doi/abs/10.1190/geo2018-0115.1},√æ    }√æ√æ### Summary√æ√æIf you want to do more than browse the source code, you must first download √æand build the package using [Gradle](https://gradle.org/).√æ√æHere are brief descriptions of key components:√æ√æ#### OptimalSurfaceVoter√æComputes optimal voting surfaces, voting scores and a final 3D voting score map.√æ√æ#### OptimalPathVoter√æComputes optimal voting paths, voting scores and a final 2D voting score map.√æ√æ#### FaultOrientScanner2√æQuickly scan for approximate fault dips in 2D√æ√æ#### FaultOrientScanner3√æQuickly scan for approximate fault strikes and dips in 3D√æ√æ#### FaultSkinner√æAutomatically construct fault skins/surfaces from a final voting score map√æ√æ#### FaultSkin√æA simple linked data structure to represent a fault surface as discussed √æby [Wu and Hale (2016)](http://www.jsg.utexas.edu/wu/files/wu2016SeismicImageProcessingForFaults.pdf)√æ√æ### Run a demo√æ1) download the [3D seismic data ""xs.dat""](https://drive.google.com/open?id=1InfMvCSZWdJclykiTBIXDgV7HYdBj5_K) into the folder ./data/3d/f3d/√æ√æ2) go to ./src/osv/ and type ./jy demoF3d.py to run a test on the F3 dataset√æ√æ---√æ## Examples√æ√æ2D and 3D examples published in the [paper](http://www.jsg.utexas.edu/wu/files/wu2018automaticFaultInterpretationWithOptimalSurfaceVotingLow.pdf).√æ√æ### 2D examples√æ√æ#### 1) F3 data in Figures 7 and 8 (provided by the Dutch Government through TNO and dGB Earth Sciences)√æ√æDimensions: n1=380, n2=591√æ√æData type:  binary with BIG_ENDIAN√æ√æSeismic: ./data/2d/f3d/gx56.dat√æ√æLinearity: ./data/2d/f3d/ep56.dat√æ√æOSV fault: ./data/2d/f3d/fv.dat√æ√æThinned OSV fault: ./data/2d/f3d/fvt.dat√æ√æ<p align=""left"">√æ  <img src=""png/2d/f3d/seis.png"" width=""400px"" height=""300px""/>√æ  <img src=""png/2d/f3d/epm.png"" width=""400px"" height=""300px""/>√æ</p>√æ<p align=""center"">√æ  seismic time/depth slice (left) and 1-planarity (input for optimal path voting)√æ</p>√æ<p align=""left"">√æ  <img src=""png/2d/f3d/fv.png"" width=""400px"" height=""300px""/>√æ  <img src=""png/2d/f3d/fvt.png"" width=""400px"" height=""300px""/>√æ</p>√æ<p align=""center"">√æ  optimal path voting faults before (left) and after (right) thinning√æ</p>√æ√æ#### 2) Campos data in Figure 9 (seismic data was provided by [Dr. Michael Hudec](http://www.beg.utexas.edu/people/michael-hudec))√æDimensions: n1=300, n2=550√æ√æData type:  binary with BIG_ENDIAN√æ√æSeismic: ./data/2d/campos/gx373.dat√æ√æOSV fault: ./data/2d/campos/fv.dat√æ√æThinned OSV fault: ./data/2d/campos/fvt.dat√æ√æ<p align=""left"">√æ  <img src=""png/2d/campos/gx.png"" width=""400px"" height=""300px""/>√æ  <img src=""png/2d/campos/fl.png"" width=""400px"" height=""300px""/>√æ</p>√æ√æ   ---------------------seismic image (left) and fault likelihood ([Hale, 2013](https://library.seg.org/doi/10.1190/geo2012-0331.1); [Wu and Hale, 2016](https://library.seg.org/doi/10.1190/geo2015-0380.1))-----------------------√æ<p align=""left"">√æ  <img src=""png/2d/campos/el.png"" width=""400px"" height=""300px""/>√æ  <img src=""png/2d/campos/fv.png"" width=""400px"" height=""300px""/>√æ</p>√æ<p align=""center"">√æ  input 1-linearity (left) and output optimal path voting faults (right)√æ</p>√æ√æ#### 3) Costa Rica data in Figure 10 (acquired in the subduction zone, Costa Rica Margin, provided by [Dr. Nathan Bangs](https://ig.utexas.edu/staff/nathan-bangs/))√æ√æDimensions: n1=210, n2=825√æ√æData type:  binary with BIG_ENDIAN√æ√æSeismic: ./data/2d/crf/gx3366.dat√æ√æOSV fault: ./data/2d/crf/fv.dat√æ√æThinned OSV fault: ./data/2d/crf/fvt.dat√æ√æFault likelihood: ./data/2d/crf/fl.dat√æ√æThinned fault likelihood: ./data/2d/crf/flt.dat√æ√æ<p align=""left"">√æ  <img src=""png/2d/crf/gx.png"" width=""400px"" height=""200px""/>√æ  <img src=""png/2d/crf/fl.png"" width=""400px"" height=""200px""/>√æ</p>√æ√æ   ---------------------seismic image (left) and fault likelihood ([Hale, 2013](https://library.seg.org/doi/10.1190/geo2012-0331.1); [Wu and Hale, 2016](https://library.seg.org/doi/10.1190/geo2015-0380.1))-----------------------√æ<p align=""left"">√æ  <img src=""png/2d/crf/el.png"" width=""400px"" height=""200px""/>√æ  <img src=""png/2d/crf/fvt.png"" width=""400px"" height=""200px""/>√æ</p>√æ<p align=""center"">√æ  input 1-linearity (left) and output optimal path voting faults (right)√æ</p>√æ√æ---√æ### 3D examples√æ√æ#### 1) F3 data in Figure 11 (provided by the Dutch Government through TNO and dGB Earth Sciences)√æThe datasets can be downloaded from: https://drive.google.com/open?id=1InfMvCSZWdJclykiTBIXDgV7HYdBj5_K√æ√æDimensions: n1=100, n2=400, n3=420;√æ√æData type:binary with BIG_ENDIAN√æ√æSeismic: xs.dat;   √æ√æInput planarity: ep.dat√æ√æOutput OSV fault: fv.dat√æ√æThinned OSV fault: fvt.dat√æ√æFault likelihood: fl.dat√æ√æ<p align=""left"">√æ  <img src=""png/3d/f3d/seis.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/f3d/fl.png"" width=""400px"" height=""350px""/>√æ</p>√æ√æ   ---------------------seismic image (left) and fault likelihood ([Hale, 2013](https://library.seg.org/doi/10.1190/geo2012-0331.1); [Wu and Hale, 2016](https://library.seg.org/doi/10.1190/geo2015-0380.1))-----------------------√æ<p align=""left"">√æ  <img src=""png/3d/f3d/ep.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/f3d/fv.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  input 1-planarity (left) and output optimal surface voting (OSV) fault (right)√æ</p>√æ√æ<p align=""left"">√æ  <img src=""png/3d/f3d/fvt.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/f3d/skinv.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  thinned OSV fault (left) and automatic fault surfaces colored by fault strike (right)√æ</p>√æ√æ#### 2) Clyde data in Figures 14 and 15 (provided by Clyde through Paradigm)√æThe datasets can be downloaded from:√æhttps://drive.google.com/open?id=10x1uO-GBJekmD2wS7S6VFbVsrxGXzMCC√æ√æDimensions: n1=400, n2=801, n3=300√æ√æData type:binary with BIG_ENDIAN√æ√æSeismic: gx.dat√æ√æOSV fault: fv.dat√æ√æ<p align=""left"">√æ  <img src=""png/3d/clyde/seis.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/clyde/fl.png"" width=""400px"" height=""350px""/>√æ</p>√æ√æ   ---------------------seismic image (left) and fault likelihood ([Hale, 2013](https://library.seg.org/doi/10.1190/geo2012-0331.1); [Wu and Hale, 2016](https://library.seg.org/doi/10.1190/geo2015-0380.1))-----------------------√æ<p align=""left"">√æ  <img src=""png/3d/clyde/ep.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/clyde/fv.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  input 1-planarity (left) and output OSV fault (right)√æ</p>√æ√æ<p align=""left"">√æ  <img src=""png/3d/clyde/fvt.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/clyde/skinv.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  thinned OSV fault (left) and automatic fault surfaces colored by fault strike (right)√æ</p>√æ√æ#### 3) Costa Rica data in Figure 16 (acquired in the subduction zone, Costa Rica Margin, provided by Nathan Bangs)√æThe datasets can be downloaded from: https://drive.google.com/open?id=1fjZuonXYc55ytiKiFboUVkQWVRbht0yQ√æ√æDimensions: n1=210, n2=920, n3=825;√æ√æData type:binary with BIG_ENDIAN√æ√æSeismic: gx.dat;   √æ√æOSV fault: fv.dat; √æ√æThinned OSV fault: fvt.dat; √æ√æ<p align=""left"">√æ  <img src=""png/3d/crf/sub1/seis.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/crf/sub1/fvt.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  seismic image (left) and thinned OSV fault (right)√æ</p>√æ√æ<p align=""left"">√æ  <img src=""png/3d/crf/sub3/seis.png"" width=""400px"" height=""350px""/>√æ  <img src=""png/3d/crf/sub3/fvt.png"" width=""400px"" height=""350px""/>√æ</p>√æ<p align=""center"">√æ  seismic image (left) and thinned OSV fault (right)√æ</p>√æ√æ---√æCopyright (c) 2018, Xinming Wu. All rights reserved.√æThis software and accompanying materials are made available under the terms of√æthe [Common Public License - v1.0](http://www.eclipse.org/legal/cpl-v10.html),√æwhich accompanies this distribution."
OpenBD/openbd-core,82561,18,13,11,Organization,False,The original open source Java powered GPL CFML runtime engine,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",12,Java,"{'': 4, 'yml': 1, 'txt': 2, 'md': 1, 'png': 1}",194,6,21,7,0,1905,True,12,35,0,0,0,37,0,0,7,0,0,0,0,0,0,0,7,3,,,"<p align=""center"">√æ  <img src=""openBD_logo_788x150px.png"">√æ</p>√æ√æOpenBD is the worlds first truly open source and free GPLv3.0 Java CFML runtime.   OpenBD has a long legacy, first created in 2000, it is still going strong with active additions and fixes.√æ√æ### Official Website√æ√æThe official website for OpenBD is located:√æ√æhttp://openbd.org/√æ√æHere you will find the manual for both OpenBD and the CFML tags.   You can obtain the nightly build as well as the established releases http://openbd.org/downloads/√æ√æ### Running OpenBD√æ√æYou can run OpenBD quickly without all the hassle of setting and configuring a JEE server.   Use the [JettyDesktop launcher](https://github.com/aw20/jettydesktop) - instructions on use located at the [JettyDesktop Wiki](https://github.com/aw20/jettydesktop/wiki).   This will run the OpenBD WAR file easily and quickly.√æ√æ### Official Support √æ√æOpenBD is owned and maintained by aw2.0 Ltd.  Official support subscriptions can be purchased from aw2.0 Ltd. √æ√æFor more details visit: http://www.aw20.co.uk/openbd/√æ√æ### Community Mailing List√æ√æAn active Google Groups list can be found: https://groups.google.com/forum/#!forum/openbluedragon√æ√æ### Building OpenBD√æ√æYou will require the following tools to be able to build OpenBD from source:√æ√æ* Java Developers Kit Virtual Machine 8√æ* Apache Ant (http://ant.apache.org/)√æ√æOptional, OpenBD source drop includes an Eclipse project to enable building and debugging under the Eclipse IDE (http://www.eclipse.org/).   All files required to build the core OpenBD JAR/WAR is contained within this GitHub project.√æ√æAll the necessary scripts and resources are in the ./build/ folder.   The build.xml will build the core WAR file, the OpenBlueDragon.jar file as well as popping in the manual if you desire.√æ√æ* ant compile√æ* ant war√æ* ant war-with-manual√æ√æIf you are just updating the core OpenBD JAR file in an already existing installation then 'ant compile' will create the file: ./build/targets/OpenBlueDragon.jar.   You can then drop this file over the top of an existing installation if you are say upgrading a minor update.  The ReleaseNotes.txt will indicate if a full /WEB-INF/lib/ folder update is required.√æ√æ'ant war' will build a standard JEE WAR file that can be dropped into any JEE application server, such as Jetty, Tomcat or JBoss.  'ant war-with-manual' will build the standard JEE war but will also pull in the latest 'openbd-manual' (https://github.com/OpenBD/openbd-manual) and add that as part of the distribution.√æ√æAll output from the ant scripts will be in the /build/targets/"
Nastel/tnt4j-streams-zorka,2784,0,11,2,Organization,False,TNT4J transaction & method tracing streams for java,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",10,Java,"{'': 2, 'md': 1, 'xml': 2}",258,1,9,5,5,1602,True,0,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,24,1,,,"# tnt4j-streams-zorka√æTNT4J transaction &amp; method tracing streams for Java.√æ√æTNT4J-Streams-Zorka is an extension of TNT4J-Streams to provide the streaming of Zorka traces as activity events to [jKoolCloud](https://www.jkoolcloud.com).√æ√æTNT4J-Streams-Zorka is under GPLv3 license as Zorka itself.√æ√æThis document covers only information specific to TNT4J-Streams-Zorka project.√æDetailed information on TNT4J-Streams can be found in [README document](https://github.com/Nastel/tnt4j-streams/blob/master/README.md).√æ√æImporting TNT4J-Streams-Zorka project into IDE√æ======================================√æ√æ## Eclipse√æ* Select File->Import...->Maven->Existing Maven Projects√æ* Click 'Next'√æ* In 'Root directory' field select path of directory where you have downloaded (checked out from git)√æTNT4J-Streams project√æ* Click 'OK'√æ* Dialog fills in with project modules details√æ* Click 'Finish'√æ√æRunning TNT4J-Streams-Zorka√æ======================================√æ√æAlso see TNT4J-Streams README document chapter ['Running TNT4J-Streams'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#running-tnt4j-streams).√æ√æ## TNT4J-Streams-Zorka can be run√æ* As standalone application√æ    * write streams configuration file. See ['Streams configuration'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#streams-configuration) chapter for more details√æ    * configure your loggers√æ    * use `bin/tnt4j-streams.bat` or `bin/tnt4j-streams.sh` to run standalone application√æ* As API integrated into your product√æ    * Write streams configuration file. See ['Streams configuration'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#streams-configuration) chapter for more details√æ    * use `StreamsAgent.runFromAPI(configFileName)` in your code√æ* As Java agent attached to running JVM√æ    * use `bin/zorka-attach.bat` or `bin/zorka-attach.sh` to attach to running JVM and continue as standalone application√æ√æ## Samples√æ√æ### Running samples√æWhen release assemblies are built, samples are located in [`samples`](./samples/) directory, e.g.,√æ`../build/tnt4j-streams-zorka/tnt4j-streams-zorka-1.0.0/samples`.√æTo run desired sample:√æ* go to sample directory√æ* run `run.bat` or `run.sh` depending on your OS√æ√æFor more detailed explanation of streams and parsers configuration and usage see chapter ['Configuring TNT4J-Streams-Zorka'](#configuring-tnt4j-streams-zorka)√æand JavaDocs.√æ√æ#### Zorka Connector√æ√æThis sample shows how to stream activity events from Zorka produced traces data. The Zorka connector connects to the Zico [1] service √æas a  listener (client) dependent on the defined configuration. Default is `localhost:8640`. The most basic way to use the sample is to √æsend an HTTP request to a Zorka monitored Tomcat server.√æ√æ**NOTE [1]:** Interesting derivation of the name Zico: Zico is the nickname of the Zorka data collector, which collects data from Zorka √æagents. The collector listener port number 8640 decimal is hex 0x21C0, in which the '2' looks like the letter 'Z' and the '1' looks like the √æletter 'I'. Thus, the hex number looks like the word 'ZICO' and the collector is referred to as 'ZICO', 'Zico' or 'zico'.√æSee [Zico install manual](http://zorka.io/p/docs/install/monitor/zico/).√æ√æSample files can be found in [`samples/ZorkaConnector`](./samples/ZorkaConnector/) directory.√æ√æHow to use and configure Zorka, see [`samples/ZorkaConnector/readme.md`](samples/ZorkaConnector/readme.md).√æ√æSample stream configuration:√æ```xml√æ<?xml version=""1.0"" encoding=""utf-8""?>√æ<tnt-data-source√æ        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""√æ        xsi:noNamespaceSchemaLocation=""https://raw.githubusercontent.com/Nastel/tnt4j-streams/master/config/tnt-data-source.xsd"">√æ√æ    <parser name=""JMSSendMessageParserStage1"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityNameValueParser"">√æ        <property name=""EntryPattern""><![CDATA[(?<key>\w*)=(?<value>\w*)]]></property>√æ√æ        <field name=""jid"" locator=""jid"" locator-type=""label""/>√æ        <field name=""type"" locator=""type"" locator-type=""label""/>√æ        <field name=""time"" locator=""time"" locator-type=""label""/>√æ        <field name=""id"" locator=""id"" locator-type=""label""/>√æ        <field name=""cid"" locator=""cid"" locator-type=""label""/>√æ        <field name=""tag"" locator=""tag"" locator-type=""label""/>√æ        <field name=""from"" locator=""from"" locator-type=""label""/>√æ        <field name=""mode"" locator=""mode"" locator-type=""label""/>√æ        <field name=""pri"" locator=""pri"" locator-type=""label""/>√æ        <field name=""ttl"" locator=""ttl"" locator-type=""label""/>√æ        <field name=""keys"" locator=""keys"" locator-type=""label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaKafka"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""ResourceName"" locator=""TOPIC"" locator-type=""Label""/>√æ        <field name=""EventName"" locator=""MARKER"" locator-type=""Label""/>    <!-- method value-->√æ√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentId"" locator=""ParentId"" locator-type=""Label""/>√æ√æ        <field name=""value"" locator=""VALUE"" locator-type=""Label"" transparent=""true"">√æ            <parser-ref name=""JMSSendMessageParserStage1""/>√æ        </field>√æ√æ        <field name=""Correlator"" locator=""jid"" locator-type=""activity""/>√æ√æ        <field name=""parser"" value=""ZorkaKAFKA""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaHTTP"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" separator="","">√æ            <field-locator locator=""MARKER"" locator-type=""Label""/>√æ            <field-locator locator=""HdrIn__cookie"" locator-type=""Label""/>√æ            <field-locator locator=""HdrIn__user-agent"" locator-type=""Label""/>√æ        </field>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""ResourceName"" locator=""HdrIn__Referer"" locator-type=""Label"" formattingPattern=""HTTP={0}""/>√æ        <field name=""EventName"" locator=""MARKER"" locator-type=""Label""/>    <!-- method value-->√æ√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""JK_CORR_RID"" locator-type=""Label""/>√æ            <field-locator locator=""JK_CORR_SID"" locator-type=""Label""/>√æ            <!--<field-locator locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentId"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        <field name=""SESSIONID"" locator=""JSESSIONID"" locator-type=""Label""/>√æ        <field name=""Location"" separator="""">√æ            <field-locator locator=""HdrIn__host"" locator-type=""Label""/>√æ        </field>√æ√æ        <field name=""CompCode"" locator=""STATUS"" locator-type=""Label"">√æ            <field-map source=""100:206"" target=""SUCCESS"" type=""Range""/>√æ            <field-map source=""300:308"" target=""SUCCESS"" type=""Range""/>√æ            <field-map source=""400:417"" target=""ERROR"" type=""Range""/>√æ            <field-map source=""500:511"" target=""ERROR"" type=""Range""/>√æ        </field>√æ        <field name=""Severity"" locator=""STATUS"" locator-type=""Label"">√æ            <field-map source=""100:206"" target=""INFO"" type=""Range""/>√æ            <field-map source=""300:308"" target=""INFO"" type=""Range""/>√æ            <field-map source=""400:417"" target=""ERROR"" type=""Range""/>√æ            <field-map source=""500:511"" target=""ERROR"" type=""Range""/>√æ        </field>√æ        <field name=""ReasonCode"" locator=""STATUS"" locator-type=""Label""/>√æ        <field name=""parser"" value=""ZorkaHTTP""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaSQL"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ√æ        <filter name=""APPL Filter"">√æ            <expression handle=""exclude"" lang=""groovy""><![CDATA[√æ                ${ApplName} == ""SERVER""√æ            ]]></expression>√æ        </filter>√æ√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""CompCode"" locator=""ERROR"" locator-type=""Label"">√æ            <field-map source=""YES"" target=""ERROR""/>√æ            <field-map source="""" target=""SUCCESS""/>√æ        </field>√æ√æ        <field name=""Severity"" locator=""ERROR"" locator-type=""Label"">√æ            <field-map source=""YES"" target=""ERROR""/>√æ            <field-map source="""" target=""INFO""/>√æ        </field>√æ√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""EventName"" value=""SQL execute""/>√æ        <field name=""Exception"" locator=""EXCEPTION"" locator-type=""Label""/>√æ√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""JK_CORR_RID"" locator-type=""Label""/>√æ            <field-locator locator=""JK_CORR_SID"" locator-type=""Label""/>√æ            <!--<field-locator locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ√æ        <field name=""ResourceName"" locator=""DB"" locator-type=""Label"" formattingPattern=""DATASTORE={0}""/>√æ√æ        <field name=""Message"" separator="","">√æ            <field-locator locator=""SQL"" locator-type=""Label""/>√æ            <field-locator locator=""DB"" locator-type=""Label""/>√æ        </field>√æ√æ        <field name=""SQL"" locator=""SQL"" locator-type=""Label""/>√æ        <field name=""DB"" locator=""DB"" locator-type=""Label""/>√æ        <field name=""parser"" value=""ZorkaSQL""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaLDAP"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""EventName"" locator=""MARKER"" locator-type=""Label""/> <!-- method name value-->√æ√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""JK_CORR_RID"" locator-type=""Label""/>√æ            <field-locator locator=""JK_CORR_SID"" locator-type=""Label""/>√æ            <!--<field-locator locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ√æ        <field name=""ResourceName"" separator="","">√æ            <field-locator locator=""FILTER"" locator-type=""Label""/>√æ            <field-locator locator=""DC"" locator-type=""Label""/>√æ            <field-locator locator=""NAME"" locator-type=""Label""/>√æ        </field>√æ        <field name=""parser"" value=""ZorkaLDAP""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaWebService"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""EventName"" locator=""SOAP_METHOD"" locator-type=""Label""/>√æ√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""JK_CORR_RID"" locator-type=""Label""/>√æ            <field-locator locator=""JK_CORR_SID"" locator-type=""Label""/>√æ            <!--<field-locator locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ√æ        <field name=""ResourceName"" locator=""MARKER"" locator-type=""Label""/>  <!-- resource name value-->√æ√æ        <field name=""Message"" separator="","">√æ            <field-locator locator=""SOAP_ACTION"" locator-type=""Label""/>√æ            <field-locator locator=""SOAP_METHOD"" locator-type=""Label""/>√æ        </field>√æ        <field name=""parser"" value=""ZorkaWebServices""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaJMS"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""Exception"" locator=""EXCEPTION"" locator-type=""Label""/>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""ResourceName"" locator=""DESTINATION"" locator-type=""Label"" formattingPattern=""QUEUE={0}""/> <!-- queue/topic name -->√æ√æ        <field name=""METHOD"" locator=""METHOD"" locator-type=""Label""/>√æ        <field name=""EventName"" locator=""EVENT_NAME"" locator-type=""Label""> <!-- send/receive -->√æ            <field-transform name=""nameEvaluator"" lang=""groovy""><![CDATA[√æ                StringUtils.isEmpty($fieldValue) ? ${METHOD} : $fieldValue√æ            ]]></field-transform>√æ        </field>√æ√æ        <field name=""JanusMessageSignature"" locator=""JanusMessageSignature"" locator-type=""Label""/>√æ√æ        <field name=""ID"" locator=""ID"" locator-type=""Label"">√æ            <field-transform lang=""groovy""><![CDATA[√æ                $fieldValue == null ? null : $fieldValue - ""ID:""√æ            ]]></field-transform>√æ        </field>√æ√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""JK_CORR_RID"" locator-type=""Label""/>√æ            <field-locator locator=""JK_CORR_SID"" locator-type=""Label""/>√æ            <field-locator locator=""JanusMessageSignature"" locator-type=""Activity""/>√æ            <field-locator locator=""ID"" locator-type=""Activity""/>√æ            <!--<field-locator locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ√æ        <field name=""Message"" separator="","">√æ            <field-locator locator=""TEXT"" locator-type=""Label""/>√æ            <field-locator locator=""PRIORITY"" locator-type=""Label""/>√æ            <field-locator locator=""EXPIRATION"" locator-type=""Label""/>√æ            <field-locator locator=""PERSIST"" locator-type=""Label""/>√æ            <field-locator locator=""REDELIVERY"" locator-type=""Label""/>√æ        </field>√æ        <field name=""parser"" value=""ZorkaJMS""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaWebSocket"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <!--    <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/> -->√æ        <field name=""EventType"" locator=""EVENT_TYPE"" locator-type=""Label""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""CompCode"" locator=""ERROR"" locator-type=""Label"">√æ            <field-map source=""YES"" target=""ERROR""/>√æ            <field-map source="""" target=""SUCCESS""/>√æ        </field>√æ        <field name=""Severity"" locator=""ERROR"" locator-type=""Label"">√æ            <field-map source=""YES"" target=""ERROR""/>√æ            <field-map source="""" target=""INFO""/>√æ        </field>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <field name=""ResourceName"" value=""WebSocket""/> <!-- dynamic value-->√æ        <field name=""EventName"" value=""WebSocket""/> <!-- method name value -->√æ        <field name=""Exception"" locator=""EXCEPTION"" locator-type=""Label""/>√æ        <field name=""Correlator"" separator="","">√æ            <field-locator locator=""SESSION"" locator-type=""Label""/>√æ            <!--<field-locator locator=""MESSAGE_ID"" locator-type=""Label""/>-->√æ        </field>√æ        <field name=""SESSIONID"" locator=""SESSION"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <field name=""Message"" locator=""MSG"" locator-type=""Label""/>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""parser"" value=""ZorkaWebsocket""/>√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <parser name=""ZorkaTrace"" class=""com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser"">√æ        <field name=""ApplName"" locator=""ApplName"" locator-type=""Label""/>√æ        <field name=""EventType"" value=""CALL""/>√æ        <field name=""StartTime"" locator=""CLOCK"" datatype=""Timestamp"" locator-type=""Label""/>√æ        <field name=""Tag"" locator=""MARKER"" locator-type=""Label""/>√æ        <field name=""ElapsedTime"" locator=""METHOD_TIME"" datatype=""Number"" format=""###########0"" units=""Nanoseconds"" locator-type=""Label""/>√æ        <!--<field name=""ResourceName"" locator=""CLASS"" locator-type=""Label""/>-->√æ        <field name=""CLASS"">√æ            <field-locator locator=""CLASS"" locator-type=""Label""/>√æ            <field-locator locator=""Class"" locator-type=""Label""/>√æ        </field>√æ√æ        <field name=""Severity"" locator=""METHOD_FLAGS"" locator-type=""Label"">√æ            <field-map source=""0:127"" target=""INFO"" type=""Range""/>√æ            <field-map source=""128:"" target=""WARNING"" type=""Range""/>√æ        </field>√æ        <field name=""Exception"" locator=""EXCEPTION"" locator-type=""Label""/>√æ        <!-- <field name=""Method_Flags"" locator=""METHOD_FLAGS"" locator-type=""Label""/> -->√æ        <field name=""EventName"" locator=""METHOD"" locator-type=""Label""/>√æ        <field name=""MethodSignature"" locator=""SIGNATURE"" locator-type=""Label""/>√æ        <field name=""TrackingId"" locator=""TrackingId"" locator-type=""Label""/>√æ        <field name=""ParentID"" locator=""ParentId"" locator-type=""Label""/>√æ        <!--<field name=""Correlator"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/>-->√æ        <field name=""Level"" locator=""Level"" locator-type=""Label"" datatype=""Number""/>√æ        <!--ommit all the traces -->√æ        <!--<filter name=""Level Filter"">-->√æ        <!--<expression handle=""exclude"" lang=""groovy""><![CDATA[-->√æ        <!--${Level} > 1-->√æ        <!--]]></expression>-->√æ        <!--</filter>-->√æ        <field name=""parser"" value=""ZorkaTrace""/>√æ        <!--field name=""ParentId"" locator=""JK_ZORKA_PARENT_ID"" locator-type=""Label""/-->√æ        <field name=""all"" locator=""#"" locator-type=""Label""/>√æ    </parser>√æ√æ    <stream name=""ZorkaStream"" class=""com.jkoolcloud.tnt4j.streams.inputs.ZorkaConnector"">√æ        <property name=""HaltIfNoParser"" value=""false""/>√æ√æ        <!-- For trace records depth filtering, define the maximum number of stack trace entry events. A value of `0` streams the whole trace. -->√æ        <property name=""MaxTraceEvents"" value=""100""/>√æ√æ        <!-- For trace records filtering by methods execution time, use of Bollinger Bands is required -->√æ        <!--<property name=""Bollinger_K_times"" value=""3""/> -->√æ        <!--<property name=""Bollinger_N_period"" value=""20""/> -->√æ        <!--<property name=""BollingerRecalculationPeriod"" value=""3000""/> -->√æ√æ        <property name=""BuildSourceFQNFromStreamedData"" value=""true""/>√æ        <property name=""SourceFQN"" value=""APPL=${ApplName}#SERVER=${ServerName}#NETADDR=${ServerIp}""/>√æ√æ        <parser-ref name=""ZorkaHTTP"" tags=""HTTP_CLI_SEND,HTTP_CLI_RECEIVE,HTTP""/>√æ        <parser-ref name=""ZorkaSQL"" tags=""SQL""/>√æ        <parser-ref name=""ZorkaLDAP"" tags=""LDAP""/>√æ        <parser-ref name=""ZorkaWebService"" tags=""WS_TNT4J_STREAMS_TRACKER""/>√æ        <parser-ref name=""ZorkaJMS"" tags=""JMS_SEND,JMS_SEND2,JMS_TNT4J_STREAMS_TRACKER,JMS_RECEIVE""/>√æ        <parser-ref name=""ZorkaWebSocket"" tags=""WebSocket""/>√æ        <parser-ref name=""ZorkaTrace"" tags=""TRACE""/>√æ        <parser-ref name=""ZorkaKafka"" tags=""KAFKA_RECEIVE,KAFKA_SEND""/>√æ    </stream>√æ</tnt-data-source>√æ```√æ√æStream configuration states that `ZorkaConnector` referencing parsers `ZorkaHTTP`, `ZorkaSQL`, `ZorkaLDAP`, `ZorkaWebService`, `ZorkaJMS`, √æ`ZorkaWebSocket` and `ZorkaTrace` shall be used.√æ√æ`ZorkaConnector` connects to Zico service as configured using `Host` and `Port` properties. `HaltIfNoParser` property indicates that the √æstream should skip unparseable entries. `ZorkaConnector` transforms received Zorka trace entries to `Map` data structure and puts it to a √æbuffer queue to be processed by the referenced parsers. Note that the stream-parser mapping uses attribute `tags` to map dedicated trace √æparser over trace attribute `MARKER`.√æ√æ`ZorkaHTTP` parser is used to fill activity event fields from HTTP trace attributes map data. HTTP trace marker is `HTTP`, thus the parser √æ`tags` value should be the same.√æ√æ`ZorkaSQL` parser is used to fill activity event fields from SQL trace attributes map data. The 'tags' value is set to match the SQL trace √æmarker `SQL`.√æ√æ`ZorkaLDAP` parser is used to fill activity event fields from LDAP trace attributes map data. The 'tags' value is set to match the LDAP √ætrace marker `LDAP`.√æ√æ`ZorkaWebService` parser is used to fill activity event fields from Web Service trace attributes map data. The 'tags' value is set to match √æthe Web Service trace marker `WS_TNT4J_STREAMS_TRACKER`.√æ√æ`ZorkaJMS` parser is used to fill activity event fields from JMS trace attributes map data. The 'tags' value is set to match the JMS trace √æmarker `JMS_TNT4J_STREAMS_TRACKER`.√æ√æ`ZorkaWebSocket` parser is used to fill activity event fields from WebSocket trace attributes map data. The 'tags' value is set to match the √æWebSocket trace marker `WebSocket`.√æ√æ`ZorkaTrace` parser is used to fill activity event fields from Java method call trace attributes map data. The 'tags' value is set to match √æthe Java method call trace marker 'TRACE`.√æ√æActivity event mapped fields:√æ√æ * `EventType` is mapped from trace attribute named `EvType`. Some parsers sets static value `EVENT`.√æ * `StartTime` is mapped from trace attribute named `CLOCK`. Zorka returns this field as UNIX timestamp.√æ * `EventName` is mapped from trace attribute named `MARKER`.√æ * `ElapsedTime` is mapped from trace attribute named `METHOD_TIME`. Zorka returns this field as timestamp in nanoseconds.√æ * `Class` is mapped from trace attribute named `CLASS`. It represents class name of object the trace was taken from.√æ * `Method` is mapped from trace attribute named `METHOD`. It represents Java method name the trace was taken from.√æ * `Correlator` is mapped from trace attributes named `JK_CORR_RID`, `JK_CORR_SID` and `CORRELATION`. `JK_CORR_RID` and `JK_CORR_SID` values √æ are retrieved from initial HTTP request (see ContextTracker from TNT4J API). `CORRELATION` value is retrieved from JMS message field √æ `correlationId`.√æ * `Message` field may be mapped from different trace attribute values. If mapping is not defined in parser configuration, then this field √æ is filled with trace data as string.√æ * `TrackingId` is mapped from trace attribute named `TrackingId`. It represents a unique identifier of the activity event.√æ * `ParentId` is mapped from trace attribute named `ParentId`. It represents a unique identifier of the parent trace activity.√æ√æAdditional fields can be mapped on user demand.√æ√æCustom fields values defined in parser fields mapping can be found as activity event properties.√æ√æ**NOTE:** The stream stops only when a critical runtime error/exception occurs or an application gets terminated.√æ√æ##### Zorka Connector as Java agent√æ√æTo run the Zorka Connector sample using Zorka as an attached Java Agent, use `run-attach.bat` or `run-attach.sh` depending on your OS.√æ√æTo change the Zorka home directory, open the `.bat` or `.sh` file and change the first parameter of `zorka-attach` executable to the actual √æpath on your system.√æ√æ`zorka-attach` parameters: `zorka-attach zorkaAgentPath VMDescriptor`√æ * zorkaAgentPath - Zorka agent jar (`zorka*.jar`) path. (Required)√æ * VMDescriptor - Java VM name fragment/pid to attach to. (Required)√æ√æConfiguring TNT4J-Streams-Zorka√æ======================================√æ√æDetails on TNT4J-Streams related configuration can be found in TNT4J-Streams README document chapter ['Configuring TNT4J-Streams'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#configuring-tnt4j-streams).√æ√æ### Streams configuration√æ√æ#### Zorka connector parameters√æ√æ * Host - host name of machine running the Zico collector. Default value - `localhost`. (Optional)√æ * Port - listener port number of the Zico collector. Default value - `8640`. (Optional)√æ * MaxTraceEvents - maximum number of events to stream for single stack trace. Default value - `100`. Value `0` (or negative) means stream √æ the whole stack trace. (Optional)√æ * Bollinger_N_period - Bollinger Bands N-period moving average (EMA). It defines the number of 'method execution time' values to use for √æ averages calculation. Setting a `0` or negative value means dynamic methods execution time filtering using Bollinger Bands is disabled. √æ Default value - `0`. (Optional)√æ     * Bollinger_K_times - Defines an upper Bollinger Band at K times an N-period standard deviation above the exponentially moving average √æ     (n-Period) and a lower band at K times an N-period standard deviation below the exponentially moving average. It means how many times √æ     the average value has to change to change the bands width. Default value - `3`. (Optional; used only if `Bollinger_N_period` is set)√æ     * BollingerRecalculationPeriod - Bollinger Bands recalculation period in milliseconds. Default value - `3000`. (Optional; used only if √æ     `Bollinger_N_period` is set)√æ√æ    sample:√æ```xml√æ    <property name=""Host"" value=""some.host.name""/>√æ    <property name=""Port"" value=""8645""/>√æ    <property name=""MaxTraceEvents"" value=""32""/>√æ√æ    <property name=""Bollinger_N_period"" value=""25""/>√æ    <property name=""Bollinger_K_times"" value=""3""/>√æ    <property name=""BollingerRecalculationPeriod"" value=""2000""/>√æ```√æ√æAlso see ['Generic streams parameters'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#generic-streams-parameters) and ['Buffered streams parameters'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#buffered-streams-parameters).√æ√æ#### JMX Zabix data puller parameters√æ√æ * JMXQuery - Zabbix JMX query expression to get desired JMX beans attributes. (Required)√æ * Host - host name of the machine running the Zabix server. Default value - `localhost`. (Optional)√æ * Port - listener port number of the Zabix server for receiving data from Zabix agents and proxies. Default value - `10056`. (Optional)√æ * CronSchedExpr - Cron expression to define Zabbix queries invocation scheduler. Default value - `every 15sec`. (Optional)√æ√æ    sample:√æ```xml√æ    <property name=""Host"" value=""some.host.name""/>√æ    <property name=""Port"" value=""9953""/>√æ    <property name=""CronSchedExpr"" value=""0/15 * * 1/1 * ? *""/>√æ    <property name=""JMXQuery"">√æ        <![CDATA[√æ            ""java"",""java.lang:type=Memory"",""HeapMemoryUsage"",""used""|√æ            ""java"",""java.lang:type=Threading"",""ThreadCount""|√æ            ""java"",""java.lang:type=GarbageCollector,name=PS MarkSweep"",""CollectionTime""|√æ            ""java"",""java.lang:type=ClassLoading"",""LoadedClassCount""|√æ            ""java"",""java.lang:type=Runtime"",""ClassPath""√æ        ]]>√æ    </property>√æ```√æ√æAlso see ['Generic streams parameters'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#generic-streams-parameters) and ['Buffered streams parameters'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#buffered-streams-parameters).√æ√æHow to Build TNT4J-Streams-Zorka√æ=========================================√æ√æ## Requirements√æ* JDK 1.8+√æ* [Apache Maven 3](https://maven.apache.org/)√æ* [TNT4J-Streams](https://github.com/Nastel/tnt4j-streams) `core` module in particular√æ√æAll other required dependencies are defined in project [`pom.xml`](./pom.xml) file. If maven is running online mode it should download these √ædefined dependencies automatically.√æ√æ### Manually installed dependencies√æ√æ**NOTE:** If you have build and installed TNT4J-Streams into your local maven repository, you don't need to install√æit manually.√æ√æSome of the required and optional dependencies may be not available in public [Maven Repository](http://repo.maven.apache.org/maven2/). In √æthis case we would recommend to download those dependencies manually into [`lib`](./lib/) directory and install into local maven repository √æby running maven script [`lib/pom.xml`](./lib/pom.xml) using `initialize` goal.√æ√æ**NOTE:** `TNT4J-Streams-Zorka` project will be ready to build only when manually downloaded libraries will be installed to local maven √ærepository.√æ√æWhat to download manually:√æ* Zico-util√æ* Zorka√æ√æDownload the above libraries and place into the `tnt4j-streams-zorka/lib` directory as follows:√æ```√æ    lib√æ     + zorka√æ         + 1.0.16√æ             |- zico-util.jar√æ         + 1.0.18√æ             |- zorka.jar √æ```√æ(O) marked libraries are optional√æ√æ**NOTE:** Also see TNT4J-Streams README document chapter ['Manually installed dependencies'](https://github.com/Nastel/tnt4j-streams/blob/master/README.md#manually-installed-dependencies).√æ√æ## Building√æ* To build the project, run maven goals `clean package`√æ* To build the project and install to local repo, run maven goals `clean install`√æ* To make distributable release assemblies use one of profiles: `pack-bin` or `pack-all`:√æ    * containing only binary distribution: run `mvn -P pack-bin`√æ    * containing binary, source and javadoc distribution: run `mvn -P pack-all`√æ√æRelease assemblies are built in directory `../build/tnt4j-streams-zorka`.√æ√æ**NOTE:** Sometimes maven fails to correctly handle dependencies. If dependency configuration looks fine, but maven still complains about √æmissing dependencies, try to delete the local maven repository by hand: e.g., on MS Windows delete contents of directory √æ`c:\Users\[username]\.m2\repository`.√æ√æSummarizing the build process, the quick ""how to build"" steps would be:√æ1. Download `zico-util.jar` and `zorka.jar` to directory `tnt4j-streams-zorka/lib/zorka/{version}/`.√æ2. Install manually managed dependencies from directory `tnt4j-streams-zorka/lib` running `mvn initialize`.√æ3. If `tnt4j-streams` was not built yet, build it: run `mvn clean install` from the project object model file [`pom.xml`](https://github.com/Nastel/tnt4j-streams/blob/master/pom.xml) √ælocated in `tnt4j-streams` directory.√æ4. Now you can build `tnt4j-streams-zorka`: run `mvn clean install` from file [`pom.xml`](./pom.xml) located in directory √æ`tnt4j-streams-zorka`.√æ√æ## Running samples√æ√æSee 'Running TNT4J-Streams-Zorka' chapter section ['Samples'](#samples).√æ√æTesting of TNT4J-Streams-Zorka√æ=========================================√æ√æ## Requirements√æ* [JUnit 4](http://junit.org/)√æ* [Mockito](http://mockito.org/)√æ√æ## Testing using maven√æMaven tests run is disabled by default. To enable Maven to run tests, set Maven command line argument √æ`-DskipTests=false`.√æ√æ## Running manually from IDE√æ* in `zorka` module run JUnit test suite named `AllZorkaTests`"
yandex-qatools/postgresql-embedded,311,472,31,90,Organization,False,Embedded PostgreSQL Server,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",11,Java,"{'bat': 2, 'yml': 3, '': 2, 'md': 1, 'xml': 1}",224,5,34,25,0,2039,True,45,46,0,0,7,67,1,0,10,11,0,0,0,0,0,0,27,8,,,"# Embedded PostgreSQL Server√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/ru.yandex.qatools.embed/postgresql-embedded/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/ru.yandex.qatools.embed/postgresql-embedded)√æ[![Build status](https://travis-ci.org/yandex-qatools/postgresql-embedded.svg?branch=master)](https://travis-ci.org/yandex-qatools/postgresql-embedded/)√æ[![Windows build status](https://ci.appveyor.com/api/projects/status/00ov87k6fe2euwvo?svg=true)](https://ci.appveyor.com/project/smecsia/postgresql-embedded)√æ√æEmbedded PostgreSQL server provides a platform neutral way for running postgres binaries in unittests.√æThis library is based on [Flapdoodle OSS's embed process](https://github.com/flapdoodle-oss/de.flapdoodle.embed.process). √æ√æ## Note: this project is not being actively maintained anymore√æSorry for any inconvinience, but this project needs active maintainers. If anyone is interested in becoming the maintainer - please let me ([@smecsia](https://github.com/smecsia)) know.√æ√æ## Officially recommended alternative√æPlease be adviced that the main maintainer of this project has successfuly migrated to the use of [Test Containers project](https://www.testcontainers.org/modules/databases/postgres/). This is the best possible alternative nowadays.√æ√æ## Motivation√æ√æ* It's much easier than installing specific version manually√æ* You can choose the version right from the code√æ* You can start your development environment with the PostgreSQL embedded with the single command√æ√æ### Maven√æ√æAdd the following dependency to your pom.xml:√æ```xml√æ<dependency>√æ    <groupId>ru.yandex.qatools.embed</groupId>√æ    <artifactId>postgresql-embedded</artifactId>√æ    <version>2.10</version>√æ</dependency>√æ```√æ### Gradle√æ√æAdd a line to build.gradle:√æ```groovy√æcompile 'ru.yandex.qatools.embed:postgresql-embedded:2.10'√æ```√æ√æ## Howto√æ√æHere is the example of how to launch and use the embedded PostgreSQL instance√æ```java√æ// starting Postgres√æfinal EmbeddedPostgres postgres = new EmbeddedPostgres(V9_6);√æ// predefined data directory√æ// final EmbeddedPostgres postgres = new EmbeddedPostgres(V9_6, ""/path/to/predefined/data/directory"");√æfinal String url = postgres.start(""localhost"", 5432, ""dbName"", ""userName"", ""password"");√æ√æ// connecting to a running Postgres and feeding up the database√æfinal Connection conn = DriverManager.getConnection(url);√æconn.createStatement().execute(""CREATE TABLE films (code char(5));"");√æconn.createStatement().execute(""INSERT INTO films VALUES ('movie');"");√æ√æ// ... or you can execute SQL files...√æ//postgres.getProcess().importFromFile(new File(""someFile.sql""))√æ// ... or even SQL files with PSQL variables in them...√æ//postgres.getProcess().importFromFileWithArgs(new File(""someFile.sql""), ""-v"", ""tblName=someTable"")√æ// ... or even restore database from dump file√æ//postgres.getProcess().restoreFromFile(new File(""src/test/resources/test.binary_dump""))√æ√æ// performing some assertions√æfinal Statement statement = conn.createStatement();√æassertThat(statement.execute(""SELECT * FROM films;""), is(true));√æassertThat(statement.getResultSet().next(), is(true));√æassertThat(statement.getResultSet().getString(""code""), is(""movie""));√æ√æ// close db connection√æconn.close();√æ// stop Postgres√æpostgres.stop();√æ```√æ√æNote that EmbeddedPostgres implements [java.lang.AutoCloseable](https://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html), √æwhich means that you can use it with a [try-with-resources](https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html) √æstatement (in Java >= 7) to have it automatically stopped.√æ√æ### How to avoid archive extraction on every run√æ√æYou can specify the cached artifact store to avoid archives downloading and extraction (in case if a directory remains on every run).√æ```java√æfinal EmbeddedPostgres postgres = new EmbeddedPostgres();√æpostgres.start(cachedRuntimeConfig(""/path/to/my/extracted/postgres""));√æ```√æ√æ### How to configure logging√æ√æJust configure your own `slf4j` appenders. Here is the example of typical `src/test/resources/log4j.properties` file:√æ√æ```java√æ# suppress inspection ""UnusedProperty"" for whole file√ælog4j.rootLogger=DEBUG, stdout√æ√æ# reduce logging for postgresql-embedded√ælog4j.logger.ru.yandex.qatools.embed=INFO√ælog4j.logger.de.flapdoodle.embed=INFO√æ√æ# Direct log messages to stdout√ælog4j.appender.stdout=org.apache.log4j.ConsoleAppender√ælog4j.appender.stdout.Target=System.out√ælog4j.appender.stdout.layout=org.apache.log4j.PatternLayout√ælog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n√ælog4j.throwableRenderer=org.apache.log4j.EnhancedThrowableRenderer√æ```√æ√æ### How to use your custom version of PostgreSQL√æ√æPass the required `IVersion` interface implementation as a first argument of the `EmbeddedPostgres` object:√æ√æ```java√æfinal EmbeddedPostgres postgres = new EmbeddedPostgres(() -> (IS_OS_WINDOWS) ? ""9.6.2-2"" : ""9.6.2-1"");√æ```√æ√æ### Known issues√æ* A lot of issues have been reported for this library under Windows. Please try to use the suggested way of start up and use√æthe cached artifact storage (to avoid extraction of the archive as extraction is extremely slow under Windows): √æ```java√æpostgres.start(cachedRuntimeConfig(""C:\\Users\\vasya\\pgembedded-installation""));√æ```√æ√æ* PostgreSQL server is known to not start under the privileged user (which means you cannot start it under root/Administrator of your system):  √æ√æ> `initdb must be run as the user that will own the server process, because the server needs to have access to the files and directories that initdb creates. Since the server cannot be run as root, you must not run initdb as root either. (It will in fact refuse to do so.)` √æ  ([link](http://www.postgresql.org/docs/9.5/static/app-initdb.html)).   √æ  √æ  However some users have launched it successfully on Windows under Administrator, so you can try anyway. √æ  √æ### Supported Versions√æ√æ* 11.2: on Mac OS X and Windows 64 bit√æ* 10.7, 9.6.12, 9.5.16: on Linux, Windows, Mac OS X√æ* any custom version"
gravetii/wordagam,246095,54,4,11,User,False,A fun & interactive word game üçÑ,https://medium.com/@sandeepdasika/how-i-built-a-simple-word-game-in-java-using-javafx-8fba925b71c6,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 2, 'md': 1, 'xml': 1}",207,1,7,2,16,598,True,0,7,0,0,0,2,0,0,9,0,0,0,0,0,0,0,53,,2,,"# Wordagam√æ√æ<p align=""center"">√æ<a href=""https://app.codacy.com/app/gravetii/wordagam?utm_source=github.com&utm_medium=referral&utm_content=gravetii/wordagam&utm_campaign=Badge_Grade_Dashboard""><img src=""https://api.codacy.com/project/badge/Grade/f7b9f7655b3f4ff795775ab49a39fc52"" alt=""Codacy Badge""></a>√æ<a href=""https://opensource.org/licenses/MIT""><img src=""https://img.shields.io/badge/License-MIT-yellow.svg"" alt=""License: MIT"" /></a>√æ<a href=""https://www.paypal.me/sandeepdasika""><img src=""https://img.shields.io/badge/Donate-PayPal-green.svg"" alt=""Donate"" /></a>√æ<a href=""https://github.com/gravetii/wordagam/releases/latest""><img src=""https://img.shields.io/github/release/gravetii/wordagam.svg?style=flat-square"" alt=""GitHub release"" /></a>√æ<a href=""https://github.com/gravetii/wordagam/releases""><img src=""https://img.shields.io/github/downloads/gravetii/wordagam/total.svg?style=flat-square"" alt=""Github All Releases"" /></a>√æ<a href=""https://saythanks.io/to/gravetii""><img src=""https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg"" alt=""Say Thanks!"" /></a>√æ</p>√æ√æA fun & interactive word game. Check out the screenshots and the game play video.√æ√æ## Download & Play√æ√æDownload the latest JAR [here](https://github.com/gravetii/wordagam/releases/download/v1.6/wordagam-1.6.jar) to play the game.√æ√æ## Prerequisites√æ√æWordagam requires Java 10 to be installed to run the JAR.√æ√æ## Building the project√æ√æThis is a maven project. In the root folder of the project, run `mvn clean compile assembly:single` which outputs the JAR file in the `target/` folder.√æ√æ## Game play video√æ√æ<a href=""http://www.youtube.com/watch?feature=player_embedded&v=fXqfaqLZ2zw√æ""><img src=""http://img.youtube.com/vi/fXqfaqLZ2zw/2.jpg"" alt=""Wordagam game play video"" width=""240"" height=""180"" /></a>√æ√æ## Screenshots√æ√æ![Screenshot 1](screenshots/1.png)√æ![Screenshot 2](screenshots/2.png)√æ![Screenshot 3](screenshots/3.png)√æ![Screenshot 4](screenshots/4.png)√æ![Screenshot 5](screenshots/5.png)√æ![Screenshot 6](screenshots/6.png)√æ![Screenshot 7](screenshots/7.png)√æ![Screenshot 8](screenshots/8.png)√æ![Screenshot 9](screenshots/9.png)√æ![Screenshot 10](screenshots/10.png)√æ√æ---√æ√æ<div>Theme images picked from <a href=""https://unsplash.com"" target=""_blank"">Unsplash</a>.</div>"
gopalmenon/Multi-Probe-LSH,8084,1,1,3,User,False,Efficient Indexing for HighDimensional Similarity Search,,,8,Java,"{'': 3, 'jar': 1, 'md': 1, 'gradle': 1, 'set': 1}",89,9,0,4,0,594,True,0,0,0,0,0,26,0,0,8,0,0,0,0,0,0,0,95,,11,,"# MultiProbe-LSH√æEfficient Indexing for HighDimensional Similarity Search√æ√æLv, Qin, et al. ""Multi-probe LSH: efficient indexing for high-dimensional similarity search."" Proceedings of the 33rd international conference on Very large data bases. VLDB Endowment, 2007.√æ√æ# Abstract for paper that this is based on:√æSimilarity indices for high-dimensional data are very desirable for building content-based search systems for feature rich data such as audio, images, videos, and other sensor data. Recently, locality sensitive hashing (LSH) and its variations have been proposed as indexing techniques for approximate similarity search. A significant drawback of these approaches is the requirement for a large number of hash tables in order to achieve good search quality. This paper proposes a new indexing scheme called multi-probe LSH that overcomes this drawback. Multi-probe LSH is built on the well-known LSH technique, but it intelligently probes√æmultiple buckets that are likely to contain query results in a hash table. Our method is inspired by and improves upon recent theoretical work on entropy-based LSH designed to reduce the space requirement of the basic LSH method. We have implemented the multi-probe LSH method and evaluated the implementation with two different high-dimensional datasets. Our evaluation shows that the multi-probe LSH method substantially improves upon previously proposed methods in both space and time efficiency. To achieve the same search quality, multi-probe LSH has a similar timeefficiency as the basic LSH method while reducing the number of hash tables by an order of magnitude. In comparison with the entropy-based LSH method, to achieve the same search quality, multi-probe LSH uses less query time and 5 to 8 times fewer number of hash tables.√æ√æRequirements:√æjava 11.0.1 2018-10-16 LTS√æJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)√æJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)√æGradle 4.10.2√æ√æBuilt on:√æWindows 10 and√æMac OS X 10.13.6 x86_64√æ√æBuilt using Intellij (https://www.jetbrains.com/idea/)√æ√æThe easiest way to run the application is by simply running the included uberjar in the repository.√æRun this by running the command:√æ$ java -jar Multi-Probe-LSH-all.jar√æ√æThis will bring up a swing dialogue which will have the contents of our application loaded in it.√æ√æYou may also if you wish compile from source. This will be mostly undocumented and the expectation is that a Java developer with Gradle experience√æcan run the source code in their selected IDE with their needed build configuration.√æ√æAn example to build from source and run with Gradle might look like:√æ$ gradle build√æ$ gradle run√æ√æThe application runs searches by first building an index. Before building your index we recommend changing your settings to a configuration you would√ælike as the index once built cannot change its settings. You will have to rebuild an index to change its settings.√æ√æTo build an index go to File -> Build Index. This will prompt a file open dialogue box.√æThe file the index expects is a tab delimited file of the format <id for image><tab><url for image>.√æThis will be parsed to download the images and then build an index of hash tables from them.√æ√æExamples of the format can be seen here:√æhttps://github.com/illegalnumbers/multi-probe-lsh-data/blob/master/images/file_1√æ√æThe format is the same format as the imagenet file format from which we were building our testing image indexes:√æhttp://image-net.org/download√æ√æAfter creating your index with the specified settings you will be prompted to save your index.√æWe allow for the saving of the index only once so decide now if you would like to save your index. It is not required to save your index to search√æfrom it and if you do not want to wait for the index to save to disk you can click cancel and it will still allow you to search.√æ√æIf you save an index you can load it at a later time with the File -> Load Index option.√æ√æIf you want you can also avoid the downloading and parsing of images by using the example predownloaded features file provided in the repo under√æthe file `featuresFromDaemon.set` and loading it with the option File -> Build Index from Saved Features. This will load approximately 8k image√æfeatures predownloaded into a new index with the settings you specify.√æ√æAfter building your index you can search for a file with the Search -> Search by Url or Search by Image File√æ√æThese options will search based on the index selected configuration that you have entered to the file.√æ√æAfter doing a search you can compare it to a brute force baseline search by clicking Search -> Brute Force Search By URL√æand then clicking Metrics -> Show Metrics to show the comparison between the brute force metrics and the search you have performed√æwith your index.√æ√æIf you would like to change how many perturbation sets get applied when doing your searches on your index√æyou can select Search -> Set Perturbation Count.√æ√æTo exit the application select File -> Exit.√æ√æ## Known Limitations√æ√æThe UI is known to be a bit slow. Optimizing for Swing or another Java framework didn't feel like an effective use of time for the assignment so we cut a bit of corners there. Please wait for the UI to respond√æbefore trying to kill the process. In particular the loading of an index or the responsiveness of loading a directory when searching for files are known pain points. It can take many clicks to search into a√ædirectory unfortunately, so if at first you don't succeed try again. The saving of indexes is very slow and somtimes the search can be a bit slow as well. Building large indexes is slow."
DominoKit/gwt-jackson-apt,1339,30,10,6,Organization,False,Gwt Jackson with Annotation processing,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",121,3,0,5,7,915,True,6,23,2,8,0,7,0,2,11,1,3,11,2733,776,0,0,31,2,,DominoKit/domino-jackson,"![GWT3/J2CL compatible](https://img.shields.io/badge/GWT3/J2CL-compatible-brightgreen.svg) [![Build Status](https://travis-ci.org/DominoKit/domino-jackson.svg?branch=master)](https://travis-ci.org/DominoKit/domino-jackson)√æ<a title=""Gitter"" href=""https://gitter.im/DominoKit/domino""><img src=""https://badges.gitter.im/Join%20Chat.svg""></a>√æ√æDomino-jackson√æ=====√æDomino-jackson is an annotation processor based JSON mapper that works on both the client side - [GWT](http://www.gwtproject.org/) and [J2CL](https://github.com/google/j2cl) - and on JVM side based, the library is based on [gwt-jackson](https://github.com/nmorel/gwt-jackson) the original thanks goes to [Nicolas Morel](https://github.com/nmorel) for building gwt-jackson library.√æ√æThe library is future proofed and allows the user to use the same mapper to be used in a pure JVM environment such as Android or in the client side of the browser which enables easier testing and more code sharing between client and server.√æ √æCheckout the [Quick start guide](https://github.com/DominoKit/domino-jackson/wiki/Quick-start) and visit our [documentation](https://github.com/DominoKit/domino-jackson/wiki) in the wiki for more details.√æ "
xipki/xipki,39527,273,37,68,User,False,"Highly scalable and high-performance open source PKI (CA and OCSP responder). Minimal dependencies, No-JPA, No-Spring",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",33,Java,"{'': 2, 'yml': 1, 'md': 4, 'xml': 1}",6065,3,19,3,19,2277,True,2,164,2,36,0,9,0,2,6,4,2,93,15378,16103,0,0,4,,19,,"[![Build Status](https://secure.travis-ci.org/xipki/xipki.svg)](http://travis-ci.org/xipki/xipki)√æ[![GitHub release](https://img.shields.io/github/release/xipki/xipki.svg)](https://github.com/xipki/xipki/releases)√æ[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)√æ[![Github forks](https://img.shields.io/github/forks/xipki/xipki.svg)](https://github.com/xipki/xipki/network)√æ[![Github stars](https://img.shields.io/github/stars/xipki/xipki.svg)](https://github.com/xipki/xipki/stargazers)√æ[![SourceSpy Dashboard](https://sourcespy.com/shield.svg)](https://sourcespy.com/github/xipkixipki/)√æ√æ√æ# XiPKI√æXiPKI (e**X**tensible s**I**mple **P**ublic **K**ey **I**nfrastructure) is√æa highly scalable and high-performance open source PKI (CA and OCSP responder).√æ√æ## License√æ* The Apache Software License, Version 2.0√æ√æ## Owner√æLijun Liao, [LinkedIn](https://www.linkedin.com/in/lijun-liao-644696b8)√æ√æ## Support√æJust create [issues](https://github.com/xipki/xipki/issues), √æor via wechat (ÂæÆ‰ø°Ôºâ`xipki9`.√æ√æ## Prerequisite√æ* OS: Linux, Windows, MacOS√æ* JRE / JDK 8 (build 162+), 9, 10, 11, 12, 13√æ* Database: DB2, MariaDB, MySQL, Oracle, PostgreSQL, H2, HSQLDB√æ√æ## Tested PKCS#11 Devices√æ* [Softhsm v1 & v2](https://www.opendnssec.org/download/packages/),√æ* [Smartcard HSM EA+](http://www.smartcard-hsm.com/features.html#usbstick),√æ* Thales nCipher Connect, Thales nCipher Solo, Utimaco Se√æ√æ## Get Started√æ√æ### JAVA_HOME√æ  Set the environment variable `JAVA_HOME` to point to root directory of the to√æ  the JRE/JDK installation.√æ√æ### CA Server and OCSP Responder√æ√æDownload the binaries `ca-war-<version>.zip`, `ocsp-war-<version>.zip` and√æ`xipki-cli-<version>.tar.gz` from√æ[releases](https://github.com/xipki/xipki/releases).√æ√æOnly if you want to use the development version, build it from source code as√æfollows.√æ√æ- Get a copy of project code√æ  ```sh√æ  git clone https://github.com/xipki/xipki√æ  ```√æ- Build the project√æ√æ  In folder `xipki`√æ  ```sh√æ  mvn clean install -DskipTests√æ  ```√æ√æ  Then you will find the following binaries:√æ   - CA: `assembles/ca-war/target/ca-war-<version>.zip`√æ   - OCSP: `assembles/ocsp-war/target/ocsp-war-<version>.zip`√æ   - CLI (Command Line Interface): `assembles/xipki-cli/target/xipki-cli-<version>.tar.gz`√æ√æ## Install CA Server√æ√æ1. Unpack the binary `ca-war-<version>.zip` and install CA as described in the√æ   unpacked README file.√æ√æ2. Adapt the database configurations ${CONTAINER_ROOT}/xipki/etc/ca/database/ca-db.properties.√æ   - If you use database other than MariaDB and MySQL, you need to overwrite the configuration templates√æ   from the sub folder.√æ   - If you use database other than MariaDB, MySQL and PostgreSQL, you need to get the JDBC driver and copy√æ     it to the container directory for external jars (e.g. `lib` in tomcat, and `lib/ext` in jetty).   √æ√æ3. Create new databases configured in Step 2.√æ√æ4. Initialize the databases configured in Step 2.√æ√æ```√æ ca-war-<version>/dbtool/bin/initdb.sh \√æ   --db-conf xipki/etc/ca/database/ca-db.properties \√æ   --db-schema xipki/sql/ca-init.xml√æ```√æ√æ## Install OCSP Responder√æ√æNote that CA and OCSP can be installed in the same servlet container.√æ√æ1. Unpack the binary `ocsp-war-<version>.zip` and install OCSP responder as described in the√æ   unpacked README file.√æ√æ2. Adapt the database configuration ${CONTAINER_ROOT}/xipki/etc/ocsp/database/ca-db.properties.√æ   - If you use database other than MariaDB and MySQL, you need to overwrite the configuration templates√æ   from the sub folder.√æ   - If you use database other than MariaDB, MySQL and PostgreSQL, you need to get the JDBC drivers and copy√æ     it to the container directory for external jars (e.g. `lib` in tomcat, and `lib/ext` in jetty).   √æ√æ## Install Command Line Interface√æ√æ1. Unpack the binary `xipki-cli-<version>.tar.gz`√æ2. Adapt the CMP client configuration `xipki/cmpclient/cmpclient.json`√æ√æ## Configure PKCS#11 device (optional)√æ√æ   This step is only required if the real PKCS#11 device instead of the emulator√æ   is used.√æ√æ  * Copy `xipki/security/example/pkcs11-hsm.json` to `xipki/security/pkcs11.json`, and adapt the PKCS#11 configuration.√æ√æ## Configure how to handle SSL client certificate (optional)√æ√æ  This step is only required if the CA is behind a reverse proxy apache httpd.√æ√æ  * Add the java property org.xipki.reverseproxy.mode√æ    ```sh√æ    -Dorg.xipki.reverseproxy.mode=APACHE√æ    ```√æ√æ  * configure the proxy to forward the headers via mod_proxy with the following√æ    configuration√æ√æ   ```sh√æ   # Require SSL Client verification√æ   SSLVerifyClient  require√æ√æ   #initialize the special headers to a blank value to avoid http header forgeries √æ   RequestHeader set SSL_CLIENT_VERIFY  """" √æ   RequestHeader set SSL_CLIENT_CERT  """" √æ   √æ   <Location / >√æ    RequestHeader set SSL_CLIENT_VERIFY ""%{SSL_CLIENT_VERIFY}s""√æ    RequestHeader set SSL_CLIENT_CERT ""%{SSL_CLIENT_CERT}s""√æ    ...√æ   </Location>√æ   ```√æ√æ    For more details please refer to√æ√æ      * [Jetty/Howto/Configure mod proxy](https://wiki.eclipse.org/Jetty/Howto/Configure_mod_proxy)√æ      * [Jetty: Tricks to do client certificate authentications behind a reverse proxy](http://www.zeitoun.net/articles/client-certificate-x509-authentication-behind-reverse-proxy/start)√æ      * [Apache Module mod_ssl](http://httpd.apache.org/docs/2.2/mod/mod_ssl.html#envvars)√æ√æ## Setup CA Server and OCSP Responder√æ√æ1. Start the servlet container  √æHSM devices of Thales, e.g. nCipher, can use Thales preload to manage the√æPKCS#11 sessions. In this case, the servlet container should be started as follows√æ```sh√æpreload <start script>√æ```√æ√æ2. Setup CA in CLI√æ   * Start CLI.√æ      `bin/karaf`√æ √æ   * Setup CA√æ      * In case of using new keys and certificates, in CLI:  √æ        `source xipki/ca-setup/cacert-none/setup-*.script`√æ         where * is place holder.√æ√æ      * In case of using existing keys and certificates, in CLI:  √æ        `source xipki/ca-setup/cacert-present/setup-*.script`√æ         where * is place holder.√æ√æ   * Verify the installation, execute the command in CLI:  √æ     `ca-info myca1`√æ√æ## Enroll/Revoke Certificate and Get CRL via Shell (optional)√æ√æ- The following shell script demonstrates how to enroll and revoke certificates, and how to get the current CRL:√æ  `<CLI_ROOT>/xipki/client-script/rest.sh`√æ√æ  Note that this script tells CA to generate real certificates. DO NOT use it in the production environment.√æ√æ## Enroll/Revoke Certificate√æ√æ* SCEP  √æ  Using any SCEP client. XiPKI provides also a SCEP client.√æ√æ  The binary `xipki-cli-<version>`.tar.gz contains an example script in the folder xipki/client-script.√æ  It can be executed in the CLI as follows:  √æ  - `source xipki/client-script/scep-client.script`√æ√æ* XiPKI CLI√æ  XiPKI CLI provides both the full-featured client and the lite version to enroll and√æ  revoke certificates via CMP.√æ√æ  The binary `xipki-cli-<version>`.tar.gz contains an example script in the folder xipki/client-script.√æ  It can be executed in the CLI as follows:  √æ  - `source xipki/client-script/cmp-client.script`√æ√æ* REST API  √æ  The shell script `xipki/client-script/rest.sh` of the `xipki-cli` demonstrates√æ  the use of REST API.√æ√æ  The binary `xipki-cli-<version>`.tar.gz contains an example script in the folder xipki/client-script.√æ  It can be executed in the CLI as follows:  √æ  - `source xipki/client-script/rest-client.script`√æ √æCLI Commands√æ-----√æPlease refer to [commands.md](commands.md) for more details.√æ√æFeatures√æ-----√æ- CA (Certification Authority)√æ  - X.509 Certificate v3 (RFC 5280)√æ  - X.509 CRL v2 (RFC 5280)√æ  - EdDSA Certificates (RFC 8410, RFC 8032)√æ  - Diffie-Hellman Proof-of-Possession Algorithms (RFC 6955)√æ  - SCEP (draft-gutmann-scep-00, draft-nourse-scep-23)√æ  - EN 319 411 (eIDAS)√æ  - EN 319 412 (eIDAS)√æ  - Supported databases: DB2, MariaDB, MySQL, Oracle, PostgreSQL, H2, HSQLDB√æ  - Direct and indirect CRL√æ  - FullCRL and DeltaCRL√æ  - Customized extension to embed certificates in CRL√æ  - CMP (RFC 4210 and RFC 4211)√æ  - API to specify customized certificate profiles√æ  - Support of JSON-based certificate profile√æ  - API to specify customized publisher, e.g. for LDAP and OCSP responder√æ  - Support of publisher for OCSP responder√æ  - Public key types of certificates√æ    - RSA√æ    - EC√æ    - DSA√æ    - Ed25519, Ed448√æ    - SM2√æ    - X25519, X448√æ  - Signature algorithms of certificates√æ    - Ed25519, Ed448√æ    - SHA3-*withRSA: where * is 224, 256, 384 and 512√æ    - SHA3-*withRSAandMGF1: where * is 224, 256, 384 and 512√æ    - SHA3-*withECDSA: where * is 224, 256, 384 and 512√æ    - SHA3-*withDSA: where * is 224, 256, 384 and 512√æ    - SHA*withRSA: where * is 1, 224, 256, 384 and 512√æ    - SHA*withRSAandMGF1: where * is 1, 224, 256, 384 and 512√æ    - SHA*withECDSA: where * is 1, 224, 256, 384 and 512√æ    - SHA*withPlainECDSA: where * is 1, 224, 256, 384 and 512√æ    - SHA*withDSA: where * is 1, 224, 256, 384 and 512√æ    - SM3withSM2√æ - Native support of X.509 extensions (other extensions can be supported by√æ   configuring it as blob)√æ    - AdditionalInformation (German national standard CommonPKI)√æ    - Admission (German national standard CommonPKI)√æ    - AuthorityInformationAccess (RFC 5280)√æ    - AuthorityKeyIdentifier (RFC 5280)√æ    - BasicConstraints (RFC 5280)√æ    - BiometricInfo (RFC 3739)√æ    - CertificatePolicies (RFC 5280)√æ    - CRLDistributionPoints (RFC 5280)√æ    - CT Precertificate SCTs (RFC 6962)√æ    - ExtendedKeyUsage (RFC 5280)√æ    - FreshestCRL (RFC 5280)√æ    - GM/T 0015 ICRegistrationNumber (‰ºÅ‰∏öÂ∑•ÂïÜÊ≥®ÂÜåÂè∑, Chinese Standard GM/T 0015-2012)√æ    - GM/T 0015 IdentityCode (‰∏™‰∫∫Ë∫´‰ªΩÊ†áËØÜÁ†Å, Chinese Standard GM/T 0015-2012)√æ    - GM/T 0015 InsuranceNumber (‰∏™‰∫∫Á§æ‰ºö‰øùÈô©Âè∑, Chinese Standard GM/T 0015-2012)√æ    - GM/T 0015 OrganizationCode (‰ºÅ‰∏öÁªÑÁªáÊú∫ÊûÑ‰ª£Á†Å, Chinese Standard GM/T 0015-2012)√æ    - GM/T 0015 TaxationNumber (‰ºÅ‰∏öÁ®éÂè∑, Chinese Standard GM/T 0015-2012)√æ    - InhibitAnyPolicy (RFC 5280)√æ    - IssuerAltName (RFC 5280)√æ    - KeyUsage (RFC 5280)√æ    - NameConstraints (RFC 5280)√æ    - OcspNoCheck (RFC 6960)√æ    - PolicyConstrains (RFC 5280)√æ    - PolicyMappings (RFC 5280)√æ    - PrivateKeyUsagePeriod (RFC 5280)√æ    - QCStatements (RFC 3739, eIDAS standard EN 319 412)√æ    - Restriction (German national standard CommonPKI)√æ    - SMIMECapabilities (RFC 4262)√æ    - SubjectAltName (RFC 5280)√æ    - SubjectDirectoryAttributes (RFC 3739)√æ    - SubjectInfoAccess (RFC 5280)√æ    - SubjectKeyIdentifier (RFC 5280)√æ    - TLSFeature (RFC 7633)√æ    - ValidityModel (German national standard CommonPKI)√æ√æ - Management of multiple CAs in one software instance√æ - Support of database cluster√æ - Multiple software instances (all can be in active mode) for the same CA√æ - Native support of management of CA via embedded OSGi commands√æ - API to specify CA management, e.g. GUI√æ - Database tool (export and import CA database) simplifies the switch of√æ   databases, upgrade of XiPKi and switch from other CA system to XiPKI CA√æ - Client to enroll, revoke, unrevoke and remove certificates, to generate and√æ   download CRLs√æ - All configuration of CA except those of databases is saved in database√æ√æ- OCSP Responder√æ  - OCSP Responder (RFC 2560 and RFC 6960)√æ  - Support of Common PKI 2.0√æ  - Management of multiple certificate status sources√æ  - Support of certificate status source based on the database of XiPKI CA√æ  - Support of certificate status source based on the OCSP database published by XiPKI CA√æ  - Support of certificate status source CRL and DeltaCRL√æ  - Support of certificate status source published by EJBCA√æ  - API to support proprietary certificate sources√æ  - Support of both unsigned and signed OCSP requests√æ  - Multiple software instances (all can be in active mode) for the same OCSP√æ    signer and certificate status sources.√æ  - Supported databases: DB2, MariaDB, MySQL, Oracle, PostgreSQL, H2, HSQLDB√æ  - Database tool (export and import OCSP database) simplifies the switch of√æ    databases, upgrade of XiPKi and switch from other OCSP system to XiPKI OCSP.√æ  - Client to send OCSP request√æ√æ- SCEP√æ  - Supported SCEP versions√æ    - draft-gutmann-scep-00√æ    - draft-nourse-scep-23√æ√æ- Toolkit (for both PKCS#12 and PKCS#11 tokens)√æ  - Generating keypairs of RSA, EC and DSA in token√æ  - Deleting keypairs and certificates from token√æ  - Updating certificates in token√æ  - Generating CSR (PKCS#10 request)√æ  - Exporting certificate from token√æ√æ- For both CA and OCSP Responder√æ  - Support of PKCS#12 and JCEKS keystore√æ  - Support of PKCS#11 devices, e.g. HSM√æ  - API to use customized key types, e.g. smartcard√æ  - High performance√æ  - Support of health check√æ  - Audit with syslog and slf4j√æ√æ- For CA, OCSP Responder and Toolkit√æ  - API to resolve password√æ  - Support of PBE (password based encryption) password resolver√æ     - All passwords can be encrypted by the master password√æ  - Support of OBF (as in jetty) password resolver√æ√æUse OCSP with customized Certificate Status Source (OcspStore)√æ-----√æ  - See the example modules√æ    - `ocsp-store-example`: implementation of a customized OcspStore.√æ    - `ocsp-store-example-assembly`: assembly the binaries."
ethercis/ethercis,315004,43,19,17,Organization,False,"START HERE: Documentation, internals and installation material, support info etc. Please post ISSUES here as well, thanks!",,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",9,Java,"{'md': 4, '': 1}",116,3,1,4,0,1699,True,47,147,0,1,0,5,0,0,18,2,0,0,0,0,0,0,17,0,,,"Ethercis√æ========√æ√æ**v1.3.0 March 2019**√æ√æWhat is it?√æ-----------√æ√æAn [openEHR](http://www.openehr.org/) CDR essentially based on SQL that exposes its services *via* a REST API.√æ√æEtherCIS is a truly query-able openEHR CDR; meaning that a wealth of integration capabilities are enabled in √æa secure way at DB level:√æ√æ- import/export of clinical data under various formats (SOAP, CSV, JSON etc.)√æ- integration with third party reporting applications (Jasper, BI etc.)√æ- direct feed from wearables, high throughput data feeds etc.√æ- Indexing specific value points (f.e. blood pressure values)√æ√æMore documentation about the concepts and architecture of EtherCIS is located [here](http://docs.ethercis.org/)√æ√æPlease also have a look to our [roadmap](https://github.com/ethercis/ethercis/blob/master/ethercis-roadmap.md) for more details√æ√æWhat's new?√æ-----------√æA number of enhanced features are now mainstream:√æ√æ#### JWT authentication√æSee https://github.com/ethercis/ethercis/blob/master/doc/JWT.md√æ√æ#### HTTP/SSL support and HTTP server configuration√æBackground on configuring SSL/Jetty at https://www.eclipse.org/jetty/documentation/current/configuring-ssl.html√æA whole set of configuration parameters are now supported.√æSee https://www.eclipse.org/jetty/documentation/9.4.x/quickstart-config-what.html for Jetty configuration explanation.√æSee https://github.com/ethercis/deploy-n-scripts/blob/master/ethercis-install/v1.3.0/config/services.properties √æ(section REST SERVER CONFIGURATION) for the actual parameters to use in EtherCIS√æ√æ#### Enhanced JMX support√æJMX is supported with user defined signature algorithm (see https://github.com/ethercis/ethercis/issues/161)√æIn particular, the following service have a better JMX support to use in production:√æServiceSecurityManager: to reload JWT secret√æAll other services: more info + runtime version√æ√æNB. JMX must be activated at JVM level. See https://www.oracle.com/technetwork/java/javaseproducts/mission-control/index.html√æfor usage√æ√æ#### Role Based Permissioning√æThis feature is based on Role Impersonation at DB level. This strategy ensures that only users/roles with√ægranted rights can access parts of the CDR. This does also support multi-tenancy.√æUnderstanding of PostreSQL permission framework is given at https://wiki.postgresql.org/wiki/Row-security√æSee https://github.com/ethercis/ethercis/blob/master/doc/RLS.md for more on this issue√æ√æ#### SSL DB Connectivity√æSee https://github.com/ethercis/ethercis/blob/master/doc/EtherCIS-SSL.md√æ√æ#### Library Upgrade√æjOOQ 3.11√æJetty 9.4√æ√æ#### Better Build Process√æAll build are now self-contained using Maven, that is no more 'exotic' libraries need to be installed locally.√æ√æ#### Single Jar for Execution√æSupport very simple launch command line such as:√æ√æ```markdown√æjava -jar lib/ethercis-1.3.0-SNAPSHOT-runtime.jar -propertyFile config/services.properties√æ```√æ√æ#### GDPR Features√æEHR Erasure: This allows now to delete entirely an EHR using a simple REST DELETE.√æAudit Trail: see log4j.xml and logging.properties in https://github.com/ethercis/deploy-n-scripts/tree/master/ethercis-install/v1.3.0/config√æ√æBuilding EtherCIS√æ=====√æ√æTo build the set of required libraries to run an EtherCIS server instance, you need to compile 3 sets of components:√æ√æ- [openehr-java-libs](https://github.com/ethercis/openehr-java-libs) these are the low level openEHR RM/AM classes√æused to represent the abstract [openEHR RM model](http://www.openehr.org/releases/trunk/UML/)√æ- [ehrservice](https://github.com/ethercis/ehrservice) this layer binds the persistence to the RM model including dealing√æwith templates etc. This is the actual core layer of the architecture√æ- [VirtualEhr](https://github.com/ethercis/VirtualEhr) is the projection of the core layer in services. Currently this√æprovides a REST API as described [here](http://docs.ethercis.org/APIs.html)√æ√æ- You need to compile each module as indicated in their respective README (mvn clean install, this assumes a local √æPostgreSQL 10 install with the test database loaded). √æA global setting for the assembly of *uber* jars should be done in your `settings.xml`.√æ√æ- EtherCIS can be launched with a Fat Executable JAR, see  https://github.com/ethercis/deploy-n-scripts/tree/master/ethercis-install/v1.3.0√æfor more details. The Fat jar is provided in this repository as well.√æ√æNote on building with Maven√æ---√æFor v1.3.0 all local libraries (e.g. the ones not found in Maven Central or compiled in previous steps) are provided√æthere is no need to install them locally√æ√æProject Structure√æ---√æTo allow various deployment and integration, the project is partitioned in two parts:√æ√æ- core components: this part deals with OpenEhr object handling, serialization, deserialization, knowledge management and persistence√æ- service wrappers: this part encapsulate core components into a service framework with a REST API and JMX instrumentalization.√æ√æ**Core Components**√æ√æThe core modules are located in the repository [ehrservice](https://github.com/ethercis/ehrservice):√æ√æ- core: fundamental operations and encoding of OpenEhr entities√æ- ehrdao: persistence of OpenEhr entities using a mixed model (relational/NoSql)√æ- knowledge-cache: caching of OpenEhr knowledge models (operational templates in particular)√æ- aql-processor: two passes SQL translation and query execution√æ- jooq-pg: utility module, binds ethercis table to jOOQ/Postgresql 9.4√æ- transform is mainly used to deal with raw json√æ- validation is responsible to check data input in relation to an openEHR template√æ- webtemplate implements template introspection√æ- db is used to perform DB configuration, upgrade and initial table loading in the case of a first install√æ√æ**Service Wrappers**√æ√æThe services and framework are located in [VirtualEhr](https://github.com/ethercis/VirtualEhr)√æ√æ- `ServiceManager` service management framework√æ- `VEhrService` Query gateway of a running server instance√æ- `ResourceAccessService` a common service to access external resources (DB, knowledge etc.)√æ- `PartyIdentifiedService` wrapper to interact with OpenEhr PartyIdentified entities√æ- `LogonService` controls user login/logout and sessions√æ- `AuthenticationService` wrap a security policy provider√æ- `CacheKnowledgeService` wrapper of knowledge-cache to allow user queries√æ- `EhrService` deals with user queries on OpenEhr Ehr and Ehr Status objects√æ- `CompositionService` deals with user queries on Composition objects√æ- `QueryService` supports AQL/SQL querying√æ√æPlease refer to the respective component's README for more details on the above√æ√æ**openEHR Java Reference Library**√æThe modules used in EtherCIS are in [openehr-java-libs](https://github.com/ethercis/openehr-java-libs)√æ√æ**Database**√æ√æEtherCIS requires PostgreSQL 10+.√æ√æThe database is based on bi-temporal tables keeping records history. √æSee [pgsql_ehr.ddl](https://github.com/ethercis/ehrservice/blob/remote-github/ehrdao/resources/ddls/pgsql_ehr.ddl) √æfor more details on the actual structure and triggers.√æ√æThe DB can be generated by running the above ddl script. DB `ethercis` should exist.√æ√æTables TERRITORY, LANGUAGE and CONCEPT should be populated from openEHR local terminology definition contained in `terminology.xml`. √æScript `populate-concept` is provided to perform this task (see [ethercis/examples/scripts](https://github.com/ethercis/ethercis/tree/master/examples))√æ√æ###### Required PostgreSQL extensions√æ√æ<html>√æ<body>√æ<table border=""1"" style=""border-collapse:collapse"">√æ<tr><td>plpgsql</td><td>1.0</td><td></td></tr>√æ<tr><td>jsquery</td><td>1.0</td><td>https://github.com/postgrespro/jsquery</td></tr>√æ<tr><td>ltree</td><td>1.0</td><td>https://www.postgresql.org/docs/9.10/static/ltree.html</td></tr>√æ<tr><td>temporal_tables</td><td>1.0.2</td><td>http://pgxn.org/dist/temporal_tables/</td></tr>√æ<tr><td>uuid-ossp</td><td>1.0</td><td>https://www.postgresql.org/docs/9.5/static/uuid-ossp.html</td></tr>√æ</table>√æ</body>√æ</html>√æ√æ####### Setting up the DB with Maven and flyway√æ√æSee https://github.com/ethercis/ehrservice/tree/remote-github/ecisdb√æ√æ## Upgrading from 1.2.0 to 1.3.0√æ√æ1. File `services.properties` needs to be upgraded to use the new features. An example is given in the code base [here](https://github.com/ethercis/VirtualEhr/blob/master/VEhrService/src/test/resources/config/services.properties).√æ2. Upgrade the DB using flayway https://github.com/ethercis/ehrservice/tree/remote-github/ecisdb√æ3. Adapt the launch script using the single Fat JAR created with https://github.com/ethercis/deploy-n-scripts/tree/master/distribution√æ√æ#### Using JWT√æIf you use JWT authentication, you will need to specify the key for verifying a token. The key can be given as a property (not recommended) or in a file. The file format is given [here](https://github.com/ethercis/VirtualEhr/blob/master/VEhrService/src/test/resources/config/security/jwt.cfg).√æ√æ#### DAC and RLS security at DB level√æThis configuration applies whenever JWT authentication is specified and property `server.security.db_role` in `services.properties` is true. This performs a so-called *session impersonation* on the DB connection. √æ√æThe impersonation can be prioritized on user id or role. The role impersonation is possibly preferred since the DB privilege definitions is somewhat simpler. However, in a multi-tenancy environment, user based permission must be required. At this time, roles and permissions at DB level require DB administration skills. Documentation on how to perform these operations are described in Postgresql main site: [RLS](https://www.postgresql.org/docs/current/static/ddl-rowsecurity.html), [DAC](https://www.postgresql.org/docs/current/static/user-manag.html) and [MAC](https://www.postgresql.org/docs/current/static/sql-security-label.html) (if required).√æ√æ## How To Run It?√æ√æ- Script `ecis-server` should be adapted to get the right classpath, path to required configuration, network parameters etc.√æ- Ditto for all configuration files.√æ√æScript `ecis-server` uses *uber* jars to keep the modularity of the platform as well as to ease the production of patches. √æThe jars are posted at [libraries](https://github.com/ethercis/ethercis/tree/master/libraries) until a better file repository is identified.√æ√æDocumentation And Examples√æ-√æ√æIn this section you will find:√æ√æ- [Examples](https://github.com/ethercis/ethercis/tree/master/examples) scripts and configuration files to run ethercis on a Linux box. Scripts can be adapted to launch the server on  Windows if required.√æ- [Libraries](https://github.com/ethercis/ethercis/tree/master/libraries) some pre-compiled libraries to make life a bit easier (mostly xml bindings classes and one to avoid conflicts with the patches from the core module√æ- [Installation](https://github.com/ethercis/ethercis/tree/master/installation) documentation and readme's, mostly to install a system√æ- [Link to deploy scripts](https://github.com/ethercis/deploy-n-scripts) - towards enabling a quick and easy set up√æ- [Get authenticated & basic openEHR template list](https://github.com/ethercis/ethercis/blob/master/doc/Getting_%20authenticated_and_templateList_onEthercis.md) - to get authenticated and then the openEHR CDR template list to get started√æ- More info on the [REST API](https://github.com/ethercis/ethercis/blob/master/doc/rest%20api.md) and [FLAT JSON](https://github.com/ethercis/ethercis/blob/master/doc/flat%20json.md)√æ- [Composition Serialization and Query](https://github.com/ethercis/ethercis/blob/master/doc/serialization.md)√æ√æChanges√æ======√æ√æV1.3.0 (March 2019)√æ-----------------√æ√æ- Tests, librairies, dependencies: CR#13, CR#14, CR#27, CR#60, CR#61, CR#87, CR#98, CR#123, CR#124√æ- Raw Json Support: CR#73, CR#118, CR#119√æ- Template Introspection: CR#74, CR#113, CR#114, CR#115, CR#125 √æ- AQL enhancements: CR#91, CR#92, CR#95, CR#100, CR#101, CR#111, CR#112, CR#116, CR#121, CR#69, CR#24√æ- Security: CR#64, CR#65√æ√æWas not a CR:√æ√æ- REST Server configuration√æ- Template Data Cache√æ- DAC + row level security (RLS)√æ√æ√æV1.2.0 (Jun 2018)√æ-----------------√æ√æ- Tests, librairies, dependencies: CR#13, CR#14, CR#27, CR#60, CR#61, CR#87, CR#98, CR#123, CR#124√æ- Raw Json Support: CR#73, CR#118, CR#119√æ- Template Introspection: CR#74, CR#113, CR#114, CR#115, CR#125 √æ- AQL enhancements: CR#91, CR#92, CR#95, CR#100, CR#101, CR#111, CR#112, CR#116, CR#121, CR#69, CR#24√æ- Security: CR#64, CR#65√æ√æWas not a CR:√æ√æ- REST Server configuration√æ- Template Data Cache√æ- DAC + row level security (RLS)√æ√æv1.1.2 (Apr 10 2018)√æ--------------------√æThis version merges Sheref's PR to allow CI using Travis.√æ√æThere are several changes including:√æ√æ- Tests are more or less operational but nevertheless work is needed to make them more meaningful (as well as coverage). To disable the tests, set maven skip test flag to ```true``` in the respective POMs:√æ√æ            <plugin>√æ                <groupId>org.apache.maven.plugins</groupId>√æ                <artifactId>maven-surefire-plugin</artifactId>√æ                <version>2.19</version>√æ                <configuration>√æ                    <skipTests>true</skipTests>√æ                </configuration>√æ            </plugin>√æ√æ- This version now uses PostgreSQL v10+. This is due mainly to better support returning compositions from AQL under√æa (canonical) JSON format. PostgreSQL 10 comes with interesting jsonb functions that makes this part easier since √æJSON encoding can be partially done at DB level (NB. in the future this encoding shall be totally performed at DB level). The corresponding DB functions are in a flyway migration [script](https://github.com/ethercis/ehrservice/blob/remote-github/db/src/main/resources/db/migration/V5__raw_json_encoding.sql)√æwhich can be run manually√æ√æ- To run the tests, it is expected that a DB is installed locally and contains test data. The test data can be restored√æfrom a [backup file](https://github.com/ethercis/VirtualEhr/blob/master/file_repo/db_test/testdb-pg10.backup). The restore√æcan be done using PGAdmin4 (since we use PostgreSQL 10). An easy way to proceed is to CASCADE DELETE schema 'ehr' and perform the restore using pg_restore as described in this [document](https://github.com/ethercis/ethercis/blob/master/doc/DB%20administration.md). Please note that the referential integrity trigger must be disabled. √æ√æThe DB installation can be done using the script found [here](https://github.com/ethercis/deploy-n-scripts/blob/master/ethercis-install/v1.1.0/install-db.sh). The install process is described in the [deploy-n-scripts](https://github.com/ethercis/deploy-n-scripts) section.√æ√æ√æSpring-is-almost-there Edition Feb 2018√æ---------------------------------------√æ√æ##### Changes in library structure√æ√æFew changes in the Uber jar generation to remove pesky dependencies on, yet-to-be-removed, org.openehr legacy classes. This has an impact on the classpath of the launch script to hold few more jars not included into the Uber jars anymore. Please note this will be modified soon as we are migrating to a continuous integration framework with Docker image generation.√æ√æThe changes consists in the following classpath addition in ecis-server script:√æ√æ```√æ${APPLIB}/CompositionTemplate.jar:\√æ${APPLIB}/openEHR.v1.Template.jar:\√æ${APPLIB}/composition_xml.jar:\√æ${APPLIB}/openEHR.v1.OperationalTemplate.jar√æ```√æThe above libraries have been added to lib/application repository.√æ√æThe main repository lib/deploy is updated with the latest changes.√æ√æ##### Operational Template Introspection (CR #74)√æ√æA new feature now support OPT introspection. Useful to automate some client UI construct or others. √æIt is also opening the door to further data analytics potential as introspection results can be used to further support complex DB queries. √æSee documentation in [OPT introspection](https://github.com/ethercis/ethercis/blob/master/doc/OPT%20introspection.md ""OPT introspection"")√æ√æ##### Full template querying returning a JSON object (CR #73)√æ√æThis changes allows to get a whole composition from a template in JSON format. √æ√æTo integrate this feature, a number of steps are required:√æ√æ- Migration of PostgreSQL to at least 9.6 (10 is recommended)√æ- Installation of the functions supporting JSON encoding at DB level. A script is provided to help in this process. √æSee in [resources/raw_json_encoding](https://github.com/ethercis/ehrservice/tree/remote-github/db/src/main/resources/raw_json_encoding)√æ√æIn the future, we plan to support most of encoding/retrieval/querying at DB level only (by-passing most of the middleware logic) for performance reason.√æ√æ##### Multiple fixes and enhancements√æ√æPlease see the list of closed/in-test CRs for more details.√æ√æ## Product/Project Support√æThis product /project is supported by the Ripple Foundation, who aim to enhance the EtherCIS solution. √æWe are working to fund as many of the enhancements of EtherCIS as we can based on projects that our non profit organisation supports.√æ√æWe will try to fix any key bugs and documentation errors ourselves. Other issues, requests for enhancements or feature additions, will be added to the project backlog.√æ√æIf you have a problem/issue/bug report, please log as an issue on this repo. √æ√æIf you want to ask the EtherCIS community a question/discuss an issue, after reading the documentation that is available, please visit our [Gitter chat channel for EtherCIS](https://gitter.im/Ripple-Foundation/EtherCIS)√æ√æThe Ripple Foundation is committed to offering free and open software, with quality, free and open documentation, but unfortunately is unable to offer free support for all issues/pull requests.√æ√æ(Our latest thinking on the best model to support our open platform mission in healthcare may best be understood by reading this article. https://opensource.com/business/16/4/refactoring-open-source-business-models√æ√æIf you would like to offer some of your energy/ suggest other ideas towards progressing an open platform in healthcare, please contact us at info@ripple.foundation )√æ√æIf you need support with a particular issue/pull request, please let us know and we can consider a bounty source (https://www.bountysource.com/), or indeed a formal project/support arrangement to get particular issues/requirements reviewed/ addressed.√æ√æThanks for your interest in EtherCIS√æ√æThe Ripple Foundation√æhttp://ripple.foundation/√æ "
tissya/Blockchain_simulator,49,3,4,4,User,False,Ëá™ÂàÜ„Åå‰Ωú„Å£„Åü„Éñ„É≠„ÉÉ„ÇØ„ÉÅ„Çß„Éº„É≥„ÅÆ„Ç∑„Éü„É•„É¨„Éº„Çø,,,3,Java,"{'': 1, 'iml': 1}",37,4,0,1,0,867,True,0,6,0,0,0,3,0,0,8,0,0,0,0,0,0,0,6,,11,,
folio-org/mod-permissions,571,0,21,1,Organization,False,Module to handle permissions and permissions/user associations,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",16,Java,"{'': 8, 'md': 3, 'xml': 1}",393,6,20,8,0,1413,False,,,,,1,83,1,11,7,0,3,16,3706,3511,0,0,220,5,,,"# mod-permissions√æ√æCopyright (C) 2016-2019 The Open Library Foundation√æ√æThis software is distributed under the terms of the Apache License,√æVersion 2.0. See the file ""[LICENSE](LICENSE)"" for more information.√æ√æ# Introduction√æ√æThis module stores permissions and associations between permissions and users.√æIt also maintains a hierarchy of permissions and sub-permissions, allowing for√æpermissions to act as roles, rather than simple bits. It is used primarily by√æthe Authtoken module, though it is possible that some Authentication√æimplementations may have reason to make calls to the Permissions module as well.√æ√æ# Additional information√æ√æThe [raml-module-builder](https://github.com/folio-org/raml-module-builder) framework.√æ√æOther [modules](https://dev.folio.org/source-code/#server-side).√æ√æOther FOLIO Developer documentation is at [dev.folio.org](https://dev.folio.org/)√æ√æ### Issue tracker√æ√æSee project [MODPERMS](https://issues.folio.org/browse/MODPERMS)√æat the [FOLIO issue tracker](https://dev.folio.org/guidelines/issue-tracker).√æ√æ### ModuleDescriptor√æ√æSee the built `target/ModuleDescriptor.json` for the interfaces that this module√ærequires and provides, the permissions, and the additional module metadata.√æ√æ### API documentation√æ√æThis module's [API documentation](https://dev.folio.org/reference/api/#mod-permissions).√æ√æ### Code analysis√æ√æ[SonarQube analysis](https://sonarcloud.io/dashboard?id=org.folio%3Amod-permissions).√æ√æ### Download and configuration√æ√æThe built artifacts for this module are available.√æSee [configuration](https://dev.folio.org/download/artifacts) for repository access,√æand the [Docker image](https://hub.docker.com/r/folioorg/mod-permissions/)."
evaastrid/FRCA05.6831.2019,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
Sayi/poi-tl,12120,1357,86,452,User,False,Minimal Microsoft word(docx) templating with {{template}} in Java,http://deepoove.com/poi-tl,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1}",368,10,6,3,6,1921,True,23,362,12,42,3,8,1,1,18,0,2,67,16483,8451,299,0,13,,89,,"# poi-tl(poi-template-language)√æ√æ[![Build Status](https://travis-ci.org/Sayi/poi-tl.svg?branch=master)](https://travis-ci.org/Sayi/poi-tl) ![jdk1.6+](https://img.shields.io/badge/jdk-1.6%2B-orange.svg) ![jdk1.8](https://img.shields.io/badge/jdk-1.8-orange.svg) ![poi3.16%2B](https://img.shields.io/badge/apache--poi-3.16%2B-blue.svg) ![poi4.0.0](https://img.shields.io/badge/apache--poi-4.0.0-blue.svg) [![Gitter](https://badges.gitter.im/Sayi/poi-tl.svg)](https://gitter.im/Sayi/poi-tl?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)√æ√æWord Ê®°ÊùøÂºïÊìéÔºåÂü∫‰∫éApache POI - the Java API for Microsoft Documents„ÄÇ√æ√æ## What is poi-tl√æÂ∏∏ËßÅÁöÑÊ®°ÊùøÂºïÊìé(Â¶ÇFreeMarker„ÄÅVelocity)Âü∫‰∫éÊñáÊú¨Ê®°ÊùøÂíåÊï∞ÊçÆÁîüÊàêÊñ∞ÁöÑHTMLÈ°µÈù¢„ÄÅÈÖçÁΩÆÊñá‰ª∂Á≠âÔºåpoi-tlÊòØWordÊ®°ÊùøÂºïÊìéÔºåÂü∫‰∫é**Microsoft WordÊ®°Êùø**ÂíåÊï∞ÊçÆÁîüÊàê**Êñ∞ÁöÑÊñáÊ°£**„ÄÇ√æ√æpoi-tlÊòØ‰∏ÄÁßç *""logic-less""* Ê®°ÊùøÂºïÊìéÔºåÊ≤°ÊúâÂ§çÊùÇÁöÑÊéßÂà∂ÁªìÊûÑÂíåÂèòÈáèËµãÂÄºÔºåÂè™Êúâ**Ê†áÁ≠æ**Ôºå‰∏Ä‰∫õÊ†áÁ≠æÂèØ‰ª•Ë¢´ÊõøÊç¢‰∏∫ÊñáÊú¨„ÄÅÂõæÁâá„ÄÅË°®Ê†ºÁ≠âÔºå‰∏Ä‰∫õÊ†áÁ≠æ‰ºöÈöêËóèÊüê‰∫õÊñáÊ°£ÂÜÖÂÆπÔºåËÄåÂè¶‰∏Ä‰∫õÊ†áÁ≠æÂàô‰ºöÂ∞Ü‰∏ÄÁ≥ªÂàóÊñáÊ°£ÂÜÖÂÆπÂæ™ÁéØÊ∏≤Êüì„ÄÇ√æ√æ> ""Powerful"" constructs like variable assignment or conditional statements make it easy to modify the look of an application within the template system exclusively... however, at the cost of separation, turning the templates themselves into part of the application logic.√æ> √æ> [„ÄäGoogle CTemplate„Äã](https://github.com/OlafvdSpek/ctemplate/blob/master/doc/guide.html)√æ√æWordÊ®°ÊùøÊã•Êúâ‰∏∞ÂØåÁöÑÊ†∑ÂºèÔºåpoi-tlÂú®ÁîüÊàêÁöÑÊñáÊ°£‰∏≠‰ºöÂÆåÁæé‰øùÁïôÊ®°Êùø‰∏≠ÁöÑÊ†∑ÂºèÔºåËøòÂèØ‰ª•‰∏∫Ê†áÁ≠æËÆæÁΩÆÊ†∑ÂºèÔºåÊ†áÁ≠æÁöÑÊ†∑Âºè‰ºöË¢´Â∫îÁî®Âà∞ÊõøÊç¢ÂêéÁöÑÊñáÊú¨‰∏äÔºåÂõ†Ê≠§‰Ω†ÂèØ‰ª•‰∏ìÊ≥®‰∫éÊ®°ÊùøËÆæËÆ°„ÄÇ√æ√æpoi-tlÊîØÊåÅËá™ÂÆö‰πâÊ∏≤ÊüìÂáΩÊï∞(Êèí‰ª∂)ÔºåÂáΩÊï∞ÂèØ‰ª•Âú®WordÊ®°ÊùøÁöÑ‰ªª‰Ωï‰ΩçÁΩÆÊâßË°åÔºåÂú®ÊñáÊ°£ÁöÑ‰ªª‰ΩïÂú∞ÊñπÂÅö‰ªª‰Ωï‰∫ãÊÉÖ(*Do Anything Anywhere*)ÊòØpoi-tlÁöÑÊòüËæ∞Â§ßÊµ∑„ÄÇ√æ√æ## Maven√æ√æ```xml√æ<dependency>√æ  <groupId>com.deepoove</groupId>√æ  <artifactId>poi-tl</artifactId>√æ  <version>1.7.3</version>√æ</dependency>√æ```√æ√æ## 2ÂàÜÈíüÂø´ÈÄüÂÖ•Èó®√æ‰ªé‰∏Ä‰∏™Ë∂ÖÁ∫ßÁÆÄÂçïÁöÑ‰æãÂ≠êÂºÄÂßãÔºöÊää`{{title}}`ÊõøÊç¢Êàê""poi-tl Ê®°ÊùøÂºïÊìé""„ÄÇ√æ√æ1. Êñ∞Âª∫ÊñáÊ°£Ê®°Êùø`template.docx`ÔºåÂåÖÂê´Ê†áÁ≠æ`{{title}}`√æ2. TDOÊ®°ÂºèÔºöTemplate + data-model = output√æ√æ```java√æ//Ê†∏ÂøÉAPIÈááÁî®‰∫ÜÊûÅÁÆÄËÆæËÆ°ÔºåÂè™ÈúÄË¶Å‰∏ÄË°å‰ª£Á†Å√æXWPFTemplate.compile(""template.docx"").render(new HashMap<String, Object>(){{√æ        put(""title"", ""poi-tl Ê®°ÊùøÂºïÊìé"");√æ}}).writeToFile(""out_template.docx"");√æ```√æÊâìÂºÄ`out_template.docx`ÊñáÊ°£ÂêßÔºå‰∏ÄÂàáÂ¶Ç‰Ω†ÊâÄÊÑø„ÄÇ√æ√æ## Ê†áÁ≠æ√æÊ†áÁ≠æÁî±ÂâçÂêé‰∏§‰∏™Â§ßÊã¨Âè∑ÁªÑÊàêÔºå`{{title}}`ÊòØÊ†áÁ≠æÔºå`{{?title}}`‰πüÊòØÊ†áÁ≠æÔºå`title`ÊòØËøô‰∏™Ê†áÁ≠æÁöÑÂêçÁß∞Ôºå`?`Ê†áËØÜ‰∫ÜÊ†áÁ≠æÁ±ªÂûãÔºåÊé•‰∏ãÊù•Êàë‰ª¨Êù•ÁúãÁúãÊúâÂì™‰∫õÊ†áÁ≠æÁ±ªÂûã„ÄÇ√æ√æ### ÊñáÊú¨√æÊñáÊú¨Ê†áÁ≠æÊòØWordÊ®°Êùø‰∏≠ÊúÄÂü∫Êú¨ÁöÑÊ†áÁ≠æÁ±ªÂûãÔºå`{{name}}`‰ºöË¢´Êï∞ÊçÆÊ®°Âûã‰∏≠key‰∏∫`name`ÁöÑÂÄºÊõøÊç¢ÔºåÂ¶ÇÊûúÊâæ‰∏çÂà∞ÈªòËÆ§‰ºöÊ∏ÖÁ©∫Ê†áÁ≠æÔºåÂèØ‰ª•ÈÖçÁΩÆÊòØ‰øùÁïôËøòÊòØÊäõÂá∫ÂºÇÂ∏∏„ÄÇ√æ√æÊñáÊú¨Ê†áÁ≠æÁöÑÊ†∑Âºè‰ºöÂ∫îÁî®Âà∞ÊõøÊç¢ÂêéÁöÑÊñáÊú¨‰∏äÔºåÊ≠£Â¶Ç‰∏ãÈù¢ÁöÑ‰æãÂ≠êÊâÄÁ§∫„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""name"": ""Mama"",√æ  ""thing"": ""chocolates""√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ**{{name}}** always said life was like a box of {{thing}}.  √æ~~{{name}}~~ always said life was like a box of {{thing}}.√æ√æËæìÂá∫:√æ√æ**Mama** always said life was like a box of chocolates.  √æ~~Mama~~ always said life was like a box of chocolates.√æ√æ### ÂõæÁâá√æÂõæÁâáÊ†áÁ≠æ‰ª•`@`ÂºÄÂßãÔºåÂ¶Ç`{{@logo}}`‰ºöÂú®Êï∞ÊçÆ‰∏≠ÂØªÊâækey‰∏∫`logo`ÁöÑÂÄºÔºåÁÑ∂ÂêéÂ∞ÜÊ†áÁ≠æÊõøÊç¢ÊàêÂõæÁâá„ÄÇÁî±‰∫éWordÊñáÊ°£‰∏≠ÂõæÁâá‰∏çÊòØÁî±Â≠óÁ¨¶‰∏≤Ë°®Á§∫(Âú®ÊñáÊú¨ÂûãÊ®°Êùø‰∏≠ÔºåÊØîÂ¶ÇHTMLÁΩëÈ°µÂõæÁâáÊòØÁî±Â≠óÁ¨¶‰∏≤`<img src="""" />`Ë°®Á§∫)ÔºåÊâÄ‰ª•ÂõæÁâáÊ†áÁ≠æÂØπÂ∫îÁöÑÊï∞ÊçÆÊúâ‰∏ÄÂÆöÁöÑÁªìÊûÑË¶ÅÊ±ÇÔºåËøô‰∫õÁªìÊûÑÈÉΩ‰ºöÊúâÁõ∏Â∫îÁöÑJavaÁ±ªÂØπÂ∫î„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""watermelon"": {√æ    ""path"": ""assets/watermelon.png""√æ  },√æ  ""lemon"": {√æ    ""path"": ""http://xxx/lemon.png""√æ  },√æ  ""banana"": {√æ    ""path"": ""sob.png"",√æ    ""width"": 24,√æ    ""height"": 24√æ  }√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æFruit Logo:√æwatermelon {{@watermelon}}√ælemon {{@lemon}}√æbanana {{@banana}}√æ```√æ√æËæìÂá∫:√æ√æ```√æFruit Logo:√æwatermelon üçâ√ælemon üçã√æbanana üçå√æ```√æ√æ### Ë°®Ê†º√æË°®Ê†ºÊ†áÁ≠æ‰ª•`#`ÂºÄÂßãÔºåÂ¶Ç`{{#table}}`ÔºåÂÆÉ‰ºöË¢´Ê∏≤ÊüìÊàêNË°åNÂàóÁöÑWordË°®Ê†ºÔºåNÁöÑÂÄºÂèñÂÜ≥‰∫é`table`Ê†áÁ≠æÁöÑÂÄº„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""song"": {√æ    ""rows"": [√æ      {√æ        ""cells"": [√æ          {""cellText"": {""text"": ""Song name""}},√æ          {""cellText"": {""text"": ""artist""}}√æ        ]√æ      }√æ    ],√æ    ""rows"": [√æ      {√æ        ""cells"": [√æ          {""cellText"": {""text"": ""Memories""}},√æ          {""cellText"": {""text"": ""Maroon 5""}}√æ        ],√æ        ""rowStyle"":{√æ          ""backgroundColor"":""f6f8fa""√æ        }√æ      }√æ    ]√æ  }√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æ{{#song}}√æ```√æ√æËæìÂá∫:√æ√æ<table>√æ<tr><td>Song name</td><td>Artist</td></tr>√æ<tr><td>Memories</td><td>Maroon 5</td></tr>√æ</table>√æ√æ### ÂàóË°®√æÂàóË°®Ê†áÁ≠æÂØπÂ∫îWordÁöÑÁ¨¶Âè∑ÂàóË°®ÊàñËÄÖÁºñÂè∑ÂàóË°®Ôºå‰ª•`*`ÂºÄÂßãÔºåÂ¶Ç`{{*number}}`„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""feature"": {√æ    ""numFmt"": {√æ      ""decimal"": ""%1)""√æ    },√æ    ""numbers"": [√æ      {√æ        ""text"": ""Plug-in function, define your own function""√æ      },√æ      {√æ        ""text"": ""Supports text, pictures, table, list, if, foreach...""√æ      },√æ      {√æ        ""text"": ""Templates, not just templates, but also style templates""√æ      }√æ    ]√æ  }√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æ{{*feature}}√æ```√æ√æËæìÂá∫:√æ√æ```√æ1) Plug-in function, define your own function√æ2) Supports text, pictures, table, list, if, foreach...√æ3) Templates, not just templates, but also style templates√æ```√æ√æ### Âå∫ÂùóÂØπ√æÂå∫ÂùóÂØπÁî±ÂâçÂêé‰∏§‰∏™Ê†áÁ≠æÁªÑÊàêÔºåÂºÄÂßãÊ†áÁ≠æ‰ª•`?`Ê†áËØÜÔºåÁªìÊùüÊ†áÁ≠æ‰ª•`/`Ê†áËØÜÔºåÂ¶Ç`{{?sections}}`‰Ωú‰∏∫sectionsÂå∫ÂùóÁöÑËµ∑ÂßãÊ†áÁ≠æÔºå`{{/sections}}`‰∏∫ÁªìÊùüÊ†áÁ≠æÔºåsectionsÊòØËøô‰∏™Âå∫ÂùóÂØπÁöÑÂêçÁß∞„ÄÇ√æ√æÂå∫ÂùóÂØπÂú®Â§ÑÁêÜ‰∏ÄÁ≥ªÂàóÊñáÊ°£ÂÖÉÁ¥†ÁöÑÊó∂ÂÄôÈùûÂ∏∏ÊúâÁî®Ôºå‰Ωç‰∫éÂå∫ÂùóÂØπ‰∏≠ÁöÑÊñáÊ°£ÂÖÉÁ¥†(ÊñáÊú¨„ÄÅÂõæÁâá„ÄÅË°®Ê†ºÁ≠â)ÂèØ‰ª•Ë¢´Ê∏≤ÊüìÈõ∂Ê¨°Ôºå‰∏ÄÊ¨°ÊàñNÊ¨°ÔºåËøôÂèñÂÜ≥‰∫éÂå∫ÂùóÂØπÁöÑÂèñÂÄº„ÄÇ√æ√æ#### FalseÊàñÁ©∫ÈõÜÂêà√æÂ¶ÇÊûúÂå∫ÂùóÂØπÁöÑÂÄºÊòØ`null`„ÄÅ`false`ÊàñËÄÖÁ©∫ÁöÑÈõÜÂêàÔºå‰Ωç‰∫éÂå∫Âùó‰∏≠ÁöÑÊâÄÊúâÊñáÊ°£ÂÖÉÁ¥†Â∞Ü**‰∏ç‰ºöÊòæÁ§∫**ÔºåÁ±ª‰ºº‰∫éifËØ≠Âè•ÁöÑÊù°‰ª∂‰∏∫`false`„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""announce"": false√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æMade it,Ma!{{?announce}}Top of the world!{{/announce}}√æMade it,Ma!√æ{{?announce}}√æTop of the world!üéã√æ{{/announce}}√æ```√æ√æËæìÂá∫:√æ√æ```√æMade it,Ma!√æMade it,Ma!√æ```√æ√æ#### ÈùûFalse‰∏î‰∏çÊòØÈõÜÂêà√æÂ¶ÇÊûúÂå∫ÂùóÂØπÁöÑÂÄº‰∏ç‰∏∫`null`„ÄÅ`false`Ôºå‰∏î‰∏çÊòØÈõÜÂêàÔºå‰Ωç‰∫éÂå∫Âùó‰∏≠ÁöÑÊâÄÊúâÊñáÊ°£ÂÖÉÁ¥†‰ºöË¢´**Ê∏≤Êüì‰∏ÄÊ¨°**ÔºåifËØ≠Âè•ÁöÑÊù°‰ª∂‰∏∫`true`„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""person"": { ""name"": ""Sayi"" }√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æ{{?person}}√æ  Hi {{name}}!√æ{{/person}}√æ```√æ√æËæìÂá∫:√æ√æ```√æ  Hi Sayi!√æ```√æ√æ#### ÈùûÁ©∫ÈõÜÂêà√æÂ¶ÇÊûúÂå∫ÂùóÂØπÁöÑÂÄºÊòØ‰∏Ä‰∏™ÈùûÁ©∫ÈõÜÂêàÔºåÂå∫Âùó‰∏≠ÁöÑÊñáÊ°£ÂÖÉÁ¥†‰ºöË¢´Ëø≠‰ª£Ê∏≤Êüì**‰∏ÄÊ¨°ÊàñËÄÖNÊ¨°**ÔºåËøôÂèñÂÜ≥‰∫éÈõÜÂêàÁöÑÂ§ßÂ∞èÔºåÁ±ª‰ºº‰∫éforeachËØ≠Ê≥ï„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""songs"": [√æ    { ""name"": ""Memories"" },√æ    { ""name"": ""Sugar"" },√æ    { ""name"": ""Last Dance(‰ºç‰Ω∞)"" }√æ  ]√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æ{{?songs}}√æ{{name}}√æ{{/songs}}√æ```√æ√æËæìÂá∫:√æ√æ```√æMemories√æSugar√æLast Dance(‰ºç‰Ω∞)√æ```√æ√æÂú®Âæ™ÁéØ‰∏≠ÂèØ‰ª•ÈÄöËøá‰∏Ä‰∏™ÁâπÊÆäÁöÑÊ†áÁ≠æ`{{=#this}}`Áõ¥Êé•ÂºïÁî®ÂΩìÂâçËø≠‰ª£ÁöÑÂØπË±°„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""produces"": [√æ    ""application/json"",√æ    ""application/xml""√æ  ]√æ}√æ```√æ√æWordÊ®°Êùø:√æ√æ```√æ{{?produces}}√æ{{=#this}}√æ{{/produces}}√æ```√æ√æËæìÂá∫:√æ√æ```√æapplication/json√æapplication/xml√æ```√æ√æ### ÂµåÂ•ó√æÂµåÂ•óÊòØÂú®WordÊ®°Êùø‰∏≠ÂºïÂÖ•Âè¶‰∏Ä‰∏™WordÊ®°ÊùøÔºåÂèØ‰ª•ÁêÜËß£‰∏∫import„ÄÅincludeÊàñËÄÖwordÊñáÊ°£ÂêàÂπ∂Ôºå‰ª•`+`Ê†áËØÜÔºåÂ¶Ç`{{+nested}}`„ÄÇ√æ√æÊï∞ÊçÆ:√æ```json√æ{√æ  ""nested"": {√æ    ""file"": ""template/sub.docx"",√æ    ""dataModels"": [√æ      {√æ        ""addr"": ""Hangzhou,China""√æ      },√æ      {√æ        ""addr"": ""Shanghai,China""√æ      }√æ    ]√æ  }√æ}√æ```√æ√æÁªôÂÆö‰∏§‰∏™WordWordÊ®°Êùø:√æ√æ```√æmain.docx:√æHello, World√æ{{+nested}}√æ√ætemplate/sub.docx:√æAddress: {{addr}}√æ```√æ√æËæìÂá∫:√æ√æ```√æHello, World√æAddress: Hangzhou,China√æAddress: Shanghai,China√æ```√æ√æ## ËØ¶ÁªÜÊñáÊ°£‰∏éÁ§∫‰æã√æ√æ[‰∏≠ÊñáÊñáÊ°£Documentation](http://deepoove.com/poi-tl)  √æ√æ* [Âü∫Á°Ä(ÂõæÁâá„ÄÅÊñáÊú¨„ÄÅË°®Ê†º„ÄÅÂàóË°®)Á§∫‰æãÔºöËΩØ‰ª∂ËØ¥ÊòéÊñáÊ°£](http://deepoove.com/poi-tl/#_%E8%BD%AF%E4%BB%B6%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3)√æ* [Ë°®Ê†ºÁ§∫‰æãÔºö‰ªòÊ¨æÈÄöÁü•‰π¶](http://deepoove.com/poi-tl/#example-table)√æ* [Âæ™ÁéØÁ§∫‰æãÔºöOKRÁõÆÊ†áÂà∂ÂÆö](http://deepoove.com/poi-tl/#example-okr)√æ* [ExampleÔºö‰∏™‰∫∫ÁÆÄÂéÜÂàõ‰Ωú](http://deepoove.com/poi-tl/#example-resume)√æ* [ExampleÔºöSwaggerÊñáÊ°£](http://deepoove.com/poi-tl/#example-swagger)√æ√æÊõ¥Â§öÁöÑÁ§∫‰æã‰ª•ÂèäÊâÄÊúâÁ§∫‰æãÁöÑÊ∫êÁ†ÅÂèÇËßÅJUnitÂçïÂÖÉÊµãËØï„ÄÇ√æ√æ![](http://deepoove.com/poi-tl/demo.png)√æ![](http://deepoove.com/poi-tl/demo_result.png)√æ√æ## ContributingË¥°ÁåÆ√æ‰Ω†ÂèØ‰ª•ÊúâÂæàÂ§öÈÄîÂæÑÂä†ÂÖ•Ëøô‰∏™È°πÁõÆÔºå‰∏çÈôê‰∫é‰ª•‰∏ãÊñπÂºèÔºö√æ* ÂèçÈ¶à‰ΩøÁî®‰∏≠ÈÅáÂà∞ÁöÑÈóÆÈ¢ò√æ* ÂàÜ‰∫´ÊàêÂäüÁöÑÂñúÊÇ¶√æ* Êõ¥Êñ∞ÂíåÂÆåÂñÑÊñáÊ°£√æ* Ëß£ÂÜ≥ÂíåËÆ®ËÆ∫Issue√æ√æ## Âª∫ËÆÆÂíåÂÆåÂñÑ√æÂèÇËßÅ[Â∏∏ËßÅÈóÆÈ¢ò](http://deepoove.com/poi-tl/#_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98)ÔºåÊ¨¢ËøéÂú®GitHub Issue‰∏≠ÊèêÈóÆÂíå‰∫§ÊµÅ„ÄÇ√æ√æÁ§æÂå∫‰∫§ÊµÅËÆ®ËÆ∫Áæ§Ôºö[GitterÈ¢ëÈÅì](https://gitter.im/Sayi/poi-tl)"
openstack/monasca-common,885,49,7,22,Organization,False,Monasca common classes,https://opendev.org,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",25,Java,"{'': 4, 'conf': 1, 'yaml': 1, 'rst': 3, 'txt': 5, 'yml': 1, 'xml': 1, 'sh': 1, 'cfg': 1, 'py': 1, 'ini': 1}",518,8,42,50,0,2316,False,,,,,0,10,0,6,8,0,7,12,56,78,0,0,762,0,,,"Team and repository tags√æ========================√æ√æ.. image:: https://governance.openstack.org/tc/badges/monasca-common.svg√æ    :target: https://governance.openstack.org/tc/reference/tags/index.html√æ√æ.. Change things from this point on√æ√æOverview√æ========√æ√æ``monasca-common`` is a collection of modules containing reusable application√æand platform code for building monitoring related services.√æ√æPython√æ======√æ√æTo install the Python monasca-common modules, git clone the source and√ærun the following command:√æ√æ::√æ√æ   $ sudo python setup.py install√æ√æTo run the unit tests use:√æ√æ::√æ√æ   $ tox -e py35√æ√æFor information on contributing, see `Contribution Guidelines`_.√æ√æ* License: Apache License, Version 2.0√æ* Source: https://opendev.org/openstack/monasca-common√æ* Bugs: https://storyboard.openstack.org/#!/project/865√æ√æ.. _`Contribution Guidelines`: https://docs.openstack.org/monasca-api/latest/contributor/index.html√æ√æJava√æ======√æ√æBuild Instructions√æ~~~~~~~~~~~~~~~~~~√æ√æDownload and do mvn install.√æ√æ::√æ√æ   $ cd java√æ   $ mvn clean install√æ√æ.. caution::√æ√æ  There is a pom.xml in the base directory but that should only be used√æ  for the Zuul build.√æ√æThe issue is that currently StackForge‚Äôs bare-precise system only has Maven 2√æon it and at least one of the modules of monasca-common requires Maven 3.√æ√æIn order to get around this problem, the pom.xml in the base directory√æuses the exec-maven-plugin to run the script run_maven.sh. This script√æchecks if the version of mvn is Maven 3 and if it is not, it downloads√æMaven 3 and then uses it to run the build in the java directory.√æ√æIn addition, the run_maven.sh script copies the jar files that get built√æfrom java/``*``/target directories to the target directory in the base√æproject directory. This is because the StackForge√æ‚Äúmonasca-common-localrepo-upload‚Äù job uploads any jar files from that√ædirectory to https://tarballs.opendev.org/openstack/ci/monasca-common.√æCopying the jar files to that directory made it so there didn‚Äôt have to√æbe changes made to the ‚Äúmonasca-common-localrepo-upload‚Äù job. The build√æfor monasca-thresh downloads the jars it depends on from that location on√ætarballs.openstack.org.√æ√æA change has been submitted to StackForge to switch to bare-trusty for√æthis build in the hopes that those systems will have maven 3, but it is√ænot known how long that change will take to be accepted.√æ√æApplication Specific Sub-Projects√æ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~√æ√æ-  `monasca-common-model`_ - Common domain and event models for√æ   monitoring services.√æ√æPlatform Sub-Projects√æ~~~~~~~~~~~~~~~~~~~~~√æ√æ-  `monasca-common-dropwizard`_ - Utilities for building and testing√æ   dropwizard services.√æ-  `monasca-common-hibernate`_ - Hibernate based model of Monasca SQL√æ   schema√æ-  `monasca-common-influxdb`_ - InfluxDB related utilities.√æ-  `monasca-common-kafka`_ - Various utilities for working with Kafka.√æ-  `monasca-common-persistence`_ - Persistence related infrastructure√æ   and utilities.√æ-  `monasca-common-streaming`_ - Streaming related utilities.√æ-  `monasca-common-testing`_ - A set of testing related dependencies.√æ-  `monasca-common-util`_ - Various utilities such as for serialization,√æ   dependency injection, date and time, invocation retries, concurrency,√æ   etc.√æ√æ√æ√æ.. _monasca-common-model: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-model√æ.. _monasca-common-dropwizard: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-dropwizard√æ.. _monasca-common-hibernate: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-hibernate√æ.. _monasca-common-influxdb: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-influxdb√æ.. _monasca-common-kafka: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-kafka√æ.. _monasca-common-persistence: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-persistence√æ.. _monasca-common-streaming: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-streaming√æ.. _monasca-common-testing: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-testing√æ.. _monasca-common-util: https://github.com/openstack/monasca-common/tree/master/java/monasca-common-util"
ELTE-Soft/txtUML,16054,22,18,9,Organization,False,"Textual, eXecutable, Translatable UML",http://txtuml.inf.elte.hu,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",6,Java,"{'': 3, 'md': 1}",3159,29,10,33,0,2197,True,91,290,1,0,8,250,0,0,30,0,0,0,0,0,0,0,3,13,,,"# txtUML ![build status](http://mextest.inf.elte.hu/txtUML-master-status)√æTextual, eXecutable, Translatable UML ‚Äì an open source project to make model driven development easier. See the user documentation and installation at the [txtUML website](http://txtuml.inf.elte.hu). For developer documentation, see the [txtUML wiki](https://github.com/ELTE-Soft/txtUML/wiki).√æ√æ## Textual√æExperience shows that graphical diagrams are valuable for understanding software. On the other hand, writing software in text is usually far more efficient than drawing diagrams in a modeling IDE. The txtUML project aims at combining the advantages of these two approaches: creating models textually and still have possibility to visualize it on graphical diagrams.√æ√ætxtUML is a Java library that provides the constructs of executable UML modeling. A model is a Java program that uses this library. Models can be edited, searched, version controlled, refactored as any other Java program, and there is no need to learn new syntax.√æ√æ## Executable√æUML is mostly used to informally specify the architecture of software, but it is capable to do much more. Executable models specify all aspects of software from components and classes to state machines and activities. They can be executed, debugged and tested independently of the target platform where the software will finally work.√æ√æSince txtUML models are Java programs, it is possible to run, debug and test them using the standard Java runtime environments, debuggers and test frameworks.√æ√æ## Translatable√æModel compilers translate the abstract models to programs that are written in an implementation language (like C, C++, Java etc.) and are designed to work in a specific runtime environment (hardware, operating system, specific libraries). Our project includes a generic C++ model compiler that can be used as is, or as a basis to create a new compilers for different languages and special platforms."
reaktivity/nukleus-sse.java,484,1,2,6,Organization,False,Server-Sent Events Nukleus Implementation,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 5, 'yml': 1, 'md': 1, 'cmd': 1, 'xml': 1}",666,3,77,6,0,1299,True,3,5,0,0,0,26,0,9,9,0,3,51,523,396,1,0,47,0,,,# Server-Sent Events Nukleus Implementation√æ√æ[![Build Status][build-status-image]][build-status]√æ[![Code Coverage][code-coverage-image]][code-coverage]√æ√æ#### Build√æ```bash√æ./mvnw clean install√æ```√æ#### Build on Windows√æ```bash√æmvnw.cmd clean install√æ```√æ√æ[build-status-image]: https://travis-ci.com/reaktivity/nukleus-sse.java.svg?branch=develop√æ[build-status]: https://travis-ci.com/reaktivity/nukleus-sse.java√æ[code-coverage-image]: https://codecov.io/gh/reaktivity/nukleus-sse.java/branch/develop/graph/badge.svg√æ[code-coverage]: https://codecov.io/gh/reaktivity/nukleus-sse.java
flexiblepower/defpi-core,21263,3,9,1,Organization,False,"This is the dEF-Pi platform itself, without applications running on top of it. dEF-Pi is the successor of EF-Pi (f.k.a. FPAI)",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",17,Java,"{'': 4, 'md': 1}",1180,3,9,5,0,1197,True,0,0,0,0,0,9,0,1,10,0,1,8,334,309,0,0,16,5,,,"# dEF-Pi√æThis project contains the Java implementation of the Distributed Energy Flexibility Platform and Interface.√æ√æCurrent build status:√æ[![build status](https://ci.tno.nl/gitlab/FAN/def-pi/badges/master/build.svg)](https://ci.tno.nl/gitlab/FAN/def-pi/commits/master)√æ√æWe use maven to integrate all projects, and as such, the following command can be used to compile the projects:√æ√æ```√æmvn -f master/pom.xml install√æ```√æ√æThe project is separated in the following sub projects:√æ√æ- master√æ- service-parent√æ- api√æ- commons√æ- codegen-common√æ- maven-plugin√æ- orchestrator√æ- service√æ- dashboard-gateway√æ√æ## Maven Parent POM√æThe main maven project object model defines the settings that are used for all defpi projects. It defines where to get and where to push the modules as well as the java version and file encoding, and the plugins and dependencies to use.√æ√æ#### Service-parent√æA special sub-project of the master POM is the service parent. The service parent functions as a parent POM for all the services. Any developer implementing a service will have to use it as the parent to apply all functionality of the dEF-Pi platform. This includes the code-generation plugin and the service library for communication with the orchestrator. More information about this in the relevant sections.√æ√æA fat JAR is created using the maven-assembly-pluing to make sure all dependencies are available in one JAR file. The docker-maven-plugin from Spotify is used to actually build and push the image. On the *package* phase the plugin will build the docker image using the compiled jar, and in the *deploy* pushes it to the registry.√æ√æ## API√æThe API project contains the API specification used in the Orchestrator. Using the [Swagger framework](https://swagger.io), enabling the development accross the entire API lifecycle, including design and documentation.√æ√æThe packages used in the API project are:√æ√æ* `org.flexiblepower.api` describing the endpoints of the API.√æ* `org.flexiblepower.exceptions` describing the exceptions that can be thrown by the API.√æ* `org.flexiblepower.model` containing the data objects that act as input or output of the API.√æ√æ## Commons√æThe Commons project contains code shared accross multiple sub-projects. The shared code focuses on the communication and serialization of messages between the orchestrator and processes.√æ√æ## Codegen-common√æThe Codegen Commons project contains the shared code for the Java and Python code generation projects. Providing the parsing of Service Descriptions (``service.json``) and a template engine.√æ√æ## Defpi-maven-plugin√æThis maven plugin facilitates developers of dEF-Pi components. It does so by providing code that manages dEF-Pi connections and handles messages that are sent and received.√æThe only necessary input to this process is a service description where you specify a list of components and which types of messages are sent and received by each component. Also, a link to the message format is provided.√æ√æThis file ``service.json`` must be placed in the src/main/resources folder. The maven plugin generates protobuf sources as well as the XSD files will be compiled to java code, and the interfaces and factories are built that are used by the service library.√æ√æThe code generation step only executes on demand; it is not bound by default to a maven phase. The reason is to avoid overwriting code, in case the user wants to change interface, *even though this is not recommended!*.√æTo use the code generation first prepare a valid ``service.json`` file and then run the ``generate`` Maven goal, as follows:√æ√æ```√æmvn defpi:generate√æ```√æ√æ## Orchestrator√æThe orchestrator is the component responsible for all containers and communication links between containers. It also acts as proxy for the service repository and the message repository.√æ√æhe Orchestrator project contains implements the Orchestrator, used to manage Users, Services, Processes, Connections, and Nodes.√æ√æThe package structure of the orchestrator is as follows:√æ√æ* `org.flexiblepower.connectors` this package contains the connectors to components outside the orchestrator, the available connectors are:√æ  - `DockerConnector` to connect to the Docker Engine of the Docker Swarm manager.√æ  - `MongoDBConnector` to connect to the MongoDB store, containing information on: _Users_, _Processes_, and _Connections_. The MongoDB store also provides a proxy to Service descriptions.√æ  - `ProcessConnector` to connect to running _processes_.√æ  - `RegistryConnector` to connect to the _Registry_√æ* `org.flexiblepower.orchestrator` this package contains the _UserManager_, _ServiceManager_, and _NodeManager_.√æ* `org.flexiblepower.orchestrator.pendingchange` this package contains the _PendingChangeManager_, responsible for robustly applying changes to processes.√æ* `org.flexiblepower.process` this package contains the _ProcessManager_, responsible for the lifecycle management of processes.√æ* `org.flexiblepower.rest` provides a REST interface implementation of the API project, in order to communicate with the _Orchestrator_.√æ√æThe REST API uses JSON for serialization and deserialization, jackson fasterxml library is used to map Json to java objects and vice versa.√æ√æ## Service Library√æThe Service project contains the service library used for the implementation of Java services. Providing the communication with the _Orchestrator_ and integrates the implementation of a service.√æ√æ## Dashboard-gateway√æThe dashboard gateway is a dEF-Pi service that acts as gateway for the dashboard. Allowing users to deploy different types of user interfaces for communicating with the orchestrator."
luweibin3118/PieChartView,369,58,4,11,User,False,AndroidÂÆûÁé∞Pie ChartÔºàÈ•ºÁä∂ÂõæÔºâÔºåÂèØËÆæÁΩÆ‰∏∫ÁéØÂΩ¢Âõæ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",11,1,4,1,0,892,True,4,2,0,0,0,0,0,0,8,0,0,0,0,0,0,0,21,,5,,"# PieChartView√æAndroidÂÆûÁé∞Pie ChartÔºàÈ•ºÁä∂ÂõæÔºâÔºåÂèØËÆæÁΩÆ‰∏∫ÁéØÂΩ¢Âõæ√æ√æÈ°πÁõÆÊ∑ªÂä†‰æùËµñÔºö√æproject/build.gradle‰∏≠Ê∑ªÂä†Ôºö√æ√æ allprojects {√æ     repositories {√æ         ...√æ         maven { url 'https://jitpack.io' }√æ     }√æ }√æ√æproject/app/build.gradle‰∏≠Ê∑ªÂä†Ôºö√æ √æ dependencies {√æ        implementation 'com.github.luweibin3118:PieChartView:v1.1.2'√æ    }√æ√æ√æ 1. Âú®Â∏ÉÂ±ÄÊñá‰ª∂‰∏≠ÂºïÂÖ•RadarChartViewÔºö√æ √æ √æ    <com.lwb.piechart.PieChartView√æ        android:id=""@+id/pie_chart_view""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""match_parent"" />√æ√æ√æ √æ 2. Java‰ª£Á†Å‰∏≠ÔºåÈÄöËøá‰ª•‰∏ãÊñπÊ≥ïÊ∑ªÂä†‰∏ÄÊù°Â±ûÊÄßÔºö√æ√æ        PieChartView pieChartView = findViewById(R.id.pie_chart_view);√æ        pieChartView.addItemType(new PieChartView.ItemType(""ËãπÊûú"", 25, 0xff20B2AA));√æ        pieChartView.addItemType(new PieChartView.ItemType(""Âçé‰∏∫"", 17, 0xff68228B));√æ        pieChartView.addItemType(new PieChartView.ItemType(""Â∞èÁ±≥"", 13, 0xff8B5A00));√æ        pieChartView.addItemType(new PieChartView.ItemType(""‰∏âÊòü"", 8, 0xffCD3700));√æ        pieChartView.addItemType(new PieChartView.ItemType(""OPPO"", 6, 0xff8968CD));√æ        pieChartView.addItemType(new PieChartView.ItemType(""VIVO"", 5, 0xff437145));√æ        pieChartView.addItemType(new PieChartView.ItemType(""È≠ÖÊóè"", 4, 0xff8DB6CD));√æ        pieChartView.addItemType(new PieChartView.ItemType(""ËÅîÊÉ≥"", 2, 0xff6B8E23));√æ        pieChartView.addItemType(new PieChartView.ItemType(""ÂÖ∂‰ªñÂìÅÁâå"", 20, 0xff999999));√æ√æ ![image](https://github.com/luweibin3118/PieChartView/blob/master/app/Screenshot_20180112-211844.png)√æ  √æ 4. ËÆæÁΩÆ‰ª•‰∏ãÊñπÊ≥ïÂèØÂπ≥ÁßªÈ•ºÂõæÔºö√æ √æ        pieChartView.setPieCell(10); // 10 ‰ΩçÂπ≥ÁßªË∑ùÁ¶ªÂ§ßÂ∞è√æ√æ    ÊïàÊûúÂ¶ÇÂõæÔºö√æ    √æ ![image](https://github.com/luweibin3118/PieChartView/blob/master/app/Screenshot_20180112-212035.png)√æ √æ √æ 5. ËÆæÁΩÆ‰ª•‰∏ãÊñπÊ≥ïÂèØ‰ª•ÂÆûÁé∞ÁéØÂΩ¢ÂõæÔºö √æ      √æ        pieChartView.setCell(5);            //ËÆæÁΩÆÁéØÂΩ¢ÂõæÁöÑÈó¥Ë∑ù√æ        pieChartView.setInnerRadius(0.4f);  //ËÆæÁΩÆÁéØÂΩ¢ÂõæÂÜÖÁéØÂçäÂæÑÊØî‰æã 0 - 1.0f√æ   √æ ![image](https://github.com/luweibin3118/PieChartView/blob/master/app/Screenshot_20180112-211903.png)√æ √æ 6. ÂÖ∂‰ªñÊñπÊ≥ïÔºö√æ √æ        pieChartView.setBackGroundColor(0xffFFFFE0);    //ËÆæÁΩÆËÉåÊôØÈ¢úËâ≤√æ        pieChartView.setItemTextSize(30);               //ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞è√æ        pieChartView.setTextPadding(10);                //ËÆæÁΩÆÂ≠ó‰Ωì‰∏éÊ®™Á∫øË∑ùÁ¶ª√æ "
sonicle-webtop/webtop-contacts,1405,0,2,1,Organization,False,WebTop Contacts Service,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",10,Java,"{'': 1, 'txt': 2, 'md': 1, 'xml': 3}",394,3,59,3,0,1788,True,0,0,0,0,0,0,0,0,7,0,2,10,355,18,0,0,35,0,,,# WebTop Contacts Service√æ√æ[![License](https://img.shields.io/badge/license-AGPLv3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0.txt)√æ√æ## License√æ√æThis is Open Source software released under [AGPLv3](./LICENSE.txt)
JetBrains/teamcity-investigations-auto-assigner,3107,11,17,7,Organization,False,Assigns investigations of build failures automatically based on heuristics,,,11,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",531,7,0,7,0,3141,True,3,13,0,0,0,38,0,0,7,0,1,14,762,197,0,0,474,104,,,"[![JetBrains team project](http://jb.gg/badges/team.svg)](https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub)√æ[![TeamCity Build Status](https://teamcity.jetbrains.com/app/rest/builds/buildType(id:TeamCityPluginsByJetBrains_InvestigationsAutoAssigner_BuildAgainstTeamCity81x)/statusIcon.svg)](https://teamcity.jetbrains.com/viewType.html?buildTypeId=TeamCityPluginsByJetBrains_InvestigationsAutoAssigner_BuildAgainstTeamCity81x&guest=1)√æ√æ# TeamCity Investigations Auto-Assigner√æ√æ## General Info√æ* Vendor: JetBrains√æ* License: [Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0)√æ* Plugin type: free, open-source√æ√æ## Plugin Description√æThe plugin adds a [build feature](https://www.jetbrains.com/help/teamcity/?Adding+Build+Features) which enables automatic assignment of investigations for a build failure. Investigations are assigned on the basis of the following heuristics:√æ√æ* If a user is the only committer to the build, the user is responsible.√æ* If a user is the only one who changed the files, whose names appear in the test or build problem error text, the user is responsible.√æ* If a user was responsible for this problem previous time, the user is responsible.√æ* If a user is set as the default responsible user, the user is responsible.√æ√æ## TeamCity Versions Compatibility√æCompatible with TeamCity 2018.2 and later.√æ√æSince TeamCity 2018.2 the plugin was bundled.√æ√æ## Additional configuration√æ1. **Frequency of processing problems:** √æTo avoid TeamCity server performance degradation, √æthe extension checks builds for new build problems and failed tests and processes them regularly, √æwith a configurable interval and at the end of a build. The default is every 600 seconds, which can be changed√ævia the `teamcity.investigationsAutoAssigner.scheduledTaskInterval.seconds` √æ[TeamCity property](https://www.jetbrains.com/help/teamcity/?Configuring+TeamCity+Server+Startup+Properties).√æ*Restart the server for the changes to take effect.*√æ √æ2. **Limitation of processed failed tests and build problems:** √æCurrently there is a configurable limit of the number of the processed build problems √æand failed tests. The default is 100, which can be changed via √æthe `teamcity.investigationsAutoAssigner.maxTestsFailuresToProcessPerBuild` [build parameter](https://www.jetbrains.com/help/teamcity/?Configuring+Build+Parameters)√æor [TeamCity property](https://www.jetbrains.com/help/teamcity/?Configuring+TeamCity+Server+Startup+Properties).√æ√æ## Feedback√æEverybody is encouraged to try the plugin and provide feedback in the [forum](http://devnet.jetbrains.net/community/teamcity/teamcity) or post bugs into the [issue tracker](http://youtrack.jetbrains.net/issues/TW).√æPlease make sure to note the plugin version that you use."
MaritimeConnectivityPlatform/MCP-PKI,423,1,5,1,Organization,False,PKI library of Maritime Connectivity Platform Identity Registry (MIR),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 2, 'yml': 1, 'md': 1, 'sh': 1, 'xml': 1}",109,5,13,4,0,1186,True,0,0,0,0,0,4,0,4,7,0,2,49,4624,4136,0,0,18,2,,,"[![Build Status](https://travis-ci.org/MaritimeConnectivityPlatform/MCP-PKI.svg?branch=master)](https://travis-ci.org/MaritimeConnectivityPlatform/MCP-PKI)√æ√æ# Maritime Connectivity Platform (MCP) Public Key Infrastructure (PKI)√æ√æThis is a library / cmdline tool used to manage and check certificates in the MCP Public Key Infrastructure (PKI).√æ√æBuilding using maven should be as simple as running `mvn install`.√æ√æMaritime Connectivity Platform is formerly known as the Maritime Cloud and therefore there might still be references to that in this project.  √æ√æMCP-PKI implements the *certificate attributes* described in [the developer's page of identity registry](https://developers.maritimeconnectivity.net/identity/index.html#certificate-attributes) and used in [Maritime Identity Registry](https://github.com/MaritimeConnectivityPlatform/IdentityRegistry). √æ√æ## Using the lib√æThe primary function of this software is to make it easy/easier to use the MCP PKI for (Java) developers. √æ√æThere is javadocs available here: <https://maritimeconnectivityplatform.github.io/MCP-PKI/apidocs/>√æ√æUse PKIConfiguration for setting up configuration about Keystore and/or Truststore, use KeystoreHandler to load them and the you most like want to use CertificateHandler to, well, handle certificates...√æ√æA short example of use can be seen below:√æ```java√æ    // Setup MC PKI√æ    PKIConfiguration pkiConf = new PKIConfiguration(""urn:mrn:mcl:ca:maritimecloud"");√æ    pkiConf.setTruststorePath(""/path/to/mc-truststore.jks"");√æ    pkiConf.setTruststorePassword(""changeit"");√æ    KeystoreHandler kh = new KeystoreHandler(pkiConf);√æ    // Get the certificate that should be validated√æ    X509Certificate cert = getUserCertificate();√æ    // Validate certificate√æ    CertificateHandler.verifyCertificateChain(cert, kh.getTrustStore());√æ    // Extract Identity information from the certificate√æ    PKIIdentity user = CertificateHandler.getIdentityFromCert(cert);√æ```√æHere the parameter ""urn:mrn:mcl:ca:maritimecloud"" states the *root-ca-alias* which will be defined differently to each identity provider.√æ√æ## Commandline interface√æThe secondary function of this software is to provide a (relatively) easy to use interface for the PKI manager. How to use is will be described below.√æ√æIf you have build using maven you should now have a `mcp-pki-0.11.0-SNAPSHOT.jar` and a `mcp-pki-0.11.0-SNAPSHOT-jar-with-dependencies.jar` (or similar). It is the latter we will be using since it can easily be run from the commandline.√æ√æ### Initializing the PKI√æTo use the PKI we must first initialize it, which means create a root Certificate Authority (CA). This can be done with this command:√æ```sh√æjava -jar mcp-pki-0.11.0-SNAPSHOT-jar-with-dependencies.jar \√æ    --init \√æ    --truststore-path mc-truststore.jks \√æ    --truststore-password changeit \√æ    --root-keystore-path root-ca-keystore.jks \√æ    --root-keystore-password changeit \√æ    --root-key-password changeit \√æ    --root-ca-alias ""urn:mrn:mcl:ca:maritimecloud"" \√æ    --x500-name ""C=DK, ST=Denmark, L=Copenhagen, O=MCP Test, OU=MCP Test, CN=MCP Test Root Certificate, E=info@maritimecloud.net"" \√æ    --crl-endpoint ""https://localhost/x509/api/certificates/crl/urn:mrn:mcl:ca:maritimecloud"" \√æ    --validity-period 120√æ```√æNote that the truststore and root-keystore will be overwritten! Also note that crl-endpoint should end with `urn:mrn:mcl:ca:maritimecloud` which is the value of *root-ca-alias*. The unit of *validity period* field is months. The root CA in this example will be valid for 10 years from the issued date.√æ√æChange the passwords as you see fit.√æ√æ### Create root Certificate Revocation List√æWe must also create a root Certificate Revocation List to be able to tell if any sub CA has been revoked. This can be done with this command: √æ```sh√æjava -jar mcp-pki-0.11.0-SNAPSHOT-jar-with-dependencies.jar \√æ    --generate-root-crl \√æ    --root-keystore-path root-ca-keystore.jks \√æ    --root-keystore-password changeit \√æ    --root-key-password changeit \√æ    --revoked-subca-file revoked-subca.csv \√æ    --root-ca-alias ""urn:mrn:mcl:ca:maritimecloud"" \√æ    --root-crl-path root-ca.crl√æ```√æThe revoked-subca-file CSV file must either be empty or have a format like this:√æ```csv√æ345678954765889809876543;cacompromise;2017-04-31√æ```√æThat is `<serial-number>;<revocation-reason>;<revocation-date>`√æ√æThe revocation reason can be one of the following: unspecified, keycompromise, cacompromise, affiliationchanged, superseded, cessationofoperation, certificatehold, removefromcrl, privilegewithdrawn or aacompromise.√æ√æThe revocation date must be be of the format: YYYY-MM-DD.√æ√æRemember to keep the list of revoked sub ca. Each time a new sub CA is revoked you must add it to the CSV file and generate a new CRL. Note that a CRL is valid for exactly on year.√æ√æ### Create sub CA√æCreate a sub CA like this:√æ```sh√æjava -jar mcp-pki-0.11.0-SNAPSHOT-jar-with-dependencies.jar \√æ    --create-subca \√æ    --root-keystore-path root-ca-keystore.jks \√æ    --root-keystore-password changeit \√æ    --root-key-password changeit \√æ    --truststore-path mc-truststore.jks \√æ    --truststore-password changeit \√æ    --subca-keystore subca-keystore.jks \√æ    --subca-keystore-password changeit \√æ    --subca-key-password changeit \√æ    --root-ca-alias ""urn:mrn:mcl:ca:maritimecloud"" \√æ    --x500-name ""UID=urn:mrn:mcl:ca:maritimecloud-idreg, C=DK, ST=Denmark, L=Copenhagen, O=MaritimeCloud Test, OU=MaritimeCloud Test, CN=MaritimeCloud Test Identity Registry, E=info@maritimecloud.net"" \√æ    --crl-endpoint ""https://localhost/x509/api/certificates/crl/urn:mrn:mcl:ca:maritimecloud-idreg"" \√æ    --validity-period 60√æ```√æ√æThe UID will be used as alias when stored in the truststore and subca-keystore. The root-keystore and truststore is expected to exists, while the subca-keystore will be created if it does not exists.√æ√æ## License√æThis software is distributed under the Apache License, Version 2.0.√æ√æThis project includes code from the Apache Xcf project (Apache License, Version 2.0), and the [POReID project](https://github.com/poreid/poreid) (MIT License). √æ√æ√æ## Building√æBuild the jar using Maven (>=v3.3.9) like this:√æ```sh√æmvn clean install√æ```√æ√æSign (requires a gpg key):√æ```sh√æmvn -Dskip.signing=false install√æ```√æ√æDeploy (requires a gpg key registered at sonatype):√æ```sh√æmvn -Dskip.signing=false clean deploy -Psonatype√æ```√æ√æBuild the javadocs used for the documentation available at https://maritimeconnectivityplatform.github.io/MCP-PKI/√æ```sh√æ./javadocs.sh docs√æ```√æ√æBuild the javadocs used for the documentation available at https://maritimeconnectivityplatform.github.io/MCP-PKI/ and push to github:√æ```sh√æ./javadocs.sh site√æ```"
camunda/camunda-bpm-wildfly-swarm,85,1,21,3,Organization,False,Camunda BPM Wildfly Swarm Fractions and examples,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 2, 'md': 1, 'xml': 1}",48,2,2,8,0,829,True,0,3,0,0,0,4,0,1,8,0,1,3,135,5,0,0,115,34,,,"# Camunda Thorntail extension√æ√æThis Camunda community extension provides Thorntail fractions, which can be used to easily include Camunda in your Thorntail applications.√æYou would need to add [Camunda BOM](https://docs.camunda.org/get-started/apache-maven/) and ""Thorntail fraction(s)"" to your POM file. Available fractions are:√æ√æ* `camunda-bpm-thorntail-fraction-platform` for Camunda engine√æ* `camunda-bpm-thorntail-fraction-rest` for Camunda REST API√æ* `camunda-bpm-thorntail-fraction-webapp(-ee)` for Camunda Webapps√æ√æExample:√æ√æ```xml√æ    <dependency>√æ      <groupId>io.thorntail</groupId>√æ      <artifactId>camunda-bpm-thorntail-fraction-webapp</artifactId>√æ      <version>${fraction.version}</version>√æ    </dependency>√æ```√æ√æPlease also check [example project](https://github.com/camunda/camunda-bpm-wildfly-swarm/tree/master/example).√æ√æ## Enterprise version√æ√æTo use enterprise version of Camunda:√æ√æ1. Use enterprise Camunda version, when adding Camunda BOM, e.g. `7.9.0-ee`.√æ2. Use fraction `camunda-bpm-thorntail-fraction-webapp-ee` to include Camunda Enterprise Webapps.√æ√æ## Resources√æ√æ* [Issue Tracker](https://github.com/camunda/camunda-bpm-wildfly-swarm/issues) - if you have an idea for a new feature or want to file a bug ... this is the place to go.√æ* [Camunda Contributing Guidelines](https://github.com/camunda/camunda-bpm-platform/blob/master/CONTRIBUTING.md) - check this if you want to contribute"
ValerieHu1995/simple-fit-server,1955,1,2,5,User,False,,,,3,Java,"{'': 1, 'xml': 1}",70,2,0,6,0,600,True,17,1,0,0,0,16,0,0,16,0,0,0,0,0,0,0,7,,8,,
wqyc/wqyc,399,1,0,1,Organization,False,‰∏áÂçÉËã±ÊâçÈ°πÁõÆ,,,7,Java,"{'': 3, 'xml': 1}",103,2,0,3,0,618,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,,,
CSCI185-Fall2018/lab-solutions,10,0,0,2,Organization,False,,,,4,Java,{'': 1},5,1,0,2,0,632,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,2,0,,,
blackducksoftware/sdk-client-tools-protex,740,12,25,4,Organization,False,Protex SDK Client,,"{'key': 'lgpl-2.1', 'name': 'GNU Lesser General Public License v2.1', 'spdx_id': 'LGPL-2.1', 'url': 'https://api.github.com/licenses/lgpl-2.1', 'node_id': 'MDc6TGljZW5zZTEx'}",14,Java,"{'': 2, 'txt': 1, 'pdf': 1, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",158,1,15,4,0,1651,True,12,4,1,0,1,12,0,0,8,1,0,0,0,0,0,0,206,12,,,"# Black Duck Software Protex SDK Libraries√æ√æThe Black Duck Software Protex SDK Libraries provide access to the SDK end-points available on Black Duck's Protex product√æ√æ## Building√æThe SDK libraries use [Gradle](https://gradle.org/) for build operations (specifically, the Gradle wrapper, invoked via `gradlew`)√æ√æ### Importing into an IDE√æInstead of using Gradle's plug-ins to generate IDE-specific files, it is assumed that the IDE's Gradle plug-in will be used.√æ√æFor example, [Eclipse's Gradle Plug-in](https://marketplace.eclipse.org/content/gradle-ide-pack) can be used to import the projects into an Eclipse environment√æ√æ## Contributions√æContributions are pull request based. Contributors should fork the repository and create pull requests based on the `master` branch√æ√æ* These libraries are based on Java 6 - all changes should be compatible with this language version√æ* Changes to APIs must be backwards compatible√æ* Changes in pull requests should be documented√æ* If any significant features are added, add tests where possible√æ√æ## Branches√æThe repository contains a `master` branch which contains tags for each release and any changes contributed. Releases will be based on what has been merged into the `master` branch √æ√æ## Release Pattern√æThis project does **not** follow semantic versioning - version numbers are kept matching to the minimum compatible product version√æ√æNew releases of the SDK libraries are created when a version of Protex is released. The version number of the client/utility libraries is generally the minimum version of the associated product that release supports.√æ√æ## SLF4j Dependency√æThe Protex SDK Libraries are intended to be used within other applications. Due to this, at compile and run time, they only depend on the SLF4j APIs, not a specific implementation. This is to allow consuming applications to specify their own implementation without issue. If no implementation is specified, the APIs automatically fall back to a no-op implementation"
cilt-uct/qna,1430,0,2,1,Organization,False,"QNA (Questions and Answers) is a new tool being developed by UNISA and UCT. QNA enables students to ask questions anonymously, which can be answered by other students or lecturers or tutors (instructors/TAs). Questions are ranked by their popularity and can also be organized into categories. QNA builds on experiences from two existing tools: UNISA's FAQ tool and UCT's DFAQ tool",,"{'key': 'ecl-2.0', 'name': 'Educational Community License v2.0', 'spdx_id': 'ECL-2.0', 'url': 'https://api.github.com/licenses/ecl-2.0', 'node_id': 'MDc6TGljZW5zZTMw'}",10,Java,"{'': 3, 'md': 1, 'xml': 1}",538,6,0,6,0,4528,True,0,0,0,0,0,25,0,4,7,0,1,5,288,263,0,0,53,0,,,"# QnA√æ√æContrib: QNA (Questions and Answers)√æ√æ## Description:√æQNA (Questions and Answers) is a new tool being developed by UNISA and UCT. QNA enables students to ask questions anonymously, which can be answered by other students or lecturers or tutors (instructors/TAs). Questions are ranked by their popularity and can also be organized into categories. QNA builds on experiences from two existing tools: UNISA's FAQ tool and UCT's DFAQ tool.√æ√æ* Please add bugs reports or feature requests to the Q&A JIRA:√æhttp://jira.sakaiproject.org/jira/browse/QNA"
funkemunky/Daedalus,115133,13,6,23,User,False,Daedalus AntiCheat,,,3,Java,{},68,1,7,4,0,1003,True,4,3,0,0,0,2,0,0,8,0,0,0,0,0,0,0,42,,78,,
tr-AI-ner/trAIner,56403,3,0,2,Organization,False,The trAIner game!,,,12,Java,"{'': 3, 'txt': 4, 'md': 1, 'jar': 1}",412,21,0,5,0,627,True,0,0,0,0,0,36,0,0,8,0,0,0,0,0,0,0,1,0,,,"# trAIner√æThe immersive java game where you can train your own AI to perform seriously challenging levels!√æ√æ## Play by yourself!√æ![screenshot1](https://github.com/tr-AI-ner/trAIner/blob/master/doc/Construction/Increment3/screenshot_normal_map.png)√æ√æ## Let the genetic algorithm solve the map!√æ![ai1](https://github.com/tr-AI-ner/trAIner/blob/master/doc/Construction/Increment3/screenshot_ai_game_mode.png)√æ√æ## Build your own maps!√æ![build](https://github.com/tr-AI-ner/trAIner/blob/master/doc/Construction/Increment3/screenshot_map_madness_build_mode.png)√æ√æ√æ# Workflow:√æCheat sheet for using github successfully:)√æ√æ1. Pick a feature you want to implement.√æ2. Create a new branch for the feature you will implement:√æ```git checkout -b <branch-name-or-feature-name>```√æ3. Code the task√æ4. When ready you have to commit your work.√æ```git add .```√æ```git commit -m ""Your commit message or comments""```√æ√æ4a. (optional). If someone else is also working on the same be sure to pull latest work√æ```git pull```√æ√æ5. When ready push your changes so everyone can see them√æ```git push origin <your-branch>```√æ√æ6. Go to github.com, select your branch and open a pull request. Invite at least one person to review your code. If the code is production you can't merge it yourself!√æ√æ√æTrain and test your own AI on the trAIner battlefield and compete with other players in the trAIner-Arena!√æ√æ# Coding Style:√æ1. Use 4 spaces to indent tabs√æ2. Naming convention:√æ√æ    2.1 Class names always begin with a uppercase character, the rest is written in CamelCase√æ    √æ    2.2 Package names always begin with a lowercase character, the rest is written in underscore_case√æ    √æ    2.3 Function names always begin with a lowercase character, the rest is written in CamelCase√æ    √æ    2.4 Variable names always begin with a lowercase character, the rest is either in CamelCase ~~or in underscore_case~~√æ    √æ    2.5 Constants are written in all uppercase combined with UNDERSCORE_CASE√æ    √æ3. Documentation√æ√æ    3.1 Each class needs a brief description of its functionality right after the exports√æ    √æ    3.2 Each function needs a brief description of its functionality just before its definition√æ    √æ    3.3 Each non self explanatory variable needs a brief description before its declaration√æ    √æ    3.4 KEEP DOCUMENTATION MINIMAL, FOCUS ON SELF EXPLAINING CODE√æ    "
eventtus/photo-editor-android,7468,406,38,157,Organization,False,"Photo Editor SDK contains a lot of features like edit, scale, rotate and draw on images like Instagram stories.",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",13,Java,"{'': 3, 'md': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",33,1,1,4,6,1117,True,27,7,2,1,1,2,1,0,7,0,0,0,0,0,0,0,21,3,,,"# PhotoEditorSDK√æ√æ![alt tag](https://s18.postimg.org/xza5yw53d/photoeditorsdk.png)√æ√æIt is an android image editing SDK with simple, easy support for image manipulation.√æ√æ-----------------------------------------------------------------------------------------------------√æ√æ## Features√æ- Adding Images.√æ- Adding Stickers.√æ- Adding Text with option to change its Color.√æ- Drawing on image with option to change its Color, its Size and Erasing.√æ- Scaling and Rotating views.√æ- Deleting views.√æ- Saving photo after editing.√æ- Undo after adding views.√æ- Transforms√æ  - Flip√æ  - Rotate√æ  - Resize√æ-----------------------------------------------------------------------------------------------------√æ√æ## Benefits√æ- Hassle free coding√æ- Increase efficiency√æ- Easy image editing√æ√æ-----------------------------------------------------------------------------------------------------√æ√æ## Installation√æ√æ### For Gradle : ###√æStep 1 : Add it in your root build.gradle at the end of repositories√æ```java√æallprojects {√æ  repositories {√æ   ...√æ   maven { url 'https://jitpack.io' }√æ  }√æ}√æ```√æStep 2 : Add the dependency√æ```java√ædependencies {√æ         compile 'com.github.eventtus:photo-editor-android:v1.0'√æ }√æ ```√æ√æ### For Maven : ###√æ√æStep 1 : Add it in your root build.gradle at the end of repositories√æ```java√æ<repositories>√æ  <repository>√æ      <id>jitpack.io</id>√æ      <url>https://jitpack.io</url>√æ  </repository>√æ</repositories>√æ```√æStep 2 : Add the dependency√æ```java√æ<dependency>√æ     <groupId>com.github.eventtus</groupId>√æ     <artifactId>photo-editor-android</artifactId>√æ     <version>v1.0</version>√æ</dependency>√æ```√æ√æ-----------------------------------------------------------------------------------------------------√æ√æ# User Documentation :√æ√æ1. First of all you have to get instance of PhotoEditorSDK to initialize it and start calling the desired functions.√æ```java√æphotoEditorSDK = new PhotoEditorSDK.PhotoEditorSDKBuilder(PhotoEditorActivity.this)√æ.parentView(parentImageRelativeLayout)√æ//add parent image view√æ.childView(photoEditImageView)√æ//add the desired image view√æ.deleteView(deleteRelativeLayout)√æ//add the deleted view that will appear during the movement of the views√æ.brushDrawingView(brushDrawingView)√æ// add the brush drawing view that is responsible for drawing on the image view√æ.buildPhotoEditorSDK();√æ// build photo editor sdk√æ```√æ√æ2. To add **Text** on the image:√æ```java√æphotoEditorSDK.addText(text, colorCodeTextView);√æ```√æ√æ3. To add **Image** or **Stickers**:√æ```java√æphotoEditorSDK.addImage(image);√æ```√æ√æ4. To add **Emoji**:√æ```java√æphotoEditorSDK.addEmoji(emojiName, emojiFont);√æ```√æ√æ5. To **Draw** on the image:√æ```java√æphotoEditorSDK.setBrushDrawingMode(brushDrawingMode);√æ// brushDrawingMode is false by default, true if you want to draw on the image view√æ```√æ√æ6. To change the **Color** and **Size** of the drawing view and the **Size** and the **Color** of the **Eraser** view:√æ```java√æphotoEditorSDK.setBrushSize(size);√æphotoEditorSDK.setBrushColor(colorCode);√æphotoEditorSDK.brushEraser();√æphotoEditorSDK.setBrushEraserSize(brushEraserSize);√æphotoEditorSDK.setBrushEraserColor(color);√æ```√æ√æ7. To **Save** the image after editing:√æ```java√æphotoEditorSDK.saveImage(folderName, imageName);√æ```√æ√æ8. To **Undo** the added **Views (Image or Text)**:√æ```java√æphotoEditorSDK.viewUndo();√æ```√æ√æ9. To **Clear All** the added **Views (Image or Text)**:√æ```java√æphotoEditorSDK.clearAllViews();√æ```√æ√æ10. To **Clear All** the added **Drawing Views**:√æ```java√æphotoEditorSDK.clearBrushAllViews();√æ```√æ√æ11. To listen on **Added Views**, **Edit the added Text Views**, **Added and Removed Views** and **Start and Stop Moving Views**. You can implement:√æ```java√æphotoEditorSDK.setOnPhotoEditorSDKListener(new OnPhotoEditorSDKListener() {√æ    @Override√æ public void onEditTextChangeListener(String text, int colorCode) {√æ√æ }√æ @Override√æ    public void onAddViewListener(ViewType viewType, int numberOfAddedViews) {√æ√æ    }√æ    @Override√æ public void onRemoveViewListener(int numberOfAddedViews) {√æ√æ }√æ    @Override√æ public void onStartViewChangeListener(ViewType viewType) {√æ√æ }√æ    @Override√æ public void onStopViewChangeListener(ViewType viewType) {√æ  √æ }√æ});√æ```√æ√æ-----------------------------------------------------------------------------------------------------√æ√æ## Contributing√æ√æWe welcome contributions from other developers to help us make the SDK even better.√æBefore you contribute there are a number of things that you should know please see [CONTRIBUTING.md](https://github.com/eventtus/photo-editor-android/blob/master/CONTRIBUTING.md) for details.√æ√æ## Credits√æ√æPhotoEditorSDK was originally written by [Ahmed Adel](https://github.com/ahmed-adel-said).√æProject is maintained and funded by√æ√æ[![Eventtus](http://assets.eventtus.com/logos/eventtus/standard.png)](http://eventtus.com)√æ√æ## License√æ√æCopyright (c) 2017 Eventtus, PhotoEditorSDK is released under the MIT license."
52North/series-hibernate,3621,4,11,5,Organization,False,Hibernate files and Entities for 52¬∞North Sensor Web Server database model,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",16,Java,"{'': 2, 'yml': 1, 'md': 3, 'xml': 1}",1402,7,19,7,0,1432,True,1,2,0,1,0,78,0,32,8,0,3,109,4026,11362,1,0,198,33,,52North/sensorweb-server-db-model,"# Hibernate files for 52¬∞North Sensor Web Server database model [![Build Status](https://travis-ci.org/52North/sensorweb-server-db-model.svg)](https://travis-ci.org/52North/sensorweb-server-db-model) ![Java CI](https://github.com/52North/sensorweb-server-db-model/workflows/Java%20CI/badge.svg?branch=develop) [![Maven Central](https://img.shields.io/maven-central/v/org.n52.sensorweb-server.db-model/db-model-parent.svg)](https://search.maven.org/search?q=g:org.n52.sensorweb-server.db-model) [![Total alerts](https://img.shields.io/lgtm/alerts/g/52North/sensorweb-server-db-model.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/52North/sensorweb-server-db-model/alerts/) [![Language grade: Java](https://img.shields.io/lgtm/grade/java/g/52North/sensorweb-server-db-model.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/52North/sensorweb-server-db-model/context:java)√æ√æ## Description√æ√æ**Provide Hibernate files for 52¬∞North Sensor Web Server database model.**√æ√æ## References√ætbd√æ√æ## License√æ√æThe module is published under the [GNU General Public License v2 (GPLv2)](http://www.gnu.org/licenses/gpl-2.0.html).√æ√æ## Changelog√æ- https://github.com/52North/sensorweb-server-db-model/blob/develop/CHANGELOG.md√æ- for detailed infos check https://github.com/52North/sensorweb-server-db-model/pulls?q=is%3Apr+is%3Aclosed√æ√æ## Contributing√æWe try to follow [the GitFlow model](http://nvie.com/posts/a-successful-git-branching-model/), although we do not see it that strict. √æ√æHowever, make sure to do pull requests for features, hotfixes, etc. by making use of GitFlow. Altlassian provides [a good overview](https://www.atlassian.com/de/git/workflows#!workflow-gitflow). of the most common workflows.√æ√æ## Contact√æHenning Bredel (h.bredel@52north.org)√æ√æCarsten Hollmann (c.hollmann@52north.org)√æ√æ## Credits√æ√æThe development of the 52¬∞North Sensor Web Server database model implementation was supported by several organizations and projects. Among other we would like to thank the following organisations and project√æ√æ| Project/Logo | Description |√æ| :-------------: | :------------- |√æ| <a target=""_blank"" href=""https://bmbf.de/""><img alt=""BMBF"" align=""middle""  src=""https://raw.githubusercontent.com/52North/sos/develop/spring/views/src/main/webapp/static/images/funding/bmbf_logo_en.png""/></a><a target=""_blank"" href=""https://colabis.de/""><img alt=""COLABIS - Collaborative Early Warning Information Systems for Urban Infrastructures"" align=""middle""  src=""https://raw.githubusercontent.com/52North/sos/develop/spring/views/src/main/webapp/static/images/funding/colabis.png""/></a> | The development of this version of the 52&deg;North SOS was supported by the <a target=""_blank"" href=""https://www.bmbf.de""> German Federal Ministry of Education and Research</a> research project <a target=""_blank"" href=""https://colabis.de/"">COLABIS</a> (co-funded by the German Federal Ministry of Education and Research, programme Geotechnologien, under grant agreement no. 03G0852A) |"
Chaoping/MTS-Net-Seg,21048,0,1,2,User,False,"Implementation of the paper: Omranian, N., Klie, S., Mueller-Roeber, B. and Nikoloski, Z., 2013. Network-based segmentation of biological multivariate time series. PloS one, 8(5), p.e62974.",,,13,Java,"{'': 2, 'yml': 1, 'iml': 1, 'md': 1, 'gradle': 2, 'bat': 1, 'xml': 1}",115,1,0,3,0,613,True,0,0,0,0,0,20,0,0,8,0,0,0,0,0,0,0,20,,2,,"# MTS-Net-Seg√æImplementation of the paper: Omranian, N., Klie, S., Mueller-Roeber, B. and Nikoloski, Z., 2013. Network-based segmentation of biological multivariate time series. PloS one, 8(5), p.e62974.√æ√æ# Third Party Libraries√æApache Commons (http://commons.apache.org/)"
mobgen/halo-android,3343,6,6,4,Organization,False,"This library provides the developer with a huge power to access the HALO cloud platform to consume generic information, push notifications and many other services",https://mobgen.github.io/halo-documentation/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",17,Java,"{'': 3, 'md': 2, 'gradle': 3, 'bat': 1, 'properties': 1, 'txt': 1}",442,8,16,5,4,1328,True,0,2,0,0,0,88,0,20,7,0,1,4,4,4,0,0,6,2,,,"![mobgen_logo_top_black.png](./docs/halo_readme.png)√æ√æ# HALO Android SDK√æ------------------√æ![Build Status](https://android-bamboo.mobgen.com/plugins/servlet/wittified/build-status/HALO-AS2)√æ√æ![Android >= 4.0.3](https://img.shields.io/badge/Android-%3E=%204.0.3-blue.svg)√æ![Gradle](https://img.shields.io/badge/Gradle-compatible-brightgreen.svg)√æ√æ[![Download](https://api.bintray.com/packages/halo-mobgen/maven/HALO/images/download.svg) ](https://bintray.com/halo-mobgen/maven/HALO/_latestVersion)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.mobgen.halo.android/halo-sdk/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.mobgen.halo.android/halo-sdk/badge.svg)√æ√æ## What is HALO? ##√æHALO is an MBaaS (Mobile Backend as a Service) that was developed to increase developer productivity and decrease an application's time-to-market by creating a highly modular CMS. A native development team will be able to hook up with HALO in a matter of minutes via the SDK which uses an open API.√æ√æTo find out the documentation please enter the [documentation page](https://mobgen.github.io/halo-documentation/).√æ√æ## Contributing ##√æTo contribute to this repository please follow the rule specs you can find in our [documentation](https://mobgen.github.io/halo-documentation/android_contributions.html).√æ√æ## Publish a new release ##√æMake sure you have setup the correct environment variables in your machine for the bintray username, the√æbintray api key, the sonatype user and the sonatype password:√æ```√æHALO_BINTRAY_USER = YOUR_BINTRAY_USER√æHALO_BINTRAY_KEY = YOUR_BINTRAY_KEY√æHALO_SONATYPE_USER = YOUR_SONATYPE_USER√æHALO_SONATYPE_PASSWORD = YOUR_SONATYPE_PASSWORD√æ```√æ√æTo publish a release you have to execute the following commands:√æ```√æ//Publish the release versions for plugin and sdk√æ./gradlew -Pproduction installGradlePlugin√æ./gradlew release/releaseMajorVersion/releaseMinorVersion√æ```√æMake sure to update the version of the plugin or/and the sdk in the gradle.properties file to publish the correct version before uploading.√æ√æ## LICENSE ##√æ---------------√æ```√æOpen Source 2016-2017 MOBGEN√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æhttp://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
sushantkunal/Kettle---ActiveMQ-Producer,32375,2,1,5,User,False,Pentaho Kettle Plugin for Creating an ActiveMQ producer,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",5,Java,"{'': 3, 'md': 1}",6,1,0,1,0,1259,True,1,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,3,,0,,"# Kettle- ActiveMQ-Producer√æPentaho Kettle Plugin for Creating an ActiveMQ producer√æ√æThis is a custom plugin to create an activemq producer step which can be used in Pentaho Spoon to configure your queue with various parameters like queue details, acknowledgement mode, delivery mode etc. √æA fairly straight forward plugin to use."
lindenb/jvarkit,55680,274,23,113,User,False,Java utilities for Bioinformatics,http://lindenb.github.io/jvarkit/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",21,Java,"{'': 4, 'yml': 1, 'txt': 1, 'legacy': 1, 'md': 2, 'gradle': 2, 'bat': 1, 'mk': 2}",2356,15,28,8,7,2604,True,25,123,5,12,0,9,0,1,6,0,2,61,9278,3437,0,0,139,,418,,"JVARKIT√æ=======√æ√æJava utilities for Bioinformatics√æ√æ[![Build Status](https://travis-ci.org/lindenb/jvarkit.svg)](https://travis-ci.org/lindenb/jvarkit)√æ√æ![Last commit](https://img.shields.io/github/last-commit/lindenb/jvarkit.png)√æ√æ## Documentation√æ√æDocumentation is available at: [http://lindenb.github.io/jvarkit/](http://lindenb.github.io/jvarkit/)√æ√æ## Compilation√æ√æ**February 2019**. I'm moving to java **OpenJdk**. See the [[NEWS]] file.√æ√æEach tool is compiled independently of each other.√æ√æSee the documentation for each tool at [http://lindenb.github.io/jvarkit/](http://lindenb.github.io/jvarkit/). All the pages should include a paragraph titled *'Download and Compile'*√æ√æYou shouldn't try to compile all the tools because some of them are not tested, deprecated, or just too specific to my lab.√æ√æ## Author√æ√æPierre Lindenbaum PhD√æ√æhttp://plindenbaum.blogspot.com√æ√æ[@yokofakun](https://twitter.com/yokofakun)"
saalfeldlab/n5-utils,151,0,3,8,Organization,False,simple standalone BigDataViewer for multiple N5 (or HDF5) datasets,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",9,Java,"{'': 2, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 1}",92,5,1,8,0,916,True,10,4,1,0,0,9,0,2,8,0,4,9,1308,91,0,0,81,0,,,"# n5-utils [![Build Status](https://travis-ci.com/saalfeldlab/n5-utils.svg?branch=master)](https://travis-ci.com/saalfeldlab/n5-utils)√æSimple standalone BigDataViewer for multiple N5 (or HDF5) datasets√æor mipmap pyramids and also a copy, rechunking, and recompressing√ætool for N5 and HDF5.√æ√æInstallation requires maven, OpenJDK8, and lib-hdf5, on Ubuntu:√æ```bash√æsudo apt-get install openjdk-8-jdk maven hdf5-tools√æ```√æOn other platforms, please find your way and report back if interested.√æ√æInstall into your favorite local binary `$PATH`:√æ```bash√æ./install $HOME/bin√æ```√æAll dependencies will be downloaded and managed by maven automatically.√æ√æThis installs two tools, `n5-view` and `n5-copy`.√æ√æRun the viewer√æ```bash√æn5-view \√æ  -i '/path/file.h5' \√æ  -i '/path/file.hdf5' \√æ  -d /volumes/raw \√æ  -d /prediction \√æ  -c 0,255 \√æ  -c -1,1 \√æ  -r 1,1,10√æ```√æto look at two datasets or mipmap pyramids from an HDF5 and an N5 container at 1x1x10 resolution and contrast ranges [0,255] and [-1,1].  The viewer maps both contrast ranges into [0,1000] because BDV cannot yet deal with negative intensities and the sliders only show integers.  Sorry for the hack.√æ√æCopy from N5/HDF5 to N5/HDF5:√æ```bash√æn5-copy \√æ  -i '/path/file.hdf5' \√æ  -o '/path/file.n5' \√æ  -b 256,256,26√æ  -c gzip√æ```√æor for one or more groups/ datasets:√æ```bash√æn5-copy \√æ  -i '/path/file.hdf5' \√æ  -o '/path/file.n5' \√æ  -b 256,256,26√æ  -c gzip√æ  -d /volumes√æ```√æ√æ# Use as a library in Fiji√æ√æThis project can be used to deploy the most useful n5 libraries into an existing Fiji installation where they can be used for scripting.  Thanks to the [scijava-maven-plugin](https://github.com/scijava/scijava-maven-plugin), you can do this by simply passing your Fiji installation path to maven√æ```√æmvn -Dimagej.app.directory=$HOME/packages/Fiji.app√æ```√æThen try the experiments in this [script](https://github.com/saalfeldlab/n5-utils/blob/master/scripts/n5-examples.bsh) with your own data."
ZhongFuCheng3y/JavaArithmetic,647,49,5,20,User,False,JavaÁªÉ‰π†ÁÆóÊ≥ï‰ª£Á†Å(ÊéíÂ∫èÔºåÊï∞ÊçÆÁªìÊûÑÔºåÂ∞èÁÆóÊ≥ïÁªÉ‰π†È¢ò),,,4,Java,"{'iml': 1, 'md': 1}",27,1,0,1,0,819,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,20,,1,,"# JavaArithmetic√æ√æJavaÁªÉ‰π†ÁÆóÊ≥ï‰ª£Á†Å(ÊéíÂ∫èÔºåÊï∞ÊçÆÁªìÊûÑÔºåÂ∞èÁÆóÊ≥ïÔºåLeetCodeÁªÉ‰π†È¢ò)√æ√æ√æ## ‰∏Ä„ÄÅsortÊñá‰ª∂Â§πÊòØÊéíÂ∫èÁÆóÊ≥ï√æ√æÂÖ´Â§ßÊéíÂ∫èÁÆóÊ≥ï√æ√æ- ÂÜíÊ≥°ÊéíÂ∫è√æ- ÈÄâÊã©ÊéíÂ∫è√æ- ÊèíÂÖ•ÊéíÂ∫è√æ- ÂΩíÂπ∂ÊéíÂ∫è√æ- Âø´ÈÄüÊéíÂ∫è√æ- Âü∫Êï∞ÊéíÂ∫è(Ê°∂ÊéíÂ∫è)√æ- Â∏åÂ∞îÊéíÂ∫è√æ- Â†ÜÊéíÂ∫è√æ√æ√æ## ‰∏â„ÄÅbasicÊñá‰ª∂Â§πÊòØÂü∫Á°ÄÁõ∏ÂÖ≥√æ√æJavaÁÆÄÂçïÁöÑÁÆóÊ≥ïÈ¢òÔºåÁõÆÂâçÊúâ20ÈÅì√æ√æÈÄíÂΩíÁü•ËØÜÔΩû√æ√æ## Âõõ„ÄÅdatastructure√æ√æ2018Âπ¥9Êúà25Êó•Êõ¥Êñ∞Ôºå_oldÊñá‰ª∂Â§πÁöÑÊòØ‰πãÂâçÁöÑ(..√æ√æ√æ## ‰∫î„ÄÅLeetCode√æ√æ‰∏Ä‰∫õLeetCodeÁöÑÈ¢òÁõÆ.√æ√æ√æ- No1ÔºöÊâæÂá∫Êï∞ÁªÑ‰∏≠ËÉΩÂ§üÁªÑÊàêsumÁöÑ‰∏§‰∏™Êï∞ÁöÑÊï∞ÁªÑ‰∏ãÊ†á√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®MapÊù•Â≠òÂÇ®ÔºåÂ¶ÇÊûúÂèëÁé∞`target-arr[i]`Â¶ÇÊûúÂú®Map‰∏≠ÊúâÊï∞ÊçÆÔºåÈÇ£ËøîÂõû‰∏ãÊ†áÂç≥ÂèØ√æ- No3ÔºöÊ±ÇÂá∫Êï∞ÁªÑËÉΩÁªÑÊàêÊúÄÂ§ß‰∏çÈáçÂ§çÂÖÉÁ¥†ÁöÑÈó¥Èöî√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®ÊªëÂä®Á™óÂè£ÁöÑÊÄùÊÉ≥Ôºå‰∏çÂÅúÂæÄÂâçÁßªÂä®ÔºåÊØèÊ¨°ÁßªÂä®‰∏ÄÊ¨°Êó∂ËÆ°ÁÆómaxÂÄºÔºåÊúÄÁªàËøîÂõûÁöÑ‰∏ÄÂÆöÊòØÁ¨¶ÂêàÊù°‰ª∂ÁöÑÊúÄÂ§ßÂÄº√æ- No7ÔºöÂèçËΩ¨Êï¥Êï∞√æ    - Ëß£Ê≥ïÔºöÂÖ∂ÂÆûÂ∞±ÊòØËøêÁî®Êï∞Â≠¶ÊñπÊ≥ïÔºö`int pop = x % 10;x /= 10;rev = rev * 10 + pop;`„ÄÇÂêåÊó∂Âõ†‰∏∫`res*10`ÂèØËÉΩ‰ºöÂèëÁîüÊ∫¢Âá∫ÔºåÂèØ‰ª•‰ΩøÁî®MathÊñπÊ≥ïÊù•Âà§Êñ≠‰∏Ä‰∏ãÔºö`if (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) return 0;`√æ- No17Ôºö 9ÂÆ´Ê†ºÔºå‰æãÂ¶ÇÔºöËæìÂÖ•123ËÉΩÂ§üÁªÑÂêàÊàêÂì™‰∫õÂ≠óÊØç√æ - Ëß£Ê≥ïÔºöÂ∞Ü123..‰ΩøÁî®Êï∞ÁªÑÁöÑÊñπÂºèÊù•Ë£ÖËΩΩ(Á±ª‰ºº‰∫éÊü•Ë°®)ÔºåÂ∞ÜËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤123(digits)Ôºå‰ªéindexÂºÄÂßãÔºå‰ΩøÁî®String sÊù•ËÆ∞ÂΩïÊØèÊ¨°ÂèØËÉΩÂæóÂà∞ÁöÑÁªÑÂêàÂÄº„ÄÇÂ¶ÇÊûú`index==digits.length`ÔºåËØ¥ÊòéÂ∑≤ÁªèÊòØ‰∏ÄÁßçÊÉÖÂÜµ‰∫Ü„ÄÇ√æ- No19ÔºöÂà†Èô§ÈìæË°®Á¨¨n‰∏™ÂÖÉÁ¥†ÔºåtipsÔºöÂà†Èô§ÈìæË°®ÂÖÉÁ¥†ÊúÄÂ•Ω‰ΩøÁî®‰∏Ä‰∏™dummyHeadÔºåËøôÊ†∑Â∞±‰∏çÁî®ÊãÖÂøÉÂà†Èô§ÁöÑÊòØÈìæË°®Â§¥‰∫Ü„ÄÇ‰ΩøÁî®ÊñπÂºèÔºö`dummyHead.next = head`√æ - Ëß£Ê≥ï1ÔºöËÆ°ÁÆóÂá∫ÈìæË°®ÁöÑÈïøÂ∫¶Ôºå`int k = length-n`ÔºåkÁöÑÂùêÊ†áÂ∞±ÊòØË¶ÅÂà†Èô§ÁöÑ‰ΩçÁΩÆ‰∫Ü√æ - Ëß£Ê≥ï2Ôºö‰ΩøÁî®‰∏§‰∏™ÊåáÈíàfastÂíåslowÔºåÂÖàËÆ©fastÂÖàËµ∞`n-1`‰∏™‰ΩçÁΩÆÔºåÁÑ∂Âêé‰∏§‰∏™ÊåáÈíàÂêåÊó∂Ëµ∞(Áõ¥Âà∞fast==null)ÔºåÊúÄÂêéÔºåslowÁöÑ‰∏ã‰∏Ä‰∏™ËäÇÁÇπÂ∞±ÊòØË¶ÅÂà†Èô§ÁöÑËäÇÁÇπ„ÄÇ√æ- No20ÔºöÊ£ÄÈ™åÂ≠óÁ¨¶‰∏≤`[]{]}{]{}(`ËøôÊ†∑ÁöÑÂ≠óÁ¨¶‰∏≤ÊòØÂê¶ÊúâÊïà(ÂØπÈΩê)√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®StackÊù•Â≠òÂÇ®`[{(`Ëøô‰∫õÂ≠óÁ¨¶ÔºåÂ¶ÇÊûúÊòØ‰∏çÊòØËøô‰∫õÂ≠óÁ¨¶ÁöÑËØùÔºåÂàôÂá∫Ê†àÔºåÂà§Êñ≠ÊòØÂê¶‰∏é`[{(`Áõ∏ÂåπÈÖç„ÄÇ√æ  - ÂèØËÉΩÈÅáÂà∞ÁöÑËæπÁïåÈóÆÈ¢òÔºö‰∏Ä„ÄÅÂá∫Ê†àÊó∂ÈúÄË¶ÅÂà§Êñ≠StackÊòØÂê¶ÊúâÂÖÉÁ¥†„ÄÇ‰∫å„ÄÅÊâÄÊúâÂÖÉÁ¥†ËøõÂá∫Ê†àÂÆåÊØïÂêéÔºåÈúÄË¶ÅÂà§Êñ≠StackÊòØÂê¶‰∏∫null√æ- No24Ôºö‰∏§‰∏§‰∫§Êç¢ÈìæË°®ÁöÑËäÇÁÇπ√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®`p=dummyHead`Ôºå`while(p.next != null && p.next.next != null )`ÔºåÊâæÂá∫Êé•‰∏ãÊù•ÁöÑ‰∏â‰∏™ËäÇÁÇπÔºåÂàÜÂà´‰∏∫node1,node2,next„ÄÇÂÅöÊ≥ïÂæàÁÆÄÂçïÔºönode2ÊåáÂêënode1Ôºånode1ÊåáÂêënextÔºåpÊåáÂêënode2,node1ÁöÑ‰ΩçÁΩÆÁî±pÂèñ‰ª£√æ- No47ÔºöÊï∞Â≠óÂÖ®ÊéíÂàó(ÂõûÊ∫ØÊ≥ï)√æ -  Ëß£Ê≥ïÔºö‰ΩøÁî®‰∏Ä‰∏™Êï∞ÁªÑËÆ∞ÂΩïÂ∑≤Áªè""Ëµ∞Ëøá""ÁöÑÊï∞Â≠óÔºå‰ªé`index=0`ÂºÄÂßãÔºåÂΩì`index==nums.length`ËØ¥ÊòéÂ∑≤ÁªèÂá∫Áé∞‰∏Ä‰∏™ÁªìÊûú‰∫Ü„ÄÇÊØèÊ¨°ÈÅçÂéÜ‰∏Ä‰∏™Êï∞Â≠óÊó∂ÔºåÂà§Êñ≠ÊòØÂê¶Â∑≤Áªè""Ëµ∞Ëøá""ÔºåÂ¶ÇÊûúÊ≤°Êúâ""Ëµ∞Ëøá""ÂàôËÆæÁΩÆ‰∏∫""Ëµ∞Ëøá""ÔºåÂπ∂addÂà∞Êàë‰ª¨ÁöÑÁªìÊûú‰∏≠„ÄÇÂõûÊ∫ØÂÆå‰∫Ü‰πãÂêéÈúÄË¶ÅÊ∏ÖÈô§Áä∂ÊÄÅÔºÅ√æ- No51ÔºöÂÖ´ÁöáÂêéÈóÆÈ¢ò(ÂõûÊ∫ØÊ≥ï)√æ - Ëß£ÂÜ≥ÔºöÂÖ∂ÂÆû‰∏éÂÖ®ÊéíÂàóÁöÑÈóÆÈ¢òÊòØ‰∏ÄÊ†∑ÁöÑÔºåËß£Ê≥ï‰πüÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇÂè™‰∏çËøáÂÖ´ÁöáÂêéÈóÆÈ¢òÈúÄË¶ÅÈíàÂØπÂÖ∑‰ΩìÁöÑÊù°‰ª∂Êù•Âà§Êñ≠ËÄåÂ∑≤„ÄÇËßÑÂæãÂ∞±ÊòØËøô‰∏â‰∏™Êù°‰ª∂Ôºö`col[i] && !dia1[index + i] && !dia2[index - i + n - 1]`√æ- No75ÔºöÁªôÂá∫Âè™Êúâ`[0,1,2]`ÁöÑÊï∞ÁªÑÔºåËøô‰∏™Êï∞ÁªÑÊòØ‰π±Â∫èÁöÑÔºåÊÉ≥Ë¶ÅÂ∞ÜÂÖ∂ÁªìÊûúÂèòÊàêÊòØ`[0,1,2]`ÊúâÂ∫è√æ - Ëß£ÂÜ≥1ÔºöÂèØËÉΩÈ¶ñÂÖàÊÉ≥Âà∞ÁöÑÊòØÊéíÂ∫èÁÆóÊ≥ïÔºåÊéíÂ∫èÁÆóÊ≥ïÁöÑËØùÊó∂Èó¥Â§çÊùÇÂ∫¶ÊúÄ‰ΩéÊéßÂà∂Âú®O(nlogn)√æ - Ëß£ÂÜ≥2ÔºöÂõ†‰∏∫Âè™Êúâ3‰∏™ÂÖÉÁ¥†ÔºåÂÖ∂ÂÆûÊàë‰ª¨ÂèØ‰ª•ÂàõÂª∫Âá∫‰∏Ä‰∏™‰∏â‰∏™ÂÖÉÁ¥†ÁöÑÊï∞ÁªÑÔºåËÆ∞ÂΩïÊØè‰∏™Êï∞Â≠óÂá∫Áé∞ÁöÑÈ¢ëÁéáÔºåÁÑ∂ÂêéÊ†πÊçÆ`0,1,2`ÁöÑÈ¢ëÁéáÊîæÂõûÂà∞Êï∞ÁªÑÈáåËæπÂéªÔºåËøôÊ†∑Â∞±ÊòØÊúâÂ∫èÁöÑ‰∫Ü„ÄÇËøô‰∏™Êó∂Èó¥Â§çÊùÇÂ∫¶ÂíåÁ©∫Èó¥Â§çÊùÇÂ∫¶ÈÉΩ‰∏∫O(n)√æ - Ëß£ÂÜ≥3Ôºö‰ΩøÁî®‰∏âË∑ØÂø´ÊéíÁöÑÊÄùÊÉ≥ÔºåÂèØ‰ª•‰∏çÁî®ÂºÄËæüÂ§ö‰∫éÁöÑÁ©∫Èó¥„ÄÇÂÖ∑‰ΩìÂÆûÁé∞Â∞±ÊòØ0ÊîæÂú®ÊúÄÂ∑¶‰æßÔºå1Âú®‰∏≠Èó¥Ôºå2Âú®ÊúÄÂè≥‰æß„ÄÇ√æ- No77ÔºöÊ±ÇËß£C(n,k)ÁöÑÁªÑÂêà(ÂõûÊ∫ØÊ≥ï)√æ - Ëß£Ê≥ïÔºö‰ªé1ÂºÄÂßãÔºåÂè™Ë¶Å`result.size()==k`ÂàôÊòØ‰∏ÄÁßçÁªÑÂêàÔºåÈÄíÂΩíÂÆåËÆ∞ÂæóË¶ÅÊ∏ÖÈô§Áä∂ÊÄÅ√æ- No79ÔºöÂú®n*mÁöÑ‚ÄúÂú∞Âõæ‚Äù‰∏≠ÔºåÊòØÂê¶Â≠òÂú®ÊúâÂØπÂ∫îÁöÑË∑ØÂæÑÊâæÂà∞ÂØπÂ∫îÁöÑÁ≠îÊ°à(ÂõûÊ∫Ø)√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÊù•‰ª£Ë°®‰∏ä‰∏ãÁßªÂä®(ÈÅçÂéÜËøô‰∏™Êï∞ÁªÑÔºåÂç≥ÂèØÂÆûÁé∞)`int d[][] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};`‰ΩøÁî®‰∏Ä‰∏™visitedÊï∞ÁªÑÊù•‰ª£Ë°®Ëøô‰∏™‚Äú‰ΩçÁΩÆ‚ÄùÊòØÂê¶Â∑≤ÁªèË¢´Ëµ∞Ëøá‰∫Ü„ÄÇÂ¶ÇÊûúÊ≤°ÊúâË¢´Ëµ∞ËøáÔºåÂπ∂‰∏îÊòØÂΩìÂâçÁöÑÁªìÊûúË∑ØÂæÑ‰πã‰∏ÄÔºåÂàôÁªßÁª≠‰∏ä‰∏ãÂ∑¶Âè≥ÁßªÂä®„ÄÇÁõ¥Âà∞ÂΩìÂâçÁöÑÁªìÊûúÈïøÂ∫¶‰∏éindexÁõ∏Á≠â(ÈÄíÂΩíÂá∫Âè£) „ÄÇÂõûÊ∫ØÂÆåÈúÄË¶ÅÊ∏ÖÈô§Áä∂ÊÄÅÂÄº√æ- No96-144-145ÔºöÈÅçÂéÜÊ†ë√æ - Ëß£Ê≥ï1Ôºö‰ΩøÁî®ÈÄíÂΩíÁöÑËØùÂ∞±ÂæàÂÆπÊòìÂâç‰∏≠ÂêéÈÅçÂéÜÊï∞‰∫Ü„ÄÇ√æ - Ëß£Ê≥ï2Ôºö‰ΩøÁî®StackÊù•ÂÆûÁé∞Êó†ÈÄíÂΩíÁöÑÊñπÂºèÊù•ÈÅçÂéÜÔºåË¶ÅÊ≥®ÊÑè‰ΩøÁî®StackÊó∂Ôºå‰ªÄ‰πàÊó∂ÂÄôpushËøõÂéªÔºÅÂõ†‰∏∫Ë∑üÈÄíÂΩíÁöÑÊó∂ÂÄôÊòØÁõ∏ÂèçÁöÑ√æ- No102ÔºöÂ±ÇÂ∫èÈÅçÂéÜÊ†ë√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®ÈòüÂàóÁöÑÊñπÂºè(linkedList)Â∞±ÂæàÂÆπÊòìÂÆûÁé∞‰∫Ü√æ- No104ÔºöÊ†ëÁöÑÊúÄÂ§ßÊ∑±Â∫¶√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®ÈÄíÂΩíÁöÑÊñπÂºèÔºåÂÖ∂ÂÆûÂ∞±‰∏ÄË°å‰ª£Á†Å` return 1 + Math.max(maxDepth(root.left), maxDepth(root.right));`√æ- No112ÔºöÊ†ëÊ†πËäÇÁÇπÂà∞Âè∂ËäÇÁÇπÁöÑ""Âíå""Ë∑ØÂæÑÊòØÂê¶Â≠òÂú®√æ - Ëß£Ê≥ïÔºöÈÄíÂΩíÁöÑÂá∫Âè£Â∞±ÊòØ-->Âè∂Â≠êËäÇÁÇπÁöÑÂÄºÊòØÂê¶Á≠â‰∫ésumÔºåÈÄíÂΩíË∞ÉÁî®`return hasPathSum(root.left, sum - root.val)|| hasPathSum(root.right, sum - root.val);`√æ- No113ÔºöÊ±ÇÂá∫Ê†ëÊ†πËäÇÁÇπÂà∞Âè∂ËäÇÁÇπÁöÑ""Âíå""Ë∑ØÂæÑ√æ - Ëß£Ê≥ïÔºöÁõ∏ÂØπ‰∫éleetcode 112ÔºåÂÆÉÂè™ÊòØË¶ÅÊ±ÇÂá∫ÂØπÂ∫îÁöÑË∑ØÂæÑ„ÄÇÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®‰∏Ä‰∏™listÊù•ËÆ∞ÂΩïË∑ØÂæÑÔºåÊØèÊ¨°ËøõÂÖ•‰πãÂâçÂ∞±addËøõÂéªÔºåÈÄíÂΩíÂÆå‰∫Ü‰πãÂêéÂ∞±removeÊéâ„ÄÇÂÖ∂ÂÆûÂ∞±Áõ∏ÂΩì‰∫éÂõûÊ∫ØÊ≥ï√æ- No167ÔºöÊâæÂá∫Êï∞ÁªÑ‰∏≠ËÉΩÂ§üÁªÑÊàêsumÁöÑ‰∏§‰∏™Êï∞ÁöÑÊï∞ÁªÑ‰∏ãÊ†áÔºåÊ≠§Êó∂Ëøô‰∏™Êï∞ÁªÑÊòØÊúâÂ∫èÁöÑ„ÄÇ√æ - Ë∑üÁ¨¨‰∏ÄÈ¢ò‰∏çÂêåÁöÑÊòØÔºåÊ≠§Êó∂ÁöÑÊï∞ÁªÑÊòØÊúâÂ∫èÁöÑ„ÄÇ√æ - Ëß£Ê≥ï1Ôºö‰ΩøÁî®‰∫åÂàÜÁöÑÊñπÂºèÊù•ÊêúÁ¥¢ÔºåÊâæÂá∫ÂØπÂ∫îÁöÑ‰∏ãÊ†á(Ê≠§Êó∂ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØO(nlogn)√æ - Ëß£Ê≥ï2Ôºö‰ΩøÁî®ÊªëÂä®Á™óÂè£ÁöÑÊñπÂºèÊù•ÊêúÁ¥¢ÔºåÂõ†‰∏∫lÂÄºÊòØÂ∞èÁöÑÔºårÂÄºÊòØÂ§ßÁöÑ„ÄÇÂ¶ÇÊûúl+r < targetÔºålËøôËæπ++Âç≥ÂèØÔºÅ√æ- No200ÔºöÂØªÊâæ""ÈôÜÂú∞""ÁöÑ‰∏™Êï∞ÔºåÂú®n*mÁöÑÊï∞ÁªÑ‰∏≠ÂØªÊâæÂá∫""ÈôÜÂú∞""(Ê∑±Â∫¶ÈÅçÂéÜ)√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÊù•ÂÆûÁé∞ÁßªÂä®`d[][] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};`Ôºå‰ΩøÁî®`visited[][]`Êù•ËÆ∞ÂΩïÂ∑≤ÁªèËµ∞ËøáÁöÑ‰ΩçÁΩÆ„ÄÇ√æ- No203ÔºöÂú®ÈìæË°®Âà†Èô§ÁöÑËäÇÁÇπ√æ - Ëß£Ê≥ï1Ôºö‰ΩøÁî®dummyHeadÂ∞±‰∏çÁî®ÂÜçÂÅöÂÖ∂‰ΩôÁöÑÂ§ÑÁêÜ‰∫Ü√æ - Ëß£Ê≥ï2Ôºö‰ΩøÁî®ÈÄíÂΩíÁöÑÊñπÂºèÔºö`head.next = removeElements4(head.next, val);`ÔºåÊúÄÂêé`head.val == val ? head.next : head;`√æ- No206ÔºöÂèçËΩ¨ÈìæË°®√æ - Ëß£Ê≥ï1ÔºöÂæ™ÁéØÁöÑÊñπÂºèÔºõ‰ΩøÁî®‰∏Ä‰∏™preËäÇÁÇπÔºåÊâæÂà∞nextËäÇÁÇπ„ÄÇ`cur.next= pre; pre = cur; cur = next`√æ - Ëß£Ê≥ï2ÔºöÈÄíÂΩíÁöÑÊñπÂºèÔºõ`ListNode rhead = reverseList2(head.next); head.next.next = head; head.next = null; return rhead;`√æ- No209ÔºöÁªôÂá∫‰∏Ä‰∏™Êï∞ÁªÑÔºåÁªôÂá∫‰∏Ä‰∏™targetÔºåÊ±ÇÂá∫Êï∞ÁªÑÁöÑÂÖÉÁ¥†+Ëµ∑Êù•ÁöÑÂíå>targetÁöÑÊúÄÁü≠Èó¥Èöî√æ - Ëß£Ê≥ïÔºöË∑üNo3‰∏çÂêåÁöÑÊòØÔºåNo3ÁùÄÈáç‰∫é‰∏çÈáçÂ§çÂÖÉÁ¥†ÁöÑÈó¥ÈöîÔºåËÄåËøôÈáåÁùÄÈáç‰∫éÊØîËæÉtargetÁöÑÂÄº„ÄÇ‰ΩøÁî®‰∏Ä‰∏™sumÊù•Áª¥Êä§ÔºåÊØèÊ¨°√æ- No219ÔºöÁªôÂá∫‰∏Ä‰∏™Êï∞ÁªÑÔºåÂú®kÁöÑËåÉÂõ¥ÂÜÖÔºåÂà§Êñ≠ÊúâÊ≤°ÊúâÈáçÂ§çÁöÑÂÖÉÁ¥†√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®HashSetÊù•Áª¥Êä§ÔºåÂ¶ÇÊûúÂú®add‰πãÂâçÂèëÁé∞Â∑≤ÁªèÈáçÂ§ç‰∫ÜÔºåËøîÂõûtrue„ÄÇÂΩìmapÁöÑÂ§ßÂ∞èÂ§ß‰∫ék+1,ÈÇ£Â∞±ÂáèÂéªÊúÄÂ∑¶ËæπÁöÑÂÖÉÁ¥†`if(record.size() == k + 1) record.remove(nums[i-k]);`√æ- No220ÔºöÂú®Ë∑ùÁ¶ªÂΩìÂâç‰ΩçÁΩÆ‰∏∫kÁöÑËåÉÂõ¥ÂÜÖÔºåÊòØÂê¶Â≠òÂú®‰∏Ä‰∏™ÁÇπÁöÑÂÄº‰∏éÂΩìÂâç‰ΩçÁΩÆÂÄºÁöÑÂ∑ÆÁöÑÁªùÂØπÂÄºÂ∞è‰∫éÁ≠â‰∫ét„ÄÇ√æ - Ëß£Ê≥ïÔºöÂú®‰∏ä‰∏ÄÈ¢ò‰∏≠Ôºå‰∏ªË¶ÅÊòØÂà§Êñ≠ÊòØÂê¶ÊúâÈáçÂ§çÂÄºÔºåËÄåÊ≠§ÈÅìÁöÑÊù°‰ª∂ÊòØÊúâÊó†ÁªùÂØπÂÄºÂ∞è‰∫éÁöÑÁ≠â‰∫ét(Âú®kËåÉÂõ¥ÂÜÖ)„ÄÇÂÖ∂ÂÆûÂ∞±ÊòØÂà§Êñ≠Êù°‰ª∂ÂèòÂåñ‰∫ÜÔºåÁªùÂØπÂÄºÈóÆÈ¢òÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®treeSetÁöÑceilingÊñπÊ≥ïÔºö`if (record.ceiling((long) nums[i] - (long) t) != null &&record.ceiling((long) nums[i] - (long) t) <= (long) nums[i] + (long) t)`√æ- No226ÔºöÂèçËΩ¨Ê†ë√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®ÈÄíÂΩíÔºåÂæóÂà∞Â∑¶ËæπÔºåÂæóÂà∞Âè≥Ëæπ„ÄÇÂ∑¶Âè≥‰∏§Ëæπ‰∫§Êç¢√æ- No237ÔºöÂú®ÈìæË°®Âà†Èô§ÂÖÉÁ¥†‰∏∫valueÁöÑËäÇÁÇπ√æ - Ëß£Ê≥ïÔºöÊâæÂà∞ÁªôÂÆöÂÄºÁöÑËäÇÁÇπÔºåÂ∞ÜÊâæÂà∞ÁöÑËäÇÁÇπÁöÑ‰∏ã‰∏Ä‰∏™ËäÇÁÇπÁöÑÂÄºËµãÂÄºÁªôÂΩìÂâçËäÇÁÇπÔºåÂà†Èô§Êéâ‰∏ã‰∏Ä‰∏™ËäÇÁÇπ√æ- No253ÔºöÂú®‰∫åÂèâÊ†ëÊâæÂá∫pÂíåqËäÇÁÇπÁöÑÊúÄÂ∞èÂÖ¨ÂÖ±Á•ñÂÖà√æ - Ëß£Ê≥ïÔºöp q ÈÉΩÂú®rootÂ∑¶Ëæπ`if (p.val < root.val && q.val < root.val) return lowestCommonAncestor(root.left, p, q);`...Âè≥Ëæπ‰πüÊòØÂ∑Æ‰∏çÂ§öÁöÑÔºåÂ¶ÇÊûúÂú®Âêå‰∏Ä‰æßÔºåÁõ¥Êé•ËøîÂõûroot√æ- No257ÔºöÊ±ÇÂá∫‰∫åÂèâÊ†ëÁöÑË∑ØÂæÑ√æ - Ëß£Ê≥ïÔºöÂΩìÈÅçÂéÜÂà∞Âè∂Â≠êËäÇÁÇπÊó∂ÔºåÊ≠§Êó∂Âä†ÂÖ•Ê†πËäÇÁÇπ„ÄÇÂê¶ÂàôÈÄíÂΩíÊ±ÇÂá∫Â∑¶Â≠êÊ†ëÂíåÂè≥Â≠êÊ†ëÁöÑË∑ØÂæÑ√æ- No260ÔºöÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ numsÔºåÂÖ∂‰∏≠ÊÅ∞Â•ΩÊúâ‰∏§‰∏™ÂÖÉÁ¥†Âè™Âá∫Áé∞‰∏ÄÊ¨°ÔºåÂÖ∂‰ΩôÊâÄÊúâÂÖÉÁ¥†ÂùáÂá∫Áé∞‰∏§Ê¨°„ÄÇ ÊâæÂá∫Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑÈÇ£‰∏§‰∏™ÂÖÉÁ¥†√æ - Ëß£Ê≥ïÔºöÂÖ∂ÂÆûÂ¶ÇÊûúÊòØÊÅ∞Â•ΩÊúâ‰∏Ä‰∏™ÂÖÉÁ¥†Âè™Âá∫Áé∞‰∏ÄÊ¨°ÁöÑËØùÔºåÊàë‰ª¨ÂèØ‰ª•Áõ¥Êé•ÂºÇÊàñÂ∞±ÊêûÊéÇ‰∫Ü„ÄÇÁé∞Âú®ÊòØ‰∏§‰∏™ÂÖÉÁ¥†Âè™Âá∫Áé∞‰∏ÄÊ¨°ÔºåËß£ÂÜ≥ÂÖ∂ÂÆû‰πü‰∏ÄÊ†∑ÔºöÂØπËøô‰∫õÊï∞ÊçÆËøõË°åÂºÇÊàñÔºåÂæóÂá∫‰∏Ä‰∏™sum-->`sum ^= nums[i];`Ôºå‰ΩøÁî®`sum &= -sum;`ÂæóÂá∫‰∏§‰∏™Êï∞ÂºÇÊàñÁªìÊûúÁöÑÊúÄÂè≥ËæπÁöÑ‰∏Ä‰∏™1ÔºåÂÖ∂‰ªñÁöÑ‰∏∫Èõ∂ÔºåËøôÊ†∑ËøõË°å&Êìç‰ΩúÂ∞±ÂèØ‰ª•Â∞Ü‰∏§‰∏™‰∏çÂêåÁöÑÊï∞ÂàÜÂà∞‰∏çÂêåÁöÑ‰∏§ÁªÑÂéª„ÄÇ‰∫éÊòØ‰ΩøÁî®`int[] res = new int[2];`Ê†πÊçÆ==0Êù•Âå∫ÂàÜ‰∏§‰∏™ÁªÑÊù•ÂºÇÊàñÔºåÊúÄÂêéÂæóÂá∫ÁöÑÁªìÊûúÂ∞±ÊòØresÁöÑÂÄº‰∫ÜÔºÅ√æ- No283ÔºöÂ∞ÜÊï∞ÁªÑÁöÑ0ÁßªÂà∞ÊúÄÂêéÔºåÂÖ∂‰ΩôÁöÑÂÖÉÁ¥†È°∫Â∫è‰∏çÂèëÁîüÊîπÂèò√æ - Ëß£Ê≥ï1Ôºö‰ΩøÁî®‰∏Ä‰∏™Êñ∞Êï∞ÁªÑË£ÖËΩΩÈùû0ÂÖÉÁ¥†ÔºåÂ∞ÜnumsÂâ©‰ΩôÁöÑ‰ΩçÁΩÆÊîæÁΩÆ‰∏∫0Ôºö`for(int i = nonZeroElements.size() ; i < nums.length ; i ++) nums[i] = 0;`√æ - Ëß£Ê≥ï2Ôºönums‰∏≠, [0...k)ÁöÑÂÖÉÁ¥†Âùá‰∏∫Èùû0ÂÖÉÁ¥†ÔºåÂè™Ë¶ÅÈÅçÂéÜÂà∞ÁöÑÂÖÉÁ¥†‰∏ç‰∏∫0Ôºåk++„ÄÇ√æ - Ëß£Ê≥ï3Ôºö‰ΩøÁî®‰∫§Êç¢ÁöÑÊñπÂºè`for(int i = 0 ; i < nums.length ; i ++) if(nums[i] != 0) if(k != i)swap(nums, k++, i); else k ++;`√æ- No347ÔºöÊ±ÇTop K È¢ëÁéáÂá∫Áé∞ÊúÄÈ´òÁöÑÂÖÉÁ¥†√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®HashMapÊù•ËÆ∞ÂΩïÊØè‰∏™ÂÖÉÁ¥†Âá∫Áé∞ÁöÑÈ¢ëÁéáÔºåÁÑ∂Âêé‰ΩøÁî®Â∞èÈ°∂Â†ÜÂ∞ÜÂÖ∂ÊØîËæÉÔºåÂ¶ÇÊûúÂΩìÂâçpopÂá∫Êù•ÁöÑÂ†ÜÈ°∂ÊØîÂΩìÂâçÈÅçÂéÜÂà∞ÁöÑÂÖÉÁ¥†È¢ëÁéáË¶ÅÂ∞èÔºåÂàôÂá∫ÈòüÔºåÊç¢ÂΩìÂâçÂÖÉÁ¥†ËøõÂéª(Ê≥®ÊÑèÔºåË¶ÅÁª¥Êä§ÂΩìÂâçÂ†ÜÂè™Êúâk‰∏™ÂÖÉÁ¥†ÁöÑ)√æ- No349ÔºöÊ±Ç‰∏§‰∏™Êï∞ÁªÑÁöÑ‰∫§ÈõÜÔºåÂè™Âá∫Áé∞‰∏ÄÊ¨°√æ - Ëß£Ê≥ïÔºöÂ∞ÜÂÖ∂‰∏≠‰∏Ä‰∏™Êï∞ÁªÑÈÅçÂéÜÔºå‰ΩøÁî®hashSetÊù•Â≠òÂÇ®„ÄÇÂÜçÂ∞ÜÁ¨¨‰∫å‰∏™Êï∞ÁªÑÈÅçÂéÜÔºåÂà§Êñ≠ÂΩìÂâçÂÖÉÁ¥†ÊòØÂê¶Â≠òÂú®HashSet‰∏≠ÔºåÂ¶ÇÊûúÂ≠òÂú®ÂàôÊòØÂÖ∂‰∏≠‰∏Ä‰∏™ÁªìÊûú√æ- No350ÔºöÊ±Ç‰∏§‰∏™Êï∞ÁªÑÁöÑ‰∫§ÈõÜÔºåËøôÊ¨°Ë¶ÅÊ±ÇÊúâÂ§öÂ∞ë‰∏™Áõ∏ÂêåÁöÑÔºå‰∫§ÈõÜÁöÑÁªìÊûú‰πüÂæóÊúâÂ§öÂ∞ë‰∏™√æ - Ëß£Ê≥ïÔºö‰ΩøÁî®HashMapÊù•ËÆ°ÁÆóÈ¢ëÁéáÔºåÂú®ÈÅçÂéÜÁ¨¨‰∫å‰∏™Êï∞ÁªÑÁöÑÊó∂ÂÄôÔºåÊ†πÊçÆÈ¢ëÁéáÊù•addÂà∞ÁªìÊûúÈõÜ‰∏≠√æ- No437ÔºöÊ†ëÊ†πËäÇÁÇπÂà∞ÂÖ∂‰ΩôÊ†ëËäÇÁÇπÁöÑ""Âíå""Ë∑ØÂæÑÊúâÂ§öÂ∞ëÊù°Ôºü√æ - Ëß£Ê≥ïÔºöËøôË∑ü‰πãÂâçÈÇ£‰∏™ÊúâÁÇπÂå∫Âà´ÔºåËøô‰∏çÊòØËßÑÂÆöÂà∞Âè∂Â≠êËäÇÁÇπ‰∏ä‰∫ÜÔºåËÄåÊòØÊØè‰∏™ËäÇÁÇπ‰∏äÈÉΩË°åÔºÅ`return findPath(root, sum)+ pathSum(root.left, sum) + pathSum(root.right, sum);`√æ- No447ÔºöÊ±ÇÂá∫‰∏â‰∏™ÁÇπË∑ùÁ¶ªÁöÑÁªÑÂêà√æ - Ëß£Ê≥ï‰ΩøÁî®hashMapÊù•Â≠òÂÇ®Ëµ∑Êù•ÂêàÈÄÇÁöÑË∑ùÁ¶ª„ÄÇÊ±ÇÂíåÁöÑÊó∂ÂÄô‰ΩøÁî®`res += record.get(dis) * (record.get(dis) - 1);`Âç≥ÂèØÔºÅ√æ- No454ÔºöÊ±ÇÂá∫Âõõ‰∏™Êï∞ÁªÑÁöÑÂÖÉÁ¥†ËÉΩÂ§üÁªÑÊàê0ÁöÑÁªÑÂêà√æ - Ëß£Ê≥ïÔºöËÆ°ÁÆóCÂíåDÁöÑsumÔºåÊîæÂÖ•MapÔºåÂ¶ÇÊûúsumÈáçÂ§çÁöÑËØùÔºåvalueÂä†1(ÂºÄËæüÁ©∫Èó¥Êù•ÂáèÂ∞ëÊó∂Èó¥Â§çÊùÇÂ∫¶)„ÄÇÈÅçÂéÜABÁöÑÊó∂ÂÄôÔºåÁÆóÂá∫ÂÖ∑‰ΩìÁöÑ‰∏™Êï∞Â∞±ÂèØ‰ª•‰∫ÜÔºö`if(map.containsKey(-A[i]-B[j])) res += map.get(-A[i]-B[j]);`√æ- No804ÔºöÂîØ‰∏ÄÊë©Â∞îÊñØÂØÜÁ†ÅËØç√æ - Ëß£Ê≥ïÔºöÊü•Ë°®(Â∞ÜÂØÜÁ†ÅÂÆö‰πâÊàêË°®ÔºåÊü•Âá∫ÂØπÂ∫îÁöÑÊë©ÊñØÂØÜÁ†Å)ÔºåÊîæÂÖ•setÈõÜÂêàÂç≥ÂèØ"
aht-group/ofx,3838,0,4,1,Organization,False,,,,14,Java,"{'': 1, 'md': 1, 'xml': 1}",1009,5,5,6,0,4255,True,0,0,0,0,3,0,3,0,8,0,2,13,455,227,0,0,6,0,,,[![Maven Central](http://maven-badges.herokuapp.com/maven-central/org.openfuxml/ofx/badge.svg)](http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.openfuxml%22%20AND%20a%3A%ofx%22) [![Build Status](https://www.aht-group.com/jenkins/buildStatus/icon?job=OFX)](https://www.aht-group.com/jenkins/job/OFX)√æ√æ# openFuXML
jamorham/xDrip-plus,29871,212,98,179,User,False,Enhanced personal research version of the xDrip android app,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",17,Java,"{'': 3, 'yml': 2, 'md': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",4955,2,0,54,0,2046,False,,,,,14,85,2,3,7,0,12,157,16199,5563,0,0,26,,214,,"# Nightscout xDrip+√æ> Enhanced personal research version of xDrip√æ√æ <img align=""right"" src=""Documentation/images/download-xdrip-plus-qr-code.png"">√æ Info page and APK download: https://jamorham.github.io/#xdrip-plus√æ√æ<img align=""right"" src=""https://travis-ci.org/jamorham/xDrip-plus.svg?branch=master"">√æ√æ## Features√æ* Voice, Keypad or Watch input of Treatments (Insulin/Carbs/Notes)√æ* Visualization of Insulin and Carb action curves + Undo/Redo√æ* Improved alerts and predictive low forecasting feature√æ* Instant data synchronization between phones and tablets√æ* Support for many different data sources√æ* Published by the Nightscout Foundation√æ√æ <img align=""middle"" src=""https://jamorham.github.io/images/jamorham-natural-language-treatments-two-web.png"">√æ√æ## What does it do?√æ√æxDrip+ is an unofficial and independent Android app which works as data hub and processor between many different devices.√æ√æIt supports wireless connections to G4, G5, G6, Medtrum A6, Libre via NFC and Bluetooth, 630G, 640G, 670G pumps and Eversense CGM via companion apps. Bluetooth Glucose Meters such as the Contour Next One, AccuChek Guide, Verio Flex & Diamond Mini as well as devices like the Pendiq 2.0 Insulin Pen.√æ√æHeart-rate and step counter data is processed from Android Wear, Garmin, Fitbit and Pebble smart-watches and watch-faces for those that show glucose values and graphs.√æ√æOn some Android Wear watches, it is possible for the G5 or G6 to talk directly to the watch so it can display values even when out of range of the phone.√æ√æThe app contains sophisticated charting, customization and data entry features as well as a predictive simulation model.√æ√æInstant two-way synchronization is possible by linking follower handsets, data can also be uploaded and downloaded to a Nightscout web service or uploaded directly to Tidepool, MongoDB or InfluxDB.√æ√æCustomization allows for different options to configure alarms, vocalize readings, change the display preferences etc. International users can update translations from within the app too.√æ√æYour data is yours and can be exported in many different ways. xDrip also intercommunicates with other apps, for example sending and receiving live data with AndroidAPS.√æ√æ√æ## Ethos√æ* Developed using Rapid Prototyping methodology√æ* Immediate results favoured to prove concepts√æ* Designed to support my personal research goals√æ* User Choice always a high priority√æ* No registration or Internet access required√æ* Community testing and collaboration appreciated!√æ√æ## Roadmap√æ* Calibration improvements√æ* Supporting the large family of devices√æ* Increasing automation and data backup and sync options√æ* More Nightscout and APS integration√æ√æ## Collaboration√æWe are very happy if people want to collaborate with this project. Please contact us if you want to get involved and study the collaboration guidelines before submitting any patches or pull requests.√æ√æ## Thanks√æNone of this would be possible without all the hard work of the xDrip and Nightscout communities who have developed such excellent software and allowed us to build upon it."
16GCC-SE/SBClock,4435,0,0,1,Organization,False,SBClock,,,6,Java,{'': 1},147,1,1,1,0,580,True,0,9,0,0,0,0,0,0,14,6,0,0,0,0,0,0,10,0,,,
apache/maven-remote-resources-plugin,365,3,23,10,Organization,False,Apache Maven Remote Resources Plugin,https://maven.apache.org/plugins/maven-remote-resources-plugin/,,6,Java,"{'yaml': 1, '': 2, 'md': 1, 'xml': 1}",332,1,19,16,5,4964,False,,,,,1,2,0,0,8,0,1,10,82,33,0,0,2,869,,,"<!---√æ Licensed to the Apache Software Foundation (ASF) under one or more√æ contributor license agreements.  See the NOTICE file distributed with√æ this work for additional information regarding copyright ownership.√æ The ASF licenses this file to You under the Apache License, Version 2.0√æ (the ""License""); you may not use this file except in compliance with√æ the License.  You may obtain a copy of the License at√æ√æ      http://www.apache.org/licenses/LICENSE-2.0√æ√æ Unless required by applicable law or agreed to in writing, software√æ distributed under the License is distributed on an ""AS IS"" BASIS,√æ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ See the License for the specific language governing permissions and√æ limitations under the License.√æ-->√æContributing to [Apache Maven Remote Resources Plugin](https://maven.apache.org/plugins/maven-remote-resources-plugin/)√æ======================√æ√æ[![ASF Jira](https://img.shields.io/endpoint?url=https%3A%2F%2Fmaven.apache.org%2Fbadges%2Fasf_jira-MRRESOURCES.json)][jira]√æ[![Apache License, Version 2.0, January 2004](https://img.shields.io/github/license/apache/maven.svg?label=License)][license]√æ[![Maven Central](https://img.shields.io/maven-central/v/org.apache.maven.plugins/maven-remote-resources-plugin.svg?label=Maven%20Central)](https://search.maven.org/artifact/org.apache.maven.plugins/maven-remote-resources-plugin)√æ[![Jenkins Status](https://img.shields.io/jenkins/s/https/builds.apache.org/job/maven-box/job/maven-remote-resources-plugin/job/master.svg?)][build]√æ[![Jenkins tests](https://img.shields.io/jenkins/t/https/builds.apache.org/job/maven-box/job/maven-remote-resources-plugin/job/master.svg?)][test-results]√æ√æ√æYou have found a bug or you have an idea for a cool new feature? Contributing√æcode is a great way to give something back to the open source community. Before√æyou dig right into the code, there are a few guidelines that we need√æcontributors to follow so that we can have a chance of keeping on top of√æthings.√æ√æGetting Started√æ---------------√æ√æ+ Make sure you have a [JIRA account](https://issues.apache.org/jira/).√æ+ Make sure you have a [GitHub account](https://github.com/signup/free).√æ+ If you're planning to implement a new feature, it makes sense to discuss your changes √æ  on the [dev list][ml-list] first. √æ  This way you can make sure you're not wasting your time on something that isn't √æ  considered to be in Apache Maven's scope.√æ+ Submit a ticket for your issue, assuming one does not already exist.√æ  + Clearly describe the issue, including steps to reproduce when it is a bug.√æ  + Make sure you fill in the earliest version that you know has the issue.√æ+ Fork the repository on GitHub.√æ√æMaking and Submitting Changes√æ--------------√æ√æWe accept Pull Requests via GitHub. The [developer mailing list][ml-list] is the√æmain channel of communication for contributors.  √æThere are some guidelines which will make applying PRs easier for us:√æ+ Create a topic branch from where you want to base your work (this is usually the master branch).√æ  Push your changes to a topic branch in your fork of the repository.√æ+ Make commits of logical units.√æ+ Respect the original code style: by using the same [codestyle][code-style],√æ  patches should only highlight the actual difference, not being disturbed by any formatting issues:√æ  + Only use spaces for indentation.√æ  + Create minimal diffs - disable on save actions like reformat source code or organize imports. √æ    If you feel the source code should be reformatted, create a separate PR for this change.√æ  + Check for unnecessary whitespace with `git diff --check` before committing.√æ+ Make sure your commit messages are in the proper format. Your commit message should contain the key of the JIRA issue.√æ```√æ[MRRESOURCES-XXX] Subject of the JIRA Ticket√æ Optional supplemental description.√æ```√æ+ Make sure you have added the necessary tests (JUnit/IT) for your changes.√æ+ Run all the tests with `mvn -Prun-its verify` to assure nothing else was accidentally broken.√æ+ Submit a pull request to the repository in the Apache organization.√æ+ Update your JIRA ticket and include a link to the pull request in the ticket.√æ√æIf you plan to contribute on a regular basis, please consider filing a [contributor license agreement][cla].√æ√æMaking Trivial Changes√æ----------------------√æ√æFor changes of a trivial nature to comments and documentation, it is not always√ænecessary to create a new ticket in JIRA.  In this case, it is appropriate to√æstart the first line of a commit with '(doc)' instead of a ticket number.√æ√æAdditional Resources√æ--------------------√æ√æ+ [Contributing patches](https://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch)√æ+ [Apache Maven Remote Resources Plugin JIRA project page][jira]√æ+ [Contributor License Agreement][cla]√æ+ [General GitHub documentation](https://help.github.com/)√æ+ [GitHub pull request documentation](https://help.github.com/send-pull-requests/)√æ+ [Apache Maven Twitter Account](https://twitter.com/ASFMavenProject)√æ+ #Maven IRC channel on freenode.org√æ√æ[jira]: https://issues.apache.org/jira/projects/MRRESOURCES/√æ[license]: https://www.apache.org/licenses/LICENSE-2.0√æ[ml-list]: http://maven.apache.org/mailing-lists.html√æ[code-style]: https://maven.apache.org/developers/conventions/code.html√æ[cla]: https://www.apache.org/licenses/#clas√æ[maven-wiki]: https://cwiki.apache.org/confluence/display/MAVEN/Index√æ[test-results]: https://builds.apache.org/job/maven-box/job/maven-remote-resources-plugin/job/master/lastCompletedBuild/testReport/√æ[build]: https://builds.apache.org/job/maven-box/job/maven-remote-resources-plugin/job/master/"
googleads/google-ads-java,15935,45,34,49,Organization,False,Google Ads API Client Library for Java,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 3, 'xml': 1}",293,22,23,11,0,793,True,21,72,8,7,12,196,9,61,25,0,7,68,1685091,39180,12,0,61,14,,,# Google Ads API Client Library for Java√æ√æThis project hosts the Java client library for the Google Ads API.√æ√æ## Features√æ√æ  * Distributed via [Maven](https://maven.apache.org/).√æ  * Easy management of credentials.√æ  * Easy creation of Google Ads API service clients.√æ√æ## Requirements√æ√æ  * Java 1.8+√æ  * Maven 3.0+√æ√æ## Maven artifacts√æ√æ    <dependency>√æ      <groupId>com.google.api-ads</groupId>√æ      <artifactId>google-ads</artifactId>√æ      <version>5.1.0</version>√æ    </dependency>√æ    √æ## Documentation√æ√æOur documentation is available [here](https://developers.google.com/google-ads/api/docs/client-libs/java).√æ√æ## Miscellaneous√æ√æ### Wiki√æ√æ- https://github.com/googleads/google-ads-java/wiki√æ√æ### Issue tracker√æ√æ- https://github.com/googleads/google-ads-java/issues√æ√æ### API Documentation:√æ√æ- https://developers.google.com/google-ads/api/docs√æ√æ### Support forum√æ√æ- https://groups.google.com/forum/#!forum/adwords-api√æ√æ### Authors√æ√æ- [Josh Radcliff](https://github.com/jradcliff)√æ- [Nick Birnie](https://github.com/nwbirnie)√æ- [Devin Chasanoff](https://github.com/devchas)
The-Evil-Pickle/Replay-the-Spire,118169,40,10,17,User,False,Expansion mod for Slay the Spire.,,,6,Java,"{'': 2, 'md': 1, 'xml': 1}",255,2,112,5,0,848,True,33,96,1,0,0,8,0,0,8,0,1,2,736,223,0,0,3,,0,,"# Replay the Spire√æ#### Expansion mod for Slay the Spire by The_Evil_Pickle, AstroPenguin642, Bakuhaku, Stewartisme, and Slimer509.√æ###### (Currently maintained by The_Evil_Pickle)√æSupport this mod at https://www.patreon.com/the_evil_pickle/overview√æ√æThis mod aims to expand upon the base game by adding lots of content. It is currently a work in progress, but you can download the [latest release](https://github.com/The-Evil-Pickle/Replay-the-Spire/releases) to help us improve it.√æ√æ### Requires:√æ * ModTheSpire (https://github.com/kiooeht/ModTheSpire)√æ * BaseMod (https://github.com/daviscook477/BaseMod/releases)√æ * StSLib (https://github.com/kiooeht/StSLib/releases)√æ√æ### Currently adds:√æ * 60 Relics (4 ironclad, 4 silent, 6 defect, 46 shared)√æ * 71 Cards (15 ironclad, 15 silent, 15 defect, 13 colorless, 13 curses)√æ * 5 Events√æ * 11 Potions√æ * 2 Rooms√æ * 3 Elites√æ * 2 Bosses√æ * 4 Custom run modifiers√æ * Additional Neow options√æ√æSome content originally from this mod is now in the official release of the game!√æ * Potion rarities√æ * Liquid Bronze (originally ""Thorns Potion"")√æ * Ghost in a Jar (originally ""Spirit Potion"")√æ * Power Potion (originally ""Inspiration Potion"")√æ * Discovery (originally ""Improvise"")√æ√æ# Relics√æName | Character | Rarity | Description√æ--- | --- | --- | ---√æAntivirus Software | Defect | Common | Every time you shuffle your deck, gain 1 **Artifact**. **Artifact** will also be used to exhaust **Status** cards for 1 turn.√æBandana | All | Common | Gain 2 **Thievery** for the first 3 turns of combat.√æBaseball | All | Common | Upon pick up, a random card in your deck becomes free.√æFunnel | All | Common | At the end of your turn, gain 4 **Block** for each unspent energy.√æGeode | Defect | Common | The first time you lose HP in combat, trigger the passive effect of your orbs and **Channel** 1 **Crystal.**√æGremlin Food | All | Common | Whenever you rest, **Upgrade** a random card.√æGrinning Jar | All | Common | On pickup, add a Grinning Jar card to your deck. Obtain another copy for every 12 cards added to your deck.√æKing of Hearts | Ironclad | Common | When you lose HP during your turn, gain twice that much block.√æLightbulb | All | Common | If you have leftover energy at the end of your turn, draw that many cards at the start of your next turn.√æMystery Machine | All | Common | Gains 1 charge each time you enter a ? room. Loses 1 charge each time you move between two non-? rooms. At the start of combat, randomly gain **Strength** and **Dexterity** equal to charges.√æRune of Simplicity | All | Common | Strikes and Defends can be **Upgraded** any number of times. On pickup, **Upgrade** 2 randomly.√æTag Bag | All | Common | Shops have all 3 kinds of sale tags. Sale tags can appear on colorless cards. On-sale cards are slightly cheaper√æTiger Marble | All | Common | At the start of combat, add a random card that **Exhausts** to your hand. It costs 0 this turn.√æPet Ghost | All | Common | At the start of each turn, add a Ghost Swipe, Ghost Defend, or Ghost Fetch to your hand (chosen randomly). Max hand size is increased by 1.√æAccelerometer | All | Uncommon | Can be used once per combat. Decrease your turn-based debuffs by 1, and increase all enemy turn-based debuffs by 1.√æBasket of Snakes | Silent | Uncommon | Every 5th **Attack** you play applies 2 **Necrotic** **Poison** upon dealing unblocked damage.√æBottled Eggs | All | Uncommon | On pick up, choose a card. **Upgrade** all copies of that card you have. When you add a new copy of that card to your deck, it is **Upgraded**.√æBottled Flurry | All | Uncommon | On pick up, choose a card. You **Retain** that card at the end of your turn, or Discard it if it is **Ethereal.**√æBottled Geyser | All | Uncommon | On pick up, choose a card. Each time you shuffle your deck, that card is placed on top.√æBottled Snecko | All | Uncommon | On pick up, you may choose a card. It gains **Snecko**. If you do not choose a card, you may choose one at a later rest site.√æCarrot | Defect | Uncommon | Gain 3 **Focus** at the start of combat, then lose 1 **Focus** on the next 3 turns.√æChameleon Ring | All | Uncommon | Potions are ~50% more potent. You may brew 2 random potions at rest sites.√æDivine Protection | All | Uncommon | Gain 8 **Shielding** at the start of combat.√æGarlic | All | Uncommon | Enemies lose 3 **Strength** at the start of combat, then gain 1 **Strength** on the next 3 turns.√æGolden Egg | All | Uncommon | Whenever you obtain a rare card, it is **Upgraded**. Whenever you buy a card from a shop, it is **Upgraded**.√æIron Hammer | All | Uncommon | During the first turn, drawing a card upgrades it until the end of combat.√æNinjato | All | Uncommon | When you play 3 **Attacks** in a single turn, draw 2 cards.√æOnion Ring | All | Uncommon | Gain 3 **Strength** at the start of combat, then lose 1 **Strength** on the next 3 turns.√æShallot | All | Uncommon | Start each combat with 3 **Dexterity** and 3 **Metallicize**, then lose 1 of each on the next 3 turns.√æSnack Pack | All | Uncommon | Every time you play 3 **Attacks** in a single turn, gain 2 HP.√æSolar Panel | Defect | Uncommon | At the end of combat, gain 2 HP for each of your active **Lightning** orbs.√æQuantum Egg | All | Uncommon | Whenever a card is created during combat, it is **Upgraded**.√æWasp Nest | All | Uncommon | Whenever you lose HP in battle, gain 2 **Thorns**.√æAnother Sword | Ironclad | Rare | The first card containing ""Strike"" you play each turn is played twice. Takes 1 additional turn to recharge for each energy spent on the card.√æArrowhead | All | Rare | You may **Upgrade** 2 cards whenever you smith.√æByrd Skull | Silent | Rare | Your **Innate** cards have **Refund** 1 and draw 1 card.√æCounterbalance | All | Rare | During boss and elite fights all enemy **Strength** gain, **Block** gain, and healing is reduced by half.√æDurian | All | Rare | Gain 5 Max HP on pickup. Each time you gain a debuff, also gain that much **Temporary** **HP**. At the start of your turn, reduce your turn-based debuffs to 2 (if > 2).√æMirror | All | Rare | Whenever you gain **Vulnerable** or **Weakened**, it is also applied to the enemy that sent it.√æPondfish Scales | All | Rare | Whenever you play a Skill that does not give **Block,** gain 2 **Block**.√æTowering Pillar of Hats | All | Rare | Max hand size increased by 2. At the end of your turn, **Retain** the right-most cards in your hand. **Retains** 1 card for every 3 in hand.√æVampiric Spirits | Silent | Rare | During the first turn of combat, 25% of all unblocked attack damage you deal is retuned as health.√æBargain Bundle | All | Shop | When purchased, decreases the cost of potions, cards, and card removal service in the same shop by 100 gold.√æFrozen Program | Defect | Shop | Each time you **Evoke** **Frost**, gain 1 **Reflection**.√æGuideBook | All | Shop | On pickup, **Upgrade** 2 cards randomly. Prioritizes rarer cards.√æRaider's Mask | Defect | Shop | After a **Dark** orb triggers its passive effect, if it has more stored damage than the HP of the lowest-health enemy, it is **Evoked.**√æShop Pack | All | Shop | Choose 3 Colorless cards to obtain. At least one of the options will be all Rare cards.√æAbe's Treasure | All | Boss | Gain 1 more energy each turn. Start combat with **Drowning**. On Pickup, add the Abe's Revenge curse to your deck.√æBronze Core | All | Boss | Gain 1 more energy each turn. Each combat includes a Bronze Orb minion that does not attack, but puts cards into stasis until killed.√æChewing Gum | All | Boss | Gain 1 more energy each turn. Each time you shuffle your deck, add 2 Slimed to your draw pile.√æDimensional Glitch | All | Boss | Gain 1 more energy each turn. All non-attack damage you deal is reduced by half. All non-attack damage you take is increased by half. All in-combat healing you recieve is decreased to half.√æGrab Bag | All | Boss | Choose 1 energy boss relic and 1 non-energy boss relic to obtain. Choices are out of 3, and cannot be skipped.√æHoney Jar | All | Boss | Draw 1 more card each turn. **Retain** up to 1 card each turn. Gain 1 potion slot on pick up. Card rewards have 1 more option to chose from. You cannot skip rewards.√æKintsugi | All | Boss | Remove 5 cards from your deck. Choose 2 **Curses** to obtain.√æOnyx Gauntlets | All | Boss | Gain 1 energy each time you draw a card. Drawing a card increases its cost by 1 for the turn.√æOoze Armor | Ironclad | Boss | Gain 1 energy at the start of each turn. At the start of combat, gain **Slow** (resets to -3) and **Malleable** (resets to 4).√æShrinking Draught | All | Boss | Lose 1 energy and draw 2 cards at the start of each turn. Start combat with 4 **Dexterity**. If you play at least 6 cards in a turn, gain 1 energy next turn. On pick up, remove 3 cards from your deck and lose 25% Max HP.√æSweet Flower | All | Boss | Gain 1 more energy each turn. Map displays much less information.√æElectric Blood | Ironclad | Boss | Gain 2 energy at the start of each turn. When you spend energy, lose that much HP, excluding the first 2 energy spent each turn.√æSnecko Heart | All | Boss | Start combat **Confused**. **Confusion** will never increase the cost of a card by more than 1. The first card you draw each turn always costs 0.√æSnecko Scales | Silent | Boss | Draw 3 additional cards each turn. When you play a card that costs more than 0, discard a card.√æRing of Chaos | All | Boss | Some card rewards have randomly altered stats and effects.√æWanted Poster | All | Boss | Gain 1 more energy each turn. Enemies start with a random buff for every 100 gold below 500 you have. On pickup, gain 100 gold.√æ√æ√æ# Cards√æName | Color | Rarity | Type | Cost | Description (upgrade effect in parenthesis)√æ--- | --- | --- | --- | --- | ---√æReversal | Red | Common | Skill | 1 | Gain 1(2) **Blur** and 2(3) **Reflection**.√æRun Through | Red | Common | Attack | 1 | Target loses 9(11) HP and 4(7) Block.√æStrike From Hell | Red | Common | Attack | 1 | Deal 7(8) damage. Each time this is **Exhausted**, increase its damage by 2(3) and return it to your hand.√æUndeath's Touch | Red | Common | Deal 1 damage 2(3) times. Apply 1 **Decrepit**. **Exhaust**.√æCorrosion Curse | Red | Uncommon | Skill | 1 | Apply 1(2) **Languid** and 2(3) **Decrepit**. **Exhaustive** 2.√æDefy Death | Red | Uncommon | Skill | 5(4) | Gain 14(16) Block. Costs 1 less for each card you've exhausted this combat. **Grave**.√æHemogenesis | Red | Uncommon | Attack | 2 | Deal 5 damage. Gain 5 Block. Heal 5 HP. **Exhaust**. Each time you lose HP while this is in your hand, it is **Upgraded** until the end of combat. Can be **Upgraded** any number of times. (Upgrading increases all numbers by 2, or by 3 if the card has been upgraded outside of combat).√æLife Bind | Red | Uncommon | Power | 1(0) | Apply to an enemy. When you lose health, the bound enemy takes that much damage.√æLeading Strike | Red | Uncommon | Attack | 1 | Deal 4 damage. Reduce the cost of an Attack in your hand to 1(0) for the round.√æMassacre | Red | Uncommon | Attack | 1 | Deal 1(3) damage to ALL enemies, then lose all **Strength**. Is affected 5(8) times by **Strength**.√æWeight Training | Red | Uncommon | Skill | 0 | Lose 2(1) HP. Gain 1 **Strength**. **Exhaustive** 2(3).√æLimb From Limb | Red | Uncommon | Attack | 3 | Deal 24(28) damage. If this deals at least 30(32) unblocked damage, **Refund** 2 and draw 2 cards.√æPhantom Shield | Red | Uncommon | Skill | 1 | Gain 11(14) **Block**. **Exhaustive** 2.√æAbandon | Red | Uncommon | Skill | 0 | **Exhaust** up to 3 cards. Draw that many cards. Add a **Void**(**Dazed**) to your discard pile. **Exhaustive** 3(4). **Ethereal**.√æDemonic Infusion | Red | Rare | Skill | X | Upgrade a card X(+1) times. **Refund** 1. **Exhaust**.√æEclipse | Red | Rare | Skill | 3 | **Exhaust** your hand. For each card, add a random card to your hand that costs 1 less than normal. (**Refund** 1.)√æMany Hands | Red | Rare | Skill | X | Add X copies of Undeath's Touch to your hand. (**Refund** 1.) **Exhaustive** 2(3).√æFluid Movement | Green | Commmon | Power | 1 | Keep up to 5(8) block between rounds.√æHidden Blade | Green | Commmon | Skill | 1 | Add a Shiv to your hand and draw 2(3) cards.√æToxin Wave | Green | Uncommon | Skill | 1 | Apply 3(4) **Necrotic** **Poison** to ALL enemies.√æTripwire | Green | Uncommon | Skill | 2 | Gain 2(4) **Block**. At the start of your next turn, **Stun** a random enemy (and draw 1 card). **Exhaust**.√æDraining Mist | Green | Uncommon | Skill | 3 | Apply 3 **Necrotic** **Poison** to a random enemy 2(3) times. Apply -1(-2) **Strength** to ALL enemies. **Exhaust**.√æExploit Weakness | Green | Uncommon | Skill | 1(0) | Apply **Languid** equal to target's **Weak**. **Exhaust**.√æPoison Smokescreen | Green | Uncommon | Skill | 2 | Gain 6(8) **Block**, and apply that much **Poison** randomly split among all enemies.√æThe Works | Green | Uncommon | Skill | 0 | For every 3 cards you draw this turn, gain 1 energy and deal 4(9) damage to a random enemy. Playable once per round.√æScrap Shanks | Green | Uncommon | Power | 0 | When you discard a card during your turn, add 1 (**Upgraded**) **Shiv** to your hand.√æShiv Toss | Green | Uncommon | Skill | 1 | Discard all **Shivs** in your hand. Your **Shivs** deal 1 extra damage this combat for each. **Exhaustive** 2. (**Retain**).√æSneak Up | Green | Uncommon | Skill | 3(2) | **Innate.** Discard all **Attacks** from your hand. Gain 1 **Intangible.** **Refund** 2(1). **Exhaust.** **Ethereal.**√æSpeed Training | Green | Uncommon | Skill | 2(1) | Discard a random card. Gain 1 **Dexterity**. **Refund** 3. **Exhaustive** 2(3).√æAtom Bomb | Green | Rare | Attack | 4 | Deal 60(75) damage. Apply 4 **Poison** to ALL fighters. **Exhaust**.√æFrom All Sides | Green | Rare | Attack | X | Apply 1 Weak and deal 3 damage to a random enemy 2X + 1(2) times.√æPoison Darts | Green | Rare | Skill | X | Apply 3(4) **Necrotic** **Poison** X times. Apply X Poison to ALL enemies.√æNecrosis | Green | Rare | Skill | 2 | Convert all **Poison** to **Necrotic** **Poison**. **Exhaust**.√æPanic Button | Blue | Common | Skill | 0 | **Evoke** all your orbs. Draw 2(4) cards. **Exhaust.** **Retain.**√æRepulse | Blue | Common | Skill | 0 | Gain 1(2) **Reflection**. Add 1 **Backfire** to your discard pile.√æCalculation Training | Blue | Uncommon | Skill | 0 | Gain 1 **Focus**. (**Startup:**) Add 1 **Dazed** to your discard pile. **Exhaustive** 2(3).√æCrystal Conduit | Blue | Uncommon | Skill | 1 | **Channel** 1 **Crystal** (and 1 random orb).√æCrystalizer | Blue | Uncommon | Power | 0 | (**Innate**.) If more than half your orb slots are empty at the end of your turn, **Channel** 1 **Crystal**. Your **Crystal** orbs provide an additional +2 **Focus** to adjacent orbs.√æClaw Rake | Blue | Uncommon | Attack | 2 | Deal 2(4) damage. Deal 2(4) damage to ALL enemies. Damage is upgraded by Claw cards. **Grave**. **Startup:** If your deck has no normal Claw cards, add one to your draw pile.√æFIFO Queue | Blue | Uncommon | Power | 2(X) | Gain 4(2X) orb slots. (Channel 1 ***Glass**. **Refund** 1).√æReroute Power | Blue | Uncommon | Skill | 0 | Swap your **Strength** and **Focus**. Draw 1 card. (**Retain**.)√æSolid Light Projector | Blue | Uncommon | Skill | 1 | Gain 2 **Shielding** for every 5(3) cards in your discard pile. **Exhaustive** 2.√æSort | Blue | Uncommon | Skill | 1 | Shuffle all Rare cards in your discard pile into your draw pile. Draw 2 cards. (**Retain.**)√æSystem Scan | Blue | Uncommon | Skill | 1 | The next 2(3) **Status** cards you draw **Exhaust** and draw 1 card when drawn.√æEmpty Bin | Blue | Uncommon | Power | 1 | (**Innate**.) At the end of your turn, **Exhaust** all Common cards in your hand and gain 4(5) **Block** for each.√æTime Bomb | Blue | Uncommon | Skill | 1 | Gain 2 orb slots. **Channel** 2 **Glass.** **Channel** 1 **Dark,** and trigger its passive 2(3) times. **Exhaust.**√æMirror Shield | Blue | Rare | Skill | 2 | **Channel** 1 **Crystal.** **Channel** 1 **Frost.** Gain 5(8) **Block.** Gain 1(2) **Reflection.**√æRNG | Blue | Rare | Skill | X | **Channel** X(+1) random orbs.√æOmega Cannon | Blue | Rare | Attack | 2 | Deal 7(6) damage to ALL enemies 4(5) times. Add 1 **Backfire** to your draw and discard piles. **Focus** increases damage.""√æMight | Colorless | Uncommon | Power | X | Your attacks deal 25% extra damage for X turns. **Refund** 1(2).√æPoisoned Strike | Colorless | Uncommon | Skill | 0 | Apply 3(4) **Poison**. Is affected by damage modifiers.√æSpecialist | Colorless | Uncommon | Power | 0 | Lose 1 Focus. All non-attack damage you deal is increased by 2. (**Innate.**)√æSsssshield | Colorless | Uncommon | Skill | ? | Gain 6 **Block**. Gain 6 **Shielding** for each energy this cost. (**Refund** 1). **Snecko**. **Exhaust**.√æSsssstrike | Colorless | Uncommon | Attack | ? | Deal 4(5) damage, plus an additional 4(5) for each energy this cost. **Snecko.** **Refund** 1.√æSurvey Options | Colorless | Uncommon | Skill | X | Draw X. **Refund** 1(2).√æTrickstab | Colorless | Uncommon | Attack | 1 | Deal 4 damage 2(3) times. Damage is affected by block modifiers.√æPrivate Reserves | Colorless | Uncommon | Skill | 0 | Gain 1 energy (and draw 1 card). **Exhaust.** **Retain.**√æUncanny Aura | Colorless | Uncommon | Skill | - | **Unplayable**. **Grave**. At the end of your turn, gain 1(2) **Strength** and **Dexterity** for each other **Unplayable** card in your hand.√æAwakened One Ritual | Colorless | Rare | Power | 0 | Add 6(8) Ritual Components to your discard pile. If you ever have 5 or more in your hand at once, replace them with Attacks that deal 42 damage.√æBrewmaster | Colorless | Rare | Power | 3(2) | Obtain a random potion at the start of each round.√æMidas Touch | Colorless | Rare | Skill | 0 | **Exhaust** any number of cards in your hand. Add a random Rare card to your hand for each.√æNecrogeddon | Colorless | Rare | Attack | 1 | Deal damage equal to the number of cards you've **Exhausted** this combat (to ALL enemies). **Grave.**√æThe Ultimate Defense | Colorless | Rare | Power | 4 | Gain 1(2) **Artifact**. Gain 1(2) **Dexterity**. (Gain 1 **Intangible**). Gain 5 **Plated** **Armor**. Gain 5(8) **Shielding**.√æAmnesia | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, **Exhaust** your hand. **Ethereal**.√æCommon Cold | Curse | Curse | Curse | 0 | Sneeze!√æDepression | Curse | Curse | Curse | - | **Unplayable**. When drawn, gain 2 **Languid** and draw a card.√æDelirium | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, gain **Confusion** for 1 round.√æFaulty Equipment | Curse | Curse | Curse | - | **Unplayable**. **Soulbound**. Can be **Upgraded** outside of combat to remove from deck.√æHallucinations | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, add a random card into your draw pile. **Exhaustive** 3.√æLooming Evil | Curse | Curse | Curse | 3 | Can be played for 3 Energy to **Exhaust**. At the end of your turn, shuffle a random curse into your draw pile and reduce the cost to play this card by 1.√æOver-Encumbered | Curse | Curse | Curse | - | **Unplayable**. When drawn, add 3 **Dazed** to your hand and draw a card.√æSickly | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, lose 3 **Block**.√æSplinters | Curse | Curse | Curse | 0 | Take 3 damage. Draw 1 card. **Exhaustive** 2. **Startup:** add a copy of this to your draw pile.√æSpreading Infection | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, add a copy of all other status and curse cards in your hand to your discard pile.√æRestless Dread | Curse | Curse | Curse | 0 | **Autoplay**. Draw 1 card. Add 3 random **Curses** to your discard pile. **Exhaust**. **Grave**.√æVoices | Curse | Curse | Curse | - | **Unplayable**. **Ethereal**. **Startup:** add 2 copies of this card to your discard pile.√æGhost Swipe | Colorless | Special | Attack | 1 | Deal 6 damage. **Exhaust**. **Ethereal**.√æGhost Defend | Colorless | Special | Skill | 1 | Gain 5 block. **Exhaust**. **Ethereal**.√æGhost Fetch | Colorless | Special | Skill | 0 | Choose a basic card from your draw pile and add it to your hand. **Exhaust**. **Ethereal**.√æGrinning Jar | Colorless | Special | Skill | 0 | Draw 2 cards. You cannot play another Grinning Jar card this turn (upgrade removes).√æRitual Component | Colorless | Special | Skill | 0 | Draw 1 card.√æAbe's Revenge | Curse | Special | Curse | - | **Unplayable**. **Soulbound.** At the end of your turn, gain 2 **Frail**. **Ethereal**.√æ√æ# Mod-Crossover Cards√æName | Mod(s) | Color | Rarity | Type | Cost | Description (upgrade effect in parenthesis)√æ--- | --- | --- | --- | --- | --- | ---√æDual Polarity | Conspire | Blue | Uncommon | Skill | 2(1) | **Channel** 1 Lightning and Dark, Crystal and Frost, Water and Hellfire, or Glass and Plasma.√æBlack Plague | Infinite Spire | Black | Black | Skill | 2 | Draw 2(3) cards. Apply 4(6) **Poison**. Apply 4(6) **Necrotic** **Poison**. Apply 4(6) **Languid**. Apply 4(6) **Decrepit**. Split this card in half.√æBook of Names | Infinite Spire + Slimebound | Black | Black | Power | 1 | Gain Orb/Slime slots until you have 3(4). Add a random spire boss card to your hand the next 3(5) turns. Return this to your draw pile after 3(4) turns.√æChaos Vortex | Infinite Spire | Black | Black | Power | 0 | Gain 10(15) **Shielding.** (Gain 1 **Artifact**.) **Confuse** all enemies. 1 card you draw each turn has its stats and effects scrambled.√æDark Transmutation | Infinite Spire | Black | Black | Skill | X | Add X random Black cards to your hand. They cost 1 less this turn. (**Refund** 1.) **Exhaust.**√æEchoes of Time | Infinite Spire | Black | Black | Skill | 1 | **Fetch** up to 3(8) cards you've **Exhausted** this combat. **Grave.** **Purge.**√æHaul | Infinite Spire | Black | Black | Skill | 0 | Draw your draw pile. You can't draw any more cards this turn (upgrade removes). **Exhaustive** 2.√æFractal Strike | Infinite Spire | Black | Black | Attack | 0 | Deal 2(5) damage. Draw 1 card. Add a new Fractal Strike to your discard pile. **Exhaustive** 2(3).√æDark Deal | Infinite Spire | Colorless | Rare | Skill | - | **Unplayable**. (**Grave**.) **Startup:** Choose 1 of 2(3) random **Black** cards to add to your draw pile.√æRaven's Hex | Beaked | Beaked | Uncommon | Skill | 1 | Apply 6 **Languid** (and **Vulnerable**). **Wither** 1.√æWings of Steel | Beaked | Beaked | Uncommon | Skill | 2 | Gain 8 **Shielding**, (8 **Block**,) and 6 **Plated** **Armor**. **Wither** 2.√æOwlgaze | Beaked | Beaked | Uncommon | Skill | 3 | **Stun** a random(all) enemy(ies). **Refund** 3. **Wither** 1.√æCompounding Headache | Beaked | Curse | Curse | Curse | 0 | Draw 1 card. Lose 1 HP. **Wither** -1.√æMirror System | Construct | Construct | Uncommon | Skill | 1 | **Overheat** 5(10). **Cycle** if **Dexterity** < 1. Gain 2 **Reflection** (3 on mega-upgrade).√æResounding Blow | Glutton | Colorless | Rare | Attack | 0 | Deal 2(3) damage. Gain 1(2) **Block*. When drawn, add an **Echo** of this card to your hand.√æMeltdown Sequence | Construct | Curse | Curse | Curse | - | **Unplayable**. **Overheat:** 3 (10 if playing as Construct). **Cycle**. When **Cycled:** Add 1 **Cycling** **Status** to your discard pile. **Exhaustive** 3. **Startup:** Add 2 **Cycling** **Status** cards with **Overheat** to your draw pile.√æImminent Threat | Deciple | Curse | Curse | Curse | 1 | **Innate**. Take 2 damage. **Exhaust**. **Switches** to Vengeful Threat.√æVengeful Threat | Deciple | Curse | Curse | Curse | 0 | **Grave**. Draw 1 card. **Exhaust**. **Switches** to Imminent Threat.√æWavering Confidence | Deciple | Curse | Curse | Curse | - | **Unplayable**. **Self-Retaining**. At the end of your turn, **Switches** to Delayed Remorse.√æDelayed Remorse | Deciple | Curse | Curse | Curse | - | **Unplayable**. At the end of your turn, take 1 **Fibonacci** damage. **Switches** to Wavering Confidence.√æSluggish | Marisa | Curse | Curse | Curse | 0 | **Exhaustive** 3. **Amplify** 1: Draw 1 card, and reduce **Exhaustive** counter an additional time.√æWhispers of Evil | Glutton | Curse | Curse | Power | 0 | **Autoplay**. Draw 1 card at the start of each turn. Add an **Echo** of a random **Curse** to your draw pile at the end of each turn.√æ√æ# Mod-Crossover Relics√æName | Mod(s) | Character | Rarity | Description√æ--- | --- | --- | --- | ---√æWinged Headdress | Beaked | Beaked | Common | Can be used once per turn, before your deck is shufled for the first time each combat. Replenishes 1 use of all **Wither** cards in your hand, and **Exhausts** them.√æByrd Feeder | Beaked | Beaked | Rare | Healing beyond your max hp gives **Temporary** HP.√æLucky Slots | Infinite Spire | All | Shop | When a fighter loses exactly 7 HP, gain **Critical**. If this triggers 3 times in a single combat, gain 7 gold.√æSealed Pack | Infinite Spire | All | Boss | Chose 1 basic card to obtain. Choose 1 colorless card to obtain. Choose 1 rare card to obtain. Choose 1 black card to obtain. Choose 1 **Curse** to obtain. **Curse** cannot be skipped, and becomes **Soulbound**.√æBlank Codex | Infinite Spire | All | Event | At the start of combat and each time you shuffle your deck, you may choose 1 of 3 random **Black** cards to add to your discard pile. If you do, also add a random **Curse** to your discard pile.√æCursed D8 | Glutton | All | Boss | Gain 1 energy and draw 1 card at the start of your turn. Shuffle an **Echo** of a random **Curse** into your draw pile at the end of your turn.√æ√æ# Keywords√æName | Type | Description√æ--- | --- | ---√æRefund | Misc | When a card with **Refund** is played, energy spent on it is returned (up to the stated amount).√æExhaustive | Misc | A card with **Exhaustive** **Exhausts** after a certain number of uses.√æShielding | Misc | A form of **Block** that does not wear off between rounds.√æCrystal | Orb | **Passive:** Gives +2 **Focus** to adjacent orbs. **Evoke:** Gain an orb slot if you have less than 3.√æGlass | Orb | No **Passive** effect. When **Evoked**, if you have more than 3 orb slots, consumes your leftmost one and **Evokes** any occupying orb.√æHellfire | Orb | **Passive:** Gives +2 **Strength** at the start of your turn that is removed at the end of your turn. **Evoke:** Apply 1 **Vulnerable** to a random enemy.√æNecrotic Poison | Power (Debuff) | An alternate kind of Poison. Does double damage, but is reduced by half each turn (rounding down). Normal Poison does not count down while Necrotic Poison is applied.√æReflection | Power (Buff) | Each time you completely block attack damage, that damage is reflected back at the attacker.√æLanguid | Power (Debuff) | Reduces damage dealt by stack number. Decreases by 1 each round.√æ√æ# Potions√æName | Rarity | Description√æ--- | --- | ---√æAdrenaline Potion | Common | Draw 2 cards and gain 1 energy.√æElixir | Common | Exhaust ALL your status and curse cards.√æVenom Potion | Uncommon | Gain 1 Envenom and -1 Strength.√æToxic Potion | Uncommon | Apply 5 Necrotic Poison to all enemies.√æMilkshake | Uncommon | You can retain up to 5 unspent energy between rounds.√æLifeblood Potion | Uncommon | Gain 12 Temporary HP.√æLanguish Potion | Uncommon | Apply 3 Languid.√æDeath Potion | Rare | Deal 60 damage and lose 12 HP.√æDoom Potion | Rare | Destroy an enemy after 10 turns.√æCursed Concoction | Rare | Gain 3 Strength and 2 Dexterity. Add a random curse to your draw and discard piles.√æFlashpowder | Rare | Stun an enemy.√æ√æ# Rooms√æ### Portal√æEach area has a chance to spawn with a pair of portal rooms. √æThese rooms are in the same row, with one on the far left and one on the far right.√æGoing through one teleports you to the other.√æ√æ###Bonfire√æBonfires are an alternative Rest Site. One always appears on each stage as one of the Rest Sites before the boss.√æInstead of the normal Rest/Smith options, Bonfires have three options to choose from, chosen at random from a pool:√æ* Smith: Upgrade a card.√æ* Rest (Vanilla): Heal for 30% Max HP.√æ* Rest (Multitask): Heal for 20% Max HP and Upgrade a random card.√æ* Toke: Remove a card from your deck.√æ* Dig: Obtain a random Relic.√æ* Mine: Gain 50-100 Gold.√æ* Polymerize: Transform a card.√æ* Explore: Encounter a random event.√æ√æ# Events√æ### Mirror Mist√æExordium event.√æ√æPresents 3 options. √æThe first two change based on the player's character. The third is always ""Transform and Upgrade a random card.""√æ√æCharacter-specific options:√æ * **Ironclad:**√æ  * Bash -> Survivor & Neutralize√æ  * Burning Blood -> Iron Core & Self Repair+√æ * **Silent:**√æ  * Ring of the Snake -> Sizzling Blood√æ  * Survivor -> Leap, Neutralize -> Beam Cell√æ * **Defect:**√æ  * Dualcast -> Bash, Cracked Core -> Iron Core√æ  * Cracked Core -> Ring of the Snake√æ * [mod] **Mad** **Scientist:**√æ  * Fuel Tank -> Chemical Blood, Powered Strike -> Hemokenisis√æ  * Hide Behind Junk -> Survivor√æ  * Powered Strike -> Scrape√æ * [mod] **Seeker:**√æ  * Arcanosphere -> Arcane Blood, Astral Haze -> Reckless Charge√æ  * Astral Haze -> Endless Agony√æ  * Astral Haze -> Rebound√æ * [mod] **Servant:**√æ  * Uniform -> Scarlet Blood & Inflame√æ  * Uniform -> Snake Cloak, Kidney Shot -> Survivor√æ  * House Cleaning -> Reprogram, Kidney Shot -> Reboot√æ * [mod] **Mystic:**√æ  * Shocking Grasp -> Bash, Arcane Dodge -> Leap√æ  * Spellbook -> Book of Snakes√æ * [mod] **Deciple:**√æ  * Pattern Shift -> Stunning Strike, Second Hand -> Readied Action√æ  * Pattern Shift -> Infinite Blades, Second Hand -> Well Laid Plans√æ  * Chronometer -> Mercury Core, Second Hand -> White Noise√æIf an upgraded card is traded for a different card using this event, the corresponding new card will be upgraded.√æ√æ### Stuck√æExordium event.√æ√æA random card in the player's deck is selected as the target of this event.√æ√æOptions are to either upgrade or remove the selected card.√æ√æ√æ### Trapped Chest√æAny-stage event.√æ√æThe player can choose to ignore the event or obtain rewards at the cost of triggering a trap.√æ√æOptions after the trap is triggered are:√æ * Take damage equal to 25% max HP√æ * 50% chance to take damage equal to 40% max HP√æ * Obtain Pain curse.√æThe rewards from this event are a random combination of gold, cards, potions, and/or relics.√æ√æIf the player has Cursed Key, they can choose to obtain a random curse rather than trigger the trap.√æ√æIf the player has Matryoshka, they can use one charge of it to get twice as many rewards.√æ√æ### Dead Man's Rings√æAny-stage event.√æ√æThe player can choose to ignore the event, or find relics with a risk to become cursed.√æ√æThe first two options give 1 relic, and a 50% chance to recieve a curse. The curses each one offers are different each time the event is encountered, chosen randomly.√æ√æThe third option gives 2 relics, and has a 75% chance to recieve a random curse. Unlike the first two options, you can't tell what curse you'll get from this option before you select it.√æ√æOnly certain relics can be recieved from this event (see Event Relics). √æ√æ### Map Scout√æCity event.√æ√æPlayer can pay gold to remove a vanilla Beyond boss of their choice from the pool.√æ√æIf Infinite Spire is installed, player can force the Lord of Annihilation to appear.√æ√æ## Event Relics√æName | Event | Description√æ--- | --- | ---√æSizzling Blood | Mirror Mist (as Silent) | Restore 4 HP at the end of combat. Gain 4 MAx HP on pick up.√æIron Core | Mirror Mist (as Defect) | At the start of combat, **Channel** 1 **Hellfire.** Certain red cards can now be obtained. Random orb effects (e.g. Chaos) have a chance to **Channel** **Hellfire.**√æIron Core | Mirror Mist (as Ironclad) | At the start of combat, gain 2 orb slots. Certain blue cards can now be obtained. Random orb effects (e.g. Chaos) have a chance to **Channel** **Hellfire.**√æArcane Blood | Mirror Mist (as Seeker) | At the end of combat, heal 3 HP for each different Debuff you have. Certain red cards can now be obtained.√æChemical Blood | Mirror Mist (as Mad Scientist) | Whenever you take damage during your turn, gain 1 Fuel. At the end of combat, gain HP equal to your total fuel, up to 6 max. NL Certain #rRed cards can now be obtained.√æScarlet Blood | Mirror Mist (as Servant) | Each time you gain **Strength**, gain twice that many **Knives.** Certain red cards can now be obtained.√æCloak of the Snake | Mirror Mist (as Servant) | Draw 2 additional cards on the first turn of combat. Certain green cards can now be obtained.√æBook of the Snake | Mirror Mist (as Mystic) | At the start of combat, 2 random **Cantrips** are shuffled into your draw pile. Certain green cards can now be obtained.√æMercury Core | Mirror Mist (as Deciple) | At the start of combat, **Replicate** 1 **Mercury.** Certain blue cards can now be obtained.√æByrd's Blood | Mirror Mist (as Beaked) | Heal 6 HP at the end of combat. All other in-combat healing you recieve is increased by 50%. Gaining **Strength** also heals you. Certain red cards can now be obtained.√æSea Blood | Mirror Mist (as Blackbeard) | Heal 6 HP at the end of combat. Certain red cards can now be obtained.√æRing of the Sea Serpent | Mirror Mist (as Blackbeard) | At the start of combat, add 2 **Shivs** to your hand. Certain green cards can now be obtained.√æRing of the Tsuchinoko | Mirror Mist (as Marisa) | Draw 2 additional cards on the first turn of combat. Each time you play a **Skill** or 0-cost card, gain 1 **Charge-Up.** Certain green cards can now be obtained.√æSpell Core | Mirror Mist (as Marisa) | At the start of each combat, gain 3 orb slots and **Channel** 1 **Manaspark.** Certain blue cards can now be obtained.√æIron Supplements | Mirror Mist (as Glutton) | Heal 6 HP at the end of combat. Certain red cards can now be obtained.√æBurning Sludge | Mirror Mist (as Slimebound) | At the end of combat, heal 4 HP for each of your spawned slimes. Certain red cards can now be obtained.√æRing of the Slime | Mirror Mist (as Slimebound) | Draw 2 additional cards on the first turn of combat. At the end of combat, heal 3 HP for each of your spawned slimes. Certain green cards can now be obtained.√æRing of Fury | Dead Man's Rings | At the start of combat, gain 2 **Strength** and lose 1 **Dexterity.**√æRing of Peace | Dead Man's Rings | At the start of combat, apply 3 **Weak** to ALL fighters and gain 1 **Buffer.**√æRing of Panic | Dead Man's Rings | At the start of combat, become **Confused** for 3 turns. Gain 2 energy on the first and second turns, and 1 energy on the third.√æRing of Hypnosis | Dead Man's Rings | All enemies start with 5 **Confusion.**√æRing of Misfortune | Dead Man's Rings | At the start of combat, add a random **Curse** to your discard pile. Each time you draw a curse, gain 1 energy and 3 **Temporary** **HP**. Each time you draw a **Status**, gain 3 **Block**.√æRing of Greed | Dead Man's Rings | For every 150 gold you gain, obtain a random **Curse.** On pickup, gain 50 gold and 2 random relics related to gold or shops.√æRing of Addiction | Dead Man's Rings | On pickup, obtain 3 potions and 2 random relics related to potions. Each time you go through 3 rooms without using a potion, lose 2 max hp.√æRing of Collection | Dead Man's Rings | Non-boss chests now contain a random Ring in addition to thier normal contents. Shops sometimes sell Rings.√æRing of Exchange | Dead Man's Rings | Shop items can now appear in boss chests. Boss items can now appear in shops.√æRing of Searing | Dead Man's Rings (as Ironclad or modded) | At the start of your turn, ALL enemies above 50% max HP lose 10% of their HP, and you lose 5 HP if you are above 75% max HP.√æRing of Fangs | Dead Man's Rings (as Silent or modded) | At the start of combat, lose 3 **Strength** and gain 1 **Envenom.**√æRing of Shattering | Dead Man's Rings (as Defect) | At the start of combat gain 3 **Focus** and lose 2 orb slots.√æ√æ√æ## Changes to Existing Content:√æ * Shops sometimes have a ""2 for 1"" tag or ""special edition"" tag instead of the normal sale tag.√æ * Random orb channeling effects (e.g. Chaos) will now sometimes channel Crystal.√æ * If you have Honey Jar and Singing Bowl at the same time, using Singing Bowl's max hp gain option also picks a reward card at random.√æ * Burning Branch can now be exchanged for a different relic at rest sites.√æ * Fire Breathing now increases damage based on number of attacks played.√æ * If a Bottled card is removed from your deck, you may choose a new card to bottle at rest sites (free action).√æ * You can never get Ectoplasm from Neow.√æ√æ√æ## Known Issues:√æ * Cards altered by Ring of Chaos return to the normal version if the run is saved and returned to later.√æ * Honey Jar + Question Card doesn't stack (except in the case of busted crown).√æ * Portal rooms may cause crashing, especially if you save/load after going through one.√æ "
packetnoodlesSuperman/KotlinTeam,621,0,1,2,User,False,,,,13,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",14,2,0,1,0,598,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,10,,0,,
OpenModLoader/OpenModLoader,29342,5,8,2,Organization,False,,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",10,Java,"{'': 4, 'md': 1, 'gradle': 2, 'bat': 1}",145,4,0,4,3,771,True,4,5,0,0,0,3,0,0,11,1,0,0,0,0,0,0,5,0,,,"# OpenModLoader√æ√æ## Requirements√æ- Java 8√æ√æ## Setup√æ√æRun `gradlew setup`, use `./gradle setup` on Mac or Linux√æ√æ### IDE Setup√æ√æ#### Intellij IDEA√æ√æRun `gradlew genIdeaWorkspace`, use `./gradle genIdeaWorkspace` on Mac or Linux"
pH-7/Simple-Java-Text-Editor,639,102,17,65,User,False,":memo: PHNotepad is a simple Java text/code editor (notepad) written in Java. It has also nice features such as Search tool, Find/Replace text/code, Auto completion, Nice Image Buttons for better UX, etc.",https://ph-7.github.io/Simple-Java-Text-Editor/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 1, 'jar': 1, 'yml': 1, 'xml': 1, 'txt': 1, 'mf': 1}",125,2,1,11,19,2969,True,1,6,0,0,0,29,0,2,6,0,2,6,18,14,0,0,127,,255,,"# Simple Java Text Editor√æ√æ**PH NotePad** is a simple and light **text editor** (notepad) written in Java.√æ√æ![Programming Java Text Editor](Screenshots/text-editor-writing-icon.svg)√æ√æ√æ* Search tool (to search text/keywords easily in the code) + highlighting the code found.√æ√æ* Find/Replace text/code.√æ√æ* Auto completion for Java and C++ keywords (files need to be saved as *.java*/*.cpp*). It can be easily expanded to support pretty much any number of languages.√æ√æ* Drag and Drop (drag files into the text area and they get loaded).√æ√æ* Nice image buttons for better UX.√æ√æ√æ![Example Java Text Editor](Screenshots/find-replace-word-in-java-text-editor.png)√æ√æ√æ## AUTHOR√æ√æ**[Pierre-Henry Soria](http://pierrehenry.be)**√æ√æ√æ### Contributors üèÖ√æ√æ* [Achintha Gunasekara](https://github.com/achinthagunasekara)√æ√æ* [Patrick Slagle](https://github.com/patrick-slagle)√æ√æ* [Marcus Redgrave-Close](https://github.com/marcusjrc)√æ√æ* [Ossi Laukkanen](https://github.com/Fitoh)√æ√æ* [Akashdeep Singh](https://github.com/akashdeepsingh9988)√æ√æ* [xdvrx1](https://github.com/xdvrx1)√æ√æ√æ## CONTACT√æ√æ* Pierre-Henry Soria: hi [AT] ph7 [D0T] me√æ√æ* Achintha Gunasekara: contact [AT] achinthagunasekara [D0T] com√æ√æ√æ## DEMO√æ√æDownload the Jar file and double click to run√æ√æOr run `java -jar SimpleJavaTextEditor.jar` from the command line√æ√æYou can also generate easily a new jar file with the following command when you are in *src/* directory `jar cmvf ../manifest.mf ../SimpleJavaTextEditor.jar simplejavatexteditor/*.class`√æ√æ√æ### Important√æ√æ**Icons directory and its files must be present on the path when running the application (so you will have to move ""*icons/*"" into ""*src/*"" directory)**√æ√æ√æ## LICENSE√æ√æApache License, Version 2.0 or later; See the license.txt file in the notepad folder."
openmrs/openmrs-module-coreapps,5775,9,64,140,Organization,False,Provides apps for performing the common tasks,,,15,Java,"{'': 1, 'yml': 1, 'md': 1, 'js': 2, 'json': 2, 'xml': 1}",1315,24,32,63,0,2636,False,,,,,16,311,10,57,7,0,17,80,9619,7715,0,0,255,68,,,"[![Build Status](https://travis-ci.org/openmrs/openmrs-module-coreapps.svg?branch=master)](https://travis-ci.org/openmrs/openmrs-module-coreapps) √æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8282d20655f84632876d16f71a8b3c2e)](https://www.codacy.com/app/openmrs/openmrs-module-coreapps?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=openmrs/openmrs-module-coreapps&amp;utm_campaign=Badge_Grade)√æ[![dependencies Status](https://david-dm.org/openmrs/openmrs-module-coreapps/status.svg)](https://david-dm.org/openmrs/openmrs-module-coreapps)√æ[![devDependencies Status](https://david-dm.org/openmrs/openmrs-module-coreapps/dev-status.svg)](https://david-dm.org/openmrs/openmrs-module-coreapps?type=dev)√æ√æOpenMRS Core Apps Module√æ=======================√æ√æProvides apps for performing the common tasks√æ√æ# Dashboard widgets development√æ√æThe widgets are built as part of the module (`mvn clean install`) without having to install Node or NPM manually. Nevertheless, if you want to develop widgets installing Node is recommended so that you can iterate faster by building widgets and executing tests continuously.√æ√æYou need to have Node 6.x installed. We recommend using [nvm](https://github.com/creationix/nvm) or [nvm-windows](https://github.com/coreybutler/nvm-windows) to install Node.√æ√æThe code is at **omod/src/main/web**√æ√æThe generated code is at **omod/target/classes/web/module/resources/scripts/web**√æ√æInstalling dependencies: `npm install --no-optional` (once after code checkout or when dependencies change)√æ√æDevelopment build: `npm run build:dev`√æ√æContinuous development build: `npm run watch` (whenever you make a change, a new UI build will be triggered)√æ√æContinuous test execution: `npm run test:dev` (in PhantomJS), `npm run test:dev-chrome` (in Chrome), `npm run test:dev-firefox` (in Firefox) (whenever you make a change, tests will be run again)√æ√æClean development build: `npm run clean && npm run build:dev`√æ√æProduction build: `npm run build`√æ√æFor continuous development we recommend setting up a server using OpenMRS SDK and adding the coreapps module to watched projects (**requires UI Framework 3.12.0+**). Next start the server and use the `npm run watch` command to have js code instantly transpiled and deployed to the server. Do remember to disable caching for your browser or use Ctrl + F5 to refresh page and its cache to see changes.√æ√æ## Linking√æ√æLinking is a feature of npm, which allows you to modify a library and test modifications in your project.√æ1) Clone https://github.com/openmrs/openmrs-web-angularjs-api√æ2) Run `npm link` and `npm run build` from the lib directory√æ3) Run `npm link @openmrs/angularjs-openmrs-api` from the coreapps project directory.√æ4) Build the coreapps project.√æ√æIn order to unlink do:√æ1) Run `npm unlink @openmrs/angularjs-openmrs-api` and `npm install` from the coreapps project directory.√æ2) Build the coreapps project. "
raydac/java-binary-block-parser,8603,157,11,24,User,False,The Most comfortable way to work with binary data in Java,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 2, 'md': 1, 'txt': 1, 'png': 2, 'svg': 2, 'xml': 1}",592,1,9,2,3,2179,True,1,23,0,3,0,4,0,0,7,4,1,11,541,113,15,0,34,,68,,"[![License Apache 2.0](https://img.shields.io/badge/license-Apache%20License%202.0-green.svg)](http://www.apache.org/licenses/LICENSE-2.0)√æ[![Maven central](https://maven-badges.herokuapp.com/maven-central/com.igormaznitsa/jbbp/badge.svg)](http://search.maven.org/#artifactdetails|com.igormaznitsa|jbbp|2.0.1|jar)√æ[![Java 1.8+](https://img.shields.io/badge/java-1.8%2b-green.svg)](http://www.oracle.com/technetwork/java/javase/downloads/index.html)√æ[![Android 3.0+](https://img.shields.io/badge/android-3.0%2b-green.svg)](http://developer.android.com/sdk/index.html)√æ[![PayPal donation](https://img.shields.io/badge/donation-PayPal-red.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=AHWJHJFBAWGL2)√æ[![Yandex.Money donation](https://img.shields.io/badge/donation-–Ø.–¥–µ–Ω—å–≥–∏-yellow.svg)](http://yasobe.ru/na/iamoss)√æ√æ![JBBP Logo](https://github.com/raydac/java-binary-block-parser/blob/master/logo.png)√æ√æ# Introduction√æJava has some embedded features to parse binary data (for instance ByteBuffer), but sometime it is needed to work on bit level and describe binary structures through some DSL(domain specific language). I was impressed by the [the Python Struct package](https://docs.python.org/2/library/struct.html) package and wanted to get something like that for Java. So I developed the JBBP library.<br>√æ![Use cases](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_mm.png)√æ√æ# Change log√æ- **2.0.2 (SNAPSHOT)**√æ  - added `JBBPOut#Bin` variant to override `@Bin` annotation fields in written objects. √æ  - [#28](https://github.com/raydac/java-binary-block-parser/issues/28) added `JBBPOut#BinForceByteOrder` to override byte order defined in `@Bin` annotations of written object.√æ√æ- **2.0.1 (04-feb-2020)**√æ  - [#26](https://github.com/raydac/java-binary-block-parser/issues/26) fixed bug in array write with MSB0 √æ√æ- **2.0.0 (20-nov-2019)**√æ  - __removed DslBinCustom annotation, use @Bin annotation instead__√æ  - __renamed attributes of @Bin annotation to their correct form__√æ  - __reworked object mapping system, removed hacks to instantiate classes, now only mapping to objects allowed, support of private fields mapping is removed__√æ  - __minimal JDK version now 1.8+__√æ  - __minimal Android API now 3.0+__√æ  - added support of getters and setters into mapping√æ  - added `Object newInstance(Class)` method support of mapped classes to generate local class member instances √æ  - added generating of `makeFIELD()` method for structure types in Java class converter√æ  - refactoring√æ√æ[Full changelog](https://github.com/raydac/java-binary-block-parser/blob/master/changelog.txt)   √æ√æ# Maven dependency√æThe Framework has been published in the Maven Central and can be easily added as a dependency√æ```√æ<dependency>√æ  <groupId>com.igormaznitsa</groupId>√æ  <artifactId>jbbp</artifactId>√æ  <version>2.0.1</version>√æ</dependency>√æ```√æthe precompiled library jar, javadoc and sources also can be downloaded directly from [the Maven central.](https://search.maven.org/artifact/com.igormaznitsa/jbbp/2.0.1/jar)√æ√æ# Hello world√æThe library is very easy in use because in many cases only two its classes are needed - com.igormaznitsa.jbbp.JBBPParser (for data parsing) and com.igormaznitsa.jbbp.io.JBBPOut (for binary block writing). Both these classes work over low-level IO classes - com.igormaznitsa.jbbp.io.JBBPBitInputStream and com.igormaznitsa.jbbp.io.JBBPBitOutputStream, those bit stream classes are the core of the library.   √æ√æThe easiet use case shows parsing of whole byte array to bits.   √æ```Java√æ  byte [] parsedBits = JBBPParser.prepare(""bit:1 [_];"").parse(new byte[]{1,2,3,4,5}).√æ          findFieldForType(JBBPFieldArrayBit.class).getArray();√æ```√æOn start it was the only functionality but then I found that it is no so comfort way to get result, so that added some mapping of parsed result to pre-instantiated object. It works slower, because uses a lot of Java reflection but much easy in some cases.√æ```Java√æclass Parsed {@Bin(type = BinType.BIT_ARRAY)byte[] parsed;}√æParsed parsedBits = JBBPParser.prepare(""bit:1 [_] parsed;"").parse(new byte[]{1,2,3,4,5}).mapTo(new Parsed());√æ```√æ√æ# Relative speed of different approaches in parsing√æMainly I developed the library to help in my development of ZX-Spectrum emulator where I needed to work with data snapshots containing data on bit level. It didn't need much productivity in work. But since 1.3.0 version I added way to generate Java classes from JBBP scripts, such classes work in about five times faster than dynamic parsing and mapping approaches.  √æ![JMH results](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jmh_results.png)   √æChart below compares speed of three provided ways to parse data with JBBP:√æ* __Dynamic__ - the basic parsing through interpretation of prepared JBBP DSL script. It is no so fast, but provide way to generate parsers on fly from text description.√æ* __Dynamic + map to class__ - parsing through interpretation of parsed JBBP script and mapping of parsed data to pre-instantiated class instance. It provides compfortable way to work with data and get result but uses a lot of Java reflection features and so fast.√æ* __Static class__ - the fastest way of JBBP use, some JBBP script is translated into Java class. There is no any interpretation or reflection operators so that it is very fast. [You can take a look at auxiliary class which I use in tests](https://github.com/raydac/java-binary-block-parser/blob/master/jbbp/src/test/java/com/igormaznitsa/jbbp/testaux/AbstractJBBPToJavaConverterTest.java).√æ√æ√æ# Generate sources from JBBP scripts√æSince 1.3.0 version, the library provides Java source generator for JBBP scripts, __(keep in mind that generated sources anyway depends on JBBP library and it is needed for their work)__.√æFor instance such snippet can be used to generate Java classes from a JBBP script. It also can generate multiple classes.√æ```Java√æ  JBBPParser parser = JBBPParser.prepare(""byte a; byte b; byte c;"");√æ  List<ResultSrcItem> generated = parser.convertToSrc(TargetSources.JAVA,""com.test.jbbp.gen.SomeClazz"");√æ  for(ResultSrcItem i : generated) {√æ     for(Map.Entry<String,String> j :i.getResult().entrySet()) {√æ        System.out.println(""Class file name ""+j.getKey());                √æ        System.out.println(""Class file content ""+j.getValue());                √æ     }√æ  }√æ```√æalso there are developed plug-ins for both Maven and Gradle to generate sources from JBBP scripts during source generate phase.   √æin Maven it can be used through snippet:√æ```xml√æ <plugin>√æ   <groupId>com.igormaznitsa</groupId>√æ   <artifactId>jbbp-maven-plugin</artifactId>√æ   <version>2.0.1</version>√æ   <executions>√æ     <execution>√æ       <id>gen-jbbp-src</id>√æ       <goals>√æ         <goal>generate</goal>√æ       </goals>√æ     </execution>√æ   </executions>√æ</plugin>√æ```√æBy default the maven plug-in looks for files with `jbbp` extension in `src/jbbp` folder of the project (it can be changed through plug-in configuration) and produces resulting java classes into `target/generated-sources/jbbp` folder. [For instance, I use such approach in my ZX-Poly emulator](https://github.com/raydac/zxpoly/tree/master/zxpoly-emul/src/jbbp).√æ√æ# More complex example with features added as of 1.1.0√æExample below shows how to parse a byte stream written in non-standard MSB0 order (Java has LSB0 bit order) into bit fields, then print its values and pack fields back:√æ```Java√æclass Flags {√æ      @Bin(order = 1, name = ""f1"", type = BinType.BIT, bitNumber = JBBPBitNumber.BITS_1, comment = ""It's flag one"") byte flag1;√æ      @Bin(order = 2, name = ""f2"", type = BinType.BIT, bitNumber = JBBPBitNumber.BITS_2, comment = ""It's second flag"") byte flag2;√æ      @Bin(order = 3, name = ""f3"", type = BinType.BIT, bitNumber = JBBPBitNumber.BITS_1, comment = ""It's 3th flag"") byte flag3;√æ      @Bin(order = 4, name = ""f4"", type = BinType.BIT, bitNumber = JBBPBitNumber.BITS_4, comment = ""It's 4th flag"") byte flag4;√æ    }√æ√æ    final int data = 0b10101010;√æ    Flags parsed = JBBPParser.prepare(""bit:1 f1; bit:2 f2; bit:1 f3; bit:4 f4;"", JBBPBitOrder.MSB0).parse(new byte[]{(byte)data}).mapTo(new Flags());√æ    assertEquals(1,parsed.flag1);√æ    assertEquals(2,parsed.flag2);√æ    assertEquals(0,parsed.flag3);√æ    assertEquals(5,parsed.flag4);√æ√æ    System.out.println(new JBBPTextWriter().Bin(parsed).Close().toString());√æ√æ    assertEquals(data, JBBPOut.BeginBin(JBBPBitOrder.MSB0).Bin(parsed).End().toByteArray()[0] & 0xFF);√æ```√æThe Example will print in console the text below√æ```√æ;--------------------------------------------------------------------------------√æ; START : Flags√æ;--------------------------------------------------------------------------------√æ    01; f1, It's flag one√æ    02; f2, It's second flag√æ    00; f3, It's 3th flag√æ    05; f4, It's 4th flag√æ;--------------------------------------------------------------------------------√æ; END : Flags√æ;--------------------------------------------------------------------------------√æ```√æ# Fields√æEach field can have case insensitive name which must not contain '.' (because dot is reserved for links to structure field values) and '#'(because it is also reserved for internal library use).√æA field name must not be started with either number or chars '$' and '_'. *Keep in mind that field names are case insensitive!*√æ```√æint someNamedField;√æbyte field1;√æbyte field2;√æbyte field3;√æ```√æ![JBBP field format, types and examples](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_fields.png)√æ√æ## Primitive types√æJBBP supports full set of Java numeric primitives with some extra types like ubyte and bit.√æ![JBBP field format, types and examples](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_primitives.png)√æ## Complex types√æJBBP provides support both arrays and structures. __In expressions you can use links only to field values which already read!__√æ![JBBP field format, types and examples](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_complex_types.png)√æ√æ## Custom types√æIt is possible to define processors for custom data types. For instance you can take a look at [case processing three byte unsigned integer types](https://github.com/raydac/java-binary-block-parser/blob/master/jbbp/src/test/java/com/igormaznitsa/jbbp/it/CustomThreeByteIntegerTypeTest.java).   √æ√æ### Support of float, double and String types√æSince 1.4.0 in JBBP was added support of Java float, double and String values. Because they have specific format, they are named as `doublej`, `floatj` and `stringj`.√æ√æ## Variable fields√æIf you have some data which internal structure is undefined and variable then you can use the `var` type to mark such field and provide custom processor to read data of such value. Processor should implement interface [JBBPVarFieldProcessor](https://github.com/raydac/java-binary-block-parser/blob/master/src/main/java/com/igormaznitsa/jbbp/JBBPVarFieldProcessor.java) instance.√æ```√æ    final JBBPParser parser = JBBPParser.prepare(""short k; var; int;"");√æ    final JBBPIntCounter counter = new JBBPIntCounter();√æ    final JBBPFieldStruct struct = parser.parse(new byte[]{9, 8, 33, 1, 2, 3, 4}, new JBBPVarFieldProcessor() {√æ√æ      public JBBPAbstractArrayField<? extends JBBPAbstractField> readVarArray(JBBPBitInputStream inStream, int arraySize, JBBPNamedFieldInfo fieldName, int extraValue, JBBPByteOrder byteOrder, JBBPNamedNumericFieldMap numericFieldMap) throws IOException {√æ        fail(""Must not be called"");√æ        return null;√æ      }√æ√æ      public JBBPAbstractField readVarField(JBBPBitInputStream inStream, JBBPNamedFieldInfo fieldName, int extraValue, JBBPByteOrder byteOrder, JBBPNamedNumericFieldMap numericFieldMap) throws IOException {√æ        final int value = inStream.readByte();√æ        return new JBBPFieldByte(fieldName, (byte) value);√æ      }√æ    }, null);√æ```√æ*NB! Some programmers trying to use only parser for complex data, it is a mistake. In the case it is much better to have several easy parsers working with the same [JBBPBitInputStream](https://github.com/raydac/java-binary-block-parser/blob/master/src/main/java/com/igormaznitsa/jbbp/io/JBBPBitInputStream.java) instance, it allows to keep decision points on Java level and make solution easier.*√æ√æ## Special types√æSpecial types makes some actions to skip data in input stream√æ![JBBP field format, types and examples](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_special_fields.png)√æ√æ## Byte order√æMulti-byte types can be read with different byte order.√æ![JBBP field format, types and examples](https://github.com/raydac/java-binary-block-parser/blob/master/docs/jbbp_byteorder.png)√æ√æ# Expressions√æExpressions are used for calculation of length of arrays and allow brackets and integer operators which work similar to Java operators:√æ- Arithmetic operators: +,-,%,*,/,%√æ- Bit operators: &,|,^,~√æ- Shift operators: <<,>>,>>>√æ- Brackets: (, )√æ√æInside expression you can use integer numbers and named field values through their names (if you use fields from the same structure) or paths. Keep in your mind that you can't use array fields or fields placed inside structure arrays.√æ```√æint field1;√æ   struct1 {√æ      int field2;√æ   }√æ   byte [field1+struct1.field2] data;√æ```√æ√æ# Commentaries√æYou can use commentaries inside a parser script, the parser supports the only comment format and recognizes as commentaries all text after '//' till the end of line.√æ```√æ int;√æ    // hello commentaries√æ    byte field;√æ```√æ√æ# Expression macroses√æInside expression you can use field names and field paths, also you can use the special macros '$$' which represents the current input stream byte counter, all fields started with '$' will be recognized by the parser as special user defined variables and it will be requesting them from special user defined provider. If the array size contains the only '_' symbol then the field or structure will not have defined size and whole stream will be read.√æ√æ# How to get result of parsing√æThe Result of parsing is an instance of com.igormaznitsa.jbbp.model.JBBPFieldStruct class which represents the root invisible structure for the parsed data and you can use its inside methods to find desired fields for their names, paths or classes. All Fields are successors of com.igormaznitsa.jbbp.model.JBBPAbstractField class. To increase comfort, it is easier to use mapping to classes when the mapper automatically places values to fields of a Java class.√æ√æ# Example√æExample below shows how to parse a PNG file through JBBP parser:√æ```Java√æfinal InputStream pngStream = getResourceAsInputStream(""picture.png"");√æ    try {√æ√æ      final JBBPParser pngParser = JBBPParser.prepare(√æ              ""long header;""√æ              + ""// chunks\n""√æ              + ""chunk [_]{""√æ              + ""   int length; ""√æ              + ""   int type; ""√æ              + ""   byte[length] data; ""√æ              + ""   int crc;""√æ              + ""}""√æ      );√æ√æ      JBBPFieldStruct result = pngParser.parse(pngStream);√æ√æ      assertEquals(0x89504E470D0A1A0AL,result.findFieldForNameAndType(""header"",JBBPFieldLong.class).getAsLong());√æ√æ      JBBPFieldArrayStruct chunks = result.findFieldForNameAndType(""chunk"", JBBPFieldArrayStruct.class);√æ√æ      String [] chunkNames = new String[]{""IHDR"",""gAMA"",""bKGD"",""pHYs"",""tIME"",""tEXt"",""IDAT"",""IEND""};√æ      int [] chunkSizes = new int[]{0x0D, 0x04, 0x06, 0x09, 0x07, 0x19, 0x0E5F, 0x00};√æ√æ      assertEquals(chunkNames.length,chunks.size());√æ√æ      for(int i=0;i<chunks.size();i++){√æ        assertChunk(chunkNames[i], chunkSizes[i], (JBBPFieldStruct)chunks.getElementAt(i));√æ      }√æ    }√æ    finally {√æ      closeResource(pngStream);√æ    }√æ```√æAlso it is possible to map parsed packet to class fields√æ```Java√æfinal JBBPParser pngParser = JBBPParser.prepare(√æ              ""long header;""√æ              + ""chunk [_]{""√æ              + ""   int length; ""√æ              + ""   int type; ""√æ              + ""   byte[length] data; ""√æ              + ""   int crc;""√æ              + ""}""√æ      );√æ√æ      class Chunk {√æ        @Bin int length;√æ        @Bin int type;√æ        @Bin byte [] data;√æ        @Bin int crc;√æ      }√æ√æ      @Bin  √æ      class Png {√æ        long header;√æ        Chunk [] chunk;√æ√æ        public Object newInstance(Class<?> klazz){√æ          return klazz == Chunk.class ? new Chunk() : null;√æ        }√æ      }√æ√æ      final Png png = pngParser.parse(pngStream).mapTo(new Png());√æ```√æ√æExample shows how to parse TCP frame:√æ```Java√æfinal JBBPParser tcpParser = JBBPParser.prepare(√æ              ""skip:34; // skip bytes till the frame\n""√æ              + ""ushort SourcePort;""√æ              + ""ushort DestinationPort;""√æ              + ""int SequenceNumber;""√æ              + ""int AcknowledgementNumber;""√æ√æ              + ""bit:1 NONCE;""√æ              + ""bit:3 RESERVED;""√æ              + ""bit:4 HLEN;""√æ√æ              + ""bit:1 FIN;""√æ              + ""bit:1 SYN;""√æ              + ""bit:1 RST;""√æ              + ""bit:1 PSH;""√æ              + ""bit:1 ACK;""√æ              + ""bit:1 URG;""√æ              + ""bit:1 ECNECHO;""√æ              + ""bit:1 CWR;""√æ√æ              + ""ushort WindowSize;""√æ              + ""ushort TCPCheckSum;""√æ              + ""ushort UrgentPointer;""√æ              + ""byte [$$-34-HLEN*4] Option;""√æ              + ""byte [_] Data;""√æ      );√æ√æ      final JBBPFieldStruct result = pngParser.parse(tcpFrameStream);√æ```√æ√æ# F.A.Q.√æ## Is it possible to use `@Bin` annotations for parsing and not only mapping?√æ`@Bin` annotations is used only for mapping and data writing, but there is special class [JBBPDslBuilder](/jbbp/src/main/java/com/igormaznitsa/jbbp/utils/JBBPDslBuilder.java) which can convert `@Bin` marked class into JBBP script, for instance:√æ```java√æJBBPDslBuilder.Begin().AnnotatedClass(SomeBinAnnotatetClass.class).End(true);√æ```√æ√æ## My Binary data format is too complex one to be decoded by a JBBP script√æNo problems! JBBP parser works over [com.igormaznitsa.jbbp.io.JBBPBitInputStream](/jbbp/src/main/java/com/igormaznitsa/jbbp/io/JBBPBitInputStream.java) class which can be used directly and allows read bits, bytes, count bytes and align data. For writing there is similar class [JBBPBitOutputStream](https://github.com/raydac/java-binary-block-parser/blob/master/jbbp/src/main/java/com/igormaznitsa/jbbp/io/JBBPBitOutputStream.java).√æ√æ## I want to make a binary data block instead of parsing!√æLibrary provides special helper [JBBPOut](/jbbp/src/main/java/com/igormaznitsa/jbbp/io/JBBPOut.java). The helper allows to generate binary blocks and provides some kind of DSL√æ```Java√æimport static com.igormaznitsa.jbbp.io.JBBPOut.*;√æ...√æfinal byte [] array =√æ          BeginBin().√æ            Bit(1, 2, 3, 0).√æ            Bit(true, false, true).√æ            Align().√æ            Byte(5).√æ            Short(1, 2, 3, 4, 5).√æ            Bool(true, false, true, true).√æ            Int(0xABCDEF23, 0xCAFEBABE).√æ            Long(0x123456789ABCDEF1L, 0x212356239091AB32L).√æ          End().toByteArray();√æ```"
julienrichardalbert/MEA,381079,6,3,5,User,False,,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 1, 'md': 1}",52,1,0,1,0,896,True,6,7,0,0,0,0,0,0,8,0,1,1,7,1,0,0,3,,4,,"# MEA: a Methylomic and Epigenomic Allele-specific analysis pipeline√æ√æ![MEA Pipeline](doc/MEA-diagram.png)√æ√æ√æBuilding on our previous work on the ALEA software package, a computational toolbox for allele-specific epigenomics analysis incorporating allelic variation data, we detail here ALEA‚Äôs successor - MEA. This package dramatically increases the functionality and usability of ALEA, incorporating allelic variation with existing resources, allowing for the identification of significant associations of epigenetic modifications and specific allelic variants in human and mouse cells. Similar to ALEA, MEA provides a customizable pipeline for allele-specific analysis of next-generation sequencing data which takes raw sequencing data for ChIP-seq, RNA-seq and DNA Methylation analysis, producing a UCSC track hub. MEA takes advantage of the available genomic resources for human (The 1000 Genomes Project Consortium) and mouse (The Mouse Genome Project) to reconstruct diploid in silico genomes for human samples or hybrid mouse samples. Then, for each accompanying ChIP-seq, RNA-seq or DNA Methylation dataset, MEA generates two wig files from short reads aligned differentially to each haplotype. This pipeline has been validated using human and hybrid mouse ChIPseq, RNAseq and DNA Methylation data (See [Test Data](#test-data)). √æ√æ## Please refer to the MEA user guide (PDF) for installation and run instructions√æ  √æ* [Docker installation](https://github.com/julienrichardalbert/MEA/raw/master/docker)  √æ* [distribution package](https://github.com/julienrichardalbert/MEA/raw/master/dist/mea.1.0.tar.gz)√æ* [documentation (PDF)](https://github.com/julienrichardalbert/MEA/raw/master/doc/MEA_UserGuide_v1.0.pdf)√æ* test data: ftp://ftp.bcgsc.ca/supplementary/ALEA/files/test-data/√æ√æ√æ√æ## Credits√æHamid Younesy, Torsten M√∂ller, Alireza Heravi-Moussavi, Jeffrey B. Cheng, Joseph F. Costello, Matthew C. Lorincz, Mohammad M. Karimi and Steven J. M. Jones, ""ALEA: a toolbox for allele-specific epigenomics analysis."" Bioinformatics 30.8 (2014): 1172-1174. [[link to paper](http://bioinformatics.oxfordjournals.org/content/30/8/1172.long)]√æ√æJulien Richard Albert, Tasuku Koike, Hamid Younesy, Richard Thompson, Aaron B. Bogutz, Mohammad M. Karimi and Matthew C. Lorincz, ""Development and application of an integrated allele-specific pipeline for methylomic and epigenomic analysis (MEA)."" BMC Genomics201819:463 (https://doi.org/10.1186/s12864-018-4835-2)"
STMicroelectronics-CentralLabs/BlueSTSDK_Android,2417,52,27,27,Organization,False,Bluetooth low energy Sensors Technology Software Development Kit (Android version),https://www.st.com/en/embedded-software/bluest-sdk.html,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",8,Java,"{'': 2, 'md': 1, 'gradle': 2}",29,3,0,1,0,1726,True,13,13,4,0,0,0,0,0,7,0,1,3,4783,2496,0,0,133,1,,STMicroelectronics/BlueSTSDK_Android,"# BlueST SDK√æ√æBlueST is a multi-platform library (Android and iOS supported) that permits easy access to the data exported by a Bluetooth Low Energy (BLE) device that implements the BlueST protocol.√æ√æ## BlueST Protocol√æ√æ### Advertise√æThe library will show only the device that has a vendor-specific field formatted in the following way:√æ√æ|Length|  1       |1           | 1                |1          | 4              | 6        |√æ|------|----------|------------|------------------|-----------|----------------|----------|√æ|Name  | Length   | Field Type | Protocol Version | Device Id | Feature Mask   | Device MAC (optional)|√æ|Value | 0x07/0xD | 0xFF       | 0x01             | 0xXX      | 0xXXXXXXXX | 0xXXXXXXXXXXXX|√æ√æ√æ - The Field Length must be 7 or 13 bytes long.√æ √æ - The Device Id is a number that identifies the type of device. It is used to select different types of feature mask and can manage more than 32 features.√æCurrently used values are:√æ    - 0x00 for a generic device√æ    - 0x01 is reserved for the [STEVAL-WESU1](http://www.st.com/en/evaluation-tools/steval-wesu1.html) board√æ    - 0x02 is reserved for the [STEVAL-STLKT01V1 (SensorTile)](http://www.st.com/content/st_com/en/products/evaluation-tools/solution-evaluation-tools/sensor-solution-eval-boards/steval-stlkt01v1.html) board√æ    - 0x03 is reserved for the [STEVAL-BCNKT01V1 (BlueCoin)](http://www.st.com/content/st_com/en/products/evaluation-tools/solution-evaluation-tools/sensor-solution-eval-boards/steval-bcnkt01v1.html) board√æ    - 0x04 is reserved for the [STEVAL-IDB008V1/2 (BlueNRG-2)](http://www.st.com/content/st_com/en/products/evaluation-tools/solution-evaluation-tools/communication-and-connectivity-solution-eval-boards/steval-idb008v2.html) board√æ    - 0x05 is reserved for the [STEVAL-BCN002V1B (BlueNRG-Tile)](https://www.st.com/content/st_com/en/products/evaluation-tools/solution-evaluation-tools/sensor-solution-eval-boards/steval-bcn002v1b.html) board√æ    - 0x06 is reserved for the [STEVAL-MKSBOX1V1 (SensorTile.Box)](https://www.st.com/sensortilebox) board√æ    - 0x07 is reserved for the [B-L475E-IOT01A](https://www.st.com/en/evaluation-tools/b-l475e-iot01a.html) board√æ    - 0x80 to 0x8A for a differents ST Functional pack based on Nucleo boards√æ√æ  You should use a value between 0x05 and 0x7F for your custom board, as values between 0x80 and 0xFF are reserved for ST Nucleo boards.√æ √æ - The feature mask is a bit field that provides information regarding what characteristics/features are exported by the board.√æCurrently, bits are mapped in the following way:√æ  √æ   |Bit|31|30|29|28|27|26|25|24|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|RFU|ADPCM Sync|Switch|Direction of arrival|ADPC Audio|MicLevel|Proximity|Lux|√æ√æ   |Bit|23|22|21|20|19|18|17|16|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|Acc|Gyro|Mag|Pressure|Humidity|Temperature|Battery|Second Temperature|√æ   √æ   |Bit|15|14|13|12|11|10|9|8|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|CO Sensor|STM32WB Reboot bit | STM32WB OTA Reboot bit|SD Logging|Beam forming|AccEvent|FreeFall|Sensor Fusion Compact|√æ√æ   |Bit|7|6|5|4|3|2|1|0|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|Sensor Fusion|Motion intensity|Compass|Activity|Carry Position|ProximityGesture|MemsGesture|Pedometer|√æ√æa custom bitmask is defined for the SensorTile.box board:√æ√æ   |Bit|31|30|29|28|27|26|25|24|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|FFT Amplitude|ADPCM Sync|Switch|MEMS Norm|ADPC Audio|MicLevel|Audio Classification|RFU|√æ√æ   |Bit|23|22|21|20|19|18|17|16|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|Acc|Gyro|Mag|Pressure|Humidity|Temperature|Battery|Second Temperature|√æ   √æ   |Bit|15|14|13|12|11|10|9|8|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|RFU|Euler Angle|RFU|SD Logging|RFU|AccEvent|EventCounter|Sensor Fusion Compact|√æ√æ   |Bit|7|6|5|4|3|2|1|0|√æ   |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|√æ   |Feature|Sensor Fusion|Motion intensity|Compass|Activity|Carry Position|RFU|MemsGesture|Pedometer|√æ√æTo see how the data is exported by pre-defined features, consult the export method [<code> Feature.ExtractResult Feature.extractData(long,byte[],int)</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html#extractData-long-byte:A-int-).  within the feature class definition.√æ√æ√æ- The device MAC address is optional and useful only for obtaining the device MAC address on an iOS device.√æ√æ√æ### Characteristics/Features√æ√æ A bluetooth characteristics can export multiple features. The SDK is searching in all the services the know characteristics.√æ The features that are present in the advertise feature mask have an UUID such as: <code>*XXXXXXXX*-0001-11e1-ac36-0002a5d5c51b</code>, and are called ""Basic Feature""√æ The first 32bits are interpreted as the feature mask, if they are set to 1 it meas that the characteristics is exporting the data of√æ that feature.√æ√æ The other ST characteristics have the format: <code>*XXXXXXXX*-0002-11e1-ac36-0002a5d5c51b</code> and are called ""extended Feature""√æ√æ In case of multiple features mapped in a single characteristic, the data must be in the same order as the bit mask.√æ √æ The characteristic data format must be:√æ √æ| Length |     2     |         >1         |          >1         |       |√æ|:------:|:---------:|:------------------:|:-------------------:|:-----:|√æ|  Name  | Timestamp | First Feature Data | Second Feature Data | ..... |√æ  √æ The first 2 bytes are used to communicate a time stamp. This is especially useful for recognizing any data loss.√æ √æ Since the BLE packet max length is 20 bytes, the max size for a feature data field is 18 bytes.√æ√æ To see how to define a new Feature or how to add a new UUID to a defined feature see [here](#### How to add a new Feature)√æ √æ#### Remote Feature√æThis type of Feature are created for handle the case when the node collect information from √æother boards the user want to know also how produced the data.√æ√æFor this type of feature a node ID is attach at the beginning of a standard feature update message.√æ√æFor this type of feature the characteristic data format must be:√æ √æ| Length |     2     |        2         |      >1       |       |√æ|:------:|:---------:|:----------------:|:-------------:|:-----:|√æ|  Name  |  NodeID   | Remote timestamp | Feature Data  | ..... |√æ√æ√æ### Special Services√æ#### [Debug](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Debug.html)√æIf available, the debug service must have the UUID <code>00000000-000E-11e1-9ab4-0002a5d5c51b</code> and will contains 2 characteristics:√æ√æ- <code>00000001-000E-11e1-ac36-0002a5d5c51b</code> (Notify/Write) is used to send string commands to the board and to notify the user of the result.√æ- <code>00000002-000E-11e1-ac36-0002a5d5c51b</code> (Notify) is used by the board to notify the user of an error message.√æ√æ#### Configuration√æThis service is used to communicate commands to the ST characteristics.√æIf available, the configuration service must have the UUID <code>00000000-000F-11e1-9ab4-0002a5d5c51b</code> and will contain 2 characteristics:√æ√æ- <code>00000002-000F-11e1-ac36-0002a5d5c51b</code> (Notify/Write): it can be used to send command/data to a specific feature.√æ√æ    The request message must have the following format:√æ    √æ    | Length |             4            |    1    | 0-15         |√æ    |:------:|:------------------------:|:-------:|--------------|√æ    |  Name  | Destination Feature Mask | Command Id | Command Data |√æ  √æ    Where the first 4 bytes will select the recipient of the command/data package.√æ  √æ    The optional command answer must have the following format:√æ    √æ    | Length |     2     |          4          |      1     |     0-13    |√æ    |:------:|:---------:|:-------------------:|:----------:|:-----------:|√æ    |  Name  | Timestamp | Sender Feature Mask | Command Id | Answer Data |√æ    √æ  From the SDK point of view the messages are sent using the method [Feature.sendCommand](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html#sendCommand-byte-byte:A-) and the answer is notified with a callback passed through the method [Feature.parseCommandResponse](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html#parseCommandResponse-int-byte-byte:A-).√æ√æ  If this characteristic does not exist, but the characteristics that export the feature is in √æ  write mode, the *command id* and the *command data* are sending directly to the feature √æ  characteristics. In this case is not possible answer to the command.√æ√æ- <code>00000001-000F-11e1-ac36-0002a5d5c51b</code> (Read/Write/Notify): if available it is used to access the board configuration register that can be modified using the [ConfigControl](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/ConfigControl.html) class.√æ√æ√æ### Example√æThe SDK is compatible with different ST firmware as:√æ - [FP-SNS-MOTENV1](http://www.st.com/content/st_com/en/products/embedded-software/mcus-embedded-software/stm32-embedded-software/stm32-ode-function-pack-sw/fp-sns-motenv1.html): STM32 ODE function pack for IoT node with BLE connectivity and environmental and motion sensors√æ - [FP-SNS-ALLMEMS1](http://www.st.com/content/st_com/en/products/embedded-software/mcus-embedded-software/stm32-embedded-software/stm32-ode-function-pack-sw/fp-sns-allmems1.html): STM32 ODE function pack for IoT node with BLE connectivity, digital microphone, environmental and motion sensors√æ - [FP-SNS-FLIGHT1](http://www.st.com/content/st_com/en/products/embedded-software/mcus-embedded-software/stm32-embedded-software/stm32-ode-function-pack-sw/fp-sns-flight1.html): STM32 ODE function pack for IoT node with NFC, BLE connectivity and environmental, motion and time-of-flight sensors√æ - [FP-NET-BLESTAR1](http://www.st.com/content/st_com/en/products/embedded-software/mcus-embedded-software/stm32-embedded-software/stm32-ode-function-pack-sw/fp-net-blestar1.html): STM32 ODE function pack for creating a BLE star network connected via Wi-Fi to IBM Watson IoT cloud√æ√æAnd it is used in different application as:√æ - [ST BLE Sensor](https://github.com/STMicroelectronics/STBlueMS_Android)√æ - [ST BLE StarNet](https://github.com/STMicroelectronics/STSensNet_Android)√æ√æ## How to install the library√æ### As an external library√æ1. Clone the repository√æ2. Add the BlueSTSDK directory as a submodule of your project: File->Import Module√æ√æ### As a git submodule√æ1. Add the repository as a submodule:√æ  √æ  ```Shell√æ  $ git submodule add https://github.com/STMicroelectronics/BlueSTSDK_Android.git BlueSTSDK√æ  ```√æ2. Add the SDK as a project submodule in the *settings.gradle* file, adding the line:√æ<pre>include ':BlueSTSDK:BlueSTSDK'</pre>√æ√æ## Main library actors√æ√æ### [Manager](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Manager.html)√æThis is a singleton class that starts/stops the discovery process and stores the retrieved nodes.√æBefore starting the scanning process, it is also possible to define a new deviceId and to register/add new features to already-defined devices√æ√æThe Manager will notify a node discovery through the [<code>Manager.ManagerListener</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Manager.ManagerListener.html) class.√æNote that each callback is performed asynchronously by a background thread.√æ√æ### [Node](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Node.html)√æThis class represents a remote device.√æ√æFrom this class you can recover what features are exported by a node and read/write data from/to the device.√æThe node will export all the features that are set to 1 in the advertise message. Once the device is connected, scanning and enabling of available characteristics are performed. At this point it is possible to request/send data related to the discovered features.√æ√æA node notifies its RSSI (signal strength) through the [<code>Node.BleConnectionParamUpdateListener</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Node.BleConnectionParamUpdateListener.html) class.√æA node notifies any change of its state through the [<code>Node.NodeStateListener</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Node.NodeStateListener.html) class.√æ√æA node can be in one of following states:√æ- **Idle**: the node is waiting for a connection and sending an advertise message√æ- **Connecting**: a connection with the node was triggered, the node is performing the discovery of device services/characteristics√æ- **Connected**: connection with the node was successful. Note: this status can be fired twice if a secure connection with BLE pairing was performed√æ- **Disconnecting**: ongoing disconnection, once disconnected the node goes back to the idle state√æ- **Lost**: the device sent an advertise, however currently it is not reachable√æ- **Unreachable**: we were connected with the node, however we lost the connection√æ√æNote that each callback is performed asynchronously by a background thread.√æ√æ√æ### [Feature](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html)√æThis class represents data exported by the node.√æ√æEach Feature has an array of  [<code>Field</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Features/Field.html) that describes the data exported.√æ√æData are received from a BLE characteristic and contained in a class  [<code>Feature.Sample</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.Sample.html). The user is notified of data using a listener pattern.√æ√æThe data exported by the Sample can be extracted using the static utility methods of the class.√æ√æNote that each callback is performed asynchronously by a background thread.√æ√æAvailable features can be retrieved from [Features package](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Features/package-summary.html).√æ√æ#### How to add a new Feature√æ√æ 1. Extend the class Feature: √æ    1. Create an array of [<code>Feature.Field</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Features/Field.html) that will describe the data exported by the new feature√æ    2. Create a constructor that accepts only the node as a parameter. From this constructor call the [super constructor](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html#Feature-java.lang.String-com.st.BlueSTSDK.Node-com.st.BlueSTSDK.Features.Field:A-), passing the feature name and the feature field.√æ    3.  Implement the method [<code> Feature.ExtractResult Feature.extractData(long,byte[],int)</code>](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Feature.html#extractData-long-byte:A-int-). √æ    4.  Create a utility static method that extracts the data from the Feature.Sample class √æ 2. Register the feature before the node connection using the ConnectionOption class:√æ     ```Java√æ            UUIDToFeatureMap myMap = new UUIDToFeatureMap();√æ            map.put(UUID.fromString(""00002a37-0000-1000-8000-00805f9b34fb""), FeatureHeartRate.class);√æ√æ        ConnectionOption.ConnectionOptionBuilder optionsBuilder = ConnectionOption.builder()√æ                    .setFeatureMap(myMap);√æ        ConnectionOption options = optionsBuilder.build();√æ√æ        node.connect(context,options)√æ     ```√æor√æ    ```Java√æ    Node node=...√æ    UUIDToFeatureMap map = new UUIDToFeatureMap();√æ    map.put(UUID.fromString(""00002a37-0000-1000-8000-00805f9b34fb""), FeatureHeartRate.class);√æ    node.addExternalCharacteristics(map)√æ    ```√æ To reuse one Basic Feature register use the manager class:√æ√æ    ```Java√æ    // add the feature to the Nucleo device√æ    byte deviceId = (byte) 0x80;√æ    SparseArray<Class<? extends Feature>> temp = new SparseArray<>();√æ    // the feature will be mapped in the characteristic √æ    // 0x10000000-0001-11e1-ac36-0002a5d5c51b√æ    temp.append(0x10000000,MyNewFeature.class);√æ    try {√æ        Manager.addFeatureToNode(deviceId,temp);√æ    } catch (InvalidFeatureBitMaskException e) {√æ     e.printStackTrace();√æ    }√æ    ```√æ## Log√æThe SDK defines some class that will log the feature data.√æUsing the class [FeatureLogCSVFile](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc/com/st/BlueSTSDK/Log/FeatureLogCSVFile.html) each feature will have its file, and the data logged will be:√æ- Node address (on Android) or name (on iOS)√æ- Timestamp, the message id√æ- RawData, the data received by the feature extractData method√æ- one colunm for each data extracted by the feature√æ√æ## Docs√æYou can find the documentation at this link: [JavaDoc](https://stmicroelectronics.github.io/BlueSTSDK_Android/javadoc)√æ√æ√æ√æ## License√æCOPYRIGHT(c) 2015 STMicroelectronics√æ√æ Redistribution and use in source and binary forms, with or without modification,√æ are permitted provided that the following conditions are met:√æ   1. Redistributions of source code must retain the above copyright notice,√æ      this list of conditions and the following disclaimer.√æ   2. Redistributions in binary form must reproduce the above copyright notice,√æ      this list of conditions and the following disclaimer in the documentation√æ      and/or other materials provided with the distribution.√æ   3. Neither the name of STMicroelectronics nor the names of its contributors√æ      may be used to endorse or promote products derived from this software√æ      without specific prior written permission.√æ√æTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""√æAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE√æIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE√æDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE√æFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL√æDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR√æSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER√æCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,√æOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE√æOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
robere2/Quickplay2.0,21916,4,2,2,User,False,Minecraft mod that allows Hypixel users to quickly join games and execute functions on the network.,https://bugg.co/quickplay/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",6,Java,"{'yml': 2, '': 1, 'md': 1, 'gradle': 1}",223,9,12,3,6,929,True,43,53,4,0,5,12,1,0,15,1,0,0,0,0,0,0,17,,10,,
dmarks2/liferay-plugin-intellij,2949,8,7,3,User,False,A plugin to help working with Liferay in IntelliJ IDEA,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",15,Java,"{'': 2, 'yml': 1, 'txt': 2, 'gradle': 2, 'md': 2, 'bat': 1, 'xml': 1}",282,2,9,3,3,944,True,0,4,0,1,0,0,0,0,7,0,2,44,5938,1997,0,0,18,,8,,"<!--√æ  Title: Liferay Plugin for IntelliJ√æ  Description: A plugin for Jetbrains IntelliJ IDEA to support developing Liferay components.√æ  Author: dmarks2√æ  -->√æ  √æLiferay Plugin for IntelliJ√æ===========================√æ√æ[![Build Status](https://travis-ci.org/dmarks2/liferay-plugin-intellij.svg?branch=master)](https://travis-ci.org/dmarks2/liferay-plugin-intellij)√æ√æDescription√æ-----------√æA plugin for Jetbrains [IntelliJ IDEA](https://www.jetbrains.com/idea/) to support developing [Liferay](http://www.liferay.com/) components. √æ√æNote that there is an [official plugin for IntelliJ from Liferay](https://plugins.jetbrains.com/plugin/10739-liferay) (which I contribute to regularly). This plugin here should be √æconsidered experimental. Both plugins cannot be installed at the same time.√æ√æThis plugin mainly focuses on code completion features. It gives IntelliJ IDEA more information about typical Liferay files and project structures. √æBy this the existing code completion features of IntelliJ can be used for Liferay specific files, too. There is no user interface√æfor the plugin. Just have a look at the following topics to see which areas have been improved:√æ√æ* [Creating new Modules](documentation/new_modules.md) becomes easier, because this plugin provides you with the official Liferay Maven archetypes. √æ* [Editing Liferay XML files](documentation/xml_files.md) is improved, e.g. by providing the XML Schema files for mostly all Liferay specific XML files. √æ* For [JavaScript files](documentation/js_files.md) the plugin provides you with libraries for the Liferay barebone Javascript files and AlloyUI. √æ* For [Velocity and Freemarker files in Layout Templates and Themes](documentation/vtl_ftl_files.md) the plugin provides code completion for known variables and theme settings.√æ* Also for [Journal Templates and Application Display Templates](documentation/structures_templates_adt.md) known variables are provided, including variables from Journal structures.√æ* For [CSS / SCSS files](documentation/scss_files.md) references to the parent theme are resolved and specific placeholders like @theme_image_path@ are detected. √æ* When [editing JSP files](documentation/jsp_files.md) you have access to the original JSPs (in JSP hooks or web fragments). Additionally code completion is possible for Liferay or AUI taglibs including cssClasses and language keys.√æ* Known properties for [OSGi components](documentation/osgi_components.md) are provided (e.g. Portlet properties).√æ* You can jump forward and backward between the [service.xml](documentation/service_xml.md) and the implementation class.√æ* Support for [groovy scripts](documentation/groovy.md) (Liferay admin console).√æ√æSupported IDEs√æ--------------√æ* IntelliJ 2019.2 and above (Community)√æ* IntelliJ 2019.2 and above (Ultimate)√æ√æSupported Liferay Versions√æ--------------------------√æ* Liferay 6.1 CE / EE√æ* Liferay 6.2 CE / EE√æ* Liferay 7.0, 7.1, 7.2, 7.3 / DXP√æ√æSupported Build Tools√æ---------------------√æ* Maven√æ* Gradle (Liferay 7.0, 7.1, 7.2, 7.3 / DXP only)√æ* Npm √æ√æReleases√æ--------√æ√æSee [Releases](https://github.com/dmarks2/liferay-plugin-intellij/releases) to download binary release versions.√æ√æFor automatic updates configure the following URL as custom repository in IntelliJ IDEA:√æ√æ    https://raw.githubusercontent.com/dmarks2/liferay-plugin-intellij/master/updatePlugins.xml√æ√æDevelopers√æ----------√æThis plugin uses a [Gradle based IntelliJ Plugin development](http://www.jetbrains.org/intellij/sdk/docs/tutorials/build_system/prerequisites.html).√æ√æTo build the plugin, just run ```gradle build```. The build script downloads required files automatically.√æ√æContributions are welcome.√æ√æKnown Issues√æ------------√æ* Indent does not work properly inside ``<aui:script>``-Tags containing other tags like ``<portlet:namespace/>``.√æ* ``@theme_image_path@`` reference in CSS files work, but still shown in red (SCSS works properly)√æ* This plugin cannot be installed together with the official plugin from Liferay.√æ√æLicence√æ-------√æ√æSee [LICENSE.txt](LICENSE.txt).√æ√æFor third-party licenses see [LICENSE-3RD-PARTY.txt](LICENSE-3RD-PARTY.txt)."
jhipster/jhipster-online,4008,115,29,78,Organization,False,JHipster Online is the Open Source project that powers https://start.jhipster.tech/,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",38,Java,"{'': 11, 'json': 9, 'js': 2, 'md': 3, 'txt': 1, 'xml': 2, 'sh': 1, 'cmd': 1, 'properties': 1, 'jh': 1, 'lock': 1}",524,5,20,17,0,1070,True,6,88,4,10,4,82,4,21,13,0,8,32,31841,47947,0,0,89,38,,,"# JHipster Online√æ√æ[![Build Status][github-actions-jhonline-image]][github-actions-url] [![Docker Pulls](https://img.shields.io/docker/pulls/jhipster/jhipster-online.svg)](https://hub.docker.com/r/jhipster/jhipster-online/)√æ√æJHipster Online is a Web application that allows to generate [JHipster applications](https://www.jhipster.tech/)√æwithout installing JHipster on your machine.√æ√æThis is an Open Source project ([Apache 2 license](https://github.com/jhipster/jhipster-online/blob/master/LICENSE.txt))√æthat powers the [https://start.jhipster.tech/](https://start.jhipster.tech/) website.√æ√æYou can use [https://start.jhipster.tech/](https://start.jhipster.tech/) for free, but if you find a bug or need a specific√æfeature, you are welcome to contribute to the project. You can also choose to clone or fork the project, and have your own version√æthat is hosted within your company.√æ√æ## Quick start guide√æ√æJHipster Online is a JHipster application, so you can follow the [JHipster documentation](https://www.jhipster.tech/) to√ælearn how to configure and set up JHipster Online.√æ√æThis quick start guide uses the default configuration that comes with JHipster Online: please read√æthe next section for details on configuring the application.√æ√æ- Install and run the front-end:√æ√æ```√æyarn install && yarn start√æ```√æ√æ- Run the database:√æ√æ```√ædocker-compose -f src/main/docker/mysql.yml up -d√æ```√æ√æ- Run the back-end:√æ√æ```√æ./mvnw√æ```√æ√æ## Specific configuration√æ√æThis section covers what is specific to JHipster Online over a normal JHipster application.√æ√æFor standard JHipster configuration, the [JHipster common application properties](https://www.jhipster.tech/common-application-properties/)√æwill probably be very useful.√æ√æ### JHipster installation and execution√æ√æJHipster Online generates a JHipster application by running the `jhipster` command line. In order for that√æcommand line to work, you need to have JHipster installed on your machine.√æ√æWe recommend you use the ""Yarn installation"" from the official [JHipster installation documentation](https://www.jhipster.tech/installation/).√æ√æIf you need more configuration options for running the JHipster command, you can modify:√æ√æ- the location of the `jhipster` command√æ- the timeout value for that command (the default is 120 seconds - please note that on our production server a generation usually√æ  takes 5 to 6 seconds)√æ- the temporary folder in which the application will be generated (`/tmp` by default)√æ√æThose are customized using the Spring Boot `application-*.yml` files as usual, for example:√æ√æ```√æapplication:√æ    jhipster-cmd:√æ        cmd: /usr/local/bin/jhipster√æ        timeout: 60√æ    tmp-folder: /tmp√æ```√æ√æ### Database configuration√æ√æJHipster Online works with a MySQL database, that is configured in the usual `application-*.yml` Spring Boot configuration√æfiles, using the standard `spring.datasource` keys.√æ√æ### Security√æ√æJHipster Online uses JWT to secure the application. For a production application, it is therefore **mandatory** that:√æ√æ- The `jhipster.security.authentication.jwt.key` is configured, and that key is stored securely (**not** commited in your application's Git repository).√æ  We recommend to configure it as an environnement variable on your server, or in a specific Spring Boot `application.yml` file that is stored√æ  in your application's folder on your production server (which is our configuration on the official [JHipster Online website](https://start.jhipster.tech/)).√æ- The application is only available through HTTPS. You can configure it using Spring Boot (please read the comments in the `application-prod.yml` file), or√æ  using an Apache 2 HTTP server with Let's Encrypt on front of your application (which is our configuration on the official [JHipster Online website](https://start.jhipster.tech/)).√æ√æ### Mail√æ√æE-mails are used to validate users' e-mail addresses or to send ""forgotten password"" e-mails. They are disabled by default,√æbut it might be a good idea to configure them once the application is in production.√æ√æTo configure e-mail sending, you need to configure the `jhipster.mail` keys (see [JHipster common application properties](https://www.jhipster.tech/common-application-properties/)),√æand the Spring Boot standard `spring.mail` keys.√æ√æWhen running the app with the `dev` profile, make sure to start the development mail server with:√æ√æ```√ædocker-compose -f src/main/docker/mailserver.yml up -d√æ```√æ√æYou can view the mails sent by JHipster with the MailHog UI at [http://localhost:8025](http://localhost:8025).√æ√æ### GitHub configuration√æ√æGitHub is configured using the `application.github` keys in the `application-*.yml` configuration files.√æ√æJHipster Online can work on the public GitHub instance on [https://github.com](https://github.com) as well√æas any private instance of GitHub Enterprise that is configured inside your company.√æ√æJHipster Online has to be configured as an ""OAuth App"": create a `jhipster` organization,√æand go to that organization's ""Settings > Developer Settings > OAuth Apps"" to create a new ""OAuth App"" with√æthe required credentials. This will allow JHipster Online to create applications and pull requests on your√æbehalf. JHipster Online uses `https://your-jhipster-online-url/api/github/callback` as callback endpoint.√æ√æJHipster Online also needs to have a specific ""JHipster Bot"" user configured, like the  √æ[https://github.com/jhipster-bot](https://github.com/jhipster-bot) used by the official [JHipster Online website](https://start.jhipster.tech/).√æIn order for JHipster Online to use that bot, it will need its OAuth token: log in as the ""JHipster Bot"" user, and go to√æ""Settings > Developer Settings > Personal access tokens"" and generate a new token.√æ√æHere is the final configuration, that should be set up inside the `application-dev.yml` file for√ædevelopment, and inside the `application-prod.yml` file for production.√æ√æ```√æapplication:√æ    github:√æ        host: https://github.com # The GitHub to connect to (by default: the public GitHub instance)√æ        client-id: XXX # The OAuth Client ID of the application on GitHub√æ        client-secret: XXX # The OAuth Client secret of the application on GitHub√æ        jhipster-bot-oauth-token: XXX # The ""personal access token"" of the JHipster Bot√æ```√æ√æ### GitLab configuration√æ√æSimilarly to GitHub, your GitLab configuration must be placed in your `application-*.yml` using the `application.gitlab`√ækeys.√æ√æJHipster Online can work on the public GitLab instance on [https://gitlab.com](https://gitlab.com) as well√æas any private instance of GitLab that is configured inside your company.√æ√æJHipster Online needs to have a specific ""JHipster Bot"" user configured: create that user (if you have your own private instance, you can call it√æ`jhipster-bot`, otherwise choose the name you like), and log in using that user.√æ√æOnce logged in, the required API credentials can be created by going to ""Settings > Applications > Add new application"".√æCreate a new application:√æ√æ- Its name is `jhipster`√æ- The redirect URI is `https://your-jhipster-online-url/api/gitlab/callback`√æ- It has the `api` and `read_user` scopes√æ√æSave that new application and store safely the `Application Id` and `Secret` values, so you can use them to configure√æthe `application-*.yml` files.√æ√æHere is the final configuration, that should be set up inside the `application-dev.yml` file for√ædevelopment, and inside the `application-prod.yml` file for production.√æ√æ```√æapplication:√æ    gitlab:√æ        host: https://gitlab.com # The GitLab to connect to. The main public GitLab instance is default here.√æ        client-id: XXX # Your GitLab application Id√æ        client-secret: XXX # Your GitLab application secret√æ        redirect-uri: XXX   # The URI where the user will be redirected after GitLab authentication. This URI√æ                            # must be registered in you GitLab application callback URLs√æ```√æ√æ## Building for production√æ√æTo generate a production build, like any normal JHipster application, please run:√æ√æ```√æ./mvnw -Pprod clean package√æ```√æ√æ### Using Docker√æ√æYou can also fully dockerize your application and all the services that it depends on.√æTo achieve this, first build a docker image of your app by running:√æ√æ```√æ./mvnw package -Pprod dockerfile:build√æ```√æ√æThen run:√æ√æ```√ædocker-compose -f src/main/docker/app.yml up -d√æ```√æ√æ## Building for GCP environment (include sql proxy)√æ√æ```√æ./mvnw clean package -Pgcp√æ```√æ√æ## Help and contribution to the project√æ√æPlease note that this project is part of the [JHipster organization](https://github.com/jhipster) and it follows the rules√æof the [JHipster project](https://github.com/jhipster/generator-jhipster).√æ√æ### If you have an issue, a bug or a feature request√æ√æPlease follow our [contribution guide](https://github.com/jhipster/jhipster-online/blob/master/CONTRIBUTING.md).√æ√æ### If you have a question or need help√æ√æYou should [post it on Stack Overflow using the ""jhipster"" tag](https://stackoverflow.com/questions/tagged/jhipster?sort=newest).√æ√æ### Code of conduct√æ√æWe have the same code of conduct as the main JHipster project:√æ[JHipster code of conduct](https://github.com/jhipster/jhipster-online/blob/master/CODE_OF_CONDUCT.md).√æ√æ[github-actions-jhonline-image]: https://github.com/jhipster/jhipster-online/workflows/Application%20CI/badge.svg√æ[github-actions-url]: https://github.com/jhipster/jhipster-online/actions"
Cantara/ConfigService,656,5,10,6,Organization,False,Config Service is the server-component of a controlled application instance regime,https://wiki.cantara.no/display/JAU/ConfigService,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 2, 'md': 1, 'xml': 1}",621,100,59,15,0,1810,True,15,44,0,0,2,111,2,75,12,3,3,57,96,66,0,0,93,5,,,"# ConfigService√æ√æ![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/Cantara/ConfigService) ![Build Status](https://jenkins.quadim.ai/buildStatus/icon?job=ConfigService) - [![Project Status: Active ‚Äì The project has reached a stable, usable state and is being actively developed.](http://www.repostatus.org/badges/latest/active.svg)](http://www.repostatus.org/#active) [![Known Vulnerabilities](https://snyk.io/test/github/Cantara/ConfigService/badge.svg)](https://snyk.io/test/github/Cantara/ConfigService)√æ√æThe goal of ConfigService is to provide the server-component of a controlled application instance regime, where both software upgrades and corresponding configurations of home-built java applications and services are managed. This should solve the update and configuration pain-point in micro-service architectures and for client installs of homegrown applications.√æ√æThis component is as of now *work-in*progress*, and some of the main goals and discussions can be found on our wiki:  https://wiki.cantara.no/display/JAU/Java-Auto-Update+and+ConfigService+Home√æ√æ## Install and use Standalone√æ√æScripts and procedures can be found on our wiki: √æhttps://wiki.cantara.no/display/JAU/Installation+and+getting+started+with+ConfigService√æ√æ## Install and use in a Docker container.√æThere are three Docker builds available for ConfigService√æ√æ1. [Alpine Linux with bundled application](DockerAlpine/README.md). Minimal image where the Docker image acts as the deployment unit.√æ2. [Ubuntu without bundled application](Docker/README.md). Pull scripts inside Docker container which downloads application after container has started.√æ3. [Ubuntu with AWS log agent](DockerAWS/README.md). Same as option 2, but with AWS dependency√æ√æSee the respective READMEs for details on each Docker setup.√æ√æ### Quickstart with Alpine Linux and Postgres persistence√æ_Note that Postgres is not included inside the container. Therefore you need to create an empty database beforehand√æand update the parameters to match your database endpoint_√æ```√ædocker run -d -p 80:8086 --name configservice \√æ-e persistence.type=postgres \√æ-e postgres.url=jdbc:postgresql://CHANGE_TO_YOUR_DB:5432/configservice \√æ-e postgres.username=YOUR_DB_USER \√æ-e postgres.password=YOUR_DB_PASS \√æ-e login.user=readonlyuser \√æ-e login.password=CHANGETHIS \√æ-e login.admin.user=admin \√æ-e login.admin.password=CHANGETHISASWELL \√æcantara/configservice-alpine√æ```√æ√æVerify that the application is running√æ```√æcurl localhost/jau/health√æ```√æ√æ## Configuration√æFor persistence ConfigService supports Postgres and MapDb (although deprecated!)√æ√æSee [properties file](src/main/resources/application.properties) for settings to override.√æ√æ## Verify that the application is running√æ√æ## How to use ConfigService.√æ√æ### Add a new application√æ√æ```√æcurl -u admin:configservice  -i -X POST -H ""Content-Type:application/json""   -d '{ ""artifactId"": ""myApplication"" }'  https://whydahdev.cantara.no/jau/application√æ√æ# Return  {""id"":""0e139a12-57c0-4a48-8999-7f32c63ff9ad"",""artifactId"":""myApplication""}√æ```√æ√æ### Add a new application configuration√æ√æ```√æcurl -u admin:configservice -vX POST https://whydahdev.cantara.no/jau/application/0e139a12-57c0-4a48-8999-7f32c63ff9ad/config  -d @myApplicationConfig.json --header ""Content-Type: application/json""√æ√æ```√æ√æExample file: myApplicationConfig.json√æ```√æ{√æ ""id"": ""f9e14326-b9df-46ba-826f-afad3392cf54"",√æ ""name"": ""whydah-dropwizard-demo-1.0"",√æ ""lastChanged"": ""2016-06-27T22:05:18.994Z"",√æ ""downloadItems"": [{√æ  ""url"": ""http://mvnrepo.cantara.no/service/local/repositories/releases/content/no/cantara/dropwizard-hello-world-application/1.0/dropwizard-hello-world-application-1.0.jar"",√æ  ""username"": null,√æ  ""password"": null,√æ  ""metadata"": {√æ   ""groupId"": ""no.cantara"",√æ   ""artifactId"": ""dropwizard-hello-world-application"",√æ   ""version"": ""1.0"",√æ   ""packaging"": ""jar"",√æ   ""lastUpdated"": null,√æ   ""buildNumber"": null√æ  }√æ }],√æ ""configurationStores"": [{√æ  ""fileName"": ""hello-world.yml"",√æ  ""properties"": {√æ   ""version"": ""0.8-beta-5-SNAPSHOT""√æ  }√æ }],√æ ""eventExtractionConfigs"": [{√æ  ""groupName"": ""jau"",√æ  ""tags"": [{√æ   ""tagName"": ""jau"",√æ   ""regex"": "".*"",√æ   ""filePath"": ""logs/jau.log""√æ  }]√æ }],√æ ""startServiceScript"": ""java -jar dropwizard-hello-world-application-1.0.jar""√æ}√æ```√æ√æ√æ### Update a specific client√æ√æ```√æcurl -u admin:conservice  -i -X PUT -H ""Content-Type:application/json""   -d '{""clientId"":""bed9e97b-2090-4fe0-bfac-ab44252151e6"",""applicationConfigId"":""b2435492-e011-4d15-b2a3-815395608fa7"",""autoUpgrade"":true}'  https://whydahdev.cantara.no/jau/client/bed9e97b-2090-4fe0-bfac-ab44252151e6```√æ```√æ√æ### Rollback a specific client√æ√æ```√æcurl -u admin:conservice  -i -X PUT -H ""Content-Type:application/json""   -d '{""clientId"":""bed9e97b-2090-4fe0-bfac-ab44252151e6"",""applicationConfigId"":""b2435492-e011-4d15-b2a3-815395608fa7"",""autoUpgrade"":true}'  https://whydahdev.cantara.no/jau/client/bed9e97b-2090-4fe0-bfac-ab44252151e6```√æ```√æ√æ√æ### Update all clients of an application√æ√æ### Browse clients √æ√æ```√æcurl -u admin:conservice  https://whydahdev.cantara.no/jau/client/√æ```√æ√æ### Browse active client status for an application√æ√æ```√æcurl -u admin:conservice  https://whydahdev.cantara.no/jau/application/cantara-demo/status√æ```√æ√æ## Example application configuration √æ√æ```√æ{√æ  ""name"": ""hello-world_0.1-SNAPSHOT"",√æ  ""lastChanged"": ""2016-03-09T07:50:18.994Z"",√æ  ""downloadItems"": [√æ    {√æ      ""url"": ""repository-url/hello-world-0.1-SNAPSHOT.jar"",√æ      ""username"": ""basic-auth-username"",√æ      ""password"": ""basic-auth-password"",√æ      ""metadata"": {√æ        ""groupId"": ""com.example"",√æ        ""artifactId"": ""hello-world-service"",√æ        ""version"": ""0.1-SNAPSHOT"",√æ        ""packaging"": ""jar"",√æ        ""lastUpdated"": null,√æ        ""buildNumber"": null√æ      }√æ    }√æ  ],√æ  ""configurationStores"": [√æ    {√æ      ""fileName"": ""helloworld_overrides.properties"",√æ      ""properties"": {√æ        ""hello.world.message"": ""Hello World""√æ      }√æ    }√æ  ],√æ  ""eventExtractionConfigs"" : [ {√æ     ""groupName"" : ""hw-agent"",√æ     ""tags"" : [ {√æ       ""tagName"" : ""jau"",√æ       ""regex"" : "".*"",√æ       ""filePath"" : ""logs/jau.log""√æ     }, {√æ       ""tagName"" : ""agent"",√æ       ""regex"" : "".*"",√æ       ""filePath"" : ""logs/hwagent.log""√æ     } ]√æ   } ],√æ√æ  ],√æ  ""startServiceScript"": ""java -jar hello-world-0.1-SNAPSHOT.jar""√æ}√æ```"
jsbhb/servercenter,4746,0,1,5,User,False,,,,16,Java,"{'': 1, 'xml': 1}",1002,3,0,3,0,1046,True,0,0,0,0,1,2,1,1,8,0,0,0,0,0,0,0,6,,0,,
mtheory7/wyatt,3093,10,5,12,User,False,A Java crypto currency trading bot using the Binance API,https://mtheory7.com,,4,Java,"{'': 1, 'md': 1, 'xml': 1}",344,3,9,1,8,754,True,0,4,0,0,0,0,0,0,8,0,1,5,97,12,0,0,8,,4,,"[1.1]: http://i.imgur.com/tXSoThF.png (twitter icon with padding)√æ[1]: https://twitter.com/WestworldWyatt√æ# [Wyatt](https://mtheory7.com)√æ[![alt text][1.1]][1]√æ√æWyatt is a Java & Spring based cryptocurrency trading bot that uses the public Binance API. It is run by providing it with API keys generated at binance.com (Also provide Wyatt with Twitter API keys if tweet alerts are desired). The bot then will pull recent trade candlestick data for the last 125 hours (5.2 days) and calculate a target price. If the target price is above the current price, a sell is executed and a buy back is placed. If not, Wyatt will wait 25 seconds before repeating the prediction/trading process. Above is a link to the current status of Wyatt running connected to my personal Binance account.√æ### Architecture√æThe bot itself is kicked off by a Spring Boot Application. The Spring App also exposes some endpoints that can interact and use the bot's functions. The available endpoints will be described in the API section. These endpoints will then be used for a web UI showing more informative feedback about the bot's operation and status. √æ### Logic√æ![Wyatt trade logic](https://github.com/mtheory7/wyatt/blob/master/src/main/resources/Wyatt_trade_logic.jpg)√æ### Endpoints√æTo get the current bot's status (main UI):√æ```$xslt√æGET: http://host-ip:port/status√æ```√æTo get the current bot's BTC balance:√æ```$xslt√æGET: http://host-ip:port/balance/btc√æ```√æTo get the current bot's profit (%):√æ```$xslt√æGET: http://host-ip:port/balance/profit√æ```√æTo get the current bot's open orders:√æ```$xslt√æGET: http://host-ip:port/orders√æ```√æTo shutdown the bot:√æ```$xslt√æGET: http://host-ip:port/seppuku?pass={password}√æ```√æ### Install√æSome example commands to run before attempting to build or run√æ```$xslt√æ# Install necessary commands/software√æsudo apt update√æsudo apt upgrade√æsudo apt install apache2 default-jdk maven cloc√æ√æ# Clone the necessary repos√ægit clone https://github.com/mtheory7/wyatt.git√ægit clone https://github.com/binance-exchange/binance-java-api.git√æ√æ# Move the example start script to the root directory√æ# Make sure to edit the sh file to fill in password and api keys√æcp wyatt/src/main/resources/examples/bringYourselfBackOnline.sh bringYourselfBackOnline.sh√æ# Make the script executable√æchmod +x bringYourselfBackOnline.sh√æ√æ# Remove and replace index with example√æ# Make sure to edit the index.php file to point to the correct place, i.e. replace host and port number√æsudo rm /var/www/html/index.*√æsudo cp wyatt/src/main/resources/examples/index.php /var/www/html/index.php√æ√æ# Execute start script to rebuild Binance-API, Wyatt, and start the program√æ./bringYourselfBackOnline.sh√æ```√æ### Building√æFirst clone and build the [Binance-API](https://github.com/binance-exchange/binance-java-api) repository to install the necessary packages into your local Maven repository (it is needed to build Wyatt)√æ  √æTo build Wyatt clone this repository and on the same level as pom.xml, execute √æ```$xslt√æmvn clean install√æ```√æ### Executing√æTo run Wyatt, execute the following√æ```$xslt√æjava -jar target/wyatt-{VERSION}.jar <arg1> <arg2> <arg3> <arg4> <arg5> <arg6>√æ```√æ * arg1 = Binance API Key*√æ * arg2 = Binance Secret Key*√æ * arg3 = Twitter OAuth Consumer Key√æ * arg4 = Twitter OAuth Consumer Secret√æ * arg5 = Twitter OAuth Access Token√æ * arg6 = Twitter OAuth Access Token Secret√æ√æ#### Executing without Twitter√æIf you desire to not use the tweeting feature of the bot, simply pass in only the two Binance keys necessary to trade!√æ```$xslt√æjava -jar target/wyatt-{VERSION}.jar <arg1> <arg2>√æ```√æ * arg1 = Binance API Key*√æ * arg2 = Binance Secret Key*√æ √æ *The Binance API Key absolutely MUST have approval to execute trades from Binance, but does not need approval to withdraw."
DevLeoko/AdvancedBan,768,59,12,73,User,False,AdvancedBan is a ban plugin for single servers and server networks with a great looking ban message,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",7,Java,"{'': 1, 'md': 3, 'xml': 1}",301,5,4,17,0,1646,True,35,244,18,35,0,90,0,17,9,0,4,46,861,610,0,0,8,,12,,"# AdvancedBan√æ√æ√æBukkit- & BungeeCord-Plugin at once <br>√æCheck out our [Spigot-Page](https://www.spigotmc.org/resources/advancedban.8695/) for more  information!√æ√æ![Minecraft Version 1.7-1.13](https://img.shields.io/badge/supports%20minecraft%20versions-1.7--1.15-brightgreen.svg)√æ![license GLP-3.0](https://img.shields.io/badge/license-GLP--3.0-lightgrey.svg)√æ[![CircleCI](https://circleci.com/gh/DevLeoko/AdvancedBan.svg?style=svg)](https://circleci.com/gh/DevLeoko/AdvancedBan)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/a84ecbeefd4d4eca864152d72adfde9c)](https://www.codacy.com/app/DevLeoko/AdvancedBan?utm_source=github.com&utm_medium=referral&utm_content=DevLeoko/AdvancedBan&utm_campaign=badger)√æ√æ_Coded by Leoko_ √æ√æ## Description√æAdvancedBan is an All-In-One Punishment-System with warns, tempwarns, mutes, tempmutes, bans, tempbans, ipbans and kicks.√æThere is also a PlayerHistory so you can see the players past punishments and √æthe plugin has configurable Time & Message-Layouts which automatically calculate and increase the Punishment-Time for certain reasons.√æAdvancedBan provides also a full Message-File so you can change and translate all messages & a detailed config-file with a lot of useful settings.√æThis is a BungeeCord & Bukkit/Spigot-Plugin in one and it supports MySQL and Local-File-Storage.√æ√æ## API√æTo use the API you need to add AdvancedBan to your project and declare it as a dependency in the plugin.yml.√æ√æAdd AdvancedBan to you project by adding the AdvancedBan.jar to your build-path or as a:√æ#### Maven dependency in your pom.xml√æ```√æ<dependency>√æ  <groupId>me.leoko.advancedban</groupId>√æ  <artifactId>AdvancedBan</artifactId>√æ  <version>2.1.6</version>√æ</dependency>√æ```√æhttps://github.com/DevLeoko/AdvancedBan/packages/147493√æ√æYou can use this API for both Spigot and Bungeecord plugins.√æCheck out the [Java Docs](https://devleoko.github.io/AdvancedBan/) to get started."
YangXiaoHei/Algorithms,77584,64,3,19,User,False,üî•  ÁÆóÊ≥ï4 ÊâÄÊúâÁªÉ‰π†È¢òÁöÑ Java ÂÆûÁé∞,,,22,Java,"{'': 1, 'md': 1}",823,1,0,1,0,973,True,7,0,1,0,0,0,0,0,8,0,0,0,0,0,0,0,11,,19,,# Algorithms4 √æ√æüî• **ÁÆóÊ≥ï4** ÁªÉ‰π†È¢òÁöÑ `Java` ÂÆûÁé∞ÔºåÊåÅÁª≠Êõ¥Êñ∞‰∏≠...√æ√æüî• **ÁÆóÊ≥ï4** Êèê‰æõÁöÑÂÜÖÁΩÆÂ∫ì‰∏ãËΩΩ [algs4.jar](https://algs4.cs.princeton.edu/code/algs4.jar) √æ√æüî• **ÁÆóÊ≥ï4** ÊµãËØïÊï∞ÊçÆ‰∏ãËΩΩ [algs4-data.zip](https://algs4.cs.princeton.edu/code/algs4-data.zip)√æ√æ‰∫§ÊµÅÊú¨‰π¶ÂÜÖÂÆπÊàñËÄÖ‰π†È¢òÔºåËØ∑Âä†ÂæÆ‰ø° `bigrice7385`√æ√æ> ‰∏ãÈù¢ÂàóÂá∫ÁöÑÈìæÊé•ÁöÑËß£Á≠î‰ªÖÁî®‰∫éÈúÄË¶ÅÁî®ÂõæÂÉèÊàñÊñáÊ°£ÊèèËø∞ÁöÑ‰π†È¢òÔºå√æ> ÂÖ∂‰ªñËß£Á≠îÁªü‰∏ÄÊï¥ÂêàÂú®ÂêÑÁ´†ËäÇÂêÑÂ∞èËäÇÁõÆÂΩï‰∏ã√æ√æ* **4.1 Êó†ÂêëÂõæ** √æ * [`4.1.1 a`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_01.1.png) | [`4.1.1 b`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_01.2.png)√æ * [`4.1.2`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_02.png)√æ * [`4.1.9`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_09.png)√æ * [`4.1.11`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_11.png)√æ * [`4.1.14.a`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_14.1.png) | [`4.1.14.b`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_14.2.png) ÂØπÊØî‰∏§ÂõæÂèØ‰ª•ÂèëÁé∞ÔºåÁî®Ê†àÊù•ÂÆûÁé∞ÁöÑÂπøÊêúÊó†Ê≥ïËææÂà∞È¢ÑÊúüÁõÆÁöÑÔºåÂõ†‰∏∫Ê†àÊÄªÊòØ ‚ÄúË¥™ÂøÉ‚ÄùÔºåÂú®ËøòÊ≤°ÊúâÂ§ÑÁêÜÂÆåÊú¨ËΩÆÂä†ÂÖ•ÁöÑÊâÄÊúâÈÇªÂ±ÖÂâçÂ∞±ÂèàÂêëËá™Â∑±ÂÜÖÈÉ®Âä†ÂÖ•Êñ∞ËäÇÁÇπ„ÄÇÁî±‰∫éÊ†àÂÖàËøõÂêéÂá∫ÁöÑÊÄßË¥®ÔºåÂä†ÂÖ•Êñ∞ËäÇÁÇπÂêéÔºåÂè™ËÉΩ‰ªéÁ¶ªËµ∑ÁÇπÊõ¥ËøúÁöÑÂú∞ÊñπÂÜçÂêëÂâçËøàÂêëÂæÅÁ®ãÔºåÊï¥‰∏™ËøáÁ®ãÂ•ΩÊØîÂñùÈÜâÈÖíÂÖúÂúàÂ≠êÔºå‰ΩÜÊØïÁ´üÂú∞ÁêÉÊòØÂúÜÁöÑÔºåÂ∞ΩÁÆ°ÊëáÊëáÊôÉÊôÉÔºåÂçóËæïÂåóËæôÔºå‰ΩÜÊúÄÁªàÂèàËÉΩÂõûÂà∞Ëµ∑ÁÇπ„ÄÇ√æ *  [`4.1.18`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_18.png)√æ *  [`4.1.19`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_19.png)√æ *  [`4.1.20`](https://github.com/YangXiaoHei/Algorithms/blob/master/Ch_4_1_Undirected_Graphs/images/Practise_4_1_20.png)
RBGKew/powop,101464,8,12,2,Organization,False,Plants of the World Online Portal,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",24,Java,"{'': 3, 'yml': 2, 'md': 2, 'xml': 2}",2755,3,0,6,0,3371,True,0,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,26,5,,,"<image src=""https://rawgit.com/RBGKew/powop/master/powo-portal/src/main/frontend/src/img/svg/powo-logo.svg"" width=""350px""/>√æ√æ[![Build Status](https://travis-ci.org/RBGKew/powop.svg?branch=master)](https://travis-ci.org/RBGKew/powop)√æ√æPlants of the World Online Portal is a global, online, biodiversity information√æresource.  This repository contains the code for the data model, harvester √æand web portal.√æ√æThe POWO code powers:√æ* [**Plants of the World Online**](http://powo.science.kew.org)√æ* [**World Flora Online** (in development)](http://worldfloraonline.org/)"
aic-sri-international/aic-expresso,41331,7,7,0,Organization,False,SRI International's AIC Symbolic Manipulation and Evaluation Library (for Java 1.8+),,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",18,Java,"{'': 1, 'yml': 1, 'csv': 8, 'Rmd': 1, 'md': 2, 'xml': 1, 'txt': 1}",1901,7,11,5,0,2715,True,33,12,0,0,0,1,0,0,15,0,0,0,0,0,2,0,7,1,,,"# AIC-Expresso [![Build Status](https://travis-ci.org/aic-sri-international/aic-expresso.svg?branch=master)](https://travis-ci.org/aic-sri-international/aic-expresso)√æSRI International's AIC Symbolic Manipulation and Evaluation Library (for Java 1.8+)√æ√æ### Getting Started√æ* [Overview and Demo](http://aic-sri-international.github.io/aic-expresso/)√æ* Latest Maven Information (for integration as a third party library)√æ      √æ      ```√æ      <dependency>√æ          <groupId>com.googlecode.aic-expresso</groupId>√æ          <artifactId>aic-expresso</artifactId>√æ          <version>1.3.3</version>√æ      </dependency>√æ      ```√æ* [Latest Release](https://github.com/aic-sri-international/aic-expresso/releases)√æ* [Instructions on how to set up your workspace (for aic-expresso developers)](https://github.com/aic-sri-international/aic-expresso/wiki/Getting-Started)√æ√æ##### Acknowledgements√æSRI International gratefully acknowledges the support of the Defense Advanced Research Projects Agency (DARPA) √æMachine Reading Program, and Probabilistic Programming for Advanced Machine Learning Program, under Air Force √æResearch Laboratory (AFRL) prime Contract Nos. FA8750-09-C-0181 and FA8750-14-C-0005, respectively. Any opinions, √æfindings, and conclusions or recommendations expressed in this material are those of the author(s) and do not √ænecessarily reflect the view of DARPA, AFRL, or the US government."
hbz/lobid-resources,36949,1,4,2,Organization,False,"Transformation, web frontend, and API 2.0 for the hbz catalog as LOD",http://lobid.org/resources,"{'key': 'epl-2.0', 'name': 'Eclipse Public License 2.0', 'spdx_id': 'EPL-2.0', 'url': 'https://api.github.com/licenses/epl-2.0', 'node_id': 'MDc6TGljZW5zZTMy'}",13,Java,"{'': 4, 'yml': 1, 'textile': 1, 'txt': 1, 'xml': 2, 'sh': 1}",3029,73,1,5,6,2335,True,68,487,6,5,5,511,2,12,12,0,3,23,1634,111,0,0,68,2,,,"h1. About√æ√æTransform MAB-XML to JSON for Elasticsearch indexing with ""Metafacture"":https://github.com/culturegraph/metafacture-core/wiki, serve API and UI with ""Play Framework"":https://playframework.com/.√æ√æThis repo replaces the lobid-resources part of ""https://github.com/lobid/lodmill"":https://github.com/lobid/lodmill.√æ√æFor information about the Lobid architecture and development process, see ""http://hbz.github.io/#lobid"":http://hbz.github.io/#lobid.√æ√æh1. Build√æ√æ""!https://secure.travis-ci.org/hbz/lobid-resources.png?branch=master!"":https://travis-ci.org/hbz/lobid-resources√æ√æPrerequisites: Java 8, Maven 3; verify with @mvn -version@√æ√æCreate and change into a folder where you want to store the projects:√æ√æ* @mkdir ~/git ; cd ~/git@√æ√æBuild lobid-resources:√æ√æ* @git clone https://github.com/hbz/lobid-resources.git@√æ* @cd lobid-resources@√æ* @mvn clean install@√æ√æBuild the web application:√æ√æ* @cd web@√æ* @wget http://downloads.typesafe.com/typesafe-activator/1.3.10/typesafe-activator-1.3.10-minimal.zip@√æ* @unzip typesafe-activator-1.3.10-minimal.zip@√æ* @./activator-1.3.10-minimal/bin/activator test@√æ√æSee the @.travis.yml@ file for details on the CI config used by Travis.√æ√æh2. Eclipse setup√æ√æReplace @test@ with other Play commands, e.g. @""eclipse with-source=true""@ (generate Eclipse project config files, then import as existing project in Eclipse), @~ run@ (run in test mode, recompiles changed files on save, use this to keep your Eclipse project in sync while working, make sure to enable automatic workspace refresh in Eclipse: @Preferences@ > @General@ > @Workspace@ > @Refresh using native hooks or polling@).√æ√æh2. Production√æ√æUse @""start 8000""@ to run in production background mode on port 8000 (hit Ctrl+D to exit logs). To restart a production instance running in the background, you can use the included @restart.sh@ script (configured to use port 8000). For more information, see the ""Play documentation"":https://playframework.com/documentation/2.4.x/Home.√æ√æh1. Example of getting the data√æ√æIn the online test the data is indexed to a living elasticsearch instance.√æThis instance is only reachable within our internally network, thus this test√æmust be executed manually. Then elasticsearch can be looked up like this:√æ√æhttp://lobid.org/resources/HT002619538√æ√æFor querying it you can use the elasticsearch query DSL, like:√æ√æhttp://lobid.org/resources?q=title:Mobydick√æ√æThe result shows the data which also ""Hbz01MabXml2ElasticsearchLobidTest.java"":https://github.com/hbz/lobid-resources/blob/master/src/test/java/org/lobid/resources/Hbz01MabXml2ElasticsearchLobidTest.java produces.√æ√æh1. Developer instructions√æ√æThis section explains how to make a successful build after changing the transformations,√æhow to update the JSON-LD and its context, and how to index the data.√æ√æh2. Changing transformations√æ√æAfter changing the ""morph"":https://github.com/hbz/lobid-resources/blob/master/src/main/resources/morph-hbz01-to-lobid.xml the build must be executed:√æ√æ@mvn clean install@√æ√æTwo possible outcomes:√æ√æ* *BUILD SUCCESS*: the tested resources don't reflect the changes.√æIn this case you should add an Aleph-MabXml resource to ""hbz01XmlClobs.tar.bz2"":https://github.com/hbz/lobid-resources/blob/master/src/test/resources/hbz01XmlClobs.tar.bz2 that _would_ reflect your changes. Do like this to add the resource HT018895767:√æ@cd src/test/resources; rm -rf hbz01XmlClobs; tar xfj hbz01XmlClobs; xmllint --format http://beta.lobid.org/hbz01/HT018895767 > hbhbz01XmlClobs/HT018895767; tar cfj hbz01XmlClobs.tar.bz2 hbz01XmlClobs; cd -; mvn clean install; git add src/test/resources/jsonld/ ; git add src/test/resources/hbz01.es.nt@√æ√æ* *BUILD FAILURE*: the newly generated data isn't equal to the test resources.√æThis is a good thing because you wanted the change.√æ√æDoing @mvn test -DgenerateTestData=true@ the test data is generated and also updated in the filesystem.√æThese new data will now act as the template for sucessful tests. So, if you would rebuild now, the build will pass successfully.√æYou just must approve the new outcome by committing it.√æ√æNow you must approve the new outcome.√æLet's see what has changed:√æ√æ@git status@√æ√æLet's make a diff on the changes, e.g. all JSON-LD documents:√æ√æ@git diff src/test/resources/jsonld/@√æ√æIf you are satisfied with the changes, go ahead and add and commit them:√æ√æ@git add src/test/resources/jsonld/; git commit@√æ√æDo this respectivly for all other test files (Ntriples ...).√æIf you've added and commited everything, check again if all is ok:√æ√æ@mvn clean install@√æ√æThis should result in *BUILD SUCCESS*. Push your changes. You're done :)√æ√æh2. Propagate the context.json to lobid-resources-web√æ√æThe generated _context.jsonld_ is automatically written to the proper directory√æso that it is automatically deployed when the web application is deployed.√æ√æWhen the small test set is indexed by using _buildAndETLTestSet.sh_ deploy your branch in√æthe staging directory of the web application. The _context_ for the resources is adapted√æto use the ""staging.lobid.org""-domain and thus the staging-_context.jsonld_ will resolve using the one in that directory.√æ√æh3. Elasticsearch index√æ√æThis is about the building of the production index as well as the small test index.√æ√æh4. Production√æ√æAll automation is configured at one central crontab entry: _hduser@weywot1_ .√æThis is your starting point for tracing what scripts are triggered on what server√æat which time. All is logged, see the crontab entries resp. the scripts.√æ√æLike with the old (and still productive) lobid index, a weekly fulldump√æindex is build on Saturday/Sunday. This is the base which will then be complemented by the daily incremental updates.√æHave a look at ""both source data, base and daily updates"":http://lobid.org/download/dumps/DE-605/mabxml/.√æThe base-file must be referenced by a symbolic link residing in the nfs: ""/files/open_data/closed/hbzvk/index.hbz-nrw.de/alephxml/clobs/baseline/aliasNewestFulldump.tar.gz"". It is this symbolic link which is used by indexing processes.√æBuilding the full index takes around 12 hours. The finished index is aliased√æto _resources-staging_. This is manually to be tested. If it's ok, the√æindex is switched by simply renaming this alias to _resources_ . Both aliases are√æreflected in the lookup-URI (e.g. http://lobid.org/resources/HT015082724 vs√æhttp://lobid.org/resources-staging/HT015082724 resp. internal ES URI√æ@http://gaia.hbz-nrw.de:9200/resources/_all/HT015082724@ and√æ@http://gaia.hbz-nrw.de:9200/resources-staging/_all/HT015082724@ ).√æ√æThe three latest indices will be retained, also every index with no _-staging_√æsuffix on the alias. Other indices which start with the same string (e.g. @resources@) will be√æremoved by the index program after the indexing is finished - the hard disk√æis not of endless size ;) .√æ√æNote: in production, always make sure that the JSON-LD context is the proper one.√æ√æh4. Small test√æ√æThis will download ~5k aleph xml clobs (if not already residing in your filesystem)√æand index them into elasticsearch, aliased _test-resources_ (not interfering with the√æproductive indexes, thus not removing any productive index).√æ√æ@cd src/test/resources; bash buildAndETLTestSet.sh@√æ√æh3. Data updates√æ√æHow to manually invoke data updates for both API 1.x data and API 2.0 data.√æ√æData source for updates and baselines: http://lobid.org/download/dumps/DE-605/mabxml/√æ√æThese are created with @weywot1:/home/hduser/git/hbz-aleph-dumping/bin/daily-hbz-aleph.sh@.√æ√æFor all commands below, add this to redirect output to file and follow that file:√æ√æ@> log/201605090945-master.startHbz01ToLobidResources.sh.log 2>&1 & tail -f log/201605090945-master.startHbz01ToLobidResources.sh.log@√æ√æh4. Data 1.x, at hduser@weywot1:/home/hduser/git/lodmill/lodmill-rd/doc/scripts/hbz01$√æ√æSingle update:√æ√æ@bash -x startHbz01ToLobidResources.sh master /files/open_data/open/DE-605/mabxml/DE-605-aleph-update-marcxchange-20160411-20160412.tar.gz lobid-resources-staging NOALIAS quaoar2.hbz-nrw.de quaoar exact@√æ√æUpdates listed in file:√æ√æ@bash -x startHbz01ToLobidResources.sh master dummy_ignore lobid-resources-staging NOALIAS quaoar2.hbz-nrw.de quaoar exact doc/scripts/hbz01/toBeUpdateFilesXmlClobs_afterBasedump.txt@√æ√æNew baseline index:√æ√æ@bash -x startHbz01ToLobidResources.sh master /files/open_data/closed/hbzvk/index.hbz-nrw.de/alephxml/clobs/baseline/aliasNewestFulldump.tar.gz lobid-resources-201605090945 ""-staging"" quaoar2.hbz-nrw.de quaoar create doc/scripts/hbz01/toBeUpdateFilesXmlClobs_afterBasedump.txt@√æ√æh4. Data 2.0, at hduser@gaia:/opt/hadoop/git/lobid-resources$√æ√æSingle update:√æ√æ@bash -x startHbz01ToLobidResources.sh master /files/open_data/open/DE-605/mabxml/DE-605-aleph-update-marcxchange-20160411-20160412.tar.gz resources-staging NOALIAS gaia.hbz-nrw.de lobid-gaia exact@√æ√æUpdates listed in file:√æ√æ@bash -x startHbz01ToLobidResources.sh master dummy_ignore resources-staging NOALIAS gaia.hbz-nrw.de lobid-gaia exact toBeUpdateFilesXmlClobs_afterBasedump.txt@√æ√æNew baseline index:√æ√æ@bash -x startHbz01ToLobidResources.sh master /files/open_data/closed/hbzvk/index.hbz-nrw.de/alephxml/clobs/baseline/aliasNewestFulldump.tar.gz resources-201605090945 NOALIAS gaia.hbz-nrw.de lobid-gaia create@√æ√æh1. License√æ√æEclipse Public License: ""http://www.eclipse.org/legal/epl-v10.html"":http://www.eclipse.org/legal/epl-v10.html"
AOKP/packages_wallpapers_SwagPapers,54301,1,2,9,Organization,False,,,,8,Java,"{'': 1, 'mk': 1, 'xml': 1, 'md': 1}",33,4,0,6,0,2899,False,,,,,0,2,0,0,6,0,0,0,0,0,0,0,573,16,,,
codewalkerster/android_packages_apps_Bluetooth,14881,0,1,4,User,False,,,,6,Java,"{'mk': 2, 'xml': 2}",930,11,360,9,0,4000,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,465,,88,,
vaadin/charts,142409,53,23,79,Organization,False,Vaadin Charts,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",16,Java,"{'': 1, 'md': 2, 'txt': 1, 'xml': 1}",893,17,53,32,4,2778,True,115,309,2,0,2,166,1,2,8,3,0,0,0,0,0,0,291,31,,,"[![Published on vaadin.com/directory](https://img.shields.io/vaadin-directory/status/vaadin-charts.svg)](https://vaadin.com/directory/component/vaadin-charts)√æ# Vaadin Charts√æ√æVaadin Charts is a UI component add-on for Vaadin Framework 7+ which provides means to create multiple different types of charts in Vaadin applications.√æ√æ## License & Author√æ√æThis Add-on is distributed under [Commercial Vaadin Add-on License version 3](http://vaadin.com/license/cval-3) (CVALv3). For license terms, see LICENSE.txt.√æ√æVaadin Charts is written by Vaadin Ltd.√æ√æ√æ## Setting up for development:√æ√æClone the project in GitHub (or fork it if you plan on contributing) and required submodules√æ√æ```√ægit clone git@github.com:vaadin/charts.git√ægit submodule init√ægit submodule update√æ```√æ√æTo build and install the project into the local repository run √æ√æ```mvn install -DskipITs```√æ√æin the root directory. `-DskipITs` will skip the integration tests, which require a TestBench license. If you want to run all tests as part of the build, run√æ√æ```mvn install```√æ√æTo view the included demos, run√æ√æ```mvn jetty:run``` in the `demo` directory√æand navigate to http://localhost:8080√æ√æTo run with Super Dev Mode, run √æ√æ```mvn vaadin:run-codeserver``` in the `demo` directory.√æ√æYou need to have the UI jetty running as well, then navigate to http://localhost:8080/?superdevmode√æ√æ### Project modules√æ√æ* The `demo` module contains a web app that shows most of the integration tests in a simple demo app.√æ* The `chart-export-demo` module demonstrates how charts can be converted to SVG and via it used in e.g. PDF documents.√æ* The `chart-plugin-demo` shows how the underlying library version can be changed and how plugins can be used with Vaadin Charts."
CJSCommonPlatform/utilities,766,1,16,2,Organization,False,Common reusable utilities,,,7,Java,"{'': 1, 'yml': 1, 'md': 2, 'xml': 1}",178,3,36,11,0,1223,True,1,1,0,0,1,39,0,0,7,0,2,5,22,9,0,0,89,2,,,# Common Reuseable Utilities√æ√æ## Deprecated√æ√æ_**This project has moved to be a sub-project of [Framework Libraries](https://github.com/CJSCommonPlatform/framework-libraries) and is located [here](https://github.com/CJSCommonPlatform/framework-libraries/blob/master/framework-utilities/utilites/README.md)**_√æ√æ_**Pull requests against this project have been disabled. Please contact one of the project owners for emergency bug fixes on this version**_√æ√æ---√æ√æ[![Build Status](https://travis-ci.org/CJSCommonPlatform/utilities.svg?branch=master)](https://travis-ci.org/CJSCommonPlatform/utilities) [![Coverage Status](https://coveralls.io/repos/github/CJSCommonPlatform/utilities/badge.svg?branch=master)](https://coveralls.io/github/CJSCommonPlatform/utilities?branch=master)
acrcloud/acrcloud_sdk_java,67648,16,4,13,Organization,False,,,,5,Java,{'md': 1},55,2,0,3,0,1705,True,1,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,24,0,,,"# Audio Recognition Java SDK√æ√æ## Overview√æ  [ACRCloud](https://www.acrcloud.com/) provides cloud [Automatic Content Recognition](https://www.acrcloud.com/docs/introduction/automatic-content-recognition/) services for [Audio Fingerprinting](https://www.acrcloud.com/docs/introduction/audio-fingerprinting/) based applications such as **[Audio Recognition](https://www.acrcloud.com/music-recognition)** (supports music, video, ads for both online and offline), **[Broadcast Monitoring](https://www.acrcloud.com/broadcast-monitoring)**, **[Second Screen](https://www.acrcloud.com/second-screen-synchronization)**, **[Copyright Protection](https://www.acrcloud.com/copyright-protection-de-duplication)** and etc.<br>√æ  √æ  This **audio recognition java SDK** support most of audio / video files. √æ√æ>>Audio: mp3, wav, m4a, flac, aac, amr, ape, ogg ...<br>√æ>>Video: mp4, mkv, wmv, flv, ts, avi ...√æ√æ## Requirements√æFollow one of the tutorials to create a project and get your host, access_key and access_secret.√æ√æ * [How to identify songs by sound](https://www.acrcloud.com/docs/tutorials/identify-music-by-sound/)√æ √æ * [How to detect custom audio content by sound](https://www.acrcloud.com/docs/tutorials/identify-audio-custom-content/)√æ √æ## Windows Runtime Library √æ**If you run the SDK on Windows, you must install this library.**<br>√æX86: [download and install Library(windows/vcredist_x86.exe)](https://www.microsoft.com/en-us/download/details.aspx?id=5555)<br>√æx64: [download and install Library(windows/vcredist_x64.exe)](https://www.microsoft.com/en-us/download/details.aspx?id=14632)√æ√æ## Note√æ1. You must not modify package name ""com.acrcloud.utils"".<br>√æ2. If you run the SDK on Windows, you must install library(vcredist).√æ√æ## Functions√æIntroduction all API.√æ### src/com/acrcloud/utils/ACRCloudRecognizer.java√æ```java√æ      public String recognizeByFile(String filePath, int startSeconds)√æ      /**√æ      *√æ      *  recognize by file path of (Audio/Video file)√æ      *          Audio: mp3, wav, m4a, flac, aac, amr, ape, ogg ...√æ      *          Video: mp4, mkv, wmv, flv, ts, avi ...√æ      *√æ      *  @param filePath query file path√æ      *  @param startSeconds skip (startSeconds) seconds from from the beginning of (filePath)√æ      *√æ      *  @return result√æ      *√æ      **/√æ    √æ      public String recognizeByFileBuffer(byte[] fileBuffer, int fileBufferLen, int startSeconds)√æ      /**√æ      *√æ      *  recognize by buffer of (Audio/Video file)√æ      *          Audio: mp3, wav, m4a, flac, aac, amr, ape, ogg ...√æ      *          Video: mp4, mkv, wmv, flv, ts, avi ...√æ      *√æ      *  @param fileBuffer query buffer√æ      *  @param fileBufferLen the length of fileBufferLen√æ      *  @param startSeconds skip (startSeconds) seconds from from the beginning of fileBuffer√æ      *√æ      *  @return result√æ      *√æ      **/√æ    √æ      public String recognize(byte[] wavAudioBuffer, int wavAudioBufferLen)√æ      /**√æ      *√æ      *  recognize by wav audio buffer(RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, mono 8000 Hz)√æ      *√æ      *  @param wavAudioBuffer query audio buffer√æ      *  @param wavAudioBufferLen the length of wavAudioBuffer√æ      *√æ      *  @return result√æ      *√æ      **/√æ```√æ√æ### src/com/acrcloud/utils/ACRCloudExtrTool.java √æ```java√æpublic static byte[] createFingerprintByFile(String fileName, int startTimeSeconds, int audioLenSeconds, boolean isDB)√æ      //fileName: Path of input file;√æ      //startTimeSeconds: Start time of input file, default is 0;√æ      //audioLenSeconds: Length of audio data you need. if you create recogize frigerprint, default is 12 seconds, if you create db frigerprint, it is not usefully;√æ      //isDB: If it is True, it will create db frigerprint;√æ      //@return ""ACRCloud Fingerprint"". If can not create frigerprint, return null.√æ√æpublic static byte[] createFingerprintByFileBuffer(byte[] dataBuffer, int dataBufferLen, int startTimeSeconds, int audioLenSeconds, boolean isDB)√æ      //dataBuffer: data buffer of input file;√æ      //dataBufferLen: length of dataBuffer√æ      //startTimeSeconds: Start time of input file, default is 0;√æ      //audioLenSeconds: Length of audio data you need. if you create recogize frigerprint, default is 12 seconds, if you create db frigerprint, it is not usefully;√æ      //isDB: If it is True, it will create db frigerprint;√æ      //@return ""ACRCloud Fingerprint"". If can not create frigerprint, return null.√æ√æpublic static byte[] createFingerprint(byte[] dataBuffer, int dataBufferLen, boolean isDB)√æ      //dataBuffer: audio data buffer(RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, mono 8000 Hz);√æ      //isDB: If it is True, it will create db frigerprint;√æ      //@return ""ACRCloud Fingerprint"". If can not create frigerprint, return null.√æ√æpublic static byte[] decodeAudioByFile(String fileName, int startTimeSeconds, int audioLenSeconds) √æ      //It will return the audio data(RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, mono 8000 Hz);√æ      //fileName: Path of input file;√æ      //startTimeSeconds: Start time of input file, default is 0;√æ      //audioLenSeconds: Length of audio data you need, if it is 0, will decode all the audio;√æ      //@return audio data.√æ√æpublic static byte[] decodeAudioByFileBuffer(byte[] dataBuffer, int dataBufferLen, int startTimeSeconds, int audioLenSeconds)√æ      //It will return the audio data(RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, mono 8000 Hz);√æ      //dataBuffer: data buffer of input file;√æ      //startTimeSeconds: Start time of input file, default is 0;√æ      //audioLenSeconds: Length of audio data you need, if it is 0, will decode all the audio;√æ      //@return audio data.√æ√ædef version()√æ      //return the version of this module√æ```√æ## Example√ærun Test: <br>√æ\>>> cd test<br>√æReplace ""xxxxxxxx"" below with your project's access_key and access_secret.<br>√æ\>>> sh run.sh<br>√æ```java√æimport java.io.*;√æimport java.util.Map;√æimport java.util.HashMap;√æ√æimport com.acrcloud.utils.ACRCloudRecognizer;√æ√æpublic class Test {√æ√æ    public static void main(String[] args) {√æ        Map<String, Object> config = new HashMap<String, Object>();√æ        √æ        // replace ""XXXXXXXX"" with your project's host, access_key and access_secret√æ        config.put(""host"", ""XXXXXXXX"");√æ        config.put(""access_key"", ""XXXXXXXX"");√æ        config.put(""access_secret"", ""XXXXXXXX"");√æ        √æ        config.put(""debug"", false);√æ        config.put(""timeout"", 10); // seconds√æ√æ        ACRCloudRecognizer re = new ACRCloudRecognizer(config);√æ√æ        // It will skip 80 seconds.√æ        String result = re.recognizeByFile(args[0], 80);√æ        System.out.println(result);√æ        √æ        /**√æ          *√æ          *  recognize by buffer of (Formatter: Audio/Video)√æ          *     Audio: mp3, wav, m4a, flac, aac, amr, ape, ogg ...√æ          *     Video: mp4, mkv, wmv, flv, ts, avi ...√æ          *√æ          *√æ          **/√æ        File file = new File(args[0]);√æ        byte[] buffer = new byte[3 * 1024 * 1024];√æ        if (!file.exists()) {√æ            return;√æ        }√æ        FileInputStream fin = null;√æ        int bufferLen = 0;√æ        try {√æ            fin = new FileInputStream(file);√æ            bufferLen = fin.read(buffer, 0, buffer.length);√æ        } catch (Exception e) {√æ            e.printStackTrace();√æ        } finally {√æ            try {√æ                if (fin != null) {√æ                        fin.close();√æ                }√æ            } catch (IOException e) {√æ                e.printStackTrace();√æ            }√æ        }√æ        System.out.println(""bufferLen="" + bufferLen);√æ√æ        if (bufferLen <= 0)√æ            return;√æ√æ        // It will skip 80 seconds from the begginning of (buffer).√æ        result = re.recognizeByFileBuffer(buffer, bufferLen, 80);√æ        System.out.println(result);√æ      }√æ}√æ```√æ√æ## Eclipse Project√æ**1. create java project:** <br>√æ  ![image](https://github.com/acrcloud/acrcloud_sdk_java/blob/master/eclipse_tutorial_image/create_project.png) <br>√æ**2. add jar library, click right-hand on ""commons-codec-1.10.jar"" >> Build Path >> Add to Build Path:** <br>√æ  ![image](https://github.com/acrcloud/acrcloud_sdk_java/blob/master/eclipse_tutorial_image/add_jar.png) <br>√æ  ![image](https://github.com/acrcloud/acrcloud_sdk_java/blob/master/eclipse_tutorial_image/add_jar_1.png) <br>√æ**3.add (dll or so) library:** <br>√æ  ![image](https://github.com/acrcloud/acrcloud_sdk_java/blob/master/eclipse_tutorial_image/add_native.png) <br>"
AICP/packages_apps_DeskClock,43334,0,2,6,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 4, 'bp': 1, 'xml': 2, 'mk': 1}",10979,7,0,49,0,4262,True,1,0,0,0,0,0,0,0,6,0,10,19,4654,1033,0,0,573,0,,,
SpeedataApp/UHF_AS_New,8341,15,2,7,Organization,False,Êñ∞ÁâàR2000Â∫ì‰ΩøÁî®ÔºåËØªÂÜôÁõòÁÇπÊï∞ÊçÆÈÄöËøáÂõûË∞ÉËøîÂõû,,,10,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",47,1,0,4,0,948,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,67,0,,,# UHF_AS_New√æ√æ Ê≠§SDKÂ∑≤ÁªèË¢´ÂºÉÁî®ÔºåËØ∑ÂâçÂæÄÊñ∞ÁöÑÂú∞ÂùÄÔºöhttps://github.com/SpeedataApp/UHF_NEW_UI√æ  √æ√æÂåó‰∫¨ÊÄùÂøÖÊãìÁßëÊäÄËÇ°‰ªΩÊúâÈôêÂÖ¨Âè∏√æ√æÁΩëÂùÄ http://www.speedata.cn/√æ√æÊäÄÊúØÊîØÊåÅ ÁîµËØùÔºö155 4266 8023√æ√æQQÔºö2480737278
javaeryang/wechat,20199,5,0,1,User,False,ÂÖ≥‰∫éÂæÆ‰ø°ÁöÑÂ∞èÊ®°Âùó,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",17,Java,"{'': 4, 'png': 1, 'md': 2, 'jpeg': 2, 'gradle': 2, 'properties': 1, 'bat': 1, 'jpg': 1}",169,1,0,1,0,1031,True,0,3,0,0,0,0,0,0,7,0,0,0,0,0,0,0,113,,28,,"kukukukugua2gmail√æ√æ[Â≠¶‰π†Â∫ìÂàóË°®ËÆ∞ÂΩï](./learn.md)√æ√æ![Build Status](https://github.com/javaeryang/douyin/blob/master/ScreenShot/d1.jpg?raw=true){:height=""100px"" width=""400px""}"
jazz-community/jazz-plugin-maven-archetype,115,1,4,1,Organization,False,Maven archetype to generate a jazz plugin project.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",9,Java,"{'': 2, 'yml': 1, 'md': 2, 'xml': 1, 'ps1': 1, 'sh': 1}",119,5,7,3,0,1187,True,5,12,0,0,0,17,0,0,8,0,0,0,0,0,0,0,41,8,,,"[![Build Status](https://travis-ci.com/SBI-/jazz-plugin-maven-archetype.svg?branch=master)](https://travis-ci.com/SBI-/jazz-plugin-maven-archetype)√æ√æ# Jazz Plugin Maven Archetype <br /> Bootstrapping new Jazz Services was never easier!√æMaven archetype to generate a jazz plugin project. If you want to get your feet wet as quickly as possible, just read [Bootstrapping](#bootstrapping-a-new-jazz-service-using-this-archetype)<br />√æ([What is Archetype?](https://maven.apache.org/guides/introduction/introduction-to-archetypes.html))√æ√æAll of the following sections make assumptions about your working environment. At least git and maven are absolutely necessary to use this archetype. The instructions assume that both executables are on your path and consequently useable with just the program name.√æ√æFurther, you will need to have installed the [Jazz Base Service](https://github.com/jazz-community/jazz-plugin-base-service), which is a dependency for any services created with this archetype. Any maven builds without this dependency available in your local maven repository will fail. Also, you need to have the [jazz sdk p2 repository](https://github.com/jazz-community/jazz-p2-repository-converter) available in your maven repository. It is also suggested that you have the [Jazz Debug Environment](https://github.com/jazz-community/jazz-debug-environment) available for a rapid development and test cycle.√æ√æ## Table of Contents√æ√æ-   [Bootstrapping a new jazz service using this rchetype](#bootstrapping-a-new-jazz-service-using-this-archetype)√æ-   [Usage examples](#usage-examples)√æ-   [Code formatting](#code-formatting)√æ-   [Running tests](#running-tests)√æ-   [Deploying to Jazz](#deploying-to-jazz)√æ    -   [Update existing√æ        installation](#update-existing-installation)√æ    -   [More deployment information](#more-deployment-information)√æ    -   [For jetty](#for-jetty)√æ-   [Incrementing version](#incrementing-version)√æ-   [Dependency versions](#dependency-versions)√æ-   [Detailed archetype usage](#detailed-archetype-usage)√æ-   [File structure explanation (using the simple√æ    example)](#file-structure-explanation-using-the-simple-example)√æ-   [Contributing](#contributing)√æ-   [Licensing](#licensing)√æ√æ## Bootstrapping a new jazz service using this archetype√æUsing paramters when running the automated setup, a new service can be created with proper package declaration, groupId and names already set. Passing the right parameters will allow you to get coding right away. In this example, I will demonstrate how to create a service with the groupId `org.company.example`, a version of `0.0.1` and a service named `GitHubExampleService`.√æ√æ1. Clone this repository: `git clone https://github.com/jazz-community/jazz-plugin-maven-archetype.git`√æ2. Run the setup script, but this time passing values to all parameters (chose your own values, short parameters are available):√æ    * Windows Powershell: `.\setup.ps1 -group org.jazzcommunity.example -version 0.0.1 -serviceName GitHubExampleService`√æ    * Linux: `./setup.sh --group com.jazzcommunity.example --serviceName GitHubExampleService --version 0.0.1`√æ3. As above, this will place a plugin folder structure called `org.jazzcommunity.example.parent` in the target folder.√æ4. Copy this folder to wherever you want to work on your plugin.√æ5. Run `mvn package` to build the plugin files required to run the plugin as a service from this location, or run `mvn install` to make the package available in your maven repository.√æ√æ## Usage examples√æFor detailed code examples, have a look at the open sourced services that use the base service for their implementation.√æ√æ- [Bulk Mover Service](https://github.com/jazz-community/rtc-workitem-bulk-mover-service) √æ- [Secure Property Store](https://github.com/jazz-community/rtc-secure-user-property-store)√æ√æThe plugin archetype creates a REST service for Jazz plugins by default. However, with some slight modifications in the `plugin.xml` file, you can also generate any other extension type for RTC jazz, like **Advisors**, **Participants** or **Value Providers**. For examples of this kind, have a look at the following plugins open sourced by us:√æ√æ- [Set _'Owned By'_ Participant](https://github.com/jazz-community/rtc-set-owned-by-participant)√æ- [Current Iteration Switcher](https://github.com/jazz-community/rtc-current-iteration-automatic-switcher)√æ√æ## Code formatting√æThe plugin archetype includes the [fmt-maven-plugin](https://github.com/coveo/fmt-maven-plugin), which automatically formats code according to the [google formatting section](https://google.github.io/styleguide/javaguide.html#s4-formatting) of the google java style guide when a build occurs. [Intellij IDEA](https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml) and [Eclipse](https://github.com/google/styleguide/blob/gh-pages/eclipse-java-google-style.xml) can be set up to also automatically format code according to the google style guide using the provided stylesheets. To avoid ambiguity while writing code, we suggest setting up your development environment to also conform to the google format. This ensures a uniform look and feel accross our open source java projects.√æ√æ## Running tests√æTo run your unit tests, run `mvn integration-test`. Although the tests are standard junit unit tests, they are run in the integration-test phase because of the tycho-surefire plugin. This makes it possible to use and especially mock many dependencies that would otherwise be unavailable. For a more in-depth look at how you can use this to your advance, look at the tests in the [Base Service project](https://github.com/jazz-community/jazz-plugin-base-service).√æ√æUnless you are looking to use special features, you can write your tests like you would any other regular junit unit tests.√æ√æ## Deploying to Jazz√æWhen deploying to a jazz instance running on an application server, you can deploy the update site created by the maven build like you would any other update site.√æ√æ1. After a successful maven build, there should be a `target` folder within your `update-site` folder. √æ√æ    Example: `org.jazzcommunity.example.parent/update-site/target`√æ√æ    Inside this folder, there will be a zipped update site, eg. `org.jazzcommunity.example.updatesite-1.0.0-SNAPSHOT.zip`√æ√æ2. Extract the `packagename-update-site.ini` **file** from the zip file to the `server/conf/ccm/provision_profiles` directory (where packagename is the package of your service)√æ3. Extract the `packagename-update-site` **folder** to the `server/conf/ccm/sites` directory (where packagename is the package of your service)√æ4. Restart the server√æ5. Once the server has been restarted, your service should be available. You can reach your service under the application it has been deployed with. For example, if you deployed your plugin on ccm, you should find your service on the service description page: `https://server.url/ccm/service`. You can also locate your service directly with it's interface name, such as `https://server.url/ccm/service/org.jazzcommunity.example.IExampleService`. Any urls that have been added to the router append to this service url, so if you want to call the `HelloWorldService`, you would call `https://server.url/ccm/service/org.jazzcommunity.example.IExampleService/helloWorld`.√æ√æ### Update existing installation√æWhenever you rebuild the plugin after changing your implementation, you will have to redeploy.√æ√æ1. Request a server reset in one of the following ways:√æ    * If the server is currently running, call `https://server-address/ccm/admin/cmd/requestReset`√æ    * Navigate to `https://localhost:9443/ccm/admin?internaltools=true` so you can see the internal tools (on the left in the side-pane). Click on `Server Reset` and press the `Request Server Reset` button√æ    * If your server is down, you can delete the ccm `built-on.txt` file. Liberty packed with 6.0.3 puts this file in a subfolder of `server/liberty/servers/clm/workarea/org.eclipse.osgi/**/ccm`. The easiest way to locate the file is using your operating system's search capabilites.√æ2. Delete previously deployed updatesite folder√æ3. Follow the file extraction steps from the section above√æ4. Restart the server√æ√æ### More deployment information√æFor more information about deploying extensions, check out [Ralph Schoon's blog](https://rsjazz.wordpress.com/2014/06/12/is-the-extension-deployed-how-can-i-redeploy/)√æ√æ### For jetty√æWhen using jetty with the [Jazz Development Environment](https://github.com/jazz-community/jazz-debug-environment), the `plugin/` and `plugin/target` folders should be used for run-time dynamic lookup. The files edited here should be located in your `debug-environment/conf/jetty/user_configs` folder.√æ√æ1. Add a property value (or a new file dedicated to just this property) which states which folders your plugin files are in. For the example generated here, it would look like this:√æ    `org.company.example=target/dependency,target/classes`√æ2. Add the location of your **plugin** folder to your list of workspaces. It is essential that you reference the plugin folder containing your plugin.xml here. (Windows folder location used as an example).√æ    `D\:/workspaces/org.company.example.parent/plugin@start`√æ3. Run the `generate_jetty_config` script.√æ4. Run jetty√æ5. After jetty has started, you can verify that your service is running by opening the services page, for example `https://localhost:7443/jazz/service/` and locating your service. You can also call the service directly, for example `https://localhost:7443/jazz/service/org.company.example.IMyService/helloWorld`, which will show a website saying `Hello World!!!`√æ√æ## Incrementing version√æWhen building and distributing a new version of your service, all of the versions in your pom and manifest.mf files have to match in order for the tycho build to be consistent. Always use the `tycho-versions-plugin` to change the version of your plugin, as it will change all files for you automatically without having to change them manually.√æ√æRun the tycho-versions-plugin from the project root (where the root pom.xml is located).√æ√æExamples:√æ- change all version to 1.2.0-SNAPSHOT or 1.2.0.qualifier: `mvn org.eclipse.tycho:tycho-versions-plugin:set-version ""-DnewVersion=1.2.0-SNAPSHOT""`√æ√æThis also makes sure that the correct snapshot and qualifier strings are set in the respective pom and manifest files.√æ√æ**Make sure that you change the dependency on your own project in the test manifest when you adjust the project version. The test project has to depend on it's plugin, but these versions are not adjusted automatically.**√æ√æ## Dependency versions√æIf the versions of your dependencies change, there is no other way than adjusting the pom and manifest.mf files by hand. Make sure that the versions you want to use are consistent across these files, otherwise you will get build errors. Use any text editor to make changes.√æ√æThis is also necessary when you add dependencies. Changes have to be made to the pom as well as the manifest.mf files. You can use the existing entries as a guide of how to define dependencies so that maven resolves and copies them to the right places.√æ√æMake sure that you change the dependency on your own project in the test manifest when you adjust the project version. The test project has to depend on it's plugin, but these versions are not adjusted automatically.√æ√æRemember to keep your test manifest file up to speed with your plugin manifest file. Your tests will likely use the same dependencies as the implementation.√æ√æ## Detailed archetype usage√æUsing the archetype directly without the simple setup wrapper scripts is not recommended and you should only use this if you have a very specific use case. You will have to consider some details without which your resulting project will fail to build.√æ√æ1. Run `mvn install` from anywhere on your system, where you would like to create a new project.√æ2. Run `mvn archetype:generate -DarchetypeCatalog=local` to enter interactive mode showing locally installed archetypes (the previous step installed the archetype into your repository)√æ3. Choose the number corresponding to this archetype.√æ4. Follow the interactive instructions√æ5. When completed successfully, your new project will have been generated inside the target folder.√æ√æWhen using this approach, you will have to manually set all versions (in all poms with versions and manifest.mf files) to match so that consecutive builds will run.√æ√æFor details on the archetype command line, see either the `setup.sh` or the `setup.ps1` files.√æ√æ## File structure explanation (using the simple example)√æFor brevity, this section only covers files and folders that are relevant to understanding the basic structure generated by the archetype (not the file structure of the actual archetype). A finished build will contain more files. Files not mentioned here will generally not need to be touched when working on your plugin.√æ√æ```√æorg.jazzcommunity.example.parent√æ‚îÇ pom.xml                                       Parent pom of the plugin build. This is what you want√æ|                                               to run most of the time to get a complete plugin build√æ‚îÇ√æ‚îú‚îÄ.mvn                                          Maven settings folder√æ‚îÇ  extensions.xml√æ‚îÇ√æ‚îú‚îÄfeature                                       Feature module folder√æ|  |√æ‚îÇ  | feature.xml                                Feature configuration with required plugins, feature√æ|  |                                            description and plugin definition√æ|  |√æ‚îÇ  | pom.xml                                    Sub module pom for creating the plugin feature files√æ|  |√æ‚îÇ  target                                       Generated feature files√æ|√æ‚îú‚îÄplugin                                        Plugin module folder. Contains the source code of your√æ| |                                             plugin and is the most important sub module of the√æ| |                                             plugin project.√æ| |√æ‚îÇ ‚îÇ plugin.xml                                  Plugin definition. File used by the application server√æ| |                                             to load your plugin. Contains the extension point and√æ| |                                             components used by your plugin to attach to the jazz√æ| |                                             application. Must contain the proper names of your service.√æ| |√æ‚îÇ ‚îÇ pom.xml                                     Sub module pom for creating plugin files√æ‚îÇ ‚îÇ√æ‚îÇ ‚îú‚îÄMETA-INF√æ‚îÇ ‚îÇ  MANIFEST.MF                                OSGI configuration of your plugin. Contains required√æ‚îÇ ‚îÇ                                             bundles and imported packages, as well as the bundle√æ‚îÇ ‚îÇ                                             classpath. This needs to mirror the settings in your√æ‚îÇ ‚îÇ                                             pom and contain all dependencies your plugin builds√æ‚îÇ ‚îÇ                                             against.√æ‚îÇ ‚îÇ√æ‚îÇ |‚îÄsrc                                         Actual plugin source code√æ‚îÇ | ‚îî‚îÄmain√æ‚îÇ |   ‚îî‚îÄjava√æ‚îÇ |     ‚îî‚îÄorg√æ‚îÇ |       ‚îî‚îÄjazzcommunity√æ‚îÇ |         ‚îî‚îÄexample√æ‚îÇ |           ‚îÇ ExampleService.java             Main service implementation. This file needs to be√æ| |           |                                 mentioned in the plugin.xml√æ| |           |                                 √æ‚îÇ |           ‚îÇ IExampleService.java            Main service interface. This file needs to be mentioned√æ| |           |                                 in the plugin.xml√æ‚îÇ |           ‚îÇ√æ‚îÇ |           ‚îî‚îÄbuilder                         Builder implementations used for the example√æ‚îÇ |              HelloWorldPostService.java     √æ‚îÇ |              HelloWorldService.java√æ| |√æ| |‚îÄtarget                                      Generated plugin files. If you are using jetty, your√æ| |                                             service description will have to point to this location√æ| |                                             for proper dynamic class loading.√æ| |√æ‚îÇ ‚îî‚îÄdependency                                  Dependency jars. If you are using jetty, you wil also√æ|                                               have to reference this folder.√æ|√æ‚îú‚îÄtest                                          Sub module for unit tests.  √æ| |√æ‚îÇ ‚îÇ pom.xml                                     Pom for unit tests√æ‚îÇ ‚îÇ√æ‚îÇ ‚îú‚îÄMETA-INF√æ‚îÇ ‚îÇ  MANIFEST.MF                                OSGI configuration for your tests. Because they are√æ‚îÇ ‚îÇ                                             run in the integration-test phase, make sure that√æ‚îÇ ‚îÇ                                             your unit tests can resolve the same dependencies as√æ‚îÇ ‚îÇ                                             your plugin.√æ‚îÇ ‚îÇ√æ‚îÇ ‚îî‚îÄsrc√æ‚îÇ   ‚îî‚îÄtest√æ‚îÇ     ‚îî‚îÄjava√æ‚îÇ       ‚îî‚îÄorg√æ‚îÇ         ‚îî‚îÄjazzcommunity√æ‚îÇ           ‚îî‚îÄexample√æ‚îÇ              ExampleServiceTest.java          Example test. Use this as a starting point to write√æ‚îÇ                                               your own tests.√æ‚îÇ√æ‚îî‚îÄupdate-site                                   Update site sub module. This aggregates all build√æ  |                                             results of the entire project and creates deployable√æ  |                                             zip files for production use with √æ  |                                             tomcat / liberty / websphere. If you use automatic√æ  |                                             deployment, this should be the source of your packages.√æ  |                                             √æ  ‚îÇ pom.xml                                     Sub module pom for build aggregates.√æ  |                                             √æ  ‚îú‚îÄtarget                                      Aggregated build results, contains the deployable plugin.√æ  |                                             √æ  ‚îî‚îÄtemplates                                   Template xml files that are filtered during the build.√æ    |                                           These files are neccessary for generating the proper zip √æ    |                                           file structure for deploying the plugin on an application√æ    |                                           server.√æ    |                                           √æ    ‚îÇ site.xml                                  Site descriptor for the loaded feature√æ    |                                           √æ    ‚îÇ update-site.ini                           Update site description with file location and name√æ    |                                           of the feature to be loaded√æ    |                                           √æ    ‚îî zip.xml                                   File structure for resulting plugin update site√æ```√æ## Contributing√æPlease use the [Issue Tracker](https://github.com/jazz-community/jazz-plugin-maven-archetype/issues) of this repository to report issues or suggest enhancements.√æ√æFor general contribution guidelines, please refer to [CONTRIBUTING.md](https://github.com/jazz-community/jazz-plugin-maven-archetype/blob/master/CONTRIBUTING.md)√æ√æ## Licensing√æCopyright (c) Siemens AG. All rights reserved.<br>√æLicensed under the [MIT](https://github.com/jazz-community/jazz-plugin-maven-archetype/blob/master/LICENSE) License."
ihmcrobotics/ihmc-realtime,29796,9,3,2,Organization,False,"IHMCRealtime provides a JNI-backed threading library for attaching real-time POSIX threads to a running JVM process, allowing for deterministic computation of tasks. A JNI-backed CPU Affinity library and pure Java data structures for lockless inter-thread communication",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",14,Java,"{'': 2, 'txt': 2, 'md': 2, 'kts': 2, 'sh': 1, 'properties': 1}",226,5,8,9,0,2489,True,0,1,0,0,1,4,1,2,9,0,2,4,60,63,0,0,92,6,,,"# IHMC Realtime√æ√æIHMCRealtime is a simple support library that provides four feature sets:√æ√æ1. A JNI-backed threading library for attaching real-time POSIX threads to a running JVM process, allowing for√ædeterministic computation of tasks√æ2. A JNI-backed CPU Affinity library√æ3. Pure Java data structures for lockless inter-thread communication√æ4. Simple utility to retrieve Linux processes from /proc and set their scheduler and priority√æ5. Setting CPU DMA Latency√æ√æPre-compiled shared objects for the native portion are provided for Ubuntu 14.04+ and Mac OS X 10.8+.  The libraries√æcan be easily rebuilt using the instructions included below.√æ√æ### Documentation√æJavadoc of the code can be found at [http://ihmcrobotics.bitbucket.org/ihmcrealtime/](http://ihmcrobotics.bitbucket.org/ihmcrealtime/). In the coming weeks, we will be working on improving the documentation.√æ√æ√æ### What is ""real-time""?√æFrequently today, ""real-time"" is meant to refer to UI design that is extremely responsive in regards to changes in√æthe underlying data model, especially in systems with latency such as web UI's bound to data models living on a server.  In this situation, however, we are using real-time in the [well-defined](http://en.wikipedia.org/wiki/Real-time_computing) manner, meaning computation that has a time deadline√æand as such cannot afford to be interrupted by many things that would normally be allowed to take precedence over a thread of execution, such as the operating system or GUI.  As such, this library is meant to be used on platforms that feature fully preemptible kernels.√æ√æ### Caveats√æReal-time computation in a multi-threaded environment is not a small problem.  This library aims to provide the bare essentials in terms of real-time computation, and so pushes some of the challenge on to the developer instead of solving it in code.  Specifically, IHMCRealtime *does not account for*:√æ√æ1. Garbage Collection√æ2. [Priority inversion](http://en.wikipedia.org/wiki/Priority_inversion)√æ√æWe work around these two restrictions by writing low-to-zero object allocation code in our real-time processes, and by using lockless concurrent data structures.  Code paths that will run inside of a thread spawned using the IHMCRealtime library cannot use `synchronize`, `wait()/notify()`, or other such lock-based thread safety techniques.  Because of this, we have made available the pure Java data structures that we use to avoid having to rely on these constructs.√æ√æ## Pure Java Component√æ√æ### Binary√æIHMC Realtime can be downloaded from BinTray using Maven or gradle. Add the following to your gradle build script√æ√æ```√ærepositories {√æ jcenter()√æ maven {√æ       url  ""https://dl.bintray.com/ihmcrobotics/maven-release""√æ }√æ}√ædependencies {√æ       compile group: 'us.ihmc', name: 'IHMCRealtime', version: '1.2.1'√æ}√æ```√æ√æ### Building and dependency management√æIHMCRealtime uses the gradle build system. To build, simply run√æ√æ```√ægradle jar√æ```√æ√æ## Native Component√æ√æ### System Requirements√æThe Java portion of IHMCRealtime was developed and tested under Java 7.√æ√æIHMCRealtime is designed to be run on a Linux kernel backed OS with the RT_PREEMPT patch applied. Instructions for√æsetting up such a system can be found [here](https://rt.wiki.kernel.org/index.php/RT_PREEMPT_HOWTO).  IHMCRealtime has√æbeen built and tested on Ubuntu 12.04, 12.10, 13.04, 13.10, and 14.04.√æ√æIHMCRealtime provides limited support for OS X via the Mach threading API; the JNI library will build and link under√æOS X, but the deadlines will not be enforced nearly as hard as they are on Linux-based installations with pure pthreads.√æ√æ### Re-building the JNI portion√æ√æ#### Dependencies√æ√æOn Ubuntu, you will need a minimum of the `cmake`, `build-essential`, and `libcap-dev` installed from your package manager.  You will also need a JDK installation for the JNI headers.  IHMCRealtime was developed against OpenJDK 7√æfrom the Ubuntu package repositories.√æ√æ    $ sudo apt-get update && sudo apt-get install cmake build-essential libcap-dev openjdk-7-jdk√æ√æ#### Invoking CMake√æ√æYou can build the libraries with the following commands:√æ√æ    $ cd IHMCRealtime√æ    $ mkdir build√æ    $ cd build√æ    $ cmake ..√æ    $ make install√æ√æThe .so or .dylib files will be placed in the `lib` folder.√æ√æ## License√æ     Copyright 2014 Florida Institute for Human and Machine Cognition (IHMC)√æ√æ     Licensed under the Apache License, Version 2.0 (the ""License"");√æ     you may not use this file except in compliance with the License.√æ     You may obtain a copy of the License at√æ√æ      http://www.apache.org/licenses/LICENSE-2.0√æ√æ     Unless required by applicable law or agreed to in writing, software√æ     distributed under the License is distributed on an ""AS IS"" BASIS,√æ     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ     See the License for the specific language governing permissions and√æ     limitations under the License.√æ√æ     Written by Jesper Smith, Doug Stephen, and Alex Lesman with assistance from IHMC team members"
vijaysharm/resume-android,30378,2,1,3,User,False,An app that showcases animation on android and my resume,,,14,Java,"{'': 2, 'yml': 1, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1, 'png': 2, 'sketch': 1}",77,1,0,1,0,1943,True,0,1,0,0,1,0,0,0,7,0,0,0,0,0,0,0,33,,9,,"Resume√æ======√æAn app that showcases animation on android and my resume√æ√æSketch Prototype√æ================√æI wanted to take a design first approach to this project, so I started with a sketch of the app.√æ![](images/sketch.png)√æ√æThen I applied myself to implement it as faithful as I could√æ![](images/resume_1.png)√æ![](images/resume_2.png)√æ![](images/resume_3.png)√æ√æAnd I wanted to play around with animations.√æ![](images/resume.gif)√æ√æIn Progress√æ===========√æ√æ√æTODO√æ====√æ1. Finish Skills section√æ  1. Add more data√æ1. Splash Screen√æ1. Add references avatar√æ1. Github Blog?√æ1. Add a ""settings"" section to profile which shows√æ 1. Version√æ 1. Open source libraries/licenses√æ 1. About?"
veeraya/youtube-to-mp3-chatbot,1237,3,3,3,User,False,"This LINE and Telegram Chat bot accepts a YouTube link, converts the video to to MP3, upload the converted MP3 to Amazon S3 and sends back the download link.",,,6,Java,"{'': 1, 'yml': 1, 'md': 1, 'xml': 1}",47,1,0,1,0,961,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,20,,10,,"YouTube to MP3 Chat Bot√æ========================√æ√æ[![Build Status](https://travis-ci.org/veeraya/youtube-to-mp3-chatbot.svg?branch=master)](https://travis-ci.org/veeraya/youtube-to-mp3-chatbot)√æ√æThis LINE and Telegram Chat bot accepts a YouTube link, converts the video to to MP3, upload the converted MP3 to Amazon S3 and sends back the download link.√æ√æThe project is developed using Java and Spring Boot. [youtube-dl](https://github.com/rg3/youtube-dl) is used for video download and conversion.√æ√æCurrently support these platforms:√æ√æ- LINE√æ- Telegram√æ√æScreenshot√æ-----------√æ√æ|            LINE            |              Telegram              |√æ|:--------------------------:|:----------------------------------:|√æ| ![LINE](docs/img/LINE.gif) | ![Telegram](docs/img/telegram.gif) |√æ√æ√æTry It Out IRL√æ--------------√æ√æ### Telegram√æ√æ[https://t.me/YouTube_MP3_Converter_Bot](https://t.me/YouTube_MP3_Converter_Bot)√æ√æ### LINE√æ√æAdd by QR code√æ√æ![LINE](docs/img/LINE_QR.png)√æ√æGetting started√æ----------------√æ√æ### One-off Setup√æ√æ1. Sign up for LINE bot account√æ1. Create Telegram Bot using BotFather√æ1. Create S3 bucket to be used to MP3 file upload√æ√æ### Running Locally√æ√æ1. Complete steps in One-off Setup√æ1. Install [youtube-dl](https://github.com/rg3/youtube-dl) and [ffmpeg](https://www.ffmpeg.org/download.html) binary on your machine.√æ1. Clone or fork this repo√æ1. Import as Maven project√æ1. Edit S3, LINE and Telegram config in ```application.yaml```√æ√æ### Running on Heroku√æ√æ1. Complete steps in One-off Setup√æ√æ1. Clone or fork this repo√æ√æ1. Deploy on Heroku with this [buildpack](https://github.com/veeraya/heroku-buildpack-ffmpeg-latest.git) containing ffmpeg and youtube-dl binaries.√æ√æ    ```√æ    heroku create√æ    heroku buildpacks:add https://github.com/veeraya/heroku-buildpack-ffmpeg-latest.git√æ    git push heroku master√æ    ```√æ√æ1. Set up the following config variables on Heroku.√æ    - AWS_ACCESS_KEY_ID√æ    - AWS_SECRET_ACCESS_KEY√æ    - LINE_BOT_CHANNEL_SECRET√æ    - LINE_BOT_CHANNEL_TOKEN√æ    - TELEGRAM_BOTTOKEN√æ    - TELEGRAM_BOTUSERNAME"
ajoberstar/gradle-git-publish,1315,62,5,13,User,False,Gradle plugin for publishing to Git repositories,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'enc': 1, 'bat': 1}",141,3,50,5,5,1325,True,12,40,3,2,0,33,0,1,8,3,2,9,146,79,0,0,45,,56,,"# gradle-git-publish√æ√æ[![Download](https://api.bintray.com/packages/ajoberstar/maven/gradle-git-publish/images/download.svg)](https://bintray.com/ajoberstar/maven/gradle-git-publish/_latestVersion)√æ![](https://github.com/ajoberstar/gradle-git-publish/workflows/.github/workflows/build.yaml/badge.svg)√æ√æ## Why do you care?√æ√æGit is immensely popular and being able to publish to it as part of a build process can be very valuable, for example to publish a blog or project documentation to GitHub Pages.√æ√æ## What is it?√æ√æ`gradle-git-publish` is a [Gradle](http://gradle.org) plugin, `org.ajoberstar.git-publish`, which publishes files to a√æremote Git repository's branch.√æ√æSee [Grgit](https://github.com/ajoberstar/grgit) for details on the Git library used underneath, including√æconfiguration for authentication.√æ√æ## Usage√æ√æSee the [Release Notes](https://github.com/ajoberstar/gradle-git-publish/releases) for updates on√æchanges and compatibility with Java and Gradle versions.√æ√æ### Applying the Plugin√æ√æ**Plugins DSL**√æ√æ```groovy√æplugins {√æ    id 'org.ajoberstar.git-publish' version '<version>'√æ}√æ```√æ√æ**Classic**√æ√æ```groovy√æbuildscript {√æ    repositories {√æ        jcenter()√æ    }√æ    dependencies {√æ        classpath 'org.ajoberstar:gradle-git-publish:<version>'√æ    }√æ}√æ√æapply plugin: 'org.ajoberstar.git-publish'√æ```√æ√æ### Configuration√æ√æ**NOTE:** In general, there are no default values here. The main exception is that the `repoUri` and `referenceRepoUri` will be automatically set if you use the `org.ajoberstar.grgit` plugin to your project's origin repo URI.√æ√æ```groovy√ægitPublish {√æ    // where to publish to (repo must exist)√æ    repoUri = 'git@github.com:ajoberstar/test-repo.git'√æ    // (or 'https://github.com/ajoberstar/test-repo.git', depending on authentication)√æ√æ    // where to fetch from prior to fetching from the remote (i.e. a local repo to save time)√æ    referenceRepoUri = 'file:///home/human/projects/test-repo/'√æ√æ    // branch will be created if it doesn't exist√æ    branch = 'gh-pages'√æ√æ    // generally, you don't need to touch this√æ    repoDir = file(""$buildDir/somewhereelse"") // defaults to $buildDir/gitPublish√æ√æ    // what to publish, this is a standard CopySpec√æ    contents {√æ        from 'src/pages'√æ        from(javadoc) {√æ            into 'api'√æ        }√æ    }√æ√æ    // what to keep in the existing branch (include=keep)√æ    preserve {√æ        include '1.0.0/**'√æ        exclude '1.0.0/temp.txt'√æ    }√æ√æ    // message used when committing changes√æ    commitMessage = 'Publishing a new page' // defaults to 'Generated by gradle-git-publish'√æ}√æ```√æ√æ### Tasks and Execution√æ√æGenerally, you'll just run `gitPublishPush`, but there is a series of four tasks that happen in order.√æ√æ- `gitPublishReset` - Clones/updates the working repo to the latest commit on the `repoUri` `branch` head. All files not included by the `preserve` filters will be deleted and staged.√æ- `gitPublishCopy` - Copies any files defined in the `contents` CopySpec into the working repo.√æ- `gitPublishCommit` - Commits all changes to the working repo.√æ- `gitPublishPush` - If changes were committed, pushed them to the `repoUri`.√æ√æ### Avoiding Extra Copy√æ√æIf you are generating a large site, you may want to directly generate it into the working repo to save an extra copy step. You can do this with task dependencies and referring to the `repoDir`.√æ√æ```groovy√æjbakeTask {√æ    outputDir gitPublish.repoDir√æ    dependsOn gitPublishReset√æ}√æ√ægitPublishCommit.dependsOn jbakeTask√æ```√æ√æ## Migrating from org.ajoberstar.github-pages√æ√æThe following table should help translate settings you used in `org.ajoberstar.github-pages` to this plugin's format. Additionally reference the Configuration section above for more information on the current feature set.√æ√æ| org.ajoberstar.github-pages | org.ajoberstar.git-publish  | Comment                                                                                              |√æ| --------------------------- | --------------------------- | ---------------------------------------------------------------------------------------------------- |√æ| `repoUri`                   | `repoUri`                   | Used to allow any Object (which would be lazily unpacked to a String). Now requires a String.        |√æ| `targetBranch`              | `branch`                    | The old plugin defaulted to `gh-pages`, the new one has no default. This must be a String.           |√æ| `workingPath`               | `repoDir`                   | Used to allow any Object and called `file()` on it for you. Now expects a File.                      |√æ| `pages`                     | `contents`                  | Just a name change.                                                                                  |√æ| `deleteExistingFiles`       | `preserve`                  | If previously `true` (the default), do nothing. If previously `false`, `preserve { include '**/*' }` |√æ| `commitMessage`             | `commitMessage`             | Just copy from the old value.                                                                        |√æ| `credentials`               | env variable or system prop | `GRGIT_USER` environment variable or `org.ajoberstar.grgit.auth.username` system property.           |√æ√æUse the `gitPublishPush` task as replacement for the `publishGhPages` task.√æ√æ## Questions, Bugs, and Features√æ√æPlease use the repo's [issues](https://github.com/ajoberstar/gradle-git-publish/issues)√æfor all questions, bug reports, and feature requests.√æ√æ## Contributing√æ√æContributions are very welcome and are accepted through pull requests.√æ√æSmaller changes can come directly as a PR, but larger or more complex√æones should be discussed in an issue first to flesh out the approach.√æ√æIf you're interested in implementing a feature on the√æ[issues backlog](https://github.com/ajoberstar/gradle-git-publish/issues), add a comment√æto make sure it's not already in progress and for any needed discussion.√æ√æ## Acknowledgements√æ√æThanks to all of the [contributors](https://github.com/ajoberstar/gradle-git-publish/graphs/contributors).√æ√æI also want to acknowledge [Peter Ledbrook](https://github.com/pledbrook) for the initial√æidea and code for the plugin."
kongzue/EnjoyLife,572,38,2,9,User,False,üòäÂºÄÊ∫êAppÈ°πÁõÆÔºåÊØèÂ§©‰∏ÄÂº†Á≤æÈÄâÂÄ©Âõæ„ÄÅ‰∏Ä‰∏™Á≤æÈÄâÂ∞èËßÜÈ¢ëÔºå‰∏ÄÁØáÁü•‰πéÁæéÊñá,,,10,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",9,1,0,1,8,772,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,61,,216,,"# ‰∏ÄÊó•ËØª√æÊØèÂ§©‰∏ÄÂº†Á≤æÈÄâÂÄ©Âõæ„ÄÅ‰∏Ä‰∏™Á≤æÈÄâÂ∞èËßÜÈ¢ëÔºå‰∏ÄÁØáÁü•‰πéÁæéÊñá„ÄÇÂõæÁâáÊï∞ÊçÆÂÜÖÂÆπÊù•Ê∫ê‰∫éÂõæËô´ÊëÑÂΩ±ÁΩëÔºåËßÜÈ¢ëÊï∞ÊçÆÊù•Ê∫ê‰∫éÂºÄÁúºËßÜÈ¢ë√æ√æ<a href=""https://github.com/kongzue/EnjoyLife/"">√æ<img src=""https://img.shields.io/badge/EnjoyLife-1.1.0-green.svg"" alt=""EnjoyLife"">√æ</a>√æ<a href=""https://github.com/kongzue/EnjoyLife/"">√æ<img src=""https://img.shields.io/badge/Release-1.1.0-blue.svg"" alt=""EnjoyLife"">√æ</a>√æ<a href=""http://www.apache.org/licenses/LICENSE-2.0"">√æ<img src=""https://img.shields.io/badge/License-Apache%202.0-red.svg"" alt=""Maven"">√æ</a>√æ<a href=""http://www.kongzue.com"">√æ<img src=""https://img.shields.io/badge/Homepage-Kongzue.com-brightgreen.svg"" alt=""Maven"">√æ</a>√æ√æKongzue's Dialog„ÄÅBaseFramework„ÄÅBaseOkHttpÊ°ÜÊû∂ÁöÑÊúÄ‰Ω≥ÂÆûË∑µDemo√æ√æ![EnjoyLife](https://github.com/kongzue/Res/raw/master/app/src/main/res/mipmap-xxxhdpi/img_photo_onedayread_s.png)√æ√æ### ‰ΩìÈ™åÁâà‰∏ãËΩΩ√æËØïÁî®ÁâàÂèØ‰ª•ÂâçÂæÄ http://kongzue.com/open_source/EnjoyLife.apk ‰∏ãËΩΩ√æ√æ![Download](https://github.com/kongzue/Res/raw/master/app/src/main/res/mipmap-xxxhdpi/qrcode_download_enjoylife.png)√æ√æ### Â£∞Êòé√æ„Äå‰∏ÄÊó•ËØª„Äç‰ªÖ‰ΩúÂ≠¶‰π†‰∫§ÊµÅ‰πãÁî®ÔºåÊï∞ÊçÆÊù•Ê∫ê‰∫éÂõæËô´ÊëÑÂΩ±„ÄÅÂºÄÁúºËßÜÈ¢ë‰ª•ÂèäÁü•‰πéÊó•Êä•ÔºåÊï∞ÊçÆÊé•Âè£ÂùáÂ±û‰∫éÈùûÊ≠£Â∏∏Ê∏†ÈÅìËé∑ÂèñÔºåËØ∑ÂãøÁî®‰∫éÂïÜ‰∏öÁî®ÈÄîÔºåÂéü‰ΩúÂÖ¨Âè∏Êã•ÊúâÊâÄÊúâÊùÉÂà©,Â¶ÇËã•Ê∂âÂèä‰æµÊùÉÔºåËØ∑ËÅîÁ≥ªÂà†Èô§„ÄÇ√æ√æÊú¨È°πÁõÆÁî± @Kongzue ÂÆåÊàêÂºÄÂèëÔºåÁÅµÊÑüÊù•Ê∫ê‰∫é @Xiaohaibin ÁöÑÂéü‰ΩúÂºÄÊ∫êÈ°πÁõÆ‚Äú‰πê‰∫´‚ÄùÔºöhttps://github.com/xiaohaibin/EnjoyLife√æ√æ### ÂºÄÊ∫êÂçèËÆÆ√æ```√æ    Copyright (C) 2016 Kongzue.EnjoyLife√æ√æ    Licensed under the Apache License, Version 2.0 (the ""License"");√æ    you may not use this file except in compliance with the License.√æ    You may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æ    Unless required by applicable law or agreed to in writing, software√æ    distributed under the License is distributed on an ""AS IS"" BASIS,√æ    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ    See the License for the specific language governing permissions and√æ    limitations under the License.√æ```"
santa-dev/santa-sim,250489,9,9,11,Organization,False,A forward-time simulator for gene sequences modeling a variety of mutation and selection processes.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 3, 'txt': 2, 'md': 1, 'xml': 2, 'yml': 1}",274,2,1,9,0,4925,True,0,22,0,0,0,9,0,1,12,0,0,0,0,0,0,0,1,1,,,"# santa-sim√æ√æSANTA is JAVA software application that simulates the evolution of a population of gene sequences√æforwards through time. It models the underlying biological processes√æas discrete components; replication (including recombination),√æmutation (including indels), fitness and selection. SANTA is easy to use and is well-suited to simulate pathogen evolution according to different scenarios. √æ√æA pre-built cross-platform executable jar file (`santa.jar`) for SANTA-SIM v1.0 is available at the [Releases page](https://github.com/santa-dev/santa-sim/releases).√æ√æ√æTo download and build the project from source code, please execute the following command:√æ```√ægit clone https://github.com/santa-dev/santa-sim√æant√æ```√æ√æDetailed information on how to use SANTA is available at the [wiki](https://github.com/santa-dev/santa-sim/wiki) page.  Several example simulation configuration files (.xml) are inside the _examples_ directory. "
ESSICS/XAOS,53039,1,6,5,Organization,False,"Open XAL is an open source development environment used for creating accelerator physics applications, scripts and services. ",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",21,Java,"{'': 3, 'yml': 2, 'md': 1, 'txt': 1, 'xml': 3}",441,3,10,2,0,1179,True,1,0,0,0,0,5,0,0,7,0,0,0,0,0,1,0,19,0,,,"# ![logo](https://github.com/ESSICS/XAOS/blob/master/doc/logo-small.png) XAOS (ŒßŒëŒüŒ£ ‚Äì the primordial state of existence)√æ√æ<!-- [![Sonatype Nexus (Snapshots)](https://img.shields.io/nexus/s/https/oss.sonatype.org/se.europeanspallationsource/xaos.svg)](https://oss.sonatype.org/content/repositories/snapshots/se/europeanspallationsource/xaos/) -->√æ[![Maven Central](https://img.shields.io/maven-central/v/se.europeanspallationsource/xaos.svg)](https://repo1.maven.org/maven2/se/europeanspallationsource/xaos)√æ[![Apache License](https://img.shields.io/badge/license-Apache%20License%202.0-yellow.svg)](http://www.apache.org/licenses/LICENSE-2.0)√æ√æA JavaFX application framework made initially to create accelerator physics√æapplications based on [Open XAL](https://github.com/openxal/openxal), an open√æsource development environment used for creating accelerator physics√æapplications, scripts and services.√æ√æ√æ## Modules√æ√æXAOS is written using the Java Platform Module System (JPMS) available since√æJava 9. The Maven project is also organized in modules maintaining a 1-to-1√æmapping with the JPMS ones. A Maven module's name is made up by the JPMS module√æone plus the `.module` suffix.√æ√æ### [xaos.app](https://github.com/ESSICS/XAOS/tree/master/xaos.app.module)√æ√æThe _XAOS App_ module (`xaos.tools`) provides a JavaFX-based application√æframework for building UI-based applications with menus, toolbars, etc.√æ√æ### [xaos.core](https://github.com/ESSICS/XAOS/tree/master/xaos.core.module)√æ√æThe _XAOS Core_ module (`xaos.core`) provides the non-UI classes part of the√æframework. Any non-graphical application can use this module.√æ√æ### [xaos.tools](https://github.com/ESSICS/XAOS/tree/master/xaos.tools.module)√æ√æThe _XAOS Tools_ module (`xaos.tool`) provides tools and utilities used by the√æother XAOS modules (e.g. annotation processors) to simplify some programming√ætasks.√æ√æ### [xaos.ui](https://github.com/ESSICS/XAOS/tree/master/xaos.ui.module)√æ√æThe _XAOS UI_ module (`xaos.ui`) provides JavaFX-based controls and tools√æsuitable for other projects too.√æ√æ### [xaos.ui.gauge](https://github.com/ESSICS/XAOS/tree/master/xaos.ui.gauge.module)√æ√æThe _XAOS Gauge_ module (`xaos.ui.gauge`) provides the JavaFX-based kit of√æcontrols and tools for creating gauges.√æ√æ### [xaos.ui.plot](https://github.com/ESSICS/XAOS/tree/master/xaos.ui.plot.module)√æ√æThe _XAOS Plot_ module (`xaos.ui.plot`) provides the JavaFX-based controls and√ætools for plotting data into a graph.√æ√æ### Test Modules√æ√æFrom the introduction of JPMS in Java 9, some tests cannot anymore performed√æfrom inside the module to be tested. for this reasons there are some specific√æJPMS/Maven modules built to test others:√æ√æ* [xaos.tests.tools](https://github.com/ESSICS/XAOS/tree/master/xaos.tests.tools.module).√æ√æ## Using XAOS√æ√æ√æ### Maven√æ√æEach XAOS module needed to build your application require a dependency in the√æapplication's `pom.xml` file like the following one:√æ√æ```xml√æ<dependency>√æ  <groupId>se.europeanspallationsource</groupId>√æ  <artifactId>xaos.module</artifactId>√æ  <version>0.4.3</version>√æ  <scope>compile</scope>√æ</dependency>√æ```√æ√æwhere _module_ is the name of the XAOS module needed. Look at the `README.md`√æfile of the module you need for more examples and information.√æ√æHere the Maven dependencies of `xaos` project:√æ√æ![xaos dependencis](https://github.com/ESSICS/XAOS/blob/master/doc/maven-dependencies.png)√æ√æ√æ### Java `module-info`√æ√æInside your application's `module-info.java` file the following dependency must√æbe added:√æ√æ```java√æmodule your.application {√æ  ...√æ  requires xaos.module;√æ  ...√æ}√æ```√æ√æwhere _module_ is the name of the XAOS module needed. Look at the `README.md`√æfile of the module you need for more examples and information.√æ√æ√æ### System Properties√æ√æXAOS defines the following system properties that can be set before launching√æan application build on XAOS (using `java -D<name>=<value> ...` ):√æ√æProperty | Type | Default | Description√æ-------- | ---- | ------- | -----------√æxaos.test.verbose | boolean | `false` | Some tests will be more verbose if set to `true`.√æ√æ### Running [TextFX](https://github.com/TestFX/TestFX) Tests√æ√æWhen XAOS is built JUnit tests and UI ones (based on [TextFX](https://github.com/TestFX/TestFX))√æare automatically performed.√æ√æOn macOS since version 10.14 Mojave it is necessary to explicitly allow the IDE√æor the Terminal application performing the build to control the computer. This√æcan be done in the Privacy tab of the Security & Privacy system preferences, by√æselecting the Accessibility category, the adding and enabling the applications.√æ√æ√æ## Contributing XAOS√æ√æ√æThe XAOS project on GitHub is using [Gitflow](https://blog.axosoft.com/gitflow/),√ædevelopment model introduced by [Vincent Driessen](http://nvie.com/posts/a-successful-git-branching-model/),√æhere summarized:√æ√æ![Gitflow](http://nvie.com/img/git-model@2x.png)√æ√æWho wants to contribute this projects must adopt the Gitflow model and√æ[tools](https://github.com/nvie/gitflow)."
prashant-ramcharan/courgette-jvm,1575,67,17,16,User,False,Multi-threaded | Parallel Cucumber-JVM | Parallelize your Java Cucumber tests on a feature level or on a scenario level.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",12,Java,"{'': 4, 'yml': 1, 'md': 2, 'gradle': 1, 'bat': 1}",214,1,0,2,8,1148,True,0,146,0,31,0,48,0,14,17,12,1,4,11,5,0,0,6,,22,,"[![Build Status](https://travis-ci.org/prashant-ramcharan/courgette-jvm.svg?branch=master)](https://travis-ci.org/prashant-ramcharan/courgette-jvm)√æ[ ![Download](https://api.bintray.com/packages/prashantr/Courgette-JVM/courgette-jvm/images/download.svg) ](https://bintray.com/prashantr/Courgette-JVM/courgette-jvm/_latestVersion)√æ[![Maven Central](https://img.shields.io/maven-central/v/io.github.prashant-ramcharan/courgette-jvm.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:%22io.github.prashant-ramcharan%22%20AND%20a:%22courgette-jvm%22)√æ[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)√æ√æ# Courgette-JVM #√æ√æCourgette-JVM is an extension of Cucumber-JVM with added capabilities to **run cucumber tests in parallel on a feature level or on a scenario level**. It also provides an option to **automatically re-run failed scenarios**.√æ√æ## Key Features√æ- **All features** can be executed in parallel on independent threads.√æ- **All scenarios** can be executed in parallel on independent threads.√æ- **Automatic re-run** of failed scenarios.√æ- **Requires only 1 annotated class** to run all feature files in parallel.√æ- **Single report generation** for all executed features including embedded files (Json and Html reports)√æ- **Single re-run file** listing all failed scenarios that occured during parallel execution.√æ- Supports **Cucumber-JVM 5**√æ- Supports **JUnit** and **TestNG**√æ- Integrates with **Extent Reports** to create interactive reports.√æ- Integrates with **Report Portal** to support AI powered dashboards.√æ- Can be used with **Gradle** and **Maven**.√æ- Searchable and paginated **Courgette-JVM Html Report** which includes all step definitions, embedded screenshots, thrown exceptions, pie chart and Courgette run information.√æ![CourgetteJVM_Report.png](images/CourgetteJVM_Report.png)√æ√æ## Requirements√æ- Java 8√æ- Java 9 and 10 (_supported from version 2.3.1_)√æ- Java 11 (_supported from version 3.0.0_)√æ√æ## Installation√æ√æ#### Repository: [jcenter](https://bintray.com/bintray/jcenter?filterByPkgName=courgette-jvm)√æ√æ<a href='https://bintray.com/prashantr/Courgette-JVM/courgette-jvm?source=watch' alt='Get automatic notifications about new ""courgette-jvm"" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_color.png'></a>√æ√æ#### Maven√æ````xml√æ<repositories>√æ    <repository>√æ      <id>jcenter</id>√æ      <url>https://jcenter.bintray.com/</url>√æ    </repository>√æ</repositories>√æ√æ<dependency>√æ  <groupId>io.github.prashant-ramcharan</groupId>√æ  <artifactId>courgette-jvm</artifactId>√æ  <version>4.6.2</version>√æ</dependency>√æ````√æ√æ#### Gradle√æ````gradle√ærepositories {√æ    jcenter()√æ}√æ√æcompile 'io.github.prashant-ramcharan:courgette-jvm:4.6.2'√æ````√æ√æ#### Included Dependencies√æ* cucumber-core 5.6.0√æ* cucumber-java 5.6.0√æ* cucumber-java8 5.6.0√æ* cucumber-junit 5.6.0√æ* cucumber-testng 5.6.0√æ* extent-reports 4.1.4√æ* jackson-databind 2.8.8√æ* httpcomponents-httpclient 4.5.10√æ* httpcomponents-httpmime 4.5.10√æ√æ√æ## Usage√æ√æExample projects:√æ√æ* [Courgette-JVM Example](https://github.com/prashant-ramcharan/courgette-jvm-example)√æ* [Courgette-JVM with Selenium Example (_multiple browsers_)](https://github.com/prashant-ramcharan/courgette-jvm-selenium)√æ√æCourgette-JVM supports JUnit and TestNG to run cucumber features and scenarios in parallel. A JUnit runner class must be annotated with **@RunWith(Courgette.class)** and a TestNG runner class must extend **TestNGCourgette**.√æ√æ* **threads** : The number of concurrent threads to run cucumber features. √æ√æ    * _Example: If you have 10 cucumber features and you use 6 threads, 6 features would first run in parallel then the following 4 features would run in parallel_.√æ√æ* **runLevel** : Options are CourgetteRunLevel.FEATURE or CourgetteRunLevel.SCENARIO√æ√æ    * _If set to feature level, all features would run in parallel. If set to scenario level, all scenarios would be run in parallel._√æ    √æ* **rerunFailedScenarios** : If set to true, any failed scenario will be immediately re-run in the same thread. If the re-run succeeds, the initial failure will be ignored and not cause the build to fail.√æ√æ* **rerunAttempts** : The number of re-run attempts for a failed scenario. (_rerunFailedScenarios must be set to true_)√æ√æ* **showTestOutput** : If set to true, the output for each feature will be redirected to the current I/O source or destination.√æ√æ* **reportTargetDir** : Target directory where courgette-report is generated. Set to target by default.√æ√æ* **plugin** : Courgette supported plugins√æ    √æ    * _reportportal: Allows the test results to be published to [Report Portal](https://reportportal.io/) at the end of the test run._√æ    * _extentreports: Creates an interactive report based on the [Extent Framework](http://extentreports.com/)_√æ    √æ* **cucumberOptions** : The standard cucumber options for specifying feature paths, glue, tags etc..√æ√æ### Additional√æ√æ* At the end of the test run, a **single report** ( _if included in the cucumberOptions_ ) listing all executed features and scenarios will be created in the specified report path. All embedded images will be placed in the images folder in the specified report path.√æ√æ* A **courgette-rerun.txt** file listing all failed scenarios will be created in the specified rerun plugin path or the target folder ( _default_ )√æ√æ* A Courgette-JVM Html report will be created in the reportTargetDir (_defaulted to the target directory_).√æ√æ##### JUnit Runner√æ√æ````java√æ@RunWith(Courgette.class)√æ@CourgetteOptions(√æ        threads = 10,√æ        runLevel = CourgetteRunLevel.SCENARIO,√æ        rerunFailedScenarios = true,√æ        rerunAttempts = 1,√æ        showTestOutput = true,√æ        reportTitle = ""Courgette-JVM Example"",√æ        reportTargetDir = ""build"",√æ        cucumberOptions = @CucumberOptions(√æ                features = ""src/test/resources/features"",√æ                glue = ""steps"",√æ                tags = {""@regression"", ""not @wip""},√æ                plugin = {√æ                        ""pretty"",√æ                        ""json:build/cucumber-report/cucumber.json"",√æ                        ""html:build/cucumber-report/cucumber.html"",√æ                        ""junit:build/cucumber-report/cucumber.xml""},√æ                strict = true√æ        ))√æpublic class RegressionTestSuite {√æ}√æ````√æ√æ√æ##### TestNG Runner√æ√æ````java√æ@Test√æ@CourgetteOptions(√æ        threads = 10,√æ        runLevel = CourgetteRunLevel.SCENARIO,√æ        rerunFailedScenarios = true,√æ        rerunAttempts = 1,√æ        showTestOutput = true,√æ        reportTitle = ""Courgette-JVM Example"",√æ        reportTargetDir = ""build"",√æ        cucumberOptions = @CucumberOptions(√æ                features = ""src/test/resources/features"",√æ                glue = ""steps"",√æ                tags = {""@regression"", ""not @wip""},√æ                plugin = {√æ                        ""pretty"",√æ                        ""json:build/cucumber-report/cucumber.json"",√æ                        ""html:build/cucumber-report/cucumber.html""},√æ                strict = true√æ        ))√æpublic class RegressionTestSuite extends TestNGCourgette {√æ}√æ````√æ√æ√æ## Gradle Build Task√æ√æ````gradle√ætasks.withType(Test) {√æ    systemProperties = System.getProperties()√æ    systemProperties.remove(""java.endorsed.dirs"") // needs to be removed from Java 9√æ}√æ√æ// JUnit√ætask regressionSuite(type: Test) {√æ    include '**/RegressionTestSuite.class'√æ√æ    outputs.upToDateWhen { false }√æ}√æ√æ// TestNG√ætask regressionSuite(type: Test) {√æ    useTestNG()√æ√æ    include '**/RegressionTestSuite.class'√æ√æ    outputs.upToDateWhen { false }√æ}√æ````√æ√æ## Gradle Run Options√æ√æTo override the hard-coded courgette options (_threads, runLevel, rerunFailedScenarios, showTestOutput, reportTargetDir_) set in the runner class, you can provide system properties to the gradle task.√æ√æ````gradle√æ√ægradle regressionSuite -Dcourgette.threads=2 -Dcourgette.runLevel=FEATURE -Dcourgette.rerunFailedScenarios=false -Dcourgette.showTestOutput=true -Dcourgette.reportTargetDir=build√æ√æ````√æ√æTo override the hard-coded cucumber options (_tags, glue, plugin, name, junit_) set in the runner class, you can provide comma separated system properties to the gradle task.√æ√æ````gradle√æ√ægradle regressionSuite -Dcucumber.tags=""@regression, ~@bug"" -Dcucumber.glue=""steps, hooks""√æ√æ````√æ√æTo specify non standard VM options (_-X options_)√æ√æ````gradle√æ√ægradle regressionSuite -Dcourgette.vmoptions=""-Xms256m -Xmx512m""√æ√æ````√æ√æ## JUnit Callbacks√æ√æYou can add global setup and tear-down code to your Courgette test runner using the `@CourgetteBeforeAll` and `@CourgetteAfterAll` annotations. For example:√æ√æ```java√æ@RunWith(Courgette.class)√æ@CourgetteOptions(/* Your Courgette options here... */)√æpublic class RegressionTestSuite {√æ    @CourgetteBeforeAll√æ    public static void setUp() {√æ        System.out.println(""I will run before any tests execute"");√æ    }√æ    √æ    @CourgetteAfterAll√æ    public static void tearDown() {√æ        System.out.println(""I will run after all of the tests execute"");√æ    }√æ}√æ```√æ√æYou can add any number of annotated methods to your test suite class. √æIf you need your callbacks to run in a specific order, pass `order` to the annotation: `@CourgetteBeforeAll(order = 2)`.√æ√æ## Report Portal Integration√æ√æCourgette allows test results to be published to the [Report Portal](https://reportportal.io/) server at the end of the test run. √æ√æTo enable this feature, add the following Courgette option to the Courgette runner:√æ√æ````java√æ@CourgetteOptions(√æ      ...  √æ      plugin = { ""reportportal"" },√æ      cucumberOptions = @CucumberOptions(√æ      // cucumber options here√æ      )√æ)√æ````√æ√æYou must have the **reportportal.properties** file in your classpath and the following properties must be defined:√æ````properties√æ# Report Portal server (mandatory)√ærp.endpoint = http://localhost:8080√æ√æ# Report Portal project (mandatory)√ærp.project = courgette_example√æ√æ# Report Portal API access token (mandatory)√ærp.apitoken=a1e5ee78-317c-477d-b27e-f174c562aedc√æ√æ# Report Portal launch name (optional)√ærp.launch= My Demo Project√æ√æ# Report Portal test suite (optional)√ærp.testsuite= Smoke Test Suite√æ````√æ√æAn API access token is required to allow Courgette to publish the report. To obtain an API access token, log in to Report Portal UI and navigate to http://localhost:8080/ui/#api -> UAT -> sso-endpoint -> Get api token√æ√æAfter the test run is complete, the test results will be published to the Report Portal server.√æ√æ![CourgetteJVM_ReportPortal.png](images/CourgetteJVM_ReportPortal.png)√æ√æ√æ## Extent Reports Integration√æ√æCourgette allows the creation of interactive reports using the Extent Reports Courgette plugin.√æ√æTo enable this feature, add the following Courgette option to the Courgette runner:√æ√æ````java√æ@CourgetteOptions(√æ      ...  √æ      plugin = { ""extentreports"" },√æ      cucumberOptions = @CucumberOptions(√æ      // cucumber options here√æ      )√æ)√æ````√æ√æAt the end of the test run the report will be saved to `${reportTargetDir}/courgette-extentreports` √æ√æTo configure custom reports (_i.e. change the report name or theme_) you should create the `extent-config.xml` file in the classpath. Courgette will load this XML config when it builds the report. If this file is not provided then default values will be used. View an example [here](https://github.com/prashant-ramcharan/courgette-jvm-example/blob/master/src/test/resources/extent-config.xml)√æ√æ![CourgetteJVM_ExtentReports.png](images/CourgetteJVM_ExtentReports.png)√æ√æ√æ## Limitations and Known Issues√æ√æ* JUnit test notifier is not updated when running features in the IDE during parallel test execution.√æ   √æ   * _Each feature is run using the Cucumber CLI and because of this JUnit is not notified off the test result. The workaround to this is the Courgette-JVM html report which lists all test passes, failures and re-runs. Alternatively, you can review the Cucumber reports or the results from the build tool_.√æ   √æ  √æ* When there's a failure in the feature and your runner is set to 'runLevel = CourgetteRunLevel.FEATURE' and 'rerunFailedScenarios = true', the re-run cucumber feature report will override the original cucumber feature report.√æ   √æ   * _Use CourgetteRunLevel.SCENARIO which resolves this issue and retains all results in the cucumber report._√æ√æ## Submitting Issues√æFor any issues or requests, please submit [here](https://github.com/prashant-ramcharan/courgette-jvm/issues/new)"
tjheslin1/Patterdale,4001,10,6,10,User,False,"Prometheus exporter for Oracle DB, written in Java",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",16,Java,"{'': 3, 'yml': 2, 'txt': 2, 'md': 1, 'gradle': 2, 'sh': 1, 'bat': 1}",225,2,16,4,4,1113,True,6,17,0,0,0,16,0,0,9,0,1,1,40,40,0,0,41,,8,,"# Patterdale [![Build Status](https://travis-ci.org/tjheslin1/Patterdale.svg?branch=master)](https://travis-ci.org/tjheslin1/Patterdale)√æ√æ[![Docker Pulls](https://img.shields.io/docker/pulls/tjheslin1/patterdale.svg?maxAge=604800)](https://hub.docker.com/r/tjheslin1/patterdale/)√æ√æ[See here for example `patterdale.yml` configuration file](https://gist.github.com/tjheslin1/5d74d5ad6c4b0dda8662c381590ddbbb#file-patterdale-yml)√æ√æ[See here for complete documentation](https://tjheslin1.github.io/Patterdale/).√æ√æPrometheus Oracle database exporter. Runs provided queries.√æ√æ`docker run -d -p 7000:7000 -v /your/jdbc/odjbc7.jar:/app/odjbc7.jar -v /your/config/directory:/config -v /your/secrets/directory:/passwords tjheslin1/patterdale:1.3.1`√æ√æIf a `logback.xml` file is included in the directory passed into the `/config` container volume, this will override your logging configuration.√æ√æNote the volume mount: `/your/jdbc/odjbc7.jar:/app/odjbc7.jar` in the example.√æThis driver can be downloaded manually from the√æ[Oracle JDBC Downloads page](http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html)√æor, **preferably**, you can provide `mavenOracleUsername` and `mavenOraclePassword` in your `gradle.properties` file when building locally which will fetch the driver from the maven repository.√æThis requires you register an Oracle single sign-on account.√æ√æ## Troubleshooting√æ√æGetting one of the following exceptions when running locally?:√æ- `java.sql.SQLRecoverableException`√æ- `java.net.ConnectException`√æ- `com.zaxxer.hikari.pool.HikariPool$PoolInitializationException`√æ- or similar√æ√æ`patterdale.yml` from _src/test/resources_ will need to have the `jdbcUrl`s changed locally to √æpoint to your local Oracle database(s), if this occurs replace _localhost_ in √æthe `jdbcUrl`s with the local IP address or your databases. For local Docker images this √æwill be the IP of your machine.√æ√æThe `sath89/oracle-12c` docker images take a few minutes to start up. √æPatterdale will retry connections to the database(s) according to the √æ`maxConnectionRetries` and `connectionRetryDelayInSeconds` settings.√æDuring this time the `HikariPool$PoolInitializationException` will be logged, √æas will details of the connection retry attempts.√æ√æ## Example view of Patterdale metrics within Prometheus√æ![Example view of Patterdale metrics within Prometheus](https://github.com/tjheslin1/Patterdale/blob/master/docs/Patterdale_screenshot.png)"
team-cyhee/rabit_rest,488,0,0,2,Organization,False,,,,10,Java,"{'': 2, 'groovy': 1, 'md': 1, 'gradle': 2, 'bat': 1}",73,4,0,3,0,782,True,0,4,0,0,0,37,0,0,8,0,0,0,0,0,0,0,5,0,,,# rabit_rest√æspring bootÎ•º ÌôúÏö©Ìïú rest api√æ√æerd Î™®Îç∏([link](https://www.erdcloud.com/d/EArnKTpftFjudFA5X))√æ√æ## AWS link√æhttp://ec2-52-78-106-239.ap-northeast-2.compute.amazonaws.com:8080/(http://52.78.106.239:8080/)
flightstats/hub,89111,74,40,24,Organization,False,"fault tolerant, highly available service for data storage and distribution",http://www.flightstats.com,,14,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1, 'sh': 1}",10391,31,1964,30,0,2694,True,46,369,0,0,0,836,0,18,19,0,2,13,3460,2417,0,0,35,1,,,"Read the docs: https://flightstats.github.io/hub/√æ√æ![hub logo](./docs/images/HubLogoSmall.png)√æ√æ# What is the Hub? √æ√æThe hub is a distributed linked list.   √æThe hub is a messaging system.   √æThe hub is a long term data store.   √æ√æ## The hub is like a Key Value Store √æ* Stores each item at a unique key (url) (http://hub/channel/whatIs/2016/12/31/23/59/59/bhJ23I)√æ* Items are available for an arbitrarily long time√æ* Fault tolerant, easy to cluster√æ* Requires a quorum for a successful write √æ√æ### with some differences √æ* Most KV stores allow mutations.  The hub does not.√æ* The hub imposes that all item keys always move forward in time√æ* The hub offers ordering guarantees to provide consistent answers to time based queries√æ √æ## The hub is like a Messaging system√æ* Items are immutable√æ* Item keys always increase√æ√æ### and some differences√æ* Most messaging systems do not let you access arbitrarily old items√æ* Many messaging systems are difficult to cluster√æ* Many messaging system require custom clients√æ√æ√æ### How to build hub:√æ√æRun ./gradlew build√æ√æThe above command compiles the code, runs the unit tests and integration tests.~~~~√æ√æ### How to run System tests:√æ√æFrom Local:√æ√æ1) Setup hub:√æ    a) ./localDocker.sh (from root directory)√æ    b) docker run -p 80:80 hub:local√æ   √æ2) set base.url property in integration-hub.properties√æ    √æ3) Go to root of hub project source and run below command√æ   ./gradlew systemTest -i    √æ   √æFrom Jenkins:√æ√æ1) Goto https://ddt-jenkins.pdx.prod.flightstats.io/job/hub-system-test/ √æ√æ2) Click on ""Build With Parameters""√æ √æ3) Add your git branch and start the build.√æ  "
duracloud/duracloud-db,266,0,3,4,Organization,False,DuraCloud Database Management,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1}",144,2,23,4,0,1830,True,0,0,0,0,0,17,0,4,8,0,2,5,172,51,4,0,16,2,,,# duracloud-db√æDuraCloud Database Management
bsridatta/Timely,11441,3,3,2,User,False,Full-Fledged Portal officially made for the faculty of Amrita ,,,12,Java,"{'': 2, 'md': 1, 'yml': 1, 'gradle': 2, 'properties': 1, 'bat': 1, 'jpg': 1}",71,2,0,3,2,945,True,1,6,0,0,0,14,0,0,9,2,1,3,9,2,0,0,40,,11,,"## Timely√æ√æ<img src=""https://github.com/bsridatta/Timely/blob/master/profile_page.jpg"" width=""250"" align=""left"">√æ √æ √æApp directory√æ√æ√æ√æ√æ```√æTimely (Removed a huge chunk but this is the main part of the tree√æ‚îú‚îÄ‚îÄ app√æ‚îÇ   ‚îú‚îÄ‚îÄ build.gradle√æ‚îÇ   ‚îú‚îÄ‚îÄ google-services.json√æ‚îÇ   ‚îú‚îÄ‚îÄ libs√æ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ poi-3.12-android-a.jar√æ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ poi-ooxml-schemas-3.12-20150511-a.jar√æ‚îÇ   ‚îî‚îÄ‚îÄ src√æ‚îÇ       ‚îî‚îÄ‚îÄ main√æ‚îÇ           ‚îú‚îÄ‚îÄ AndroidManifest.xml√æ‚îÇ           ‚îú‚îÄ‚îÄ java√æ‚îÇ           ‚îÇ   ‚îî‚îÄ‚îÄ com√æ‚îÇ           ‚îÇ       ‚îî‚îÄ‚îÄ example√æ‚îÇ           ‚îÇ           ‚îî‚îÄ‚îÄ sridatta√æ‚îÇ           ‚îÇ               ‚îî‚îÄ‚îÄ timely√æ‚îÇ           ‚îÇ                   ‚îú‚îÄ‚îÄ activity√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ Excel.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ Login.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ OtherUserActivity.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ Portal.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ Profiler.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îî‚îÄ‚îÄ Register.java√æ‚îÇ           ‚îÇ                   ‚îú‚îÄ‚îÄ adapter√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ CurrentRequestsAdapter.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ GridViewAdapter.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ OtherGridViewAdapter.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ ReceivedRequestsAdapter.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ RecyclerAdapter.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îî‚îÄ‚îÄ SentRequestsAdapter.java√æ‚îÇ           ‚îÇ                   ‚îú‚îÄ‚îÄ fragment_other_user√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ OtherProfileFragment.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îî‚îÄ‚îÄ OtherTimeTableFragment.java√æ‚îÇ           ‚îÇ                   ‚îú‚îÄ‚îÄ fragment_portal√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ CurrentRequestsFragment.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ RequestsFragment.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îî‚îÄ‚îÄ TimetableFragment.java√æ‚îÇ           ‚îÇ                   ‚îú‚îÄ‚îÄ fragment_profiler√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ ProfileFragment.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îú‚îÄ‚îÄ ReceivedRequestsFragment.java√æ‚îÇ           ‚îÇ                   ‚îÇ   ‚îî‚îÄ‚îÄ SentRequestsFragment.java√æ‚îÇ           ‚îÇ                   ‚îî‚îÄ‚îÄ objects√æ‚îÇ           ‚îÇ                       ‚îú‚îÄ‚îÄ Faculty.java√æ‚îÇ           ‚îÇ                       ‚îú‚îÄ‚îÄ LectureSlot.java√æ‚îÇ           ‚îÇ                       ‚îú‚îÄ‚îÄ Representative.java√æ‚îÇ           ‚îÇ                       ‚îú‚îÄ‚îÄ SwapRequest.java√æ‚îÇ           ‚îÇ                       ‚îî‚îÄ‚îÄ Timely.java√æ‚îÇ           ‚îî‚îÄ‚îÄres√æ‚îÇ               ‚îÇ √æ‚îÇ               ‚îú‚îÄ‚îÄ layout√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_excel.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_login.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_other_user.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_portal.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_profile.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ activity_register.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ card_layout.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ card_lectureslot.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ card_list_item.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ dialog_confirmswap.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ dialog_slot_swap.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ dialog_swapslot.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_currentrequests.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_other_profile.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_other_time_table.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_profile.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_receivedrequests.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_requests.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_sentrequests.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ fragment_timetable.xml√æ‚îÇ               ‚îÇ   ‚îî‚îÄ‚îÄ layout_card_faculty.xml√æ‚îÇ               ‚îú‚îÄ‚îÄ layout-xlarge√æ‚îÇ               ‚îÇ   ‚îî‚îÄ‚îÄ custom_tab.xml√æ‚îÇ               ‚îú‚îÄ‚îÄ menu√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ menu.xml√æ‚îÇ               ‚îú‚îÄ‚îÄ values√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ colors.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ dimens.xml√æ‚îÇ               ‚îÇ   ‚îú‚îÄ‚îÄ strings.xml√æ‚îÇ               ‚îÇ   ‚îî‚îÄ‚îÄ styles.xml√æ‚îÇ               ‚îî‚îÄ‚îÄ values-v21√æ‚îÇ                   ‚îú‚îÄ‚îÄ strings.xml√æ‚îÇ                   ‚îî‚îÄ‚îÄ styles.xml√æ‚îú‚îÄ‚îÄ build.gradle√æ‚îú‚îÄ‚îÄ _config.yml√æ‚îú‚îÄ‚îÄ gradle.properties√æ‚îú‚îÄ‚îÄ README.md√æ‚îî‚îÄ‚îÄ settings.gradle√æ```"
provotypes/2018,923,2,2,1,Organization,False,Provotypes' 2018 Robot code.,http://provotypes.org/,,7,Java,"{'': 3, 'properties': 1, 'xml': 1}",89,6,0,2,0,889,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,10,0,,,
zq99299/newstudy,41200,2,1,4,User,False,Â≠¶‰π†ÁªÉ‰π†Êñ∞‰ªìÂ∫ì,,,11,Java,"{'': 1, 'md': 1, 'gradle': 2}",162,1,0,1,0,927,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,60,,60,,# newstudy√æÊóßÁöÑ‰ªìÂ∫ìÔºöhttps://gitee.com/zhuqiang/study√æ√æÈöèÁùÄÂ≠¶‰π†ÁöÑË∂äÊù•Ë∂äÂ§öÔºåÂú®Â≠¶‰π†ÁöÑËøáÁ®ã‰∏≠ÂèëÁé∞Âπ∂‰∏çÊòØÊâÄÊúâÁöÑÂ≠¶‰π†ËøáÁ®ã‰∏≠ÁöÑ‰ª£Á†ÅÈÉΩÊòØÊ≤°Êúâ‰ª∑ÂÄºÁöÑ„ÄÇ√æ√æËØ•‰ªìÂ∫ìÁî®Êù•Â≠òÂÇ®Â≠¶‰π†ÁöÑÈ°πÁõÆÔºõ‰∏ãË°®ÊòØÊØè‰∏™È°πÁõÆÁöÑËØ¥ÊòéÔºõ√æ√æË¶Å‰∏•Ê†ºË¶ÅÊ±ÇËá™Â∑±ÂÅöÂ•ΩÂàÜÁ±ªÔºåÂõ†‰∏∫Êï∞ÈáèÂ§öÁöÑÊó∂ÂÄôÂàÜÁ±ªÂ∞±ÂæàÈáçË¶Å„ÄÇ√æ√æÂ¶ÇÊûúÊ≤°ÊúâÁøªÂ¢ôÔºågitbookÊâì‰∏çÂºÄÔºåÂ∞±Âè™ËÉΩÊöÇÊó∂ÁúãGITHUBÁöÑÂéüÂßãÊñá‰ª∂‰∫Ü√æ√æ| È°πÁõÆ | ÊèèËø∞ | GITBOOKÁ¨îËÆ∞ | GITHUBÁ¨îËÆ∞|√æ|-------|------|------|----------|√æ| java-tutorial | JavaÂÆòÁΩëÈòÖËØªÁ¨îËÆ∞ÁöÑÁªÉ‰π†È°πÁõÆ |[ÂÆòÁΩëÊïôÁ®ãÈòÖËØªÁ¨îËÆ∞](https://www.gitbook.com/book/zq99299/java-tutorial/details)  | - |√æ| hp-base | JAVAÈ´òÁ´ØÂü∫Á°ÄÁªÉ‰π†È°πÁõÆ | [JavaÈ´òÁ´ØÂü∫Á°Ä](https://www.gitbook.com/book/zq99299/hp-note/details)  |  [JavaÈ´òÁ´ØÂü∫Á°Ä](https://github.com/zq99299/hp-note/blob/master/SUMMARY.md) |
AndreyVMarkelov/jira-prometheus-exporter,1484,104,8,28,User,False,Prometheus Exporter For JIRA,https://marketplace.atlassian.com/plugins/ru.andreymarkelov.atlas.plugins.prom-jira-exporter/server/overview,"{'key': 'bsd-2-clause', 'name': 'BSD 2-Clause ""Simplified"" License', 'spdx_id': 'BSD-2-Clause', 'url': 'https://api.github.com/licenses/bsd-2-clause', 'node_id': 'MDc6TGljZW5zZTQ='}",9,Java,"{'': 2, 'yml': 1, 'md': 2, 'xml': 1, 'sh': 1}",113,2,9,8,7,1001,True,17,35,4,2,4,12,3,1,9,0,2,5,101,21,0,0,66,,75,,# Prometheus Exporter For Jira [![Build Status](https://travis-ci.org/AndreyVMarkelov/jira-prometheus-exporter.svg?branch=master)](https://travis-ci.org/AndreyVMarkelov/jira-prometheus-exporter)√æ√æThis is a Jira plugin which provides an endpoint to expose Jira metrics to Prometheus.√æ√æFor more information the documentation [Prometheus Exporter For Jira](https://github.com/AndreyVMarkelov/jira-prometheus-exporter/wiki/Prometheus-Exporter-For-JIRA).√æ√æOn Atlassian Marketplace [Prometheus Exporter For Jira](https://marketplace.atlassian.com/plugins/ru.andreymarkelov.atlas.plugins.prom-jira-exporter/server/overview)√æ√æ## Grafana √æ√æ* [Example Grafana Dashboard](https://grafana.com/dashboards/5249)√æ√æ![image](./grafana/img/jira-board.png)
Java-team5/hr-app,327,2,1,1,Organization,False,,,,7,Java,"{'': 1, 'iml': 1, 'xml': 2}",148,7,0,5,0,620,True,5,14,0,0,1,32,0,0,9,0,0,0,0,0,0,0,1,0,,,
jirutka/spring-rest-exception-handler,177,341,38,131,User,False,A convenient Spring MVC exception handler for RESTful APIs.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 3, 'xml': 2, 'yml': 1, 'adoc': 2}",99,3,7,5,6,2273,True,13,8,0,0,3,7,0,0,6,0,0,0,0,0,70,0,187,,269,,"= Spring REST Exception handler√æ:source-language: java√æ// Project meta√æ:name: spring-rest-exception-handler√æ:version: 1.2.0√æ:group-id: cz.jirutka.spring√æ:artifact-id: {name}√æ:gh-name: jirutka/{name}√æ:gh-branch: master√æ:codacy-id: ca5dbac87d564725b6640a67b2b7ea35√æ// URIs√æ:src-base: link:src/main/java/cz/jirutka/spring/exhandler√æ:spring-jdoc-uri: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework√æ√æifdef::env-github[]√æimage:https://travis-ci.org/{gh-name}.svg?branch={gh-branch}[""Build Status"", link=""https://travis-ci.org/{gh-name}""]√æimage:https://coveralls.io/repos/github/{gh-name}/badge.svg?branch={gh-branch}[Coverage Status, link=""https://coveralls.io/github/{gh-name}""]√æimage:https://api.codacy.com/project/badge/grade/{codacy-id}[""Codacy code quality"", link=""https://www.codacy.com/app/{gh-name}""]√æimage:https://maven-badges.herokuapp.com/maven-central/{group-id}/{artifact-id}/badge.svg[Maven Central, link=""https://maven-badges.herokuapp.com/maven-central/{group-id}/{artifact-id}""]√æendif::env-github[]√æ√æ√æThe aim of this project is to provide a convenient exception handler (resolver) for RESTful APIs that meets a best-practices for error responses without repeating yourself.√æIt‚Äôs very easy to handle custom exceptions, customize error responses and even localize them.√æAlso solves some pitfalls footnote:[Nothing terrible, Spring MVC is still a far better then JAX-RS for RESTful APIs! ;)] in Spring MVC with a content negotiation when producing error responses.√æ√æ√æ== Error message√æ√æError messages generated by `ErrorMessageRestExceptionHandler` follows the http://tools.ietf.org/html/draft-nottingham-http-problem-06[Problem Details for HTTP APIs] specification.√æ√æFor example, the following error message describes a validation exception.√æ√æ*In JSON format:*√æ√æ[source, json]√æ----√æ{√æ    ""type"": ""http://example.org/errors/validation-failed"",√æ    ""title"": ""Validation Failed"",√æ    ""status"": 422,√æ    ""detail"": ""The content you've send contains 2 validation errors."",√æ    ""errors"": [{√æ        ""field"": ""title"",√æ        ""message"": ""must not be empty""√æ    }, {√æ        ""field"": ""quantity"",√æ        ""rejected"": -5,√æ        ""message"": ""must be greater than zero""√æ    }]√æ}√æ----√æ√æ*‚Ä¶ or in XML:*√æ√æ[source,xml]√æ----√æ<problem>√æ    <type>http://example.org/errors/validation-failed</type>√æ    <title>Validation Failed</title>√æ    <status>422</status>√æ    <detail>The content you've send contains 2 validation errors.</detail>√æ    <errors>√æ        <error>√æ            <field>title</field>√æ            <message>must not be empty</message>√æ        </error>√æ        <error>√æ            <field>quantity</field>√æ            <rejected>-5</rejected>√æ            <message>must be greater than zero</message>√æ        </error>√æ    </errors>√æ</problem>√æ----√æ√æ√æ== How does it work?√æ√æ=== RestHandlerExceptionResolver√æ√æThe core class of this library that resolves all exceptions is {src-base}/RestHandlerExceptionResolver.java[RestHandlerExceptionResolver].√æIt holds a registry of `RestExceptionHandlers`.√æ√æWhen your controller throws an exception, the `RestHandlerExceptionResolver` will:√æ√æ. Find an exception handler by the thrown exception type (or its supertype, supertype of the supertype‚Ä¶ up to the `Exception` class if no more specific handler is found) and invoke it.√æ. Find the best matching media type to produce (using {spring-jdoc-uri}/web/accept/ContentNegotiationManager.html[ContentNegotiationManager], utilises _Accept_ header by default). When the requested media type is not supported, then fallback to the configured default media type.√æ. Write the response.√æ√æ√æ=== RestExceptionHandler√æ√æImplementations of the {src-base}/handlers/RestExceptionHandler.java[RestExceptionHandler] interface are responsible for converting the exception into Spring‚Äôs {spring-jdoc-uri}/http/ResponseEntity.html[ResponseEntity] instance that contains a body, headers and a HTTP status code.√æ√æThe main implementation is {src-base}/handlers/ErrorMessageRestExceptionHandler.java[ErrorMessageRestExceptionHandler] that produces the `ErrorMessage` body (see above for example).√æAll the attributes (besides status) are loaded from a properties file (see the section <<Localizable error messages>>).√æThis class also logs the exception (see the <<Exception logging>> section).√æ√æ√æ== Configuration√æ√æ=== Java-based configuration√æ√æ[source]√æ----√æ@EnableWebMvc√æ@Configuration√æpublic class RestContextConfig extends WebMvcConfigurerAdapter {√æ√æ    @Override√æ    public void configureHandlerExceptionResolvers(List<HandlerExceptionResolver> resolvers) {√æ        resolvers.add( exceptionHandlerExceptionResolver() ); // resolves @ExceptionHandler√æ        resolvers.add( restExceptionResolver() );√æ    }√æ√æ    @Bean√æ    public RestHandlerExceptionResolver restExceptionResolver() {√æ        return RestHandlerExceptionResolver.builder()√æ                .messageSource( httpErrorMessageSource() )√æ                .defaultContentType(MediaType.APPLICATION_JSON)√æ                .addErrorMessageHandler(EmptyResultDataAccessException.class, HttpStatus.NOT_FOUND)√æ                .addHandler(MyException.class, new MyExceptionHandler())√æ                .build();√æ    }√æ√æ    @Bean√æ    public MessageSource httpErrorMessageSource() {√æ        ReloadableResourceBundleMessageSource m = new ReloadableResourceBundleMessageSource();√æ        m.setBasename(""classpath:/org/example/messages"");√æ        m.setDefaultEncoding(""UTF-8"");√æ        return m;√æ    }√æ√æ    @Bean√æ    public ExceptionHandlerExceptionResolver exceptionHandlerExceptionResolver() {√æ        ExceptionHandlerExceptionResolver resolver = new ExceptionHandlerExceptionResolver();√æ        resolver.setMessageConverters(HttpMessageConverterUtils.getDefaultHttpMessageConverters());√æ        return resolver;√æ    }√æ}√æ----√æ√æ√æ=== XML-based configuration√æ√æ[source, xml]√æ----√æ<bean id=""compositeExceptionResolver""√æ      class=""org.springframework.web.servlet.handler.HandlerExceptionResolverComposite"">√æ    <property name=""order"" value=""0"" />√æ    <property name=""exceptionResolvers"">√æ        <list>√æ            <ref bean=""exceptionHandlerExceptionResolver"" />√æ            <ref bean=""restExceptionResolver"" />√æ        </list>√æ    </property>√æ</bean>√æ√æ<bean id=""restExceptionResolver""√æ      class=""cz.jirutka.spring.exhandler.RestHandlerExceptionResolverFactoryBean"">√æ    <property name=""messageSource"" ref=""httpErrorMessageSource"" />√æ    <property name=""defaultContentType"" value=""application/json"" />√æ    <property name=""exceptionHandlers"">√æ        <map>√æ            <entry key=""org.springframework.dao.EmptyResultDataAccessException"" value=""404"" />√æ            <entry key=""org.example.MyException"">√æ                <bean class=""org.example.MyExceptionHandler"" />√æ            </entry>√æ        </map>√æ    </property>√æ</bean>√æ√æ<bean id=""exceptionHandlerExceptionResolver""√æ      class=""org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"" />√æ√æ<bean id=""httpErrorMessageSource""√æ      class=""org.springframework.context.support.ReloadableResourceBundleMessageSource""√æ      p:basename=""classpath:/org/example/errorMessages""√æ      p:defaultEncoding=""UTF-8"" />√æ----√æ√æ√æ=== Another resolvers√æ√æThe {spring-jdoc-uri}/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.html[ExceptionHandlerExceptionResolver] is used to resolve exceptions through {spring-jdoc-uri}/web/bind/annotation/ExceptionHandler.html[@ExceptionHandler] methods.√æIt must be registered _before_ the RestHandlerExceptionResolver.√æIf you don‚Äôt have any `@ExceptionHandler` methods, then you can omit the `exceptionHandlerExceptionResolver` bean declaration.√æ√æ√æ=== Default handlers√æ√æBuilder and FactoryBean registers a set of the default handlers by default.√æThis can be disabled by setting `withDefaultHandlers` to false.√æ√æ√æ=== Localizable error messages√æ√æMessage values are read from a _properties_ file through the provided {spring-jdoc-uri}/context/MessageSource.html[MessageSource], so it can be simply customized and localized.√æLibrary contains a default link:src/main/resources/cz/jirutka/spring/exhandler/messages.properties[messages.properties] file that is implicitly set as a parent (i.e. fallback) of the provided message source.√æThis can be disabled by setting `withDefaultMessageSource` to false (on a builder or factory bean).√æ√æThe key name is prefixed with a fully qualified class name of the Java exception, or `default` for the default value; this is used when no value for a particular exception class exists (even in the parent message source).√æ√æValue is a message template that may contain https://docs.spring.io/spring/docs/current/spring-framework-reference/html/expressions.html[SpEL] expressions delimited by `#{` and `}`.√æInside an expression, you can access the exception being handled and the current request (instance of http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html[HttpServletRequest]) under the `ex`, resp. `req` variables.√æ√æ*For example:*√æ√æ[source, properties]√æ----√æorg.springframework.web.HttpMediaTypeNotAcceptableException.type=http://httpstatus.es/406√æorg.springframework.web.HttpMediaTypeNotAcceptableException.title=Not Acceptable√æorg.springframework.web.HttpMediaTypeNotAcceptableException.detail=\√æ    This resource provides #{ex.supportedMediaTypes}, but you've requested #{req.getHeader('Accept')}.√æ----√æ√æ√æ=== Exception logging√æ√æExceptions handled with status code 5√ó√ó are logged on ERROR level (incl. stack trace), other exceptions are logged on INFO level without a stack trace, or on DEBUG level with a stack trace if enabled.√æThe logger name is `cz.jirutka.spring.exhandler.handlers.RestExceptionHandler` and a Marker is set to the exception‚Äôs full qualified name.√æ√æ√æ=== Why is 404 bypassing exception handler?√æ√æWhen the {spring-jdoc-uri}/web/servlet/DispatcherServlet.html[DispatcherServlet] is unable to determine a corresponding handler for an incoming HTTP request, it sends 404 directly without bothering to call an exception handler (see http://stackoverflow.com/a/22751886/2217862[on StackOverflow]).√æThis behaviour can be changed, *since Spring 4.0.0*, using `throwExceptionIfNoHandlerFound` init parameter.√æYou should set this to true for a consistent error responses.√æ√æ*When using WebApplicationInitializer:*√æ√æ[source]√æ----√æpublic class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {√æ√æ    protected void customizeRegistration(ServletRegistration.Dynamic reg) {√æ        reg.setInitParameter(""throwExceptionIfNoHandlerFound"", ""true"");√æ    }√æ    ...√æ}√æ----√æ√æ*‚Ä¶or classic web.xml:*√æ√æ[source, xml]√æ----√æ<servlet>√æ    <servlet-name>rest-dispatcher</servlet-name>√æ    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>√æ    <init-param>√æ        <param-name>throwExceptionIfNoHandlerFound</param-name>√æ        <param-value>true</param-value>√æ    </init-param>√æ    ...√æ</servlet>√æ----√æ√æ√æ== How to get it?√æ√æReleased versions are available in jCenter and the Central Repository.√æJust add this artifact to your project:√æ√æ._Maven_√æ[source, xml, subs=""verbatim, attributes""]√æ----√æ<dependency>√æ    <groupId>{group-id}</groupId>√æ    <artifactId>{artifact-id}</artifactId>√æ    <version>{version}</version>√æ</dependency>√æ----√æ√æ._Gradle_√æ[source, groovy, subs=""verbatim, attributes""]√æcompile '{group-id}:{artifact-id}:{version}'√æ√æHowever if you want to use the last snapshot version, you have to add the JFrog OSS repository:√æ√æ._Maven_√æ[source, xml]√æ----√æ<repository>√æ    <id>jfrog-oss-snapshot-local</id>√æ    <name>JFrog OSS repository for snapshots</name>√æ    <url>https://oss.jfrog.org/oss-snapshot-local</url>√æ    <snapshots>√æ        <enabled>true</enabled>√æ    </snapshots>√æ</repository>√æ----√æ√æ._Gradle_√æ[source, groovy]√æ----√ærepositories {√æ  maven {√æ    url 'https://oss.jfrog.org/oss-snapshot-local'√æ  }√æ}√æ----√æ√æ√æ== Requirements√æ√æ* Spring 3.2.0.RELEASE and newer is supported, but 4.√ó is highly recommended.√æ* Jackson 1.√ó and 2.√ó are both supported and optional.√æ√æ√æ== References√æ√æ* http://www.jayway.com/2012/09/23/improve-your-spring-rest-api-part-ii[Improve Your Spring REST API by M. Severson]√æ* https://stormpath.com/blog/spring-mvc-rest-exception-handling-best-practices-part-1/[Spring MVC REST Exception Handling Best Practices by L. Hazlewood]√æ* http://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc[Exception Handling in Spring MVC by P. Chapman]√æ* http://tools.ietf.org/html/draft-nottingham-http-problem-06[IETF draft Problem Details for HTTP APIs by M. Nottingham]√æ√æ√æ== License√æ√æThis project is licensed under http://www.apache.org/licenses/LICENSE-2.0.html[Apache License 2.0]."
Paytm-Payments/Paytm_Android_App_Kit,22240,70,9,81,Organization,False,,,,3,Java,{},45,1,0,5,0,1180,True,58,10,3,0,3,1,0,0,7,0,0,0,0,0,0,0,47,2,,,
ibm-cloud-architecture/refarch-jee-micro-product-service,27,1,6,4,Organization,False,A component of the https://github.com/ibm-cloud-architecture/refarch-jee reference application. This repository contains the detail of the new Product Search microservice during the evolution of an existing JEE monolith to microservices.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",4,Java,"{'md': 2, '': 1}",11,1,0,2,0,1035,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,250,6,,,"### Overview√æ√æProductSearchService is a microservice that redirects service requests from BFF layer to Legacy Backend Layer. This service is introduced to implement Strangler Pattern. Currently it only redirects the requests to EJB layer. In future it can be used to redirect requests to new implementations of services using new technologies e.g. nodejs and nosql√æ√æThe ProductSearchService exposes the following interfaces√æ√æ- /Product/?categoryId=xx√æ- /Product/{id}√æ- /Category√æ- /Category/id√æ√æ<br />√æ√æ√æ### Configuration√æ√æOne configuration parameter that this micro service requires is the IP address of the EJB services host. The EJB services host IP address is specified in the environment variables of this application. The environment variable goes as EJBServiceIP=""<IP>""√æ√æ<br />√æ√æ### Build WAR using Maven√æ√æ1. Ensure maven is installed√æ2. On command prompt, navigate to ProductSearchService project√æ3. Run ""mvn clean package"" command√æ4. ProductSearchService-0.1.war is created under ProductSearchService/target directory√æ5. Use this war file for deploying the ProductSearchService module on app server√æ√æ<br>√æ### Security Configuration in server.xml√æThe backend services are secured with basic authentication. Hence the intermediate REST service layer also needs to be secured. Add the following Basic Registry in server.xml file√æ√æ    <ldapRegistry baseDN=""dc=purplecompute,dc=com"" bindDN=""cn=admin,dc=purplecompute,dc=com"" bindPassword=""{xor}Dz4sLChvLTs="" host=""<ldap-server ip>"" id=""ldap"" ignoreCase=""true"" ldapType=""Custom"" port=""31252"" realm=""<ldap-server ip>:31252"" searchTimeout=""8m"">√æ     √æ        <contextPool enabled=""true"" initialSize=""1"" maxSize=""0"" preferredSize=""3"" timeout=""0s"" waitTime=""3000ms""/>√æ        √æ        <ldapCache>√æ            <attributesCache enabled=""true"" size=""4000"" sizeLimit=""2000"" timeout=""1200s""/>√æ            <searchResultsCache enabled=""true"" resultsSizeLimit=""1000"" size=""2000"" timeout=""600s""/>√æ        </ldapCache>√æ    √æ    </ldapRegistry>"
suppergerrie2/ModJam5,424,6,2,5,User,False,Minecraft mod for ModJam5,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",11,Java,"{'': 3, 'yml': 1, 'md': 2, 'gradle': 1, 'bat': 1, 'json': 1}",101,5,1,6,0,815,True,5,9,0,0,1,11,0,0,11,0,0,0,0,0,0,0,31,,13,,"This mod was made for ModJam 5 in three days, so forgive any bugs! √æTo see the code as it was at the end of the ModJam check the [ModJam5 branch](https://github.com/suppergerrie2/ModJam5/tree/ModJam5)√æ√æYou can also join a discord server [here](https://discord.gg/VHD4Ptm) this server is for suppergerrie2.com but also contains channels for this mod.√æ√æDownload the mod at the [curseforge page](https://minecraft.curseforge.com/projects/suppergerrie2s-drone-mod).√æ√æ# Basic information√æ√æAdds five types of drones:√æ1. Hauler drone: searches items in the world and brings them to its home.√æ2. Fighter drone: fights mobs around it.√æ3. Tree farm drone: plants trees and chops them down.√æ4. Crop farm drone: prepares farmland, plants seeds and breaks them when fully grown.√æ5. Archer drone: shoots hostile mobs that come to close to it.√æIt sets it home where you place it. √æ√æThis mod also adds a drone stick this can do a couple different things:√æ1. Select drones by right clicking on them (Deselect by shift-rightclicking in air)√æ2. Set home of selected drones by right clicking on block.√æ3. Kill drone by shift-right clicking on drone.√æ√æTODO:√æ- [x] Filter√æ- [x] Carry upgrade√æ- [ ] Mining drone√æ- [ ] Transport drone√æ- [x] Crop farm drone√æ- [ ] Upgrades (Check issue #16)√æ√æ# Want to help?√æ√æ### Found a bug or have an idea?√æReport the bug (or your idea!) by clicking [here](https://github.com/suppergerrie2/ModJam5/issues/new).√æ- Make sure the bug or idea hasn't been posted before by checking the other [issues](https://github.com/suppergerrie2/ModJam5/issues).√æ- Please check if the bug occurs without any other mods installed!√æ√æ### Want to help develop the mod?√æ1. Make sure you have git installed. [Github help page](https://help.github.com/articles/set-up-git/)√æ2. Fork this repository by clicking fork in the top right. [Github help page](https://guides.github.com/activities/forking/)√æ√æIf you just want to translate or don't need to launch the game you can start editing now! Else follow the instructions to setup a forge environment.√æ√æ3. Download an IDE like [eclipse](https://www.eclipse.org/home/index.php) and install it.√æ4. Setup a forge environment by running `gradlew setupDecompWorkspace`√æ   If you are using eclipse you also need to run `gradlew eclipse`√æ5. Now launch your IDE and import the folder you cloned this repository in as a project.√æ√æAfter making the changes you can send a pull request! [Github help page](https://guides.github.com/activities/forking/)√æ√æNow you can also launch the game and edit the code! For more information you can go to [my modding tutorial](https://www.suppergerrie2.com/minecraft-1-12-modding-with-forge-1-getting-started/)"
kollerlukas/Camera-Roll-Android-App,39469,443,35,109,User,False,"Simple Galley App for Android, with lovely Material Design.",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",14,Java,"{'': 4, 'yml': 1, 'md': 2, 'gradle': 2, 'png': 1, 'properties': 1, 'bat': 1}",414,1,28,17,0,1264,True,98,133,0,0,4,36,0,0,8,0,0,0,0,0,0,0,15,,35,,"[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)√æ[![Travis-ci](https://api.travis-ci.org/kollerlukas/Camera-Roll-Android-App.svg)](https://travis-ci.org/kollerlukas/Camera-Roll-Android-App)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/abf5a5e744c34396b20c1f7ed125ff04)](https://www.codacy.com/app/lukaskoller6/Camera-Roll-Android-App?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=kollerlukas/Camera-Roll-Android-App&amp;utm_campaign=Badge_Grade)√æ√æ![PREVIEW](https://github.com/kollerlukas/Camera-Roll-Android-App/blob/master/camera_roll_banner.png)√æ√æ# Camera Roll Android App√æSimple Gallery App for Android, with lovely Material Design.<br>√æ√æ<a href=""https://play.google.com/store/apps/details?id=us.koller.cameraroll"" target=""_blank"">√æ<img src=""https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png"" alt=""Get it on Google Play"" height=""80""/></a>√æ√æ[<img src=""https://f-droid.org/badge/get-it-on.png""√æ      alt=""Get it on F-Droid""√æ      height=""80"">](https://f-droid.org/app/us.koller.cameraroll)"
spring-cloud-services-samples/whoishome,452,2,1,8,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1}",43,1,0,2,0,1235,True,0,0,0,0,2,1,0,0,11,0,0,0,0,0,0,0,8,3,,,"# Who is Home?√æ√æ*Homeowner* and *Visitor* are sample applications demonstrating the use of Service Registry and Circuit Breaker from Spring Cloud Services with Container-to-Container (C2C) Networking from Cloud Foundry.√æ√æ## Building and Deploying√æ√æUsing Gradle, run `./gradlew build` (OS X, Linux) or `gradlew.bat build` (Windows).√æ√æ```√æ$ ./gradlew build√æ```√æ√æRun the deployment script√æ√æ```√æ$ ./scripts/deploy_gradle.sh√æ```√æ√æThe script will create a Service Registry service instance and then push the applications and bind them to the service.√æ√æWhen the script has finished, set the `TRUST_CERTS` environment variable to the API endpoint of your Elastic Runtime instance (as in `api.example.com`), then restage the applications so that the changes will take effect. Setting `TRUST_CERTS` causes Spring Cloud Services to add the the SSL certificate at the specfied API endpoint to the JVM's truststore, so that the client application can communicate with a Service Registry service instance even if your Elastic Runtime instance is using a self-signed SSL certificate (see the [Service Registry Documentation](http://docs.pivotal.io/spring-cloud-services/service-registry/writing-client-applications.html#self-signed-ssl-certificate).√æ√æ```√æ$ cf set-env homeowner TRUST_CERTS api.wise.com√æSetting env variable 'TRUST_CERTS' to 'api.wise.com' for app homeowner in org myorg / space development as user...√æOK√æTIP: Use 'cf restage' to ensure your env variable changes take effect√æ$ cf restage homeowner√æ```√æ√æ```√æ$ cf set-env visitor TRUST_CERTS api.wise.com√æSetting env variable 'TRUST_CERTS' to 'api.wise.com' for app visitor in org myorg / space development as user...√æOK√æTIP: Use 'cf restage' to ensure your env variable changes take effect√æ$ cf restage visitor√æ```√æ√æ**NOTE**√æ√æ> By default, the Spring Cloud Services Starters for Service Registry causes all application endpoints to be secured by HTTP Basic authentication. For more information or if you wish to disable this, [see the documentation](http://docs.pivotal.io/spring-cloud-services/service-registry/writing-client-applications.html#disable-http-basic-auth). HTTP Basic authentication is disabled in these sample applications.√æ√æ## Trying It Out√æ√æVisit `[ROUTE]/knock`, where `[ROUTE]` is the route bound to the Visitor application. The Visitor application will use the Service Registry to look up the Homeowner application and get a message back.√æ√æWhen the Visitor and Homeowner applications are initially deployed, the Visitor application will not be able to contact the Homeowner application. This is because a route has not been established between the applications using the [Network Access CF CLI plugin](https://github.com/cloudfoundry-incubator/cf-networking-release). The following screenshot shows an example where nobody is home due to lack of communication with Homeowner from Visitor.√æ√æ<img src=""docs/images/circuit-broken-c2c.png"" width=""50%""/>√æ√æOnce the Network Access CF CLI plugin is installed and you have sufficient authorization, you can run the following command to allow communication between Visitor and Homeowner applications:√æ√æ`cf add-network-policy visitor --destination-app homeowner --protocol tcp --port 8080`√æ√æHere is an example of the Visitor and Homeowner communicating successfully.√æ√æ<img src=""docs/images/circuit-open-c2c.png"" width=""50%""/>√æ√æAfter responding in the text field what the name of the visitor is then you will be taken to the following greeting & conversation with the homeowner:√æ√æ<img src=""docs/images/circuit-open-greeting-response.png"" width=""50%""/>√æ√æFor more information about the Service Registry and its use in a client application, see the [Service Registry documentation](http://docs.pivotal.io/spring-cloud-services/service-registry/writing-client-applications.html)."
kagkarlsson/db-scheduler,768,233,14,51,User,False,Persistent cluster-friendly scheduler for Java,,,11,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1, 'txt': 1}",402,15,36,14,5,1776,True,12,50,6,10,2,50,2,19,8,2,5,70,5233,4378,9,0,19,,16,,"# db-scheduler√æ√æ![build status](https://travis-ci.org/kagkarlsson/db-scheduler.svg?branch=master)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.kagkarlsson/db-scheduler/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.kagkarlsson/db-scheduler)√æ[![License](http://img.shields.io/:license-apache-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)√æ√æTask-scheduler for Java that was inspired by the need for a clustered `java.util.concurrent.ScheduledExecutorService` simpler than Quartz.√æ√æSee also [why not Quartz?](#why-db-scheduler-when-there-is-quartz)√æ√æ## Features√æ√æ* **Cluster-friendly**. Guarantees execution by single scheduler instance.√æ* **Persistent** tasks. Requires single database-table for persistence.√æ* **Embeddable**. Built to be embedded in existing applications.√æ* **Simple**.√æ* **Minimal dependencies**. (slf4j)√æ√æ## Getting started√æ√æ1. Add maven dependency√æ```xml√æ<dependency>√æ    <groupId>com.github.kagkarlsson</groupId>√æ    <artifactId>db-scheduler</artifactId>√æ    <version>7.2</version>√æ</dependency>√æ```√æ√æ2. Create the `scheduled_tasks` table in your database-schema. See table definition for [postgresql](db-scheduler/src/test/resources/postgresql_tables.sql), [oracle](db-scheduler/src/test/resources/oracle_tables.sql), [mssql](db-scheduler/src/test/resources/mssql_tables.sql) or [mysql](db-scheduler/src/test/resources/mysql_tables.sql).√æ√æ3. Instantiate and start the scheduler, which then will start any defined recurring tasks.√æ√æ```java√æRecurringTask<Void> hourlyTask = Tasks.recurring(""my-hourly-task"", FixedDelay.ofHours(1))√æ        .execute((inst, ctx) -> {√æ            System.out.println(""Executed!"");√æ        });√æ√æfinal Scheduler scheduler = Scheduler√æ        .create(dataSource)√æ        .startTasks(hourlyTask)√æ        .threads(5)√æ        .build();√æ√æ// hourlyTask is automatically scheduled on startup if not already started (i.e. exists in the db)√æscheduler.start();√æ```√æ√æFor more examples, continue reading. For details on the inner workings, see [How it works](#how-it-works). If you have a Spring Boot application, have a look at [Spring Boot Usage](#spring-boot-usage).√æ√æ## Who uses db-scheduler?√æ√æList of organizations known to be running db-scheduler in production:√æ√æ| Company                                   | Description                                                  |√æ|-------------------------------------------|--------------------------------------------------------------|√æ| [Digipost](https://digipost.no)           | Provider of digital mailboxes in Norway                      |√æ| [Vy Group](https://www.vy.no/en)          | One of the largest transport groups in the Nordic countries. |√æ| [TransferWise](https://transferwise.com/) | A cheap, fast way to send money abroad.                      |√æ√æFeel free to open a PR to add your organization to the list.√æ√æ## Examples√æ√æ### Recurring task√æ√æDefine a _recurring_ task and schedule the task's first execution on start-up using the `startTasks` builder-method. Upon completion, the task will be re-scheduled according to the defined schedule (see [pre-defined schedule-types](#schedules)).√æ√æ```java√æRecurringTask<Void> hourlyTask = Tasks.recurring(""my-hourly-task"", FixedDelay.ofHours(1))√æ        .execute((inst, ctx) -> {√æ            System.out.println(""Executed!"");√æ        });√æ√æfinal Scheduler scheduler = Scheduler√æ        .create(dataSource)√æ        .startTasks(hourlyTask)√æ        .threads(5)√æ        .build();√æ√æ// hourlyTask is automatically scheduled on startup if not already started (i.e. exists in the db)√æscheduler.start();√æ```√æ√æ√æ###  One-time tasks√æ√æAn instance of a _one-time_ task has a single execution-time some time in the future (i.e. non-recurring). The instance-id must be unique within this task, and may be used to encode some metadata (e.g. an id). For more complex state, custom serializable java objects are supported (as used in the example).√æ√æDefine a _one-time_ task and start the scheduler:√æ√æ```java√æOneTimeTask<MyTaskData> myAdhocTask = Tasks.oneTime(""my-typed-adhoc-task"", MyTaskData.class)√æ        .execute((inst, ctx) -> {√æ            System.out.println(""Executed! Custom data, Id: "" + inst.getData().id);√æ        });√æ√æfinal Scheduler scheduler = Scheduler√æ        .create(dataSource, myAdhocTask)√æ        .threads(5)√æ        .build();√æ√æscheduler.start();√æ√æ```√æ√æ... and then at some point (at runtime), an execution is scheduled using the `SchedulerClient`:√æ√æ```java√æ// Schedule the task for execution a certain time in the future and optionally provide custom data for the execution√æscheduler.schedule(myAdhocTask.instance(""1045"", new MyTaskData(1001L)), Instant.now().plusSeconds(5));√æ```√æ√æ√æ### Proper shutdown of the scheduler√æ√æTo avoid unnecessary [dead exexutions](#dead-executions), it is important to shutdown the scheduler properly, i.e. calling the `shutdown` method.√æ√æ```java√æ√æfinal Scheduler scheduler = Scheduler√æ        .create(dataSource, myAdhocTask)√æ        .build();√æ√æRuntime.getRuntime().addShutdownHook(new Thread() {√æ    @Override√æ    public void run() {√æ        LOG.info(""Received shutdown signal."");√æ        scheduler.stop();√æ    }√æ});√æ√æscheduler.start();√æ```√æ√æ## Configuration√æ√æ### Scheduler configuration√æ√æThe scheduler is created using the `Scheduler.create(...)` builder. The builder have sensible defaults, but the following options are configurable.√æ√æ| Option  | Default | Description |√æ| ------------- | ---- | ------------- |√æ| `.threads(int)`  | 10  | Number of threads |√æ| `.pollingInterval(Duration)`  |  30s  | How often the scheduler checks the database for due executions. |√æ| `.pollingLimit(int)`  |  3 * `<nr-of-threads>`  | Maximum number of executions to fetch on a check for due executions. |√æ| `.heartbeatInterval(Duration)`  | 5m | How often to update the heartbeat timestamp for running executions. |√æ| `.schedulerName(SchedulerName)`  | hostname  | Name of this scheduler-instance. The name is stored in the database when an execution is picked by a scheduler. |√æ| `.tableName(String)`  | `scheduled_tasks` | Name of the table used to track task-executions. Change name in the table definitions accordingly when creating the table. |√æ| `.serializer(Serializer)`  | standard Java | Serializer implementation to use when serializing task data. |√æ| `.enableImmediateExecution()`  | false | If this is enabled, the scheduler will attempt to directly execute tasks that are scheduled to `now()`, or a time in the past. For this to work, the call to `schedule(..)` must not occur from within a transaction, because the record will not yet be visible to the scheduler (if this is a requirement, see the method `scheduler.triggerCheckForDueExecutions()`) |√æ| `.executorService(ExecutorService)`  | `null`  | If specified, use this externally managed executor service to run executions. Ideally the number of threads it will use should still be supplied (for scheduler polling optimizations). |√æ| `.deleteUnresolvedAfter(Duration)`  | `14d`  | The time after which executions with unknown tasks are automatically deleted. These can typically be old recurring tasks that are not in use anymore. This is non-zero to prevent accidental removal of tasks through a configuration error (missing known-tasks) and problems during rolling upgrades. |√æ| `.jdbcCustomization(JdbcCustomization)`  | auto  | db-scheduler tries to auto-detect the database used to see if any jdbc-interactions need to be customized. This method is an escape-hatch to allow for setting `JdbcCustomizations` explicitly. |√æ√æ√æ√æ### Task configuration√æ√æTasks are created using one of the builder-classes in `Tasks`. The builders have sensible defaults, but the following options can be overridden.√æ√æ| Option  | Default | Description |√æ| ------------- | ---- | ------------- |√æ| `.onFailure(FailureHandler)`  | see desc.  | What to do when a `ExecutionHandler` throws an exception. By default, _Recurring tasks_ are rescheduled according to their `Schedule` _one-time tasks_ are retried again in 5m. |√æ| `.onDeadExecution(DeadExecutionHandler)`  | `ReviveDeadExecution`  | What to do when a _dead executions_ is detected, i.e. an execution with a stale heartbeat timestamp. By default dead executions are rescheduled to `now()`. |√æ| `.initialData(T initialData)`  | `null`  | The data to use the first time a _recurring task_ is scheduled. |√æ√æ√æ### Schedules√æ√æThe library contains a number of Schedule-implementations for recurring tasks. See class `Schedules`.√æ√æ| Schedule  | Description |√æ| ------------- | ------------- |√æ| `.daily(LocalTime ...)`  | Runs every day at specified times. Optionally a time zone can be specified. |√æ| `.fixedDelay(Duration)`  | Next execution-time is `Duration` after last completed execution. **Note:** This `Schedule` schedules the initial execution to `Instant.now()` when used in `startTasks(...)`|√æ| `.cron(String)`  | Spring-style cron-expression. |√æ√æAnother option to configure schedules is reading string patterns with `Schedules.parse(String)`.√æ√æThe currently available patterns are:√æ√æ| Pattern  | Description |√æ| ------------- | ------------- |√æ| `FIXED_DELAY\|Ns`  | Same as `.fixedDelay(Duration)` with duration set to N seconds. |√æ| `DAILY\|12:30,15:30...(\|time_zone)`  | Same as `.daily(LocalTime)` with optional time zone (e.g. Europe/Rome, UTC)|√æ√æMore details on the time zone formats can be found [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html#of-java.lang.String-).√æ√æ## Spring Boot usage√æ√æFor Spring Boot applications, there is a starter `db-scheduler-spring-boot-starter` making the scheduler-wiring very simple. (See [full example project](https://github.com/kagkarlsson/db-scheduler/tree/master/examples/spring-boot-example)).√æ√æ### Prerequisites√æ√æ- An existing Spring Boot application√æ- A working `DataSource` with schema initialized. (In the example HSQLDB is used and schema is automatically applied.)√æ√æ### Getting started√æ√æ1. Add the following Maven dependency√æ    ```xml√æ    <dependency>√æ        <groupId>com.github.kagkarlsson</groupId>√æ        <artifactId>db-scheduler-spring-boot-starter</artifactId>√æ        <version>7.2</version>√æ    </dependency>√æ    ```√æ   **NOTE**: This includes the db-scheduler dependency itself.√æ2. In your configuration, expose your `Task`'s as Spring beans. If they are recurring, they will automatically be picked up and started.√æ3. If you want to expose `Scheduler` state into actuator health information you need to enable `db-scheduler` health indicator. [Spring Health Information.](https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-health)√æ4. Run the app.√æ√æ### Configuration options√æ√æConfiguration is mainly done via `application.properties`. Configuration of scheduler-name, serializer and executor-service is done by adding a bean of type `DbSchedulerCustomizer` to your Spring context.√æ√æ```√æ# application.properties example showing default values√æ√ædb-scheduler.enabled=true√ædb-scheduler.heartbeat-interval=5m√ædb-scheduler.polling-interval=30s√ædb-scheduler.polling-limit=√ædb-scheduler.table-name=scheduled_tasks√ædb-scheduler.immediate-execution-enabled=false√ædb-scheduler.scheduler-name=√ædb-scheduler.threads=10√æ# Ignored if a custom DbSchedulerStarter bean is defined√ædb-scheduler.delay-startup-until-context-ready=false√æ```√æ√æ√æ## How it works√æ√æA single database table is used to track future task-executions. When a task-execution is due, db-scheduler picks it and executes it. When the execution is done, the `Task` is consulted to see what should be done. For example, a `RecurringTask` is typically rescheduled in the future based on its `Schedule`.√æ√æOptimistic locking is used to guarantee that a one and only one scheduler-instance gets to pick a task-execution.√æ√æ√æ### Recurring tasks√æ√æThe term _recurring task_ is used for tasks that should be run regularly, according to some schedule (see ``Tasks.recurring(..)``).√æ√æWhen the execution of a recurring task has finished, a `Schedule` is consulted to determine what the next time for execution should be, and a future task-execution is created for that time (i.e. it is _rescheduled_). The time chosen will be the nearest time according to the `Schedule`, but still in the future.√æ√æTo create the initial execution for a `RecurringTask`, the scheduler has a method  `startTasks(...)` that takes a list of tasks that should be ""started"" if they do not already have a future execution.√æ√æ### One-time tasks√æ√æThe term _one-time task_ is used for tasks that have a single execution-time (see `Tasks.oneTime(..)`).√æIn addition to encode data into the `instanceId`of a task-execution, it is possible to store arbitrary binary data in a separate field for use at execution-time. By default, Java serialization is used to marshal/unmarshal the data.√æ√æ### Custom tasks√æ√æFor tasks not fitting the above categories, it is possible to fully customize the behavior of the tasks using `Tasks.custom(..)`.√æ√æUse-cases might be:√æ√æ* Recurring tasks that needs to update its data√æ* Tasks that should be either rescheduled or removed based on output from the actual execution√æ√æ√æ### Dead executions√æ√æDuring execution, the scheduler regularly updates a heartbeat-time for the task-execution. If an execution is marked as executing, but is not receiving updates to the heartbeat-time, it will be considered a _dead execution_ after time X. That may for example happen if the JVM running the scheduler suddenly exits.√æ√æWhen a dead execution is found, the `Task`is consulted to see what should be done. A dead `RecurringTask` is typically rescheduled to `now()`.√æ√æ√æ### Things to note / gotchas√æ√æ* There are no guarantees that all instants in a schedule for a `RecurringTask` will be executed. The `Schedule` is consulted after the previous task-execution finishes, and the closest time in the future will be selected for next execution-time. A new type of task may be added in the future to provide such functionality.√æ√æ* The methods on `SchedulerClient` (`schedule`, `cancel`, `reschedule`) and the `CompletionHandler` will run using a new `Connection`from the `DataSource`provided. To have the action be a part of a transaction, it must be taken care of by the `DataSource`provided, for example using something like Spring's `TransactionAwareDataSourceProxy`.√æ√æ* Currently, the precision of db-scheduler is depending on the `pollingInterval` (default 10s) which specifies how often to look in the table for due executions. If you know what you are doing, the scheduler may be instructed at runtime to ""look early"" via `scheduler.triggerCheckForDueExecutions()`. (See also `enableImmediateExecution()` on the `Builder`)√æ√æ√æ## Versions / upgrading√æ√æ### Version 7.2√æ* PR [#110](https://github.com/kagkarlsson/db-scheduler/pull/110) adds micrometer metrics support. Activated by setting `.statsRegistry(new MicrometerStatsRegistry(...))` on the builder. If you are using the Spring boot starter, the micrometer metrics will be added if you have micrometer on the classpath. √æContributions by [evenh](https://github.com/evenh).√æ√æ### Version 7.1√æ* PR [#109](https://github.com/kagkarlsson/db-scheduler/pull/109) fixes db-scheduler for data sources returning connections where `autoCommit=false`. db-scheduler will now issue an explicit `commit` for these cases.√æ√æ### Version 7.0√æ* PR [#105](https://github.com/kagkarlsson/db-scheduler/pull/105) fixes bug for `Microsoft Sql Server` where incorrect timezone handling caused persisted instant != read instant.√æ  This bug was discovered when adding testcontainers-based compatibility tests and has strangely enough never been reported by users. So this release will cause a change√æ  in behavior for users where the database is discovered to be `Microsoft SQL Server`.√æ√æ### Version 6.8√æ* PR [#96](https://github.com/kagkarlsson/db-scheduler/pull/96) allow for overriding `DbSchedulerStarter` in Spring Boot starter. Contributed by [evenh](https://github.com/evenh).√æ* Upgraded to JUnit 5√æ* Full indentation reformatting of the codebase due to mix of tabs and spaces.√æ√æ### Version 6.7√æ* PR [#87](https://github.com/kagkarlsson/db-scheduler/pull/87) allow for specifying the TimeZone for the Daily schedule and the Schedule string-parser (contributed by [alex859](https://github.com/alex859))√æ* PR [#90](https://github.com/kagkarlsson/db-scheduler/pull/90) adds task-name to logging of failures (contributed by [alex859](https://github.com/alex859))√æ√æ### Version 6.6√æ* PR [#86](https://github.com/kagkarlsson/db-scheduler/pull/85) changes Spring Boot `HealthIndicator` to opt-in rather than default on. (contributed by [ystarikovich](https://github.com/ystarikovich))√æ√æ### Version 6.5√æ* PR [#83](https://github.com/kagkarlsson/db-scheduler/pull/83) added additional exclusions of executions with unresolved task names to `getScheduledExecutions()` and `getExecutionsFailingLongerThan(..)`.√æ* PR [#82](https://github.com/kagkarlsson/db-scheduler/pull/82) sets junit to test-scope in `db-scheduler-boot-starter` `pom.xml`. (contributed by [ystarikovich](https://github.com/ystarikovich))√æ√æ### Version 6.4√æ* Added configuration option from version 6.3 (`deleteUnresolvedAfter(Duration)`) to Spring Boot starter.√æ√æ### Version 6.3√æ* PR [#80](https://github.com/kagkarlsson/db-scheduler/pull/80) adds more graceful handling of unresolved tasks. Executions with unknown tasks will not (in extreme cases) be able to block other executions. They will also automatically be removed from the database after a duration controlled by builder-method `deleteUnresolvedAfter(Duration)`, which currently defaults to 14d.√æ√æ### Version 6.2√æ* PR [#71](https://github.com/kagkarlsson/db-scheduler/pull/71) allows for configuring Spring to delay starting the scheduler  until after context is fully started. (contributed by [evenh](https://github.com/evenh))√æ√æ### Version 6.1√æ* PR [#68](https://github.com/kagkarlsson/db-scheduler/pull/68) allows for specifying time-zone for cron-schedules (contributed by [paulhilliar](https://github.com/paulhilliar))√æ√æ### Version 6.0√æ* PR [#63](https://github.com/kagkarlsson/db-scheduler/pull/63) adds Spring Boot support. Scheduler can now be autoconfigured using tasks available in the Spring context. (contributed by [evenh](https://github.com/evenh))√æ√æ### Version 5.2√æ* PR [#60](https://github.com/kagkarlsson/db-scheduler/pull/60) changes `RecurringTask` so that initial/first execution-time is defined in the `Schedule` and typically is the next Instant according to the Schedule.√æ√æ### Version 5.1√æ* PR [#52](https://github.com/kagkarlsson/db-scheduler/pull/52) redesigns use of the underlying `ExecutorService`, making better use of the backing queue.√æ* PR [#53](https://github.com/kagkarlsson/db-scheduler/pull/53) adds a method to the `SchedulerClient` for checking if a `TaskInstance` already exists, `client.getScheduledExecution(<task-instance-id>)` (fixes [#38](https://github.com/kagkarlsson/db-scheduler/issues/38).√æ* PR [#54](https://github.com/kagkarlsson/db-scheduler/pull/54) adds a builder-method for supplying an externally managed `ExecutorService` (fixes [#51](https://github.com/kagkarlsson/db-scheduler/issues/51)).√æ* PR [#56](https://github.com/kagkarlsson/db-scheduler/pull/56) adds cron-support, `Schedules.cron(<pattern>)` (fixes [#40](https://github.com/kagkarlsson/db-scheduler/issues/40)).√æ√æ### Version 5.0√æ* PR #47 allows for setting max number of executions fetched by the scheduler (contributed by [bgooren](https://github.com/bgooren))√æ* PR #48 fixes a bug for medium-sized volumes where the scheduler would not continue to poll for executions until there were none left (contributed by [bgooren](https://github.com/bgooren))√æ√æ### Version 4.1√æ* Helper for using a version of the scheduler in unit/integration tests is now available in the artifact, through the class `TestHelper.createManualScheduler(...)`. For usage example see `SchedulerClientTest`.√æ* It is now possible to manually trigger a check for due executions in the database. Of course, if this is done too frequently there will be an increased overhead.√æ* The scheduler can be instructed to do a best-effort attempt at executing executions it sees is being scheduled to run `now()` or earlier through the builder-method `enableImmediateExecution()`.√æ* Bugfix: `scheduler.getScheduledExecutionsForTask(...)` was not working properly√æ√æ### Version 4.0√æ* Track number of consecutive failures of a task. For use in `FailureHandler` to avoid retrying forever, or retry with back-off.√æ√æ**Upgrading to 4.x**√æ* Add column `consecutive_failures` to the database schema. See table definitions for [postgresql](db-scheduler/src/test/resources/postgresql_tables.sql), [oracle](https://github.com/kagkarlsson/db-scheduler/src/test/resources/oracle_tables.sql) or [mysql](https://github.com/kagkarlsson/db-scheduler/src/test/resources/mysql_tables.sql). `null` is handled as 0, so no need to update existing records.√æ√æ### Version 3.3√æ* Customizable serlizer (PR https://github.com/kagkarlsson/db-scheduler/pull/32)√æ√æ### Version 3.2√æ* Customizable table-name for persistence√æ√æ### Version 3.1√æ* Future executions can now be fetched using the `scheduler.getScheduledExecutions(..)`√æ√æ### Version 3.0√æ* New builders for task-creation, making it clearer what the config-options are. (See `Tasks` class and examples)√æ* Better default for failure handling for one-time tasks√æ* Enables recurring tasks to have data√æ* `Schedule.getNextExecutionTime` can now use all data from `ExecutionComplete`√æ√æ**Upgrading to 3.x**√æ* No schema changes√æ* Task creation are preferrably done through builders in `Tasks` class√æ√æ### Version 2.0√æ* Possible to `cancel` and `reschedule` executions.√æ* Optional data can be stored with the execution. Default using Java Serialization.√æ* Exposing the `Execution`to the `ExecutionHandler`.√æ√æ**Upgrading to 2.x**√æ* Add column `task_data` to the database schema. See table definitions for [postgresql](db-scheduler/src/test/resources/postgresql_tables.sql), [oracle](db-scheduler/src/test/resources/oracle_tables.sql) or [mysql](db-scheduler/src/test/resources/mysql_tables.sql).√æ√æ## FAQ√æ√æ#### Why `db-scheduler` when there is `Quartz`?√æ√æThe goal of `db-scheduler` is to be non-invasive and simple to use, but still solve the persistence problem, and the cluster-coordination problem.√æ It was originally targeted at applications with modest database schemas, to which adding 11 tables would feel a bit overkill..√æ√æ#### Why use a RDBMS for persistence and coordination?√æ√æKISS. It's the most common type of shared state applications have.√æ√æ#### I am missing feature X?√æ√æPlease create an issue with the feature request and we can discuss it there.√æIf you are impatient (or feel like contributing), pull requests are most welcome :)√æ√æ#### Is anybody using it?√æ√æYes. It is used in production at a number of companies, and have so far run smoothly."
Semaku/exist-dita,486,1,1,1,Organization,False,eXist DB module for DITA processing,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",5,Java,"{'': 2, 'md': 1, 'xml': 1}",23,1,7,1,0,2258,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,11,0,,,exist-dita√æ==========√æ√æeXist DB module for DITA processing
eclipse-ee4j/enterprise-deployment,756,0,13,9,Organization,False,enterprise-deployment,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",8,Java,"{'': 1, 'md': 3}",38,10,4,9,0,760,True,2,14,1,0,1,27,0,1,13,1,1,1,10565,0,7,0,132,30,,,
WZTENG/TChat,159811,43,3,18,User,False,ü•í ÂÆâÂçìÁâà-È´ò‰ªøÂæÆ‰ø°„ÄÇÊñáÂ≠ó„ÄÅÂõæÁâá„ÄÅËßÜÈ¢ë„ÄÅËØ≠Èü≥„ÄÅ‰ΩçÁΩÆ„ÄÅÊúãÂèãÂúàÁ≠â„ÄÇ,,,22,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",297,1,0,1,5,1153,True,0,2,0,0,0,0,0,0,7,0,1,2,1,4,0,0,5,,5,,"## :rocket: ÁºñÁ†Å‰∏çÊòìÔºåÁÇπ‰∏™starÔºÅ ##√æ√æ**iOSÁâàÔºöhttps://github.com/WZTENG/ZChat**√æ√æ**Êú¨È°πÁõÆ‰ΩøÁî®ÁΩëÊòì‰∫ë‰ø°IMÂä†‰∏äÁΩë‰∏äÂºÄÊ∫êÈ°πÁõÆÁºñÂÜôÔºå√æÔºàÈôÑ‰∏ä‰ΩøÁî®ÁöÑÂºÄÊ∫êÂú∞ÂùÄÔºåÂ¶ÇÊúâ‰æµÊùÉÊàñÈÅóÊºèÈ©¨‰∏ä‰øÆÊîπÔºâ„ÄÇ**√æ√æ### ‰ΩøÁî®‰ª•‰∏ãÂºÄÊ∫êÈ°πÁõÆÂπ∂‰øÆÊîπ‰∫ÜÈÉ®ÂàÜÂÜÖÂÆπ ###√æ√æ > https://github.com/Curzibn/BottomDialog<br/>√æ > https://github.com/LuckSiege/PictureSelector<br/>√æ > https://github.com/Jude95/SwipeBackHelper<br/>√æ > https://github.com/CJT2325/CameraView<br/>√æ > https://github.com/bingoogolapple/BGAQRCode-Android<br/>√æ > https://github.com/Naoki2015/CircleDemo<br/>√æ > https://github.com/koral--/android-gif-drawable/<br/>√æ > https://github.com/Sunzxyong/Recovery<br/>√æ > https://github.com/wenmingvs/LogReport<br/>√æ > https://github.com/SumiMakito/AwesomeQRCode<br/>√æ > https://github.com/CarGuo/GSYVideoPlayer<br/>√æ√æÂΩìÂâçÁºñËæëÁâàÊú¨‰∏éÁºñËØëÁéØÂ¢ÉÔºö√æ√æ- Android Studio 3.1.2√æ- Gradle Version 4.4√æ- Android Plugin Version 3.1.2√æ- Android SDK Platform-Tools 27.0.3√æ- Android 7.1.1 API25√æ- ÁúüÊú∫ÂéüÁîü7.1.2√æ√æÊèê‰æõÂ∑≤ÊúâÊµãËØïË¥¶Âè∑ÔºåËØ∑Âãø‰øÆÊîπÁõ∏ÂÖ≥‰ø°ÊÅØÔºÅ<br/>√æ > Ë¥¶Âè∑Ôºödawa<br/>√æ > ÂØÜÁ†ÅÔºö123456<br/>√æ√æ‰∏∫‰∫ÜÂáèÂ∞è‰ΩìÁßØÂè™‰øùÁïô‰∏Ä‰∏™armeabi-v7aÔºåÂ¶ÇÊûúÈÉ®ÂàÜÊâãÊú∫Âá∫Áé∞ÈîôËØØËØ∑Ëá™Ë°å‰øÆÊîπÈÖçÁΩÆ<bt/>√æ√æ* :memo:ËØ¥Êòé:android studio 3.1.2ÂèØËÉΩ‰øÆÊîπ‰∫Ü‰ªÄ‰πà‰∏úË•øÔºåÊöÇÊó∂ÂéªÊéândkÔºå‰∏çÁÑ∂ÊèêÁ§∫CreateProcess error=2, Á≥ªÁªüÊâæ‰∏çÂà∞ÊåáÂÆöÁöÑÊñá‰ª∂„ÄÇ(ÈîôËØØÊèêÁ§∫ÊåáÂêë‰∏Ä‰∏™ndkÊñá‰ª∂)√æ√æ* :bug:Â∑≤Áü•Bug:<br/>√æ   > 1. ÈÉ®‰ªΩ‰ΩéÁâàÊú¨Á≥ªÁªü‰æßÊªëËøîÂõû‰ºöÊòæÁ§∫ÈÄèÊòéÊ°åÈù¢(Êú™‰øÆÂ§ç)<br/>√æ   > 2. ‰∫åÁª¥Á†ÅÊâ´ÊèèÊ°ÜÊú™Ê†πÊçÆÂ±èÂπïÂ∞∫ÂØ∏ËøõË°åË∞ÉÊï¥(Êú™‰øÆÂ§ç)<br/>√æ   > 3. ~~ÊúãÂèãÂúàÂ∞èËßÜÈ¢ëÁõÆÂâçÊó†Ê≥ïÂú®6.0‰ª•‰∏ä‰ΩøÁî®Ôºå‰ºöÂØºËá¥Â¥©Ê∫É(Ê≠£Âú®‰øÆÂ§çÔºå2017/05/12 ‰øÆÂ§çÂ¥©Ê∫ÉÔºå‰ΩÜÊó†Ê≥ïÊí≠ÊîæÔºå2018/01/24 ‰øÆÂ§çÂÆåÊàê„ÄÇ)~~<br/>√æ   > 4. ~~‰øÆÂ§ç‰ΩéÁâàÊú¨ÊèêÁ§∫jarÂåÖÈîôËØØ(2017/05/10 ‰øÆÂ§çÂÆåÊàê)~~<br/>√æ√æ* :memo:Êó•Âøó:<br/>√æ   > 1. 2018/01/23<br/>  >> :art:Êõ¥Êñ∞È´òÂæ∑Âú∞Âõæ 3DMap_5.7.0 Navi_5.6.0 Search_5.7.0 Location_3.7.0 20180109ÁâàÊú¨<br/>√æ                         >> :art:Êõ¥Êñ∞ËÅäÂ§©ÂÆö‰ΩçÂèëÈÄÅÂõæÁâá‰∏∫ÂÆûÊó∂ÂõæÁâáÔºå‰ΩÜÊé•Êî∂ÂõæÁâá‰∏∫ÈªòËÆ§ÂõæÁâá<br/>√æ   > 2. 2018/01/24<br/>  >> :art:Êõ¥Êñ∞ÊúãÂèãÂúàËßÜÈ¢ë‰∏∫IJKPlayerÊí≠ÊîæÂô®ÔºåÂèØ‰ª•Ê≠£Â∏∏Êí≠ÊîæËßÜÈ¢ë<br/>√æ   > 3. 2018/01/25<br/>  >> :sparkles:Â¢ûÂä†ÊúãÂèãÂúàÈü≥‰πêËøûÊé•Âà∞ÁôæÂ∫¶ÈöèÊú∫Êí≠ÊîæÊ≠åÊõ≤<br/>√æ   > 4. 2018/01/31<br/>  >> :art:‰øÆÊîπÊúãÂèãÂúàÈìæÊé•‰ΩøÁî®jsoupÁà¨Ëô´ÁÆÄÂçïÂàÜÊûêÁΩëÈ°µÂÜçÂà∑Êñ∞ÂÜÖÂÆπ<br/>√æ   > 5. 2018/02/01<br/>  >> :sparkles:ÂçáÁ∫ßIMÂà∞4.0ÔºåÂ¢ûÂä†Â•ΩÂèãÂú®Á∫øÁä∂ÊÄÅ<br/>√æ   > 6. 2018/02/02<br/>  >> :sparkles:Â¢ûÂä†ËÅäÂ§©Ë°®ÊÉÖÈõ®<br/>√æ   > 7. 2018/02/06<br/>  >> :bug:‰øÆÂ§çËÆæÁΩÆÈáåÈù¢ÁöÑ""ÁΩëÁªúÈÄöËØùËÆæÁΩÆ"",""Èü≥ËßÜÈ¢ëÈÄöËØùÁΩëÁªúÊé¢Êµã""ÁöÑbug<br/>√æ   > 8. 2018/03/06<br/>  >> :art:ÊîπËøõTabÂ∞èÁ∫¢ÁÇπÁÇπÂáªÂ∞±Ê∂àÂ§±ÁöÑ""bug""<br/>√æ   > 9. 2018/05/15<br/>  >> :art:ÊîπËøõToolbarËøîÂõûÊåâÈíÆ‰∏éÊ†áÈ¢òÈó¥Èöô<br/>√æ   > 10. 2018/08/21<br/>  >> :art:‰øÆÊîπÊúãÂèãÂúàÂèëË°®ÁïåÈù¢„ÄÇÂæÆ‰ø°‰ΩøÁî®GridViewÔºåÊú¨È°πÁõÆ‰ΩøÁî®RecyclerView‰∏éÂæÆ‰ø°ÊïàÊûúÊúâÁÇπÂå∫Âà´Ôºå‰∏ªË¶ÅÂú®ÂæÆ‰ø°ÊïàÊûú‰∏∫Ë¶ÜÁõñÔºåÊú¨È°πÁõÆ‰∏∫ÈÄè‰º†„ÄÇ<br/>√æ   > 11. 2018/08/22<br/>  >> :sparkles:Â¢ûÂä†Á±ª‰ººÂÖ¨‰ºóÂè∑‰æßÊªëÊÇ¨ÊµÆÁêÉÊïàÊûúÔºå‰∏éÂæÆ‰ø°Êúâ‰∏ÄÁÇπÂå∫Âà´ÔºàËøòÊúâÁÇπÂ∞èbugÔºâ„ÄÇÂêåÊó∂Âú®SwipeBackHelper‰∏≠Â¢ûÂä†Ëß¶Êë∏ÂõûË∞ÉÂÆûÁé∞‰ΩçÁΩÆÂà§Êñ≠Êù•Â§ÑÁêÜ„ÄÇ<br/>√æ   > 12. 2018/11/23<br/>  >> :art:‰øÆÊîπÊúãÂèãÂúàÂõæÁâáÊµèËßàÊïàÊûúÔºåÂÖ∑ÊúâÁÇπÂáªÊîæÂ§ß‰∏éËøîÂõûÁº©Â∞èÊïàÊûú„ÄÇ<br/>√æ√æ:art: Êà™Âõæ<br/>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170309-133335.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170309-133340.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170314-151150.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170309-133350.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170309-132948.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170310-101434.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170310-101618.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170310-101902.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170320-104011.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170322-154439.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-141033.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151113.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151211.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151222.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151249.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151457.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-151527.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-154807.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170412-154834.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170413-105031.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170413-105042.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170413-105052.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170414-174236.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075030.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075050.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075101.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075133.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075140.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075148.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075155.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170420-075301.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170426-133027.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170426-133039.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170426-161828.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170426-161908.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170511-130921.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170511-131055.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170511-152618.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170511-153120.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170512-164207.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20170516-135538.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180123-171843.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180124-141604.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180124-141617.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180125-164339.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180126-162243.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180126-162520.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180126-162701.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180125-173849.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180202-161549.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180202-161555.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180202-161557.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180821-185352.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180821-185416.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180822-190422.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180822-190430.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180822-190452.png""/>√æ</div>√æ<div>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180822-190503.png""/>√æ<img width=""288"" height=""512"" src=""https://github.com/WZTENG/TChat/blob/master/screenshots/Screenshot_20180822-190518.png""/>√æ</div>√æÊú™ÂÆåÂæÖÁª≠2018-08-22 13:30"
timewalker74/ffmq,881,51,4,11,User,False,"FFMQ - full-java, light-weight, fast JMS 1.1 queuer implementation",,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",10,Java,"{'': 1, 'md': 2, 'LESSER': 1, 'sh': 1, 'xml': 1}",61,3,3,1,0,2426,True,2,1,0,0,0,1,0,0,7,0,0,0,0,0,0,0,2,,2,,"### What is FFMQ ?√æ√æFFMQ is a full-java, light-weight, fast JMS 1.1 queuer implementation.√æ√æGo to the [FFMQ website](http://timewalker74.github.io/ffmq/) for details"
HY-Org/hy.common.tpool,4066,16,4,17,Organization,False,Á∫øÁ®ãÊ±†„ÄÅ‰ªªÂä°„ÄÅ‰ªªÂä°ÁªÑ„ÄÅ‰ªªÂä°Ê±†ÔºåÂÆöÊó∂‰ªªÂä°ÁöÑÁ±ªÂ∫ì,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'': 4, 'bat': 2, 'sh': 2, 'md': 1, 'jar': 2, 'vsd': 2}",141,1,0,2,6,1218,True,0,0,0,0,0,1,0,0,7,0,1,1,37,12,0,0,9,0,,,"# hy.common.tpool√æ√æ√æ![image](images/Relation.png)√æ√æ√æ√æ### ÂÆöÊó∂‰ªªÂä°ÁöÑ‰ª£Á†ÅÊ†∑‰æãÔºàXMLÈÖçÁΩÆ‰∏æ‰æãÔºâ√æ```xml√æ<?xml version=""1.0"" encoding=""UTF-8""?>√æ√æ<config>√æ√æ <import name=""xconfig""         class=""java.util.ArrayList"" />√æ <import name=""job""             class=""org.hy.common.thread.Job"" />√æ <import name=""jobs""            class=""org.hy.common.thread.Jobs"" />√æ <import name=""servers""         class=""java.util.ArrayList"" />√æ <import name=""server""          class=""org.hy.common.net.ClientSocket"" />√æ √æ √æ √æ <!-- ‰ªªÂä°ÈÖçÁΩÆ‰ø°ÊÅØ -->√æ <xconfig>√æ  √æ     <job id=""ÂÆöÊó∂‰ªªÂä°ÁöÑÊ†áËØÜ"">√æ      <code>ÂÆöÊó∂‰ªªÂä°ÁöÑÊ†áËØÜ</code>√æ      <name>ÂÆöÊó∂‰ªªÂä°ÁöÑÂêçÁß∞</name>√æ      <intervalType ref=""this.$IntervalType_Minute""/>  <!-- ÊåâÂàÜÈíüÈó¥ÈöîÊâßË°å -->√æ                                                       <!-- $IntervalType_Second  Èó¥ÈöîÁ±ªÂûã: Áßí      -->√æ                                                       <!-- $IntervalType_Minute  Èó¥ÈöîÁ±ªÂûã: ÂàÜÈíü    -->√æ                                                       <!-- $IntervalType_Hour    Èó¥ÈöîÁ±ªÂûã: Â∞èÊó∂    -->√æ                                                       <!-- $IntervalType_Day     Èó¥ÈöîÁ±ªÂûã: Â§©      -->√æ                                                       <!-- $IntervalType_Week    Èó¥ÈöîÁ±ªÂûã: Âë®      -->√æ                                                       <!-- $IntervalType_Month   Èó¥ÈöîÁ±ªÂûã: Êúà      -->√æ                                                       <!-- $IntervalType_Manual  Èó¥ÈöîÁ±ªÂûã: ÊâãÂ∑•ÊâßË°å -->√æ      <intervalLen>10</intervalLen>                    <!-- ÊØè10ÂàÜÈíüÊâßË°å‰∏ÄÊ¨° -->√æ      <startTime>2011-06-01 00:00:00</startTime>       <!-- ÂÆöÊó∂‰ªªÂä°ÁîüÊïàÊó∂Èó¥„ÄÇÂ§ö‰∏™ÂºÄÂßãÊó∂Èó¥Áî®ÂàÜÂè∑ÂàÜÈöî -->√æ      <xid>JavaClass</xid>                             <!-- ÂÆöÊó∂‰ªªÂä°ÊâßË°åÂì™‰∏™JavaÁ±ª -->√æ      <methodName>JavaMethod</methodName>              <!-- ÂÆöÊó∂‰ªªÂä°ÊâßË°åJavaÁ±ª‰∏≠ÁöÑÂì™‰∏™ÊñπÊ≥ï -->√æ      <initExecute>true</initExecute>                  <!-- ÂàùÂßãÂåñÊòØÂê¶Á´ãÂç≥ÊâßË°å„ÄÇÈªòËÆ§‰∏∫Ôºöfalse„ÄÇÂèØÈÄâÁöÑ -->√æ      <condition><![CDATA[:MI != 2]]></condition>      <!-- ÊâßË°åÊù°‰ª∂Ôºö‰∏çÁ≠â‰∫é2ÂàÜÊó∂ÊâçÂÖÅËÆ∏ÊâßË°å‰ªªÂä°„ÄÇÂèØÈÄâÁöÑ -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÂπ¥‰ªΩ(:Y) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÊúà‰ªΩ(:M) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÊó•Êúü(:D) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÂ∞èÊó∂(:H) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÂàÜÈíü(:MI) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÁßíÈíü(:S) -->√æ                                                       <!-- ÊâßË°åÊù°‰ª∂ÁöÑÂç†‰ΩçÁ¨¶ÔºöÂπ¥ÊúàÊó•(:YMD)ÔºåÊ†ºÂºè‰∏∫YYYYMMDD Ê†∑ÂºèÁöÑÊï¥Êï∞Á±ªÂûã -->√æ      <cloudServer>192.168.1.100:2021</cloudServer>    <!-- ‰∫ëÊúçÂä°‰∏äÂú∞ÂùÄÂèäÁ´ØÂè£„ÄÇË°®Á§∫ÊâßË°å‰∫ëÁ´ØÊúçÂä°Âô®‰∏äÁöÑ‰ªªÂä°„ÄÇÂèØÈÄâÁöÑ -->√æ     </job>√æ     √æ     √æ     <!-- ÁÅæÂ§áÊú∫Âà∂ÁöÑÊúçÂä°ÂàóË°®„ÄÇÂèØÈÄâÁöÑ -->√æ     <servers id=""DisasterRecoverys"">√æ      <server>√æ          <constructor>√æ           <String>192.168.1.101</String>√æ           <int>9021</int>√æ          </constructor>√æ         </server>√æ         √æ         <server>√æ          <constructor>√æ           <String>192.168.1.102</String>√æ           <int>9021</int>√æ          </constructor>√æ         </server>√æ     </servers>√æ     √æ     √æ     <jobs id=""JOBS"" this=""JOBS"">√æ     √æ      <disasterRecoverys ref=""DisasterRecoverys"" />    <!-- ÁÅæÂ§áÊú∫Âà∂ÁöÑÊúçÂä°ÂàóË°®„ÄÇÂèØÈÄâÁöÑ -->√æ      √æ      <call name=""shutdown"" />                         <!-- ÂÅúÊ≠¢ÊâÄÊúâÂÆöÊó∂‰ªªÂä°„ÄÇÈ¢ÑÈò≤Â§öÊ¨°ÈáçÂ§çÂä†ËΩΩÊó∂ÁöÑÂºÇÂ∏∏ -->√æ      <call name=""delJobs"" />                          <!-- Âà†Èô§ÊâÄÊúâÂÆöÊó∂‰ªªÂä°„ÄÇÈ¢ÑÈò≤Â§öÊ¨°ÈáçÂ§çÂä†ËΩΩÊó∂ÁöÑÂºÇÂ∏∏ -->√æ     √æ      <addJob ref=""ÂÆöÊó∂‰ªªÂä°ÁöÑÊ†áËØÜ01"" />                  <!-- Â∞ÜÂÆöÊó∂‰ªªÂä°Ê∑ªÂä†Âà∞‰ªªÂä°Ê±†‰∏≠ -->√æ      <addJob ref=""ÂÆöÊó∂‰ªªÂä°ÁöÑÊ†áËØÜ02"" />√æ      <addJob ref=""ÂÆöÊó∂‰ªªÂä°ÁöÑÊ†áËØÜn""  />√æ     </jobs>√æ     √æ     √æ     <!-- ÂºÄÂêØÂÆöÊó∂‰ªªÂä° -->√æ     <jobs id=""JOBS"" this=""JOBS"">√æ      <call name=""startup"" />√æ     </jobs>√æ  √æ </xconfig>√æ √æ</config>√æ```√æ√æ√æ√æ### Ëá™ÂÆö‰πâ‰ªªÂä°ÂèäÊâßË°åÁöÑ‰ª£Á†ÅÊ†∑‰æã√æ```java√æ /**√æ  * Ëá™ÂÆö‰πâ‰ªªÂä°√æ  */√æ public class MyTask extends Task<Object>√æ {√æ  private static int $SerialNo = 0;√æ √æ√æ  private synchronized int GetSerialNo()√æ  {√æ   return ++$SerialNo;√æ  }√æ  √æ√æ  public MyTask() √æ  {√æ   super(""‰ªªÂä°Á±ªÂûãÊ†áËØÜ"");√æ  }√æ√æ√æ  @Override√æ  public void execute() √æ  {√æ   try√æ   {√æ    // Ëá™ÂÆö‰πâ‰ªªÂä°ÊâßË°åÁöÑÂä®‰Ωú√æ   }√æ   catch (Exception exce)√æ   {√æ    exce.printStackTrace();√æ   }√æ   finally√æ   {√æ    this.finishTask();  // ‰ªªÂä°ÊâßË°åÂÆåÊàê„ÄÇÂ¶ÇÊûú‰∏çÊâßË°åÊ≠§ÊñπÊ≥ïÔºöË°®Á§∫‰ªªÂä°Â∞ÜÂæ™ÁéØÂæÄÂ§çÁöÑ‰∏ÄÁõ¥ÊâßË°å‰∏ãÂéª√æ   }√æ  }√æ√æ  √æ  @Override√æ  public int getSerialNo() √æ  {√æ   return GetSerialNo();   // ‰ªªÂä°ÁöÑÂ∫èÂè∑√æ  }√æ√æ  √æ  @Override√æ  public String getTaskDesc() √æ  {√æ   return ""‰ªªÂä°ÁöÑÊèèËø∞‰ø°ÊÅØ"";√æ  }√æ }√æ √æ √æ √æ /**√æ  * ÊâßË°åÊñπÂºè01ÔºöÂ∞Ü‰ªªÂä°ÁªÑÁªáÊàê‰ªªÂä°ÁªÑÂêéÂÜçÊâßË°å√æ  */√æ public static void main(String [] args)√æ {√æ  TaskGroup v_TaskGroup = new TaskGroup(""‰ªªÂä°ÁªÑÊ†áËØÜ"");√æ  √æ  for (int v_Index=0; v_Index<100; v_Index++)√æ  {√æ   v_TaskGroup.addTask(new MyTask());      // Â∞Ü‰ªªÂä°Ê∑ªÂä†Âà∞‰ªªÂä°ÁªÑ‰∏≠√æ  }√æ  √æ  v_TaskGroup.addTaskGroupListener(...);      // ÂÆûÁé∞TaskGroupListenerÊé•Âè£ÂêéÔºåÂèØÂú®‰ªªÂä°ÂùáÂÆåÊàêÊó∂Ëß¶ÂèëÊåáÂÆöÂä®‰ΩúÔºàÂèØÈÄâÁöÑÔºâ√æ  v_TaskGroup.startupAllTask();               // ÊâßË°å‰ªªÂä°ÁªÑ√æ }√æ √æ √æ √æ /**√æ  * ÊâßË°åÊñπÂºè02Ôºö‰ªªÂä°Áõ¥Êé•Áî±Á∫øÁ®ãÊ±†Êù•ÊâßË°å√æ  */√æ public static void main(String [] args)√æ {√æ  ThreadPool.getThreadInstance(new MyTask()).startupAndExecuteTask();√æ }√æ```√æ√æ√æ√æ### Á∫øÁ®ãÊ±†ÂèÇÊï∞ÈÖçÁΩÆ√æ```java√æ // ‰ª•‰∏ãÂùá‰∏∫ÈªòËÆ§ÂÄº√æ ThreadPool.setMaxThread(100);       // Á∫øÁ®ãÊ±†‰∏≠ÊúÄÂ§ßÁ∫øÁ®ãÊï∞√æ ThreadPool.setMinThread(10);        // Á∫øÁ®ãÊ±†‰∏≠ÊúÄÂ∞èÁ∫øÁ®ãÊï∞√æ ThreadPool.setMinIdleThread(2);     // Á∫øÁ®ãÊ±†‰∏≠ÊúÄÂ∞èÁ©∫Èó≤Á∫øÁ®ãÊï∞√æ ThreadPool.setIntervalTime(1000L);  // Á≠âÂæÖÊó∂Èó¥Èó¥Èöî(Âçï‰ΩçÔºöÊØ´Áßí)√æ ThreadPool.setIdleTimeKill(60L);    // Á©∫Èó≤Â§öÂ∞ëÊó∂Èó¥ÂêéÁ∫øÁ®ãËá™ÊØÅ(Âçï‰ΩçÔºöÁßí)√æ```√æ√æ√æ√æ### Ê°åÈù¢ÁâàÔºöÁ∫øÁ®ãÊ±†ÁõëÊéßÁïåÈù¢√æ```java√æ ThreadPool.setWatch(true);          // ÈªòËÆ§‰∏∫Ôºöfalse√æ```√æ![image](images/ThreadPoolWatch.png)√æ√æ√æ√æ### ÁΩëÈ°µÁâàÔºöÁ∫øÁ®ãÊ±†ÁõëÊéßÁïåÈù¢ÔºàÊîØÊåÅÈõÜÁæ§Ôºâ√æËÆøÈóÆÁΩëÂùÄÊ†ºÂºè‰∏∫Ôºöhttp://IP:Port/ÊúçÂä°Âêç/analyses/analyseObject?ThreadPool=Y&cluster=Y√æ![image](images/ThreadPoolWatch_Web.png)√æ√æ√æ√æ### ÂÆöÊó∂‰ªªÂä°ÁöÑÁõëÊéßÁïåÈù¢√æËÆøÈóÆÁΩëÂùÄÊ†ºÂºè‰∏∫Ôºöhttp://IP:Port/ÊúçÂä°Âêç/analyses/analyseObject?Job=Y√æ![image](images/Jobs.png)√æ√æ√æ√æ### ÂÆöÊó∂‰ªªÂä°ÁÅæÂ§áÂèåÊ¥ªÈõÜÁæ§ÔºàÊîØÊåÅ‰∫ë‰ªªÂä°ÔºâÔºöÊÄªÁªüÊ®°Âºè√æ1. ÂÆöÊó∂‰ªªÂä°ÁöÑÁÅæÂ§áÈõÜÁæ§Áî±2Âè∞ÊàñÂ§öÂè∞ÊúçÂä°ÁªÑÊàê„ÄÇ√æ√æ2. Â§öÂè∞ÂÆöÊó∂‰ªªÂä°ÊúçÂä°Âô®Â∑•‰ΩúÊó∂ÔºåÂú®Âêå‰∏ÄÊó∂Èó¥ÔºåÂè™Êúâ‰∏ÄÂè∞MasterÊúçÂä°ÊúâÊùÉÊâßË°å‰ªªÂä°„ÄÇÂÖ∂ÂÆÉÊúçÂä°‰∏∫SlaveÊúçÂä°ÔºåÊ≤°ÊúâÊâßË°å‰ªªÂä°ÁöÑÊùÉÈôê„ÄÇ√æ√æ3. ÂΩìÂéüMaster50.89ÂÆïÊú∫Êó∂Ôºå50.241Ëá™Âä®Êé•ÁÆ°ÊâßË°å‰ªªÂä°ÁöÑÊùÉÈôêÔºåÊàê‰∏∫Êñ∞ÁöÑMasterÊúçÂä°„ÄÇ√æ√æ4. ÂΩìÂéüMaster50.89Âè™Êó∂ÊöÇÊó∂Êó†Ê≥ïËÆøÈóÆÊó∂ÔºàÂ¶ÇÁΩëÁªúÂéüÂõ†ÔºâÔºåÊúçÂä°Êú¨ÊòØÊ≠£Â∏∏Êó∂Ôºå50.241ÂÖàËá™Âä®Êé•ÁÆ°ÊâßË°å‰ªªÂä°ÁöÑÊùÉÈôêÔºåÊöÇÊó∂Êàê‰∏∫Êñ∞ÁöÑMasterÊúçÂä°ÔºåÂΩì50.89ÁΩëÁªúÊÅ¢Â§çÊó∂ÔºåÂÜçÂ∞ÜÊâßË°åÊùÉÈôêËøòÁªô50.89„ÄÇ√æ√æ5. Â§öÂè∞ÂÆöÊó∂‰ªªÂä°ÊúçÂä°Èó¥ÔºåÊØè1ÂàÜÈíüÁõëÊµã‰∏ÄÊ¨°ÂøÉË∑≥„ÄÇ√æ√æ6. ÂΩìËøûÁª≠ÂøÉË∑≥3Ê¨°ÔºàÊï∞ÈáèÂèØÈÖçÁΩÆÔºâÂùáÂèëÁé∞ÂéüMasterÊúçÂä°ÂºÇÂ∏∏Êó∂ÔºåÊâçËøõË°åÊùÉÈôêËΩ¨ÁßªÂä®‰Ωú„ÄÇ√æ√æ7. ‰∏∫‰∫Ü‰øùËØÅMasterÊúçÂä°ÁöÑÊÄßËÉΩÔºåÂè™ÊúâÂÖ∂ÂÆÉSlaveÊúçÂä°ÂØπÊï¥‰ΩìÈõÜÁæ§ÂÅöÂøÉË∑≥ÁõëÊµã„ÄÇMasterÊúçÂä°‰∏çÂÜçÂØπÂÖ∂ÂÆÉSlaveÊúçÂä°ÂÅöÂøÉË∑≥ÁõëÊµã„ÄÇ√æ√æ‰∏ãÈù¢ÁöÑÁªÑÁΩëÂõæÔºå‰∏∫ÊüêÈ°πÁõÆÁöÑÂÆûÊàòÁªÑÁΩëÁªìÊûÑ„ÄÇ√æ![image](images/ÂÆöÊó∂‰ªªÂä°ÁÅæÂ§áÂèåÊ¥ªÈõÜÁæ§.png)√æ√æ√æ√æ### ÂÆöÊó∂‰ªªÂä°ÁÅæÂ§áÂèåÊ¥ªÈõÜÁæ§ÊúçÂä°ÁöÑÁõëÊéßÈ°µÈù¢√æ![image](images/ÂÆöÊó∂‰ªªÂä°ÁÅæÂ§áÂèåÊ¥ªÈõÜÁæ§.ÁõëÊéßÈ°µÈù¢.png)√æ√æ√æ√æ---√æ#### Êú¨È°πÁõÆÂºïÁî®JarÂåÖÔºåÂÖ∂Ê∫êÁ†ÅÈìæÊé•Â¶Ç‰∏ã√æÂºïÁî® https://github.com/HY-ZhengWei/hy.common.net Á±ªÂ∫ì√æ√æÂºïÁî® https://github.com/HY-ZhengWei/hy.common.base Á±ªÂ∫ì"
baloise/test-automation-framework,716,0,34,7,Organization,False,,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",22,Java,"{'': 4, 'xml': 2, 'yml': 1, 'md': 2}",296,7,5,11,3,1825,True,8,7,1,0,7,16,5,2,8,0,1,1,1,1,0,0,83,21,,,"# test-automation-framework (TAF)√æ√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8c8551f4acb54108b7cc372c84cb174a)](https://app.codacy.com/app/baloise/test-automation-framework?utm_source=github.com&utm_medium=referral&utm_content=baloise/test-automation-framework&utm_campaign=Badge_Grade_Dashboard)√æ√æ[![gitpod-IDE](https://img.shields.io/badge/open--IDE-as--gitpod-blue.svg?style=flat&label=openIDE)](https://gitpod.io#https://github.com/baloise/test-automation-framework)√æ√æ## travis [![Travis Status](https://travis-ci.org/baloise/test-automation-framework.svg?branch=master)](https://travis-ci.org/baloise/test-automation-framework) √æ√æ## circle ci [![CircleCI Status](https://circleci.com/gh/baloise/test-automation-framework.svg?style=svg)](https://circleci.com/gh/baloise/test-automation-framework)√æ√æ# TAF is a test automation framework based on JUnit and Selenium √æ```√æit can be used for Java Swing and Web Applications (HTML)√æ```√æ√æ## goals√æ- improve efficiency in test automation√æ- minimize manual intervention √æ- maximize robustness√æ- reusability of code√æ√æ## benefits√æ- Tests can be executed with multiple data sets√æ- Multiple scenarios can be tested quickly by varying the data, thereby reducing the number of scripts needed√æ- Hard-coding data can be avoided so any changes to the test scripts do not affect the data being used and vice versa√æ- You‚Äôll save time by executing more tests faster√æ√æ## key ideas√æ- separation of test data from code - use same code or script for different combinations of test input data√æ- store test data in external data sources such as Excel √æ√æFilling and checking via generic methods fill() and check(). Whether and what to be filled is controlled via the data pool √æ- value (fills an input field with the value of a specific excel-cell)√æ- blank (empties the input field)√æ- {skip} skips the field and leaves it in the state it is.√æ√æThe check-method works similar to the fill-method: √æ- value√æ- {skip}√æ√æWithin Excel, the formatting and formula-functionality can be used for defining test input or expected result-data. Dynamic data: an input date ""=today()+30""√æ√æCertain convenience methods can be used√æ√æObject recognition (html) possible via√æ- id√æ- labels√æ- xpath√æ√æ## built upon√æSelenium√æJUnit before after√æ√æinterface to Jira -> reporting of test case status√æ√æJenkins-jobs"
sparrowzoo/sparrow-mvc,250,8,4,3,User,False,sparrow-mvc spring mvc Ê®°ÊãüÂÆûÁé∞,,,6,Java,"{'': 1, 'md': 1, 'xml': 1, 'png': 1, 'jpg': 1}",13,2,0,1,0,878,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,170,,14,,SPARROW-MVC√æ---√æSPARROW-MVC ÊòØSPARROWÊ°ÜÊû∂ÂÖ∂‰∏≠ÁöÑ‰∏ÄÂëòÔºåÊ®°ÊãüSPRING MVCÂäüËÉΩÂÆûÁé∞„ÄÇ√æÁõÆÂâçÂÆûÁé∞ÂäüËÉΩÂàóË°®√æ- ÂèÇÊï∞Ëá™Âä®ÂåñÊ≥®ÂÖ•√æ- FLASHÂèÇÊï∞Ë∑®È°µÈù¢‰º†ÈÄí(ÂåÖÊã¨‰∏≠‰º†È°µÈù¢ÂíåÈáçÂÆöÂêëÈ°µÈù¢)√æ- RESTFULÈ£éÊ†ºÊîØÊåÅ√æ- ÂèÇÊï∞Ëß£ÊûêÂäüËÉΩ√æ- ËøîÂõûÁªìÊûúËß£Êûê√æ- URL-METHODÊò†Â∞Ñ√æ- URL REWRITEÂäüËÉΩÔºàËá™Âä®ÂéüÁîüÊîØÊåÅÔºâ√æ- Êã¶Êà™Âô®ÊîØÊåÅ√æ- ÂõΩÈôÖÂåñÊîØÊåÅ√æ- JSONËøîÂõûÊîØÊåÅÔºàÂéüÁîüÊîØÊåÅÔºâ√æ- ÂºÇÂ∏∏Áªü‰∏ÄÁªìÊûÑÂåñËßÑËåÉÊîØÊåÅ√æ- HTMLÊúçÂä°Âô®Êéß‰ª∂ÊîØÊåÅ ÂåÖÊã¨grid viewÂäüËÉΩ√æ- ÂÖ∂ÂÆÉÂäüËÉΩ√æ√æ![MVCÂÖ®Á±ªÂõæ](sparrow-mvc.png)√æ‰ª•‰∏äÊòØÁõÆÂâçSPARROW MVCÂÆûÁé∞ÁöÑÂ§ßÈÉ®ÂàÜÂäüËÉΩ√æÂÖ∂‰ªñÊú™Ê∂âÂèäÂäüËÉΩÂ∏åÊúõÂêÑ‰ΩçÂ∞è‰ºô‰º¥ÂèØ‰ª•Â§öÊèêÊÑèËßÅÔºåSPRING‰∏çÁªô‰Ω†ÂÆûÁé∞ÁöÑÔºåÊàëÂ∏Æ‰Ω†‰ª¨ÂÆûÁé∞ÔºåÂè™‰∏∫‰Ω†Áî®ÂæóÊõ¥ÁàΩ„ÄÇ√æ√æÊµãËØïÂú∞ÂùÄ√æ---√æsparrow-test È°πÁõÆÈôÑÂÖ®ÈÉ®DEMO√æÈÄöËøá‰ª•‰∏ãÈ°µÈù¢ÊâìÂºÄdemo√æhttp://localhost:8080/sparrow-test/welcome.jsp√æ√æsparrow-mvc github√æ---√æhttps://github.com/sparrowzoo/sparrow-mvc.git√æ√æÊµãËØïÈ°πÁõÆ√æ---√æhttps://github.com/sparrowzoo/sparrow-test.git√æ√æÈ°πÁõÆÂ¶Ç‰ΩïÂêØÂä®?√æ---√æ‰ªîÁªÜËØªËøôÈáå√æhttps://github.com/sparrowzoo/sparrow√æ√æÊúâÈóÆÈ¢ò?√æ---√æ![ÂæÆ‰ø°](wechat.jpg)
cricci82/hello-world-instrumented,38881,12,5,25,User,False,,,,12,Java,"{'': 6, 'py': 1, 'yaml': 1, 'txt': 1}",291,11,1,2,0,1117,True,0,0,0,0,3,5,0,0,8,0,0,0,0,0,0,0,48,,11,chrisricci/hello-world-instrumented,
dCentralizedSystems/core,1769,6,4,5,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 3, 'sh': 1}",258,2,0,2,0,958,True,3,13,1,2,1,3,1,1,17,1,1,10,87,20,0,0,4,0,,,"# dCentralized Systems Core Engine [![Build Status](https://travis-ci.com/dCentralizedSystems/core.svg?token=sJMhHszeUaesiKUEwkff&branch=master)](https://travis-ci.com/dCentralizedSystems/core)√æ√æThis project is an actively maintained, and slightly simplified (and improved!) version of VMware [Xenon](https://github.com/vmware/xenon).√æ√æPlease review the [wiki](https://github.com/dCentralizedSystems/core/wiki) for further information.√æ√æWe enjoy using it for powering our autonomous robots, on Rasbperri PIs, and for processing large amounts of robot telemetry in the cloud."
INT2204-4-N1/asg1-mangekyousharingan,30743,0,1,2,Organization,False,asg1-mangekyousharingan created by GitHub Classroom,,,4,Java,{},92,1,0,2,0,630,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,15,0,,,
OgdenRobotics/FTC,14929,2,5,5,User,False,FIRST FTC Android Robot Controller Software,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",33,Java,"{'': 26, 'md': 1}",73,1,0,7,0,914,True,0,0,0,0,0,0,0,0,8,0,2,10,2342,0,0,0,1,,1,,# FTC√æFIRST FTC Android Robot Controller Software√æ√æThe software in this rpositiory is developed uning FIRST FTC Programming Resources.√æ√æFIRST Tech Challenge (FTC) Programming Resources:√æhttps://www.firstinspires.org/resource-library/ftc/technology-information-and-resources√æ√æContact: Ogden International School Robotics Team:√æhttp://ogden.cps.edu/robotics-team.html
maruohon/tweakeroo,1014,57,6,25,User,False,A small client-side Minecraft mod that adds various configurable tweaks,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",11,Java,"{'': 3, 'txt': 2, 'md': 1, 'gradle': 1, 'properties': 1, 'bat': 1}",329,15,23,1,0,828,True,50,20,35,9,2,7,2,5,11,0,1,28,888,292,0,0,58,,78,,"Tweakeroo√æ==============√æTweakeroo is a client-side-only Minecraft mod using LiteLoader.√æIt adds a selection of miscellaneous, configurable, client-side tweaks to the game.√æSome examples of these are the ""flexible block placement"" tweak and the ""fast block placement"" tweak.√æFor more information and the downloads (compiled builds), see http://minecraft.curseforge.com/projects/tweakeroo√æ√æCompiling√æ=========√æ* Clone the repository√æ* Open a command prompt/terminal to the repository directory√æ* run 'gradlew build'√æ* The built jar file will be in build/libs/"
ibm-cloud-architecture/refarch-jee-micro-customer-service,27,2,6,4,Organization,False,A component of the https://github.com/ibm-cloud-architecture/refarch-jee reference application. This repository contains the detail of the new Customer microservice during the evolution of an existing JEE monolith to microservices.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",4,Java,"{'md': 2, '': 1}",13,1,0,2,0,1035,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,250,6,,,"### Overview√æ√æCustomerOrderService is a microservice that redirects service requests from BFF layer to Legacy Backend Layer. This service is introduced to implement [Strangler Pattern](https://www.ibm.com/developerworks/cloud/library/cl-strangler-application-pattern-microservices-apps-trs/index.html). Currently it only redirects the requests to EJB layer. In future it can be used to redirect requests to new implementations of services using new technologies e.g. nodejs and nosql√æ√æThe CustomerOrderService exposes the following interfaces√æ- /Customer√æ- /Customer/Address√æ- /Customer/OpenOrder/LineItem√æ- /Customer/OpenOrder/LineItem/id√æ- /Customer/OpenOrder√æ- /Customer/Orders√æ- /Customer/TypeForm√æ- /Customer/Info√æ√æ<br />√æ√æ### Configuration√æ√æOne configuration parameter that this micro service requires is the IP address of the EJB services host. The EJB services host IP address is specified in the environment variables of this application. The environment variable goes as EJBServiceIP=""""√æ√æ<br />√æ√æ### Build WAR using Maven√æ1. Ensure maven is installed√æ2. On command prompt, navigate to CustomerOrderService project√æ3. Run ""mvn clean package"" command√æ4. CustomerOrderService-0.1.war is created under CustomerOrderService/target directory√æ5. Use this war file for deploying the CustomerOrderService module on app server√æ√æ<br>√æ√æ### Security Configuration in server.xml√æThe backend services are secured with basic authentication. Hence the intermediate REST service layer also needs to be secured. Add the following Basic Registry in server.xml file√æ√æ    <ldapRegistry baseDN=""dc=purplecompute,dc=com"" bindDN=""cn=admin,dc=purplecompute,dc=com"" bindPassword=""{xor}Dz4sLChvLTs="" host=""<ldap-server ip>"" id=""ldap"" ignoreCase=""true"" ldapType=""Custom"" port=""31252"" realm=""<ldap-server ip>:31252"" searchTimeout=""8m"">√æ     √æ        <contextPool enabled=""true"" initialSize=""1"" maxSize=""0"" preferredSize=""3"" timeout=""0s"" waitTime=""3000ms""/>√æ        √æ        <ldapCache>√æ            <attributesCache enabled=""true"" size=""4000"" sizeLimit=""2000"" timeout=""1200s""/>√æ            <searchResultsCache enabled=""true"" resultsSizeLimit=""1000"" size=""2000"" timeout=""600s""/>√æ        </ldapCache>√æ    √æ    </ldapRegistry>√æ√æ    √æ<br>   √æ<b>Challenges resolved:</b>√æ<br>√æ1) Client application expects ""ETag"" header and it's value to be present in response headers. Hence had to 1) Pass the value from client to EJB Layer and then 2) Extract the Etag header value from response of EJB layer to the client (again as ETag header in response to client)"
omnirom/android_packages_services_Telephony,88471,2,16,30,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",16,Java,"{'mk': 2, 'xml': 2, '': 3, 'cfg': 1, 'flags': 1}",15096,13,0,63,0,2559,True,1,0,0,0,0,3,0,0,6,0,0,0,0,0,0,0,628,1,,,
nablarch/nablarch-core-jdbc,540,0,11,4,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 2, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 1}",105,2,6,12,0,1375,False,,,,,0,39,0,0,7,1,0,0,0,0,21,0,104,0,,,# nablarch-core-jdbc √æ√æ√æ| master | develop |√æ|:-----------|:------------|√æ|[![Build Status](https://travis-ci.org/nablarch/nablarch-core-jdbc.svg?branch=master)](https://travis-ci.org/nablarch/nablarch-core-jdbc)|[![Build Status](https://travis-ci.org/nablarch/nablarch-core-jdbc.svg?branch=develop)](https://travis-ci.org/nablarch/nablarch-core-jdbc)|
Esri/cordova-plugin-advanced-geolocation,383,73,13,35,Organization,False,Highly configurable native Android interface to both GPS and NETWORK on-device location providers. ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 1, 'md': 3, 'sh': 1, 'txt': 1, 'json': 1, 'xml': 1, 'png': 1}",159,1,4,3,2,1622,True,6,37,0,2,0,31,0,0,9,0,0,0,0,0,39,1,587,112,,,"# cordova-plugin-advanced-geolocation (Android-only)√æ√æHighly configurable native interface to [GPS](http://developer.android.com/reference/android/location/LocationManager.html#GPS_PROVIDER) and [NETWORK](http://developer.android.com/reference/android/location/LocationManager.html#NETWORK_PROVIDER) on-device [location providers](http://developer.android.com/reference/android/location/LocationProvider.html). It will return and identify any location data registered by the on-device providers including real-time [satellite info](http://developer.android.com/reference/android/location/GpsSatellite.html).√æ√æIt also offers direct access to [CellInfo](http://developer.android.com/reference/android/telephony/CellInfo.html), [CellLocation](http://developer.android.com/reference/android/telephony/CellLocation.html) and [CellSignalStrength](https://developer.android.com/reference/android/telephony/CellSignalStrength.html) data.√æ√æIn comparison to the W3C HTML Geolocation API, this plugin provides you with significantly greater control and more information to make better decisions with geolocation data.√æ√æIf you are experiencing annoying jumping around of your geolocation coordinates then this plugin will help. It seperates GPS from NETWORK coordinates and allows you smooth out the user experience.√æ√æThis plugin is available via [npm](https://www.npmjs.com/package/cordova-plugin-advanced-geolocation).√æ√æ## Supported Platforms√æ√æ**Android-only.** This plugin is designed for Android versions between Android 5.0.0 (Lollipop / API Level 21) and Android 6.x (Marshmallow / API Level 23). √æ√æ**IMPORTANT** This library currently doesn't implement any Android N+ GPS capabilities. All capabilities in the current plugin should be compatible with Android 5+. See the [issues](https://github.com/Esri/cordova-plugin-advanced-geolocation/issues) list for the most current information.√æ√æCordova supports the following android [releases](https://github.com/apache/cordova-android/releases).√æ√æ## Quick Start!√æ√æHere are the cliff notes for getting started. More details on the Cordova CLI can be found [here](https://cordova.apache.org/docs/en/latest/guide/cli/index.html).√æ√æ`cordova create cordova-advanced-geolocation com.esri.geo GeoTest`√æ√æ`cd cordova-advanced-geolocation`√æ√æ`cordova platform add android`√æ√æIf you are running the latest version of Cordova you don't need to run `update`:√æ√æ`cordova platform update android@5.0.0` [choose 5.0.0 or higher] √æ√æ`cordova plugin add https://github.com/esri/cordova-plugin-advanced-geolocation.git`√æ√æIn `config.xml` modify the `src` to either ` <content src=""sample-map.html"" />` or `<content src=""sample-leaflet-map.html"" />`√æ√æ`cordova build`√æ√æPlug in your phone and run: `cordova run android`, or in Android Studio select `^D`.√æ√æ## IMPORTANT!√æ√æThis API does **NOT** conform to the coding patterns described in the W3C Geolocation API Specification. √æ√æUse this plugin to gain significantly greater control and insight into which location provider submitted geolocation data. √æ√æThis plugin won't increase device accuracy. Accuracy is heavily dependent on the quality of the GPS antenna and the GPS processor. Most smartphones and tablets use consumer-priced GPS chipsets and micro-strip antennas which under perfect conditions typically return between 3 - 10 meters accuracy, at best. For more information check out this series of [blog posts](http://www.andygup.net/android-gps/). √æ√æExternal consumer GPS devices may help provide better accuracy, faster location acquisition and less location fluctuation. Here's a good article on [Why Buy an External GPS Antenna?](http://www.ebay.com/gds/Why-Buy-an-External-GPS-Antenna-/10000000177631439/g.html).√æ√æIf your requirements specifically call for less than 3 meter accuracy then consider using a commercial, external high-accuracy GPS such as the Trimble R1 and slave it to your device via Bluetooth.  √æ√æ**PRIVACY WARNING** Keep in mind the [W3C security and privacy considerations](http://dev.w3.org/geo/api/spec-source.html#security). This plugin uses native geolocation functionality only. Users will not automatically see a W3C Geolocation prompt, they will only get native Android prompts. The plugin requires the following Android User Permissions: [ACCESS_COARSE_LOCATION](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION), [ACCESS_FINE_LOCATION](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_FINE_LOCATION), [ACCESS_NETWORK_STATE](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_NETWORK_STATE), [ACCESS_WIFI_STATE](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_WIFI_STATE) and [INTERNET](http://developer.android.com/reference/android/Manifest.permission.html#INTERNET).√æ√æ# API Reference√æ√æClick [here](api_reference.md) to read all about it.√æ√æ√æ## Example Usage√æ√æ```javaScript√æ    √æ    // Implement this in `deviceready` event callback√æ    AdvancedGeolocation.start(function(success){√æ√æ        try{√æ            var jsonObject = JSON.parse(success);√æ√æ            switch(jsonObject.provider){√æ                case ""gps"":√æ      //TODO√æ                    break;√æ√æ                case ""network"":√æ      //TODO√æ                    break;√æ√æ                case ""satellite"":√æ      //TODO√æ                    break;√æ                    √æ                case ""cell_info"":√æ                 //TODO√æ                 break;√æ                 √æ                case ""cell_location"":√æ                 //TODO√æ                 break;  √æ                √æ                case ""signal_strength"":√æ                 //TODO√æ                 break;               √æ            }√æ        }√æ        catch(exc){√æ            console.log(""Invalid JSON: "" + exc);√æ        }√æ    },√æ    function(error){√æ        console.log(""ERROR! "" + JSON.stringify(error));√æ    },√æ    ////////////////////////////////////////////√æ    //√æ    // REQUIRED:√æ    // These are required Configuration options!√æ    // See API Reference for additional details.√æ    //√æ    ////////////////////////////////////////////√æ    {√æ        ""minTime"":500,         // Min time interval between updates (ms)√æ        ""minDistance"":1,       // Min distance between updates (meters)√æ        ""noWarn"":true,         // Native location provider warnings√æ        ""providers"":""all"",     // Return GPS, NETWORK and CELL locations√æ        ""useCache"":true,       // Return GPS and NETWORK cached locations√æ        ""satelliteData"":false, // Return of GPS satellite info√æ        ""buffer"":false,        // Buffer location data√æ        ""bufferSize"":0,        // Max elements in buffer√æ        ""signalStrength"":false // Return cell signal strength data√æ    });√æ√æ√æ```√æ√æ## Use Cases√æ√æHere are example use cases for the different ways location providers can be set in the configuration options via the `providers` attribute:√æ√æ* **`""gps""`** Activates only the GPS provider. Best accuracy where device has an unobstructed view of the sky.√æ* **`""network""`** Activates only the Network provider. Best accuracy indoors and urban/downtown areas with tall buildings where device does not have an unobstructed view of the sky and cellular service is available and/or WiFi. √æ* **`""cell""`** Access only cell network information. √æ* **`""all""`** Activates GPS, Network and Cellular providers. Allows you to take advantage of network providers to establish initial location and then use GPS to finalize a more accurate location. Typically the device will provide the network location first before the GPS warms up. After the GPS warms up, and if the accuracy is good enough for your requirements, then you would switch to using the GPS locations. The Cellular provider gives you access to cell tower location information.√æ* **`""some""`** Activates only GPS and Network providers. Allows you to take advantage of network providers to establish initial location and then use GPS to finalize a more accurate location. Typically the device will provide the network location first before the GPS warms up. After the GPS warms up, and if the accuracy is good enough for your requirements, then you would switch to using the GPS locations.√æ√æ√æ## Geolocation Data Description√æ√æThe following geolocation data may be exposed and accessible by this API if the on-device provider is available and enabled:√æ* Real-time GPS location√æ* Cached GPS location√æ* GPS satellites meta data√æ* Real-time Network location triangulation√æ* Cached Network location√æ* Cell tower information (type of information varies by device, OS version and cell service provider)√æ* Cellular network signal strength√æ√æ## FAQ√æ√æ* **Which location providers does this plugin use?** The plugin can be configured to use both [GPS](http://developer.android.com/reference/android/location/LocationManager.html#GPS_PROVIDER) and [NETWORK](http://developer.android.com/reference/android/location/LocationManager.html#NETWORK_PROVIDER) location providers. NETWORK location providers require access to the internet whether it's via cellular or WiFi connection. The plugin does not use [PASSIVE](http://developer.android.com/reference/android/location/LocationManager.html#PASSIVE_PROVIDER) location providers because you have no direct control over those.√æ* **What is the difference between `CellInfo` and `CellLocation` data?** It can be confusing because they have a lot of overlapping capabilities and may provide slightly different data, as well. They are both focused on providing cell tower information. `CellLocation` is only triggered during an [PhoneStateListener.LISTEN_CELL_LOCATION](http://developer.android.com/reference/android/telephony/PhoneStateListener.html#LISTEN_CELL_LOCATION) event and has two types: [CdmaCellLocation](http://developer.android.com/reference/android/telephony/cdma/CdmaCellLocation.html) and [GsmCellLocation](http://developer.android.com/reference/android/telephony/gsm/GsmCellLocation.html). `CellInfo` contains a sub-set of information focused on the cell tower's id and its signal strength and is derived by querying [TelephonyManager.getAllCellInfo()](http://developer.android.com/reference/android/telephony/TelephonyManager.html#getAllCellInfo()), and there are four different types that are device and provider dependent: [CellInfoCdma](http://developer.android.com/reference/android/telephony/CellInfoCdma.html), [CellInfoWcmda](http://developer.android.com/reference/android/telephony/CellInfoWcdma.html), [CellInfoGsm](http://developer.android.com/reference/android/telephony/CellInfoGsm.html) and [CellInfoLte](http://developer.android.com/reference/android/telephony/CellInfoLte.html). √æ* **How is cell signal strength information provided?** There are two ways that signal strength information is derived. The first is when the signal strength changes and the second is when `CellInfo` changes. There are differences in the data that is returned between [SignalStrength](https://developer.android.com/reference/android/telephony/SignalStrength.html) and [CellSignalStrength](https://developer.android.com/reference/android/telephony/CellSignalStrength.html). You will get access to both sets of information depending on what event triggered the change.√æ* **Will this library work as a background process?** No. This library is **not** designed to be used while minimized. Because of its potential to consume large amounts of memory and CPU cycles it will only provide locations, by default, while the application is in the foreground and active.√æ* **I got a plugin not supported error, what do I do?** If you get the following error `Plugin doesn't support this project's cordova-android version. cordova-android: 4.1.1, failed version requirement: >=5.0.0√æSkipping 'cordova-plugin-advanced-geolocation' for android`, then you most likely need to upgrade your version of cordova-android. You can explicitly upgrade by running the following command in your cordova project directory `cordova platform update android@5.0.0`. √æ* **How come this plug-in does not support iOS?** iOS does not give you the same granular-level control over the location manager as does Android. √æ* **Does the plugin store location data?** No. The only information it stores intentionally is the `action` setting in the Configuration options. The reason that is stored is so the application can automatically restart after being paused or placed in the background.√æ√æ## Sample Mapping App√æ√æIncluded with the plugin are two sample mapping apps called `sample-map.html` and `sample-leaflet-map.html`. To use it simply change the following line in your `config.xml` to point to the app's location, for example:√æ√æ```javscript√æ√æ   <content src=""sample-map.html"" />√æ√æ```√æ√æ![Sample Mapping App](sample_mapping_app.png)√æ√æ## Licensing√æ√æCopyright 2017 Esri√æ√æLicensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at√æ√æ[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)√æ√æUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.√æ√æA copy of the license is available in the repository's [license.txt]( license.txt) file.√æ√æ[](Esri Tags: JavaScript HTML5 GPS Geolocation ArcGIS Location Tools Cordova PhoneGap)√æ[](Esri Language: JavaScript)"
kwanulee/PatternExample,1378,0,0,3,User,False,,,,18,Java,"{'': 1, 'md': 1}",32,1,0,2,0,1010,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,26,,7,,"#Design Patterns Code Examples√æ√æÏù¥ Ï†ÄÏû•ÏÜåÏóê ÎÇòÏò® CodeÎäî [Head First Design Patterns](http://shop.oreilly.com/product/9780596007126.do) Ï±ÖÏùò ÏòàÏ†úÎ•º [IntelliJ IDEA IDE](https://www.jetbrains.com/idea/) ÌîÑÎ°úÏ†ùÌä∏ ÌòïÏãùÏúºÎ°ú ÎßåÎì† Í≤ÉÏûÖÎãàÎã§.√æ√æÍ∞Å Ìå®ÌÑ¥Ïùò ÏòàÏ†ú ÌîÑÎ°úÏ†ùÌä∏Î•º Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú Îã§Ïö¥ Î∞õÍ∏∞ ÏúÑÌï¥ÏÑúÎäî Îã§Ïùå Î∞©Î≤ïÏùÑ ÏÇ¨Ïö©ÌïòÎ©¥ Ìé∏Î¶¨Ìï©ÎãàÎã§.√æ√æ1. **Chrome Î∏åÎùºÏö∞Ï†Ä**ÏóêÏÑú [GitZip for github](https://chrome.google.com/webstore/detail/gitzip-for-github/ffabmkklhbepgcgfonabamgnfafbdlkn) ÏÇ¨Ïù¥Ìä∏Î•º Ï†ëÏÜçÌïòÏó¨ **[CHROMEÏóê Ï∂îÍ∞Ä]** Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨ **GitZip for github** ÌôïÏû• ÌîÑÎ°úÍ∑∏Îû®ÏùÑ **Chrome**Ïóê Ï∂îÍ∞ÄÌï©ÎãàÎã§.√æ![DownGit ÏòàÏ†ú](figure/gitzip-install.png)√æ2. Îã§Ïö¥ Î∞õÍ≥†Ïûê ÌïòÎäî **GitHub Ï†ÄÏû•ÏÜåÏùò ÌäπÏ†ï ÎîîÎ†âÌÜ†Î¶¨**Ïùò Îπà Í≥µÍ∞ÑÏùÑ ÎçîÎ∏î ÌÅ¥Î¶≠ÌïúÎã§.√æ√æ Í∞ÄÎ†π, **strategy Ìå®ÌÑ¥Ïùò SimUDuckApp.v0** ÌîÑÎ°úÏ†ùÌä∏Î•º Îã§Ïö¥ Î∞õÏúºÎ†§Î©¥, ÏïÑÎûò Í∑∏Î¶ºÏ≤òÎüº SimUDuckApp.V0 Ìè¥Îçî ÌñâÏùò ÎπàÍ≥µÍ∞ÑÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ïò§Î•∏Ï™Ω ÏïÑÎûòÏóê ÏïÑÎûò Î∞©Ìñ•Ïùò ÌôîÏÇ¥ÌëúÍ∞Ä ÏÉùÏÑ±Îê©ÎãàÎã§.√æ√æ ![DownGit ÏòàÏ†ú](figure/git-folder-download1.png) √æ√æ3. ÌôîÎ©¥ Ïò§Î•∏Ï™Ω ÏïÑÎûòÏùò **ÏïÑÎûò Î∞©Ìñ•Ïùò ÌôîÏÇ¥Ìëú**Î°ú ÎßàÏö∞Ïä§ Ìè¨Ïù∏ÌÑ∞Î•º Ïù¥ÎèôÌïòÎ©¥ **Download Checked Item** Ïù¥ ÎÇòÌÉÄÎÇòÍ≥† Ïù¥Î•º ÌÅ¥Î¶≠ÌïòÏó¨ Îã§Ïö¥Î°úÎìú√æ√æ ![DownGit ÏòàÏ†ú](figure/git-folder-download2.png) "
Wisser/Jailer,125005,452,19,27,User,False,Database Subsetting and Relational Data Browsing Tool.,http://jailer.sourceforge.net/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",38,Java,"{'': 2, 'exe': 3, 'html': 1, 'md': 1, 'xml': 1, 'bat': 4, 'sh': 4, 'db': 3, 'csv': 1, 'jar': 1, 'txt': 3}",2964,1,159,2,10,4770,True,3,21,2,2,0,5,0,0,0,0,1,161,27042,22950,0,0,2,,25,,"# Jailer Database Tool√æ√æJailer is a tool for database subsetting and relational data browsing. √æ√æ - The Subsetter exports consistent, referentially intact row-sets from relational databases,√æ   generates topologically sorted SQL-DML, DbUnit datasets and hierarchically structured XML.√æ - The Data Browser allows bidirectional navigation through the database √æ   by following foreign-key-based or user-defined relationships.√æ√æ√æ<img src=""/docs/screenshot.png"" width=""850"" />√æ√æ## Features√æ√æ - Exports consistent and referentially intact row-sets from your productive database√æ   and imports the data into your development and test environment.√æ - Improves database performance by removing and archiving obsolete data without violating integrity.√æ - Generates topologically sorted SQL-DML, hierarchically structured XML and DbUnit datasets.√æ - Data Browsing. Navigate bidirectionally through the database by following foreign-key-based or user-defined relationships.√æ - SQL Console with code completion, syntax highlighting and database metadata visualization.√æ - A demo database is included with which you can get a first impression without any configuration effort.√æ√æ## Prerequisites√æ√æ - Java JRE 7 (or above)√æ   Important: due to HiDPI graphics support, Java JRE 11 (or above) is strongly recommended.√æ - JDBC-driver for your RDBMS√æ√æ## News√æ√æ - 2020-01-01   The Jailer engine is published in Maven repository. https://mvnrepository.com/artifact/io.github.wisser/jailer-engine√æ - 2019-02-01   The new ""Model Migration Tool"" allows you to easily find and edit the newly added associations if the data model has been extended after the last change to this extraction model.√æ - 2018-04-26   The new feature ""Analyze SQL"" analyzes SQL statements and proposes association definitions. This allows to reverse-engineer the data model based on existing SQL queries.√æ - 2018-03-06   SQL Console with code completion, syntax highlighting and database metadata visualization.√æ - 2017-05-10   New API provides programmatic access to the data export and import functionality. http://jailer.sourceforge.net/api.html√æ - 2017-03-30  Improved filter management. Support for import-filters and literal-filters.√æ - 2017-01-27  Referential cycles can now be exported by deferring the insert of nullable foreign keys.√æ - 2016-21-10  Filter Templates allows you to define rules for assigning filters to columns.Filters on primary key columns will automatically be propagated to the corresponding foreign key columns.√æ - 2015-12-04  Support for oracle's ROWID pseudo-column.√æ - 2016-09-08  New ""Export To"" mode allows to export rows directly into a different schema in the same database.√æ - 2015-12-04  Support for oracle's ROWID pseudo-column.√æ - 2015-10-23  Release 5.0 introduces the ability to collect rows in a separate embedded database. This allows it to export data from read-only databases.√æ - 2011-07-20  Implemented the ""Subset by Example"" feature: Use the Data Browser to collect all the rows to be extracted and let Jailer create a model for that subset.√æ - 2010-04-15  A Data Browser has been introduced. Navigate bidirectionally through the database by following foreign-key-based or user-defined relationships.√æ - 2008-12-23  Jailer now supports the DbUnit flat XML dataset file format, thus allowing the users of the famous JUnit extension DbUnit to use the extracted data for unit testing.√æ - 2007-12-05  Version 2.0 comes with new graphical user interface.√æ - 2007-06-05  Tutorial for Jailer now available.√æ√æ√æ## Installation√æ√æUse the installer ""Jailer-Install-n.n.n.exe"" or unzip the file ""jailer_n.n.n.zip"".√æSee also <a href=""http://jailer.sourceforge.net/faq.html#multiuser"">http://jailer.sourceforge.net/faq.html#multiuser</a>√æ√æ - Database Subsetter√æ    - On windows platform execute ""Jailer.exe"". You can also start ""jailerGUI.bat"".√æ    - On Unix/Linux platform execute the script ""jailerGUI.sh"" or use ""java -jar jailer.jar""√æ√æ - Data Browser√æ    - On windows platform execute ""jailerDataBrowser.exe"", or ""jailerDataBrowser.bat""√æ    - On Unix/Linux platform execute the script ""jailerDataBrowser.sh""√æ√æ## Building√æ√æClone the git repository:√æ√æ* `git clone https://github.com/Wisser/Jailer.git`√æ√æTo build the tool you can just use ant: ( https://ant.apache.org )√æ√æ* `cd Jailer`√æ* `ant`√æ√æ## Contact√æ - Home:    http://jailer.sourceforge.net/ or https://github.com/Wisser/Jailer√æ - Forum:   https://sourceforge.net/p/jailer/discussion/√æ - Support: rwisser@users.sourceforge.net"
filoghost/HolographicDisplays,1714,130,18,108,User,False,Create modern looking holograms in Minecraft.,https://dev.bukkit.org/projects/holographic-displays,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",13,Java,"{'': 1, 'txt': 2, 'md': 1, 'xml': 1}",310,1,6,5,6,2205,True,18,249,10,43,4,26,0,1,9,0,1,41,4197,4744,0,0,5,,57,,"Holographic Displays√æ===================√æ√æBukkit Dev Page: http://dev.bukkit.org/bukkit-plugins/holographic-displays√æ√æAPI tutorial: https://github.com/filoghost/HolographicDisplays/wiki√æ√æDevelopment Builds: https://ci.codemc.io/job/filoghost/job/HolographicDisplays√æ√æ## Maven√æ```xml√æ<repository>√æ    <id>codemc-repo</id>√æ    <url>https://repo.codemc.io/repository/maven-public/</url>√æ</repository>√æ```√æ√æ```xml√æ<dependency>√æ    <groupId>com.gmail.filoghost.holographicdisplays</groupId>√æ    <artifactId>holographicdisplays-api</artifactId>√æ    <version>2.4.0</version>√æ    <scope>provided</scope>√æ</dependency>√æ```√æ√æ## License√æHolographic Displays is free software/open source, and is distributed under the [GPL 3.0 License](https://opensource.org/licenses/GPL-3.0). It contains third-party code, see the included THIRD-PARTY.txt file for the license information on third-party code."
sarojrout/spring-tutorial,95,9,3,19,User,False,This is a complete suite of spring boot couchbase kafka apache pulsar docker,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",9,Java,"{'': 1, 'md': 2, 'xml': 1}",31,2,0,1,0,962,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,48,,11,,"# spring-tutorial√æThis is a complete suit of spring boot, couchbase, kafka, apache pulsar and docker√æ√æVisit the [Wiki](https://github.com/sarojrout/spring-tutorial/wiki) for detail explaination of the project.√æ### License√æ√æMIT License√æ√æCopyright (c) 2017 saroj rout√æ√æPermission is hereby granted, free of charge, to any person obtaining a copy√æof this software and associated documentation files (the ""Software""), to deal√æin the Software without restriction, including without limitation the rights√æto use, copy, modify, merge, publish, distribute, sublicense, and/or sell√æcopies of the Software, and to permit persons to whom the Software is√æfurnished to do so, subject to the following conditions:√æ√æThe above copyright notice and this permission notice shall be included in all√æcopies or substantial portions of the Software.√æ√æTHE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR√æIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,√æFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE√æAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER√æLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,√æOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE√æSOFTWARE."
EmbedITCZ/jbehave-support,1098,4,6,11,Organization,False,Lightweight extension to jbehave,https://embeditcz.github.io/jbehave-support/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",15,Java,"{'': 4, 'md': 2, 'html': 1, 'config': 1, 'xml': 1}",546,6,12,11,0,629,True,9,79,2,14,8,300,8,117,8,0,4,56,3318,1446,0,0,5,0,,,"[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jbehavesupport/jbehave-support-core/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.jbehavesupport/jbehave-support-core)√æ[![CI](https://github.com/EmbedITCZ/jbehave-support/workflows/CI/badge.svg)](https://github.com/EmbedITCZ/jbehave-support/actions?query=CI%3ABuild+branch%3Amaster)√æ[![BrowserStack](https://github.com/EmbedITCZ/jbehave-support/workflows/BrowserStack/badge.svg)](https://github.com/EmbedITCZ/jbehave-support/actions?query=BrowserStack%3ABuild+branch%3Amaster)√æ[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=EmbedITCZ/jbehave-support)](https://dependabot.com)√æ[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=EmbedITCZ_jbehave-support&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=EmbedITCZ_jbehave-support)√æ[![Gitter](https://badges.gitter.im/jbehave-support/community.svg)](https://gitter.im/jbehave-support/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)√æ√æ# jbehave-support√æ√æLight extension to [JBehave](https://jbehave.org) using Spring framework.√æ√æProvides several base steps for working with √æ[REST](jbehave-support-core/docs/Rest-api.md), √æ[SOAP](jbehave-support-core/docs/Web-service.md), √æ[JMS](jbehave-support-core/docs/Jms.md), √æ[SQL](jbehave-support-core/docs/Sql-steps.md), √æ[SSH](jbehave-support-core/docs/Ssh.md), √æ[(Selenium based) web testing](jbehave-support-core/docs/Web-testing.md), √æ[health checks](jbehave-support-core/docs/Health-checks.md) √æalong with support for [verification](jbehave-support-core/docs/General.md#verification), √æ[expression commands](jbehave-support-core/docs/Expression-commands.md) and √æbasic [reporting](jbehave-support-core/docs/Reporting.md).√æ√æCurrently supported Java versions are 8, 11 (latest LTS) and 14 (latest version).√æ√æ## Contents√æ1. [Modules](#modules)√æ1. [Contributors guide](#contributors-guide)√æ1. [Examples](#examples)√æ1. [Best practices](#best-practices)√æ1. [Known issues](#known-issues)√æ1. [Simple use case](#simple-use-case---web-testing)√æ    1. [Add to Java project as a Maven dependency](#add-to-java-project-as-a-maven-dependency)√æ    2. [Create a TestConfig configuration file](#create-a-testconfig-configuration-file)√æ    3. [Create a ui-mapping file](#create-a-ui-mapping-file)√æ    4. [Write your story](#write-your-story)√æ    5. [Write your story class](#write-your-story-class)√æ1. [Thanks](#thanks)√æ√æ## Modules√æ- [core](jbehave-support-core/README.md) - details about integration and usage√æ- [core-test](jbehave-support-core-test/README.md) - contains details about the simple application used for integration tests√æ    √æ## Contributors guide√æContributors guide can be found in [CONTRIBUTING.md](CONTRIBUTING.md)√æ√æ## Examples√æ- [examples](jbehave-support-core/docs/examples/Examples.md) - more example projects like the [simple use case](#simple-use-case---web-testing) shown below.√æ    √æ## Best practices√æ- [Best practices](jbehave-support-core/docs/Best-practices.md)√æ√æ## Known issues√æ- [Known issues](jbehave-support-core/docs/Known-issues.md)√æ    √æ## Simple use case - Web testing√æ√æTo show you how to set up a project using the jbehave-support library, I am going to make a test that Google searches `EmbedITCZ jbehave-support` and checks the result. To learn more about this example check out [Web-testing.md](jbehave-support-core/docs/Web-testing.md).√æ√æOf course you can use jbehave-support for much more than just selenium based testing. For example server communication ([SOAP](jbehave-support-core/docs/examples/Web-service.md), [REST](jbehave-support-core/docs/examples/Rest.md), [JMS](jbehave-support-core/docs/Jms.md)) or database manipulation ([SQL](jbehave-support-core/docs/Sql-steps.md)).√æ√æ### Add to Java project as a Maven dependency√æ√æTo add jbehave-support to a java project, just add [this](https://mvnrepository.com/artifact/org.jbehavesupport/jbehave-support-core) dependency to your pom.xml.√æ```√æ<dependency>√æ    <groupId>org.jbehavesupport</groupId>√æ    <artifactId>jbehave-support-core</artifactId>√æ    <version>[current version number]</version>√æ</dependency>√æ```√æThen build your project (`mvn clean install`) to download all the necessary dependencies.√æ√æAlso, make sure to have the test resources setup correctly, simple setup to use can be like this:√æ```√æ<build>√æ    <testResources>√æ        <testResource>√æ            <directory>src/test/java</directory>√æ            <includes>√æ                <include>**/*.story</include>√æ                <include>**/*.table</include>√æ            </includes>√æ        </testResource>√æ        <testResource>√æ            <directory>src/test/resources</directory>√æ        </testResource>√æ    </testResources>√æ</build>√æ```√æ√æ### Create a TestConfig configuration file√æ√æFrom this file, jbehave-support will take all the necessary information about tested applications and the types of reports you want.√æFirst create a Java class and call it `TestConfig`. Add the spring annotation `@Configuration`.√æ```√æ@Configuration√æpublic class TestConfig {√æ```√æSetting up the application you want to test largely depends on what do you want to test. Generally, you need to add a Spring bean method setting up the necessary parameters. We will be setting-up a WebSetting for Selenium to access google.com. ([More](jbehave-support-core/docs/Web-testing.md#configuration) about setting up web testing)√æ```√æ@Bean√æ@Qualifier(""GOOGLE"")√æpublic WebSetting google() {√æ    return WebSetting.builder()√æ          .homePageUrl(""https://www.google.com"")√æ          .elementLocatorsSource(""home.yaml"")√æ          .build();√æ}√æ```√æThe `@Qualifier` annotation sets up the name, under which we will be able to access this application in our `story`.√æ√æThe `homePageUrl` method sets the url of the web applications home page.√æ√æThe `elementLocatorsSource` methods sets the name of a [file](#create-a-ui-mapping-file) containing addresses of web page elements we want to interact with.√æ√æ### Create a ui mapping file√æ√æIn this yaml file, we need to setup the links to web page elements we want to interact with. I has to be placed in the resources directory, which is on one level above your main code directory:√æ- Project√æ    - src√æ        - main√æ            - java√æ                - your.main.code.directory√æ            - **resources**√æ                - home.yaml√æ            √æThe links and names should be written like this:√æ```√æhome:√æ  search.button.css: ""#tsf > div:nth-child(2) > div > div.FPdoLc > center > input[type='submit']:nth-child(1)""√æ  search.text.css: ""input[type='text'][name='q']""√æ  search.output.css: ""#rso > div:nth-child(1) > div > div.r > a > h3""√æ```√æThe title `home:` is the name of the page these elements can be found on.√æ√æUnder the names `search.button`, `search.text` and `search.output`, we can use these elements in a story.√æ√æThe `.css` extension tells the code, what type of address to look for. (Ex. `.xpath`)√æ√æThe part after the colon is the address of the element itself.√æ√æ[More](jbehave-support-core/docs/Web-testing.md#mapping-files) about ui mapping files√æ√æ### Write your story√æ√æIn your `your.main.code.directory` directory create a `.story` file. I will call it `Google.story`.√æ√æ_(Optional)_ Inside write the narrative, which should explain what is the purpose of this story. It has 3 mandatory parts: `In order to`, `As a` and `I want to`.√æ```√æNarrative:√æIn order to try jbehave-support√æAs a confused human√æI want to see if I can set it up√æ```√æThen write your scenario:√æ```√æScenario: Open Google√æGiven [GOOGLE] homepage is open√æWhen on [home] page these actions are performed:√æ| element       | action | data                      |√æ| search.text   | FILL   | embeditcz jbehave-support |√æ| search.button | CLICK  |                           |√æThen on [home] page these conditions are verified:√æ| element       | property | data    | verifier |√æ| search.output | TEXT     | EmbedIT | CONTAINS |√æ```√æThis scenario opens `www.google.com`, writes `embeditcz jbehave-support` into the Google search bar. Clicks `search` and checks if the first result contains the text `EmbedIT`. Notice instead of lengthy element addresses, the element names defined in `home.yaml` are used.√æ√æ[More](jbehave-support-core/docs/Web-testing.md#web-steps) about web testing steps for your story√æ√æ### Write your story class√æ√æIn the same directory as your `.story` file create a Java class that extends `AbstractSpringStories` and call it `<yourStoryName>Story` (naming is important). Add the annotation `@ContextConfiguration(classes = TestConfig.class)` to link it with your TextConfig class. Leave this class empty.√æ```√æ@ContextConfiguration(classes = TestConfig.class)√æpublic class GoogleStory extends AbstractSpringStories {√æ}√æ```√æ**This class is runnable. When you run it, it runs your story.**√æ√æ## Thanks√æ### Jetbrains√æFor providing us open source licenses to IntelliJ IDEA.√æ√æ### [![Browserstack](docs/browserstack.png)](https://browserstack.com) √æfor providing us with a free license for our project.√æWe use BrowserStack in our build pipeline to make sure that our selenium based testing components are working correctly across multiple browsers."
dstmath/HWFramework,64958,120,12,50,User,False,,,,12,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",20,1,0,1,0,1080,True,0,1,0,0,0,3,0,0,7,0,0,0,0,0,0,0,224,,116,,"# huawei framework source√æ√æ## version:Honor5C, Android 7.0,EMUI5.0√æÊú¨È°πÁõÆ‰∏∫Á†îÁ©∂hwframeworkÂ±ÇÁöÑÊ∫êÁ†Å„ÄÇ√æ√æ```√æadb pull /system/framework .√æ√æadb shell dumpsys activity top // ÂæóÂà∞apkÁöÑpackageName√æ√æadb shell pm path {packageName} //ÂæóÂà∞apkÁöÑÂÆâË£ÖÁõÆÂΩï apkPath eg:/system/priv-app/xxx/xxxx.apk√æ√æadb pull ../{apkPath} .   //‰ªérom‰∏≠ÊèêÂèñapkÊñá‰ª∂√æ√ædextra -dextract *.oat(Êàñ*.odex) //‰ªéoatÊñá‰ª∂ÊàñodexÊñá‰ª∂‰∏≠ÊèêÂèñdex√æ√æjadx d out --show-bad-code *.dex //ËΩ¨Êç¢dex‰∏∫java√æ```√æ* art‰∏ãromÂèçÁºñËØëÊäÄÂ∑ß√æ √æÂú®android 5.0‰πãÂêéÔºåÁ≥ªÁªüÁöÑ/system/frameworkÁõÆÂΩï‰∏ãÁöÑjarÂåÖÈáåÈù¢Â∑≤Áªè‰∏çÂåÖÂê´‰ª£Á†Å‰∫ÜÔºåÂè™ÊòØ‰∏Ä‰∫õÁ©∫ÁöÑjarÊñá‰ª∂„ÄÇ‰ª£Á†ÅË¢´Â≠òÂÇ®Âú®oatÊñá‰ª∂ÊàñËÄÖodexÊñá‰ª∂‰∏≠ÔºåÂÖ∂‰∏≠frameworkÁöÑ‰ª£Á†Å‰∏ªË¶ÅÈõÜ‰∏≠Âú®Ôºö√æ√æ```√æ1. /system/framework/oat/arm64√æ√æ‚îú‚îÄ‚îÄ am.odex√æ‚îú‚îÄ‚îÄ android.test.runner.odex√æ‚îú‚îÄ‚îÄ applist.odex√æ‚îú‚îÄ‚îÄ appwidget.odex√æ‚îú‚îÄ‚îÄ bmgr.odex√æ‚îú‚îÄ‚îÄ bu.odex√æ‚îú‚îÄ‚îÄ com.android.contacts.separated.odex√æ‚îú‚îÄ‚îÄ com.android.future.usb.accessory.odex√æ‚îú‚îÄ‚îÄ com.android.location.provider.odex√æ‚îú‚îÄ‚îÄ com.android.media.remotedisplay.odex√æ‚îú‚îÄ‚îÄ com.android.mediadrm.signer.odex√æ‚îú‚îÄ‚îÄ com.android.nfc_extras.odex√æ‚îú‚îÄ‚îÄ com.google.android.maps.odex√æ‚îú‚îÄ‚îÄ com.google.android.media.effects.odex√æ‚îú‚îÄ‚îÄ com.gsma.services.nfc.odex√æ‚îú‚îÄ‚îÄ com.hisi.perfhub.odex√æ‚îú‚îÄ‚îÄ com.huawei.iconnect.wearable.odex√æ‚îú‚îÄ‚îÄ com.huawei.launcher.separated.odex√æ‚îú‚îÄ‚îÄ com.huawei.systemmanager.separated.odex√æ‚îú‚îÄ‚îÄ com.huawei.theme.stat.odex√æ‚îú‚îÄ‚îÄ content.odex√æ‚îú‚îÄ‚îÄ dpm.odex√æ‚îú‚îÄ‚îÄ ethernet-service.odex√æ‚îú‚îÄ‚îÄ hid.odex√æ‚îú‚îÄ‚îÄ hwServices.odex√æ‚îú‚îÄ‚îÄ hwWifi-service.odex√æ‚îú‚îÄ‚îÄ hwcustServices.odex√æ‚îú‚îÄ‚îÄ hwcustwifi-service.odex√æ‚îú‚îÄ‚îÄ hwpush.odex√æ‚îú‚îÄ‚îÄ hwtransition.odex√æ‚îú‚îÄ‚îÄ ime.odex√æ‚îú‚îÄ‚îÄ input.odex√æ‚îú‚îÄ‚îÄ javax.obex.odex√æ‚îú‚îÄ‚îÄ jcifs-1.3.17-dex.odex√æ‚îú‚îÄ‚îÄ media_cmd.odex√æ‚îú‚îÄ‚îÄ monkey.odex√æ‚îú‚îÄ‚îÄ pm.odex√æ‚îú‚îÄ‚îÄ requestsync.odex√æ‚îú‚îÄ‚îÄ services.odex√æ‚îú‚îÄ‚îÄ settings.odex√æ‚îú‚îÄ‚îÄ sm.odex√æ‚îú‚îÄ‚îÄ svc.odex√æ‚îú‚îÄ‚îÄ telecom.odex√æ‚îú‚îÄ‚îÄ uiautomator.odex√æ‚îú‚îÄ‚îÄ wifi-service.odex√æ‚îî‚îÄ‚îÄ wm.odex√æ√æ2. /system/framework/arm64√æ.√æ‚îú‚îÄ‚îÄ boot-apache-xml.art√æ‚îú‚îÄ‚îÄ boot-apache-xml.oat√æ‚îú‚îÄ‚îÄ boot-bouncycastle.art√æ‚îú‚îÄ‚îÄ boot-bouncycastle.oat√æ‚îú‚îÄ‚îÄ boot-conscrypt.art√æ‚îú‚îÄ‚îÄ boot-conscrypt.oat√æ‚îú‚îÄ‚îÄ boot-core-junit.art√æ‚îú‚îÄ‚îÄ boot-core-junit.oat√æ‚îú‚îÄ‚îÄ boot-core-libart.art√æ‚îú‚îÄ‚îÄ boot-core-libart.oat√æ‚îú‚îÄ‚îÄ boot-ext.art√æ‚îú‚îÄ‚îÄ boot-ext.oat√æ‚îú‚îÄ‚îÄ boot-framework.art√æ‚îú‚îÄ‚îÄ boot-framework.oat√æ‚îú‚îÄ‚îÄ boot-hwEmui.art√æ‚îú‚îÄ‚îÄ boot-hwEmui.oat√æ‚îú‚îÄ‚îÄ boot-hwTelephony-common.art√æ‚îú‚îÄ‚îÄ boot-hwTelephony-common.oat√æ‚îú‚îÄ‚îÄ boot-hwaps.art√æ‚îú‚îÄ‚îÄ boot-hwaps.oat√æ‚îú‚îÄ‚îÄ boot-hwcustEmui.art√æ‚îú‚îÄ‚îÄ boot-hwcustEmui.oat√æ‚îú‚îÄ‚îÄ boot-hwcustTelephony-common.art√æ‚îú‚îÄ‚îÄ boot-hwcustTelephony-common.oat√æ‚îú‚îÄ‚îÄ boot-hwcustframework.art√æ‚îú‚îÄ‚îÄ boot-hwcustframework.oat√æ‚îú‚îÄ‚îÄ boot-hwframework.art√æ‚îú‚îÄ‚îÄ boot-hwframework.oat√æ‚îú‚îÄ‚îÄ boot-ims-common.art√æ‚îú‚îÄ‚îÄ boot-ims-common.oat√æ‚îú‚îÄ‚îÄ boot-okhttp.art√æ‚îú‚îÄ‚îÄ boot-okhttp.oat√æ‚îú‚îÄ‚îÄ boot-org.apache.http.legacy.boot.art√æ‚îú‚îÄ‚îÄ boot-org.apache.http.legacy.boot.oat√æ‚îú‚îÄ‚îÄ boot-org.ifaa.android.manager.art√æ‚îú‚îÄ‚îÄ boot-org.ifaa.android.manager.oat√æ‚îú‚îÄ‚îÄ boot-org.simalliance.openmobileapi.art√æ‚îú‚îÄ‚îÄ boot-org.simalliance.openmobileapi.oat√æ‚îú‚îÄ‚îÄ boot-telephony-common.art√æ‚îú‚îÄ‚îÄ boot-telephony-common.oat√æ‚îú‚îÄ‚îÄ boot-voip-common.art√æ‚îú‚îÄ‚îÄ boot-voip-common.oat√æ‚îú‚îÄ‚îÄ boot.art√æ‚îî‚îÄ‚îÄ boot.oat√æ```√æ√æÊó¢ÁÑ∂ÊâæÂà∞‰∫Ü‰ª£Á†ÅÁöÑÁúüÊ≠£Â≠òÂÇ®‰ΩçÁΩÆÔºåÂè™ÈúÄË¶Å‰ªéËøô‰∫õÊñá‰ª∂‰∏≠ÊèêÂèñÂá∫‰ª£Á†ÅÂç≥ÂèØÔºåÈ¶ñÂÖàÊù•Áúã‰∏ãoatÊñá‰ª∂ÂíåodexÊñá‰ª∂ÁöÑÊú¨Ë¥®:√æ√æ```√æ$ file boot.oat √æboot.oat: ELF 64-bit LSB shared object, ARM aarch64, version 1 (GNU/Linux), dynamically linked, stripped√æ√æ$ file services.odex √æservices.odex: ELF 64-bit LSB shared object, ARM aarch64, version 1 (GNU/Linux), dynamically linked, stripped√æ```√æ√æÂèØ‰ª•ÁúãÂà∞odexÊñá‰ª∂ÂíåoatÊñá‰ª∂Êú¨Ë¥®‰∏äÈÉΩÊòØelfÊñá‰ª∂ÔºàLinux‰∏äÁöÑ‰∏ÄÁßçÂèØÊâßË°åÊñá‰ª∂Ôºâ„ÄÇÈÄöËøáÊü•ÁúãÁõ∏ÂÖ≥ÊñáÊ°£ÂèØ‰ª•ÂèëÁé∞ÔºåoatÊàñodexÊñá‰ª∂‰∏≠ÊòØÂ≠òÂú®ÊúâÂÆåÊï¥ÁöÑdexÊñá‰ª∂ÁöÑÔºåÊàë‰ª¨Âè™ÈúÄË¶Å‰ªéoatÊàñodex‰∏≠Â∞ÜdexÊèêÂèñÂá∫Êù•Âç≥ÂèØ„ÄÇ√æ√æ* Âú®MacÊàñLinuxÂπ≥Âè∞‰∏äÊúâ‰∏™Âº∫Â§ßÁöÑÂ∑•ÂÖ∑dextraÔºåÂè™ÈúÄË¶ÅÂ¶Ç‰∏ãÁöÑÂëΩ‰ª§Â∞±ËÉΩ‰ªéoatÊàñodex‰∏≠ÊèêÂèñÂá∫dexÊñá‰ª∂Ôºö√æ√æ``` √æ$ dextra -dextract services.odex √æ N OAT file (079)√æ OFF: 9b4√æ Dex header @0x10c7899e8 (2721 classes) at 0x9e8: /system/framework/services.jar√æ  Written to system@framework@services.jar@classes.dex√æ Location Length: 30√æ √æÊèêÂèñÂá∫Êù•ÁöÑdexÊñá‰ª∂Ôºö√æ system@framework@services.jar@classes.dex√æ```√æ√æ* Âú®WindowsÂπ≥Âè∞√æ√æwindowsÂπ≥Âè∞Â∑•ÂÖ∑Ôºö[SmaliEx] (https://github.com/testwhat/SmaliEx)√æ √æ PS: ÂØπÊ≠§ËΩ¨Êç¢ËøáÁ®ãÂèØ‰ª•ÂÜô‰∏™ËÑöÊú¨oat2dex.shÊîæÂú®frameworkÁõÆÂΩï‰∏ãÔºåÊù•ÂÆåÊàêÊâπÈáèËΩ¨Êç¢Â∑•‰ΩúÔºö√æ √æ files=`find arm64 oat/arm64 -name ""*.oat"" -o -name ""*.odex""`√æ if [ -d ""tmp"" ]; then√æ  echo Êñá‰ª∂Â§πÂ≠òÂú®√æ  rm -rf tmp√æ fi√æ mkdir tmp√æ echo $PWD√æ prefix=$PWD√æ cd tmp√æ echo ""==========‰ªéoatÊàñodex‰∏≠ÊèêÂèñdex=================""√æ for file in $files√æ do√æ  dextra -dextract ""$prefix/$file""√æ done√æ echo ""===========dexËΩ¨java==============""√æ files=`find . -name ""*.dex""`√æ for file in $files√æ do√æ     jadx -d out --show-bad-code $file√æ done√ædex ÂèçÁºñËØëÂ∞±ÊúâÂæàÂ§öÂ∑•ÂÖ∑Êù•ÂÆûÁé∞‰∫ÜÔºåËøôÈáåÊé®Ëçê `jadx`.√æ√æps: 8.0‰πãÂêédex‰øùÂ≠òÂú®vdex‰∏≠ÈúÄË¶ÅÁî®Êñ∞ÁöÑÂ∑•ÂÖ∑‰ªévdex‰∏≠ÊèêÂèñdexÔºåÂ∑•ÂÖ∑ÈìæÊé•[vdexExtractor](https://github.com/anestisb/vdexExtractor)√æ√æ* Âç°Âà∑ÂåÖÊèêÂèñframeworkÊñπÊ≥ï√æ - system.new.dat.br √æ - system.new.dat√æ - system.img√æ√æ1. .brÊñá‰ª∂ÊòØgoogleÁöÑÂéãÁº©ÁÆóÊ≥ïbrotliÂéãÁº©‰πãÂêéÁöÑ‰∫ßÁâ©ÔºåÈúÄË¶ÅÂÖàËß£ÂéãÁº©ÂæóÂà∞ÂéüÂßãÊñá‰ª∂„ÄÇ√ælinux‰∏ãÂÆâË£ÖbrotliÔºö√æ`apt install brotli`√æ√æ2. Ëß£ÂéãÁº©.brÊñá‰ª∂√æ`brotli --decompress --input system.new.dat.br --output system.new.dat`√æ√æ3. ÊèêÂèñsystem.img, Áî®Âà∞ÂºÄÊ∫êÈ°πÁõÆ[sdat2img](https://github.com/xpirt/sdat2img)√æ`python sdat2img.py system.transfer.list system.new.dat system.img`√æ√æ4. ÊåÇËΩΩsystem.img√æ`mount„ÄÄsystem.img tmp`√æ√ætmpÁõÆÂΩï‰∏ãÂç≥‰∏∫Á≥ªÁªüÊñá‰ª∂„ÄÇ"
1392777056/tensquare_parent,269,5,0,4,User,False,Á§æ‰∫§web,,,18,Java,"{'xml': 1, 'iml': 1}",40,1,0,1,0,629,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,30,,2,,
PrivacyStreams/PrivacyStreams,26935,265,18,42,Organization,False,"Access and process various types of personal data in Android with a set of easy, uniform, and privacy-friendly APIs.",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1}",462,7,14,7,0,1218,True,5,4,0,0,2,11,0,0,7,0,0,0,0,0,0,0,9,2,,,"![Introduction](images/ps_intro.png)√æ√æ# PrivacyStreams√æ√æ[![API](https://img.shields.io/badge/API-16%2B-brightgreen.svg?style=flat)](https://android-arsenal.com/api?level=16)√æ[![Website](https://img.shields.io/website-up-down-green-red/https/privacystreams.github.io.svg?label=docs)](https://privacystreams.github.io/)√æ[![Download](https://api.bintray.com/packages/ylimit/PrivacyStreams/PrivacyStreams-Android-SDK/images/download.svg) ](https://bintray.com/ylimit/PrivacyStreams/PrivacyStreams-Android-SDK/_latestVersion)√æ[![Hex.pm](https://img.shields.io/hexpm/l/plug.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ√æPrivacyStreams is an Android library for easy and privacy-friendly personal data access and processing. It offers a functional programming model for various types of personal data, including locations, photos, audios, sensors, contacts, messages, and more.√æ√æCite (Bibtex):√æ√æ```√æ@article{li)_imwut17_privacystreams,√æ  title={PrivacyStreams: Enabling transparency in personal data processing for mobile apps},√æ  author={Li, Yuanchun and Chen, Fanglin and Li, Toby Jia-Jun and Guo, Yao and Huang, Gang and Fredrikson, Matthew and Agarwal, Yuvraj and Hong, Jason I},√æ  journal={Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies},√æ  volume={1},√æ  number={3},√æ  pages={76},√æ  year={2017},√æ  publisher={ACM}√æ√æ}√æ```√æ√æIn PrivacyStreams, all types of personal data can be accessed and processed with a uniform query interface (UQI):√æ√æ**UQI.getData(Provider, Purpose).transform(Transformation).output(Action)**√æ√æWhere `Provider`, `Transformation`, `Action` are built-in functions and `Purpose` is a description to describe why the data is needed.√æDevelopers only need to find the proper functions to form a query. They don't need to deal with the complicated data formats, multi-threading, runtime permissions, etc.√æ√æBased on the functions used in the query and the purpose specified by the developer, PrivacyStreams is able to generate a privacy description, which can be a part of the app description or the privacy policy to help users understand what personal data is used in the app and why.√æ√æ## Quick examples√æ√æ#### Get email addresses for all contacts.√æ√æ```java√æ    /**√æ     * Get emails addresses for all contacts on the device.√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.READ_CONTACTS"" />√æ     */√æ    public void getEmails(Context context) {√æ        try {√æ            List<List<String>> contactEmails = new UQI(context)√æ                    .getData(Contact.getAll(), Purpose.SOCIAL(""recommend friends""))√æ                    .asList(Contact.EMAILS);√æ            // Do something with contact emails√æ            System.out.println(""Contact emails: "" + contactEmails);√æ        } catch (PSException e) {√æ            e.printStackTrace();√æ        }√æ    }√æ```√æ√æ#### Get the current location.√æ√æ```java√æ    /**√æ     * Get the current location.√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.ACCESS_COARSE_LOCATION"" />√æ     */√æ    public void getCurrentLocation(Context context) {√æ        try {√æ            LatLon latLon = new UQI(context)√æ                    .getData(Geolocation.asCurrent(Geolocation.LEVEL_CITY), Purpose.UTILITY(""check weather""))√æ                    .getFirst(Geolocation.LAT_LON);√æ            // Do something with geolocation√æ            Log.d(""Location"", """" + latLon.getLatitude() + "", "" + latLon.getLongitude());√æ        } catch (PSException e) {√æ            e.printStackTrace();√æ        }√æ    }√æ```√æ√æ#### Monitor location updates.√æ√æ```java√æ    private static final double CENTER_LATITUDE = 40;√æ    private static final double CENTER_LONGITUDE = -80;√æ    private static final double RADIUS = 20.0;√æ√æ    /**√æ     * Monitor location updates and callback when in a circular area.√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION"" />√æ     */√æ    public void geofence(Context context) {√æ        new UQI(context)√æ                .getData(Geolocation.asUpdates(10*1000, Geolocation.LEVEL_EXACT), Purpose.GAME(""notify user""))√æ                .setField(""inRegion"", GeolocationOperators.inCircle(Geolocation.LAT_LON, CENTER_LATITUDE, CENTER_LONGITUDE, RADIUS))√æ                .onChange(""inRegion"", new Callback<Boolean>() {√æ                    @Override√æ                    protected void onInput(Boolean inRegion) {√æ                        // Do something when enters/leaves region.√æ                        Log.d(""Geofence"", inRegion ? ""entering"" : ""leaving"");√æ                    }√æ                });√æ    }√æ```√æ√æ#### Wait and read incoming SMS messages.√æ√æ```java√æ    private static final String SERVER_PHONE_NUMBER = ""123456789"";√æ    private static final String AUTH_MESSAGE_PREFIX = ""Your code is "";√æ√æ    /**√æ     * Wait for SMS messages and read the auth code√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.RECEIVE_SMS"" />√æ     */√æ    public void readAuthSMS(Context context) {√æ        new UQI(context).getData(Message.asIncomingSMS(), Purpose.UTILITY(""two-factor authentication""))√æ                .filter(Message.TYPE, Message.TYPE_RECEIVED)√æ                .filter(Message.CONTACT, SERVER_PHONE_NUMBER)√æ                .filter(StringOperators.contains(Message.CONTENT, AUTH_MESSAGE_PREFIX))√æ                .ifPresent(Message.CONTENT, new Callback<String>() {√æ                    @Override√æ                    protected void onInput(String text) {√æ                        String authCode = text.substring(13);√æ                        // Do something with the auth code√æ                        Log.d(""Auth code"", authCode);√æ                    }√æ                });√æ    }√æ```√æ√æ#### Get local images in media storage.√æ√æ```java√æ    /**√æ     * Get local images in media storage.√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.READ_EXTERNAL_STORAGE"" />√æ     */√æ    public void getLocalImages(Context context) {√æ        try {√æ            List<String> filePaths = new UQI(context)√æ                    .getData(Image.getFromStorage(), Purpose.UTILITY(""read photos""))√æ                    .setField(""filePath"", ImageOperators.getFilepath(Image.IMAGE_DATA))√æ                    .asList(""filePath"");√æ            // Do something with the images√æ            Log.d(""Image paths"", """" + filePaths);√æ        } catch (PSException e) {√æ            e.printStackTrace();√æ        }√æ    }√æ```√æ√æ#### Get microphone loudness periodically.√æ√æ```java√æ    private static final long DURATION = 10 * 1000; // 10 seconds√æ    private static final long INTERVAL = 10 * 60 * 1000; // 10 minutes√æ√æ    /**√æ     * Get microphone loudness periodically.√æ     * Make sure the following line is added to AndroidManifest.xml√æ     * <uses-permission android:name=""android.permission.RECORD_AUDIO"" />√æ     */√æ    public void getLoudnessPeriodically(Context context) {√æ        new UQI(context)√æ                .getData(Audio.recordPeriodic(DURATION, INTERVAL), Purpose.HEALTH(""monitor sleep""))√æ                .setField(""loudness"", AudioOperators.calcLoudness(Audio.AUDIO_DATA))√æ                .forEach(""loudness"", new Callback<Double>() {√æ                    @Override√æ                    protected void onInput(Double loudness) {√æ                        // Do something with the loudness value.√æ                        Log.d(""Loudness"", """" + loudness + "" dB."");√æ                    }√æ                });√æ    }√æ```√æ√æ## Installation√æ√æ#### Option 1. Using Gradle (recommended for the most users)√æ√æAdd the following line to `build.gradle` file under your app module.√æ√æ```gradle√ædependencies {√æ    // The following line imports privacystreams library to your app√æ    compile 'io.github.privacystreams:privacystreams-android-sdk:0.1.7'√æ}√æ```√æ√æThat's it!√æ√æNote that if you want to use Google location service instead of the Android location service, you will need [one more step](https://privacystreams.github.io/pages/install_google_location.html).√æ√æ#### Option 2. From source (recommended for contributors)√æ√æIn Android Studio, the installation involves the following steps:√æ√æ1. Clone this project to your computer.√æ2. Open your own project, import privacystreams-android-sdk module.√æ    - Click **File -> New -> Import module...**.√æ    - Select `privacystreams-android-sdk` directory as the source directory.√æ3. In your app module, add the following line to `dependencies`:√æ    - `compile project(':privacystreams-android-sdk')`√æ√æ## Documentation√æ√æ[LINK](https://privacystreams.github.io/)√æ√æ## Discussion√æ√æ- [GitHub issues](https://github.com/PrivacyStreams/PrivacyStreams/issues)√æ- [Mailing list](https://groups.google.com/forum/#!forum/privacystreams)√æ- Contact the [author](http://ylimit.github.io/)√æ√æ## Acknowledgments√æ√æ- [CHIMPS Lab](http://www.cmuchimps.org/) and [SYNERGY Lab](http://www.synergylabs.org/) at Carnegie Mellon University.√æ- Icons from [Paomedia on iconfinder.com](https://www.iconfinder.com/paomedia)"
opensourceBIM/BinarySerializers,361,3,3,5,Organization,False,BIMserver plugins that provide binary serializations of model data,,,2,Java,{'md': 1},413,1,84,1,0,1621,True,0,0,0,0,0,0,0,0,7,0,1,10,31,19,0,0,68,13,,,# BinarySerializers√æBIMserver plugins that provide binary serializations of model data
EBIvariation/amp-t2d-property-registry,154,0,6,3,Organization,False,Registry service for AMP T2D properties,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1}",89,1,0,5,0,830,True,0,0,0,0,5,14,0,0,8,0,0,0,0,0,0,0,30,1,,,"# amp-t2d-property-registry√æRegistry service for AMP T2D properties.√æ √æ ### OAuth2 authenticated rest content server√æ √æ The authentication is provided by google api.√æ √æ To perform any valid authenticated request please follow the below steps,√æ √æ #### What you need are the following:√æ √æ * Client ID - 548139723323-g70r2bllnlkcgcq85vo5kjshkegitomk.apps.googleusercontent.com√æ * Client Secret - uYtbvxGubqz5hQGAgGH2P0Qm√æ √æ #### Requesting Authorization√æ   Now replace the values needed in the following link and put it in a web browser.√æ  √æ  ``` https://accounts.google.com/o/oauth2/auth?client_id=[Application Client Id]&redirect_uri=urn:ietf:wg:oauth:2.0:oob&scope=[Scopes]&response_type=code ```√æ  √æ  √æ #### Exchanging Authentication code√æ   You should get the standard request for authentication.   Once you have accepted authentication copy the Authentication code.   Take the following code replace the values as needed.√æ √æ ```√æ curl --request POST --data ""code=[Authentication code from authorization link]&client_id=[Application Client √æ Id]&client_secret=[Application Client Secret]&redirect_uri=urn:ietf:wg:oauth:2.0:oob&grant_type=authorization_code""  https://accounts.google.com/o/oauth2/token  √æ ```√æ √æ You should get something like this:√æ √æ ``` {  √æ ‚Äúaccess_token‚Äù:‚ÄúXXXXX‚Äù,√æ ‚Äúexpires_in‚Äù:3600,√æ ‚Äúid_token‚Äù:‚ÄúXXXXX‚Äù,√æ ‚Äúrefresh_token‚Äù:‚ÄúXXXXX‚Äù,√æ ‚Äútoken_type‚Äù:‚ÄúBearer‚Äù√æ } √æ ``` √æ √æ You now have an access token you can use in your Google API call.√æ √æ #### Accessing the endpoints√æ   To access one of the secure rest services we send the access_token like this√æ √æ ```√æ curl -H ""Authorization: Bearer 27647b94-1f9f-4945-ae8f-6521d48fdcad"" <host>:<port>/properties/√æ ```√æ √æ### Sending tokens in swagger√æ Please pass the token in Authorize box value as ""Bearer \<Token>"""
Refinitiv/websocket-api,930,24,95,12,Organization,False,A direct access WebSocket API that enables easy integration into a multitude of client technology environments such as scripting and web. ,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",6,C#,"{'': 1, 'pdf': 2, 'md': 2}",31,1,0,7,0,916,True,1,4,1,4,7,0,6,0,8,0,1,4,744,9016,0,0,18,1,,,"# WebSocket API Examples #√æ√æThis set of example programs demonstrates how to connect to TREP or to Refinitiv Data Platform using Websocket API. These examples are built using widely available Websocket frameworks and follow a [protocol specification](https://docs-developers.refinitiv.com/1582923722485/14977/) for message constructs. This API is governed by the same Apache 2 open source license as defined in the LICENSE.md file.√æ√æThe examples demonstrate the following usage:√æ√æ* Connecting, logging in, and requesting a single item√æ* Requesting multiple items with a view in one message via a Batch Request√æ* Posting content to an item√æ* Logging in via Authentication√æ* Monitoring connection health via Ping messages√æ√æThe examples are found under the Applications/Examples folder. Examples are provided in the following languages:√æ√æ* C#√æ* Java√æ* Python√æ* Perl√æ* Node.js√æ* Go√æ* R√æ* Ruby√æ√æMore details for each example are included in a __README.md__ file in its respective folder.√æ√æ## RDP (formerly EDP) Examples√æ√æExamples in Python, CSharp and Java that demonstrate consuming content from the Refinitiv Data Platform Real-Time Service (formerly Elektron Data Plaform) are in `Applications/Examples/EDP` in the respective language folders. More details are included in a __README.md__ file in each example folder.√æ√æ# Contributing√æIn the event you would like to contribute to this repository, it is required that you read and sign the following:√æ√æ- [Individual Contributor License Agreement](https://github.com/refinitiv/websocket-api/blob/master/Elektron%20API%20Individual%20Contributor%20License%20Agreement.pdf)√æ- [Entity Contributor License Agreement](https://github.com/refinitiv/websocket-api/blob/master/Elektron%20API%20Entity%20Contributor%20License%20Agreement.pdf)√æ√æPlease email a signed and scanned copy to `sdkagreement@refinitiv.com`.  If you require that a signed agreement has to be physically mailed to us, please email the request for a mailing address and we will get back to you on where you can send the signed documents.√æ√æDocumentation for the TREP WebSocket API and a Question & Answer forum are available at the  [WebSocket API Section of the Refinitiv Developer Community](https://developers.refinitiv.com/websocket-api). √æ√æ# Support SLA√æIssues raised via GitHub will be addressed in a best-effort manner. For broad questions regarding Websocket API, please refer to documentation and [Q&A forum on Developer Community](https://developers.refinitiv.com/elektron/websocket-api/qa) which is supported by an existing active community of API users."
AOSPA/android_packages_apps_ParanoidPapers,60004,4,6,9,Organization,False,,,,4,Python,"{'mk': 1, 'xml': 1, 'py': 1}",50,5,2,17,0,2846,True,0,0,0,0,0,0,0,0,7,0,2,4,59,982,0,0,321,8,,,
soumyajit405/git,62232,0,1,2,User,False,,,,7,Java,{'': 1},15,1,0,0,0,591,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,11,,1,,
Sharp-Team/oop-javalab-master,69,1,0,2,Organization,False,For TuanVm,,,4,Java,{'md': 1},6,1,0,2,8,606,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,24,3,,,# oop-javalab-master√æFor TuanVm
zhangliangming/HPLyrics,45414,110,6,29,User,False,Android‰ªøÈÖ∑ÁãóÂä®ÊÑüÊ≠åËØçÔºàÊîØÊåÅÁøªËØëÂíåÈü≥ËØëÊ≠åËØçÔºâÊòæÁ§∫ÊïàÊûúÔºåÊîØÊåÅlrcÊ≠åËØç„ÄÅkscÊ≠åËØç„ÄÅkrcÊ≠åËØç„ÄÅtrcÊ≠åËØç„ÄÅÁΩëÊòì‰∫ëAPIÊ≠åËØçÂíåhrcÊ≠åËØçÁ≠âÊ≠åËØçÊ†ºÂºèÁöÑÊòæÁ§∫ÔºåÊîØÊåÅÂä®ÊÑüÊ≠åËØçÂà∂‰Ωú„ÄÇ,,,8,Java,"{'': 2, 'gradle': 2, 'properties': 1, 'bat': 1, 'md': 1}",121,1,83,1,0,842,True,0,14,0,2,0,0,0,0,8,0,1,5,576,219,0,0,52,,76,,"# ÁÆÄ‰ªã #√æËØ•ÂºÄÊ∫ê‰æùËµñÂ∫ìÊòØ‰πê‰πêÈü≥‰πêÊí≠ÊîæÂô®ÈáåÁöÑ‰∏Ä‰∏™Ê≠åËØçÊ®°ÂùóÂäüËÉΩÔºåÁé∞Âú®ÊääËØ•ÂäüËÉΩÊ®°ÂùóÁã¨Á´ãÂá∫Êù•ËøõË°å‰ºòÂåñÔºåÂπ∂ÂºÑÊàê‰∫Ü‰∏Ä‰∏™ÂºÄÊ∫ê‰æùËµñÂ∫ìÔºåÂÖ∂ÂÆÉÈü≥‰πêÊí≠ÊîæÂô®È°πÁõÆÂè™Ë¶ÅÂºïÁî®ËØ•Â∫ìÂπ∂Ë∞ÉÁî®Êé•Âè£Ôºå‰æøÂèØËΩªÊùæÂÆûÁé∞‰∏é‰πê‰πêÈü≥‰πêÊí≠ÊîæÂô®‰∏ÄÊ†∑ÁöÑÂä®ÊÑüÊ≠åËØçÊòæÁ§∫ÊïàÊûúÔºåÊ≥®ÔºöÂÖ∂ÈªòËÆ§Ê≠åËØçÊ†ºÂºèÁöÑÁºñÁ†ÅÈÉΩÊòØutf-8Ôºå‰ΩøÁî®ËøáÁ®ã‰∏≠ËØ∑Ê≥®ÊÑèÁºñÁ†Å‰∏ÄËá¥ÁöÑÈóÆÈ¢òÔºåÂÖ∂È°πÁõÆÂú∞ÂùÄÂ¶Ç‰∏ãÔºö[‰πê‰πêÈü≥‰πêÊí≠ÊîæÂô®](https://github.com/zhangliangming/HappyPlayer5.git)„ÄÇ√æ√æ√æ# ‰ΩøÁî®Ê≥®ÊÑè #√æ√æ- 1.xÁâàÊú¨ÔºåÂè™Ë¶ÅÊòØ‰ΩøÁî®Ëá™ÂÆö‰πâviewÊù•ÂÆûÁé∞ÔºåÊØèÊ¨°ÈÉΩ‰ΩøÁî®handlerÂéªÂà∑Êñ∞viewÔºå‰ΩÜÊòØÂ¶ÇÊûúhandlerÈòüÂàó‰∏≠ÊúâÂæàÂ§ö‰ªªÂä°ÊâßË°åÔºåÈÇ£Â∞±Êó†Ê≥ï‰øùËØÅÊ≠åËØçÊØèÊ¨°ÈÉΩÂú®100msÂÜÖÂà∑Êñ∞‰∏ÄÊ¨°„ÄÇ√æ- 2.xÁâàÊú¨Ôºå‰∏ªË¶ÅÊòØ‰ΩøÁî®surfaceviewÊù•ÂÆûÁé∞ÔºåÊØèÊ¨°Âà∑Êñ∞Êó∂Èó¥‰∏∫40msÔºåÊ≠åËØçÊ∏êÂèòÁõ∏ÂØπ‰ºöÊµÅÁïÖ„ÄÇ√æ- 3.xÁâàÊú¨Ôºå‰∏ªË¶ÅÊòØ‰ΩøÁî®TextureViewÊù•ÂÆûÁé∞ÔºåÊØèÊ¨°Âà∑Êñ∞Êó∂Èó¥‰øÆÊîπ‰∏∫50msÔºåTextureViewÊîØÊåÅviewÁöÑÁõ∏ÂÖ≥Âä®ÁîªÂ±ûÊÄß√æ√æ# 2.xÁâàÊú¨‰ΩøÁî®Ê≥®ÊÑè #√æ- ‰∏ªÈ¢òÔºöÊàë‰∏ªË¶ÅÊòØ‰ΩøÁî®Theme.AppCompat.Light.NoActionBarÁöÑ‰∏ªÈ¢òÔºåÊàëËØïËøáÂÖ∂ÂÆÉÁöÑ‰∏ªÈ¢òÔºå‰ºöÂØºËá¥surfaceviewËÉåÊôØ‰∏∫ÈªëËâ≤ÔºåÂπ∂‰∏î‰∏çËÉΩÈÄèÊòéÁöÑÈóÆÈ¢ò„ÄÇ√æ- surfaceviewÂ≠òÂú®ÁöÑÈóÆÈ¢òÔºåÊ≤°ÊúâviewÁõ∏ÂÖ≥ÁöÑÊóãËΩ¨Ôºå‰ΩçÁßªÁ≠âÂä®ÁîªÂíåtouch‰∫ã‰ª∂ÔºåÊâÄ‰ª•Êàë‰πê‰πêÈü≥‰πêÁöÑÊóãËΩ¨ÁïåÈù¢‰ºöÂá∫Áé∞ÈóÆÈ¢òÔºåÂ¶ÇÊûúÊúâÁõ∏ÂÖ≥Âä®ÁîªÈúÄÊ±ÇÁöÑÔºåÊÖéÁî®„ÄÇ√æ√æ# 3.xÁâàÊú¨‰ΩøÁî®Ê≥®ÊÑè #√æ- ËÆæÁΩÆÁ°¨‰ª∂Âä†ÈÄüÔºöandroid:hardwareAccelerated=""true"" √æ- android4.0‰ª•‰∏ä√æ- Â≠òÂú®ÁöÑÈóÆÈ¢òÔºåÊ≤°Êúâtouch‰∫ã‰ª∂√æ√æ# ÁΩëÊòì‰∫ëAPIÊ≠åËØçË∞ÉÁî®ÊñπÂºè #√æ√æ![](https://i.imgur.com/LIGQRmJ.png)√æÊ≥®ÔºöËØ•Ê≠åËØçÂè™ÈÄÇÁî®‰∫éÈÄöËøáapiËé∑ÂèñÊ≠åËØçÔºåÊñá‰ª∂‰øùÂ≠òÊ†ºÂºè‰∏∫Ôºölrcwy„ÄÇÂÖ∂‰∏≠Âä®ÊÑüÊ≠åËØçÂíålrcÊ≠åËØçÂè™ËÉΩÈÄâÂÖ∂‰∏≠‰∏ÄÁßçÔºåÊîØÊåÅÁøªËØëÊ≠åËØçÔºå√æ√æ# Êó•Âøó #√æ√æ## 2020-04-05 ##√æ- Ê∑ªÂä†setRefreshTimeÊé•Âè£Êù•ËÆæÁΩÆÂä®ÊÑüÊ≠åËØçË°åÊ≠åËØç‰∏≠Â≠óÂà∑Êñ∞Êó∂Èó¥√æ- Ê∑ªÂä†setDurationÊé•Âè£Êù•ËÆæÁΩÆÂ§öË°åÊ≠åËØçyËΩ¥ÁöÑÁßªÂä®Êó∂Èó¥√æ√æ## 2020-02-26 ##√æ- Ê∑ªÂä†trcÊ≠åËØçÊîØÊåÅ√æ√æ## 2019-01-18 ##√æ- Ê∑ªÂä†ËØªÂèñÊ≠åËØçapiÊé•Âè£√æ√æ## 2018-12-30 ##√æ- ‰øÆÂ§çÂà∂‰ΩúÊ≠åËØçÈóÆÈ¢òÔºåÊ∑ªÂä†Â§öË°åÊ≠åËØçÊåáÁ§∫Âô®ÂõûË∞ÉÊé•Âè£√æ√æ## 2018-12-29 ##√æ- Ê∑ªÂä†Âà∂‰ΩúÊ≠åËØçÂäüËÉΩ√æ- Ê∑ªÂä†ÁΩëÊòì‰∫ëAPIÊ≠åËØçÊîØÊåÅ√æ- ‰øÆÂ§çÁΩëÊòì‰∫ëAPIÊ≠åËØçÊîØÊåÅ„ÄÅÁøªËØëÊ≠åËØçÊîØÊåÅÈ´ò‰∫ÆÊòæÁ§∫„ÄÅ‰øÆÂ§çÊ≠åËØç‰∏äÊªëÂä®Êó∂ÊúâÊó∂‰∏çÁªòÁîªÁöÑÈóÆÈ¢ò√æ√æ## v3.2 ##√æ- 2018-05-05√æ- Ê∑ªÂä†Ê∑∑Ê∑Ü√æ- Ê∑ªÂä†Âà∑Êñ∞Êó∂Èó¥√æ√æ## v3.0 ##√æ- 2018-04-22√æ- surfaceviewÊõøÊç¢ÊàêTextureView√æ√æ## v2.6 ##√æ- 2018-04-22√æ- ‰øÆÂ§çÂêéÂè∞ÂõûÂà∞ÂâçÂè∞Êó∂ÔºåÊ≠åËØçËßÜÂõæÂÜÖÂÆπ‰∏∫Á©∫ÁöÑÈóÆÈ¢ò√æ- ‰øÆÂ§çÂàùÂßãÊ≠åËØçÊï∞ÊçÆÊó∂ÔºåOffsetYÂÄºÊ≤°ËøòÂéüÁöÑÈóÆÈ¢ò√æ√æ## v2.4 ##√æ- 2018-04-21√æ- Ëá™ÂÆö‰πâviewÊõøÊç¢Êàêsurfaceview√æ- Ê∑ªÂä†Ëé∑ÂèñÊ≠åËØçÂèÇÊï∞ÊñπÊ≥ï√æ√æ## v1.46 ##√æ- 2018-10-02√æ- Ëé∑ÂèñÊ≠åËØçÊúÄÂ§ßÁöÑÂÆΩÂ∫¶ÈªòËÆ§‰∏∫Ëé∑ÂèñÂ±èÂπïÁöÑÂ§ßÂ∞èÁöÑ2/3„ÄÇ√æ- ËÄÉËôëÂà∞Âú®ËÆæÁΩÆÊ≠åËØçÊï∞ÊçÆÊó∂ÔºåËßÜÂõæÂπ∂Ê≤°ÊúâÊòæÁ§∫ÔºåÂØºËá¥Ê≠åËØçÁöÑÊúÄÂ§ßÂÆΩÂ∫¶Ëé∑Âèñ‰∏∫0ÔºåÊâÄ‰ª•ÂàÜÈöîÊ≠åËØçÊó∂Âá∫Áé∞‰∫ÜÈóÆÈ¢òÔºåÊúÄÁªàÂá∫Áé∞Á´ñÁõ¥Ê≠åËØçÁöÑÈóÆÈ¢ò„ÄÇ√æ√æ## v1.44 ##√æ- 2018-08-11√æ- Ê∑ªÂä†HandlerThread√æ- ‰øÆÂ§çÊ≠åËØçÁ±ªÂûãÂàáÊç¢√æ√æ## v1.40 ##√æ- 2018-06-02√æ- minSdkVersion ‰øÆÊîπ‰∏∫19√æ√æ## v1.36 ##√æ- 2018-05-12√æ- ÂèåË°åÊ≠åËØçÁöÑÈªòËÆ§Ê≠åËØçÊ∑ªÂä†Â±ÖÂ∑¶ÊòæÁ§∫ÂíåÂ±Ö‰∏≠ÊòæÁ§∫Ê®°Âºè√æ- ÂèåË°åÊ≠åËØç‰∏çÂõûÊâãÂä®ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞èÊ†áËÆ∞√æ√æ## v1.34 ##√æ- 2018-05-07√æ- ‰øÆÂ§çÊ≠åËØçÂø´ËøõÁÇπÂáªÊåâÈíÆ‰∫ã‰ª∂√æ- 2018-05-06√æ- ‰øÆÂ§çËá™ÂÆö‰πâviewÊ≠åËØç√æ√æ## v1.x ##√æ√æ- ‰øÆÂ§çÂà∂‰ΩúÊ≠åËØçÊó†Ê≥ïÂÆåÊàêÁöÑÈóÆÈ¢ò√æ- ‰øÆÊîπÈü≥ËØëÊ≠åËØçÊòæÁ§∫√æ- Ê∑ªÂä†Âà∂‰ΩúÈü≥ËØëÊ≠åËØçÂÆû‰Ωì√æ- ‰øÆÊîπÂà∂‰ΩúÁøªËØëÊ≠åËØçÂÆû‰Ωì√æ- Ê∑ªÂä†Âà∂‰ΩúÁøªËØëÊ≠åËØçÂÆû‰Ωì√æ- Ê∑ªÂä†‰øÆÊîπÁªòÁîªÊåáÁ§∫Âô®È¢úËâ≤Êé•Âè£√æ- ‰øÆÂ§çÂà∂‰ΩúÊ≠åËØçÈóÆÈ¢ò√æ- LyricsReaderÊ∑ªÂä†ËÆæÁΩÆÊ≠åËØçÊï∞ÊçÆ√æ- Ê∑ªÂä†Âà∂‰ΩúÊ≠åËØçÂÆû‰Ωì√æ- Ê∑ªÂä†Ëé∑ÂèñÂà∂‰ΩúÊ≠åËØçÁä∂ÊÄÅÊé•Âè£√æ- Ê∑ªÂä†Ëé∑ÂèñÂà∂‰ΩúÂêéÁöÑÊ≠åËØçÊé•Âè£√æ- Ê∑ªÂä†Âà∂‰ΩúÊ≠åËØçÈ¢ÑËßàËßÜÂõæ√æ- Ê∑ªÂä†È¢ùÂ§ñÊ≠åËØçÁîüÊàêÂõæÁâáËßÜÂõæÈ¢ÑËßàÂíåÁîüÊàêÈ¢ùÂ§ñÊ≠åËØçÂõæÁâáÂäüËÉΩ√æ- ‰øÆÂ§çÊ≠åËØçÁîüÊàêÂõæÁâáÈóÆÈ¢ò√æ- ‰øÆÂ§çÊ≠åËØçÁîüÊàêÂõæÁâáÈóÆÈ¢ò√æ- ‰øÆÂ§çÊ≠åËØçÁîüÊàêÂõæÁâáËßÜÂõæÁöÑÂ≠ó‰Ωì√æ- ‰øÆÊîπÈÉ®ÂàÜintÂèòÈáèÁöÑÁ±ªÂûã‰∏∫long√æ- ‰øÆÊîπÈÉ®ÂàÜintÂèòÈáèÁöÑÁ±ªÂûã‰∏∫float√æ- Ê∑ªÂä†Ê≠åËØçÁîüÊàêÂõæÁâáÊñá‰ª∂Êé•Âè£√æ- Ê∑ªÂä†Ê≠åËØçÁîüÊàêÂõæÁâáÈ¢ÑËßàËßÜÂõæ√æ- ‰øÆÂ§çÈÄöËøáÊ≠åÊõ≤Êñá‰ª∂ÂêçËé∑ÂèñÊ≠åËØçÊñá‰ª∂ÈóÆÈ¢ò√æ- ‰øÆÂ§çÂ§öË°åÊ≠åËØçÊú™ËØªÊó∂Ê∏êÂèòÁöÑÈóÆÈ¢ò√æ- ‰øÆÂ§çÊúÄÂêé‰∏Ä‰∏™Â≠óÊ∏êÂèòÂá∫ÈîôÁöÑÈóÆÈ¢ò√æ- ‰øÆÊîπÊ≠åËØçÊØèÊ¨°Âà∑Êñ∞ÁöÑÈó¥ÈöîÊúÄÂ∞ë‰∏∫100ms√æ- ‰øÆÊîπÊ≠åËØçÊØèÊ¨°Âà∑Êñ∞ÁöÑÈó¥ÈöîÊúÄÂ∞ë‰∏∫20ms√æ- ‰øÆÂ§çÊú™ËØªÂà∞‰∏ã‰∏ÄË°åÊ≠åËØçÊó∂Ôºå‰∏ä‰∏ÄË°åÊ≠åËØçÊ∏êÂèòÂÆΩÂ∫¶‰∏∫0ÁöÑÈóÆÈ¢ò√æ- ‰øÆÂ§çËÆæÁΩÆÊ≠åËØçËØªÂèñÂô®ÁöÑÈóÆÈ¢ò√æ- 2018-03-04√æ- ‰øÆÂ§çÂèåË°åÊ≠åËØçÂä†ËΩΩÊ≠åËØçÂÆåÊàêÂêéÔºåÊòæÁ§∫È¢ùÂ§ñÊ≠åËØçÊ∏êÂèòÂá∫ÈîôÁöÑÈóÆÈ¢ò√æ- ‰øÆÊîπ‰∫ÜÂ§öË°åÊ≠åËØçÔºåÊªëÂä®Êó∂ÁöÑÊåáÁ§∫Âô®Ê∏êÂèòÈ¢úËâ≤√æ## v1.2 ##√æ√æ- Ê∑ªÂä†Ê≠åËØçviewËé∑ÂèñÊ≠åËØçËØªÂèñÂô®ÊñπÊ≥ï√æ## v1.1 ##√æ√æ- Ê∑ªÂä†Ê≠åËØçËØªÂèñÂô®Ëé∑ÂèñÊ≠åËØçÂÆû‰ΩìÁ±ªÊñπÊ≥ï√æ## v1.0 ##√æ√æ- ÂÆûÁé∞lrc„ÄÅksc„ÄÅkrcÂíåhrcÊ≠åËØçÊ†ºÂºèÁöÑÊòæÁ§∫√æ- ÂÆûÁé∞ÂèåÂ§öË°åÊ≠åËØçÁöÑÊòæÁ§∫„ÄÅÂ≠ó‰ΩìÂ§ßÂ∞è„ÄÅÈ¢úËâ≤„ÄÅÊ≠åËØçÊç¢Ë°å√æ- Â§öË°åÊ≠åËØçÁöÑÂø´Ëøõ„ÄÅÂπ≥ÊªëÁßªÂä®„ÄÅÈ¢úËâ≤Ê∏êÂèò√æ√æ# È¢ÑËßàÂõæ #√æ√æ## Âà∂‰ΩúÊ≠åËØçÁïåÈù¢ ##√æ![](https://i.imgur.com/7cU1njA.png)√æ√æ## ‰∏ªÁïåÈù¢ ##√æ√æ![](https://i.imgur.com/QJnz3sV.png)√æ√æ## Ê≠åËØçÊñá‰ª∂ËØªÂèñÂπ∂È¢ÑËßà ##√æ√æ![](https://i.imgur.com/8ZJYEni.png)√æ√æ## ÂèåË°åÊ≠åËØç-Âä®ÊÑüÊ≠åËØç ##√æ√æ![](https://i.imgur.com/rDsotfc.png)√æ√æ## ÂèåË°åÊ≠åËØç-Èü≥ËØëÊ≠åËØç ##√æ√æ![](https://i.imgur.com/Q8AOiAB.png)√æ√æ## ÂèåË°åÊ≠åËØç-ÁøªËØëÊ≠åËØç ##√æ√æ![](https://i.imgur.com/wlWCzSr.png)√æ√æ## Â§öË°åÊ≠åËØç-lrcÊ≠åËØç ##√æ√æ![](https://i.imgur.com/VgFCIyG.png)√æ√æ## Â§öË°åÊ≠åËØç-Âä®ÊÑüÊ≠åËØç ##√æ√æ![](https://i.imgur.com/XkNMk7l.png)√æ√æ## Â§öË°åÊ≠åËØç-Èü≥ËØëÊ≠åËØç ##√æ√æ![](https://i.imgur.com/7X6AtbZ.png)√æ√æ## Â§öË°åÊ≠åËØç-ÁøªËØëÊ≠åËØç ##√æ√æ![](https://i.imgur.com/g4oZvRw.png)√æ√æ## Â§öË°åÊ≠åËØç-Âø´Ëøõ ##√æ√æ![](https://i.imgur.com/d2g7jc1.png)√æ√æ√æ# Gradle #√æ1.root build.gradle√æ√æ `allprojects {√æ  repositories {√æ   ...√æ   maven { url 'https://jitpack.io' }√æ  }√æ }`√æ √æ2.app build.gradle√æ√æ`dependencies {√æ          compile 'com.github.zhangliangming:HPLyrics:v1.66'√æ }`√æ√æ√æ# Ê∑∑Ê∑ÜÊ≥®ÊÑè #√æ-keep class com.zlm.hp.lyrics.** { *; }√æ√æ# Ë∞ÉÁî®Demo #√æ√æÈìæÊé•: https://pan.baidu.com/s/1j-4wbtiNIfRhypb4uEnX6g ÊèêÂèñÁ†Å: t8dj√æ√æ# Ë∞ÉÁî®Áî®Ê≥ï #√æ√æ![](https://i.imgur.com/eNPR7yy.png)√æ√æ![](https://i.imgur.com/ITkxkjX.png)√æ√æ# ÈÉ®ÂàÜAPI #√æ- setPaintColorÔºöËÆæÁΩÆÈªòËÆ§ÁîªÁ¨îÈ¢úËâ≤√æ- setPaintHLColorÔºöËÆæÁΩÆÈ´ò‰∫ÆÁîªÁ¨îÈ¢úËâ≤√æ- setExtraLyricsListenerÔºöËÆæÁΩÆÈ¢ùÂ§ñÊ≠åËØçÂõûË∞ÉÊñπÊ≥ïÔºåÂ§öÁî®‰∫éÂä†ËΩΩÊ≠åËØçÂÆåÊàêÂêéÔºåÊ†πÊçÆÈ¢ùÂ§ñÊ≠åËØçÁöÑÁä∂ÊÄÅÊù•Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÊòæÁ§∫ÁøªËØë„ÄÅÈü≥ËØëÊ≠åËØçÊåâÈíÆ√æ- setSearchLyricsListenerÔºöÊó†Ê≠åËØçÊó∂ÔºåÊêúÁ¥¢Ê≠åËØçÊé•Âè£√æ- setOnLrcClickListenerÔºöÂ§öË°åÊ≠åËØç‰∏≠Ê≠åËØçÂø´ËøõÊó∂ÔºåÁÇπÂáªÊí≠ÊîæÊåâÈíÆÊó∂ÔºåË∞ÉÁî®„ÄÇ√æ- setFontSizeÔºöËÆæÁΩÆÈªòËÆ§ÁîªÁ¨îÁöÑÂ≠ó‰ΩìÂ§ßÂ∞èÔºåÂèØÊ†πÊçÆÂèÇÊï∞Êù•ËÆæÁΩÆÊòØÂê¶Ë¶ÅÂà∑Êñ∞view√æ- setExtraLrcStatusÔºöËÆæÁΩÆÈ¢ùÂ§ñÊ≠åËØçÁä∂ÊÄÅ√æ- setLyricsReaderÔºöËÆæÁΩÆÊ≠åËØçËØªÂèñÂô®√æ- playÔºöËÆæÁΩÆÊ≠åËØçÂΩìÂâçÁöÑÊí≠ÊîæËøõÂ∫¶ÔºàÊí≠ÊîæÊ≠åÊõ≤Êó∂Ë∞ÉÁî®‰∏ÄÊ¨°Âç≥ÂèØÔºâ√æ- pauseÔºöÊöÇÂÅúÊ≠åËØç√æ- seektoÔºöÂø´ËøõÊ≠åËØç√æ- resumeÔºöÂî§ÈÜí√æ- initLrcDataÔºöÂàùÂßãÂåñÊ≠åËØçÂÜÖÂÆπ√æ- setTranslateDrawLrcColorTypeÔºöËÆæÁΩÆÁøªËØëÊ≠åËØçÁªòÁîªÈ¢úËâ≤Á±ªÂûã√æ- setTranslateDrawTypeÔºöËÆæÁΩÆÁøªËØëÊ≠åËØçÁªòÁîªÁ±ªÂûã√æ√æ# Â£∞Êòé #√æÁî±‰∫éËØ•È°πÁõÆÊ∂âÂèäÂà∞ÈÖ∑ÁãóÁöÑÂä®ÊÑüÊ≠åËØçÁöÑÁâàÊùÉÈóÆÈ¢òÔºåÊâÄ‰ª•ËØ•È°πÁõÆÁöÑ‰ª£Á†ÅÂíåÂÜÖÂÆπ‰ªÖÁî®‰∫éÂ≠¶‰π†Áî®ÈÄî√æ√æ# ÊçêËµ† #√æÂ¶ÇÊûúËØ•È°πÁõÆÂØπÊÇ®ÊúâÊâÄÂ∏ÆÂä©ÔºåÊ¨¢ËøéÊÇ®ÁöÑËµûËµè√æ√æ- ÂæÆ‰ø°√æ√æ![](https://i.imgur.com/hOs6tPn.png)√æ√æ- ÊîØ‰ªòÂÆù√æ√æ![](https://i.imgur.com/DGB9Lq0.png)"
brucevsked/vskeddemolist,519835,8,1,7,User,False,"javascript html css java springboot maven gradle alot of demo in here,Êú¨È°πÁõÆÂåÖÊã¨Êú¨‰∫∫Â§öÂπ¥ÁßØÁ¥ØÂåÖÊã¨È¢ÜÂüüÈ©±Âä®ËÆæËÆ°,ÂâçÁ´ØÔºåÂêéÂè∞ÔºåÈÉ®ÁΩ≤ÔºåÊìç‰ΩúÁ≥ªÁªüÁ≠âÔºåÊ¨¢Ëøéstar&fork",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",23,Java,"{'': 4, 'txt': 8, 'md': 1, 'docx': 1, 'pdf': 1}",671,22,0,1,0,1816,True,0,0,0,0,21,27,20,12,10,0,0,0,0,0,0,0,81,,10,,# vskeddemolist√æ√æËÅîÁ≥ªËØ∑Âä†qq1485559892  √æthis is alot of demo my name is vsked now u can see the java   project at this list  √æ√æ## at first please look at the(Á¥¢ÂºïËØ∑Êü•Áúã‰ª•‰∏ãÊñáÊ°£)  √ævskeddemos/documents/demoÂ∑•Á®ãÂàóË°®ËØ¥Êòé.docx  √ævskeddemos/documents/mavenprojectÂ∑•Á®ãÂàóË°®ËØ¥Êòé.docx    √æ√æÈù¢ÂêëÂàáÈù¢ÁºñÁ®ãÊó•Âøó‰∏éÊÄßËÉΩÁõëÊéßÁ§∫‰æã  √ævskeddemolist\aop√æ√æÈÖçÁΩÆÊñá‰ª∂ÈÖçÁΩÆ  √ævskeddemolist/vskeddemos/configbackup  √æÈÖçÁΩÆÊñá‰ª∂ÁâàÊú¨dockerÁõ∏ÂÖ≥ÈÖçÁΩÆÂ§á‰ªΩ  √ævskeddemolist/vskeddemos/configbackup/docker  √æ√æC++ËØ≠Ë®ÄÁ§∫‰æã  √ævskeddemolist/vskeddemos/cplusplus  √æ## Êï∞ÊçÆÂ∫ìÊâãÂÜåÂ§ßÂÖ®(Ë∂ÖËøá12Áßç‰ª•‰∏äÊï∞ÊçÆÂ∫ìÊâãÂÜå)  √ævskeddemolist/vskeddemos/database  √æ0databaseAbout.txt  √æsql‰ºòÂåñÂ±ÇÊ¨°.txt  √ævskedDb2.txt  √ævskedhadoop.txt  √ævskedhbase.txt  √ævskedkafka.txt  √ævskedmybatis.txt  √ævskedmysql.txt  √ævskedOracle.txt  √ævskedphoenix.txt  √ævskedpostgre.txt  √ævskedredis.txt  √ævskedsqlserver.txt  √æÊñáÊ°£‰∏éÊâãÂÜåÁõ∏ÂÖ≥ÁõÆÂΩïÔºàÁ§∫‰æãÁ¥¢ÂºïÔºåÊâÄÊúâÈÉΩÂèØ‰ª•Âú®ËøôÈáåÊñáÊ°£ÊâæÂà∞Ôºâ  √ævskeddemolist/vskeddemos/documents  √ædemoÂ∑•Á®ãÂàóË°®ËØ¥Êòé.docx  √æmavenprojectÂ∑•Á®ãÂàóË°®ËØ¥Êòé.docx  √æ√æ## ËΩØ‰ª∂‰ΩøÁî®Áõ∏ÂÖ≥ÊâãÂÜå(Ë∂ÖËøá15Áßç‰ª•‰∏äËΩØ‰ª∂‰ΩøÁî®ÊâãÂÜå)  √ævskeddemolist/vskeddemos/documents/software  √ævskedeverything.txt  √ævskedflume.txt  √ævskedidea.txt  √ævskedjquery.txt  √ævskedmaven.txt  √ævskednchan.txt  √ævskednginx.txt  √ævskednpm.txt  √ævskedphotoshop.txt  √ævskedpython.txt  √ævskedresin.txt  √ævskedtomcat.txt  √ævskedultraedit.txt  √ævskedvscode.txt  √æ## ÈÉ®ÁΩ≤ÊâãÂÜå(Ë∂ÖËøá8Áßç‰ª•‰∏äÂ§ßÊï∞ÊçÆÁõ∏ÂÖ≥ÈÉ®ÁΩ≤ÊâãÂÜå)  √ævskeddemolist/vskeddemos/documents/deploy   √ædocker/vskeddocker.txt  √ædocker/vskeddockercompose.txt  √ædocker/vskeddockermysql.txt  √ækubernetes/kubernetesÂçïÊú∫.txt  √ækubernetes/kubernetesÈõÜÁæ§.txt    √æ1jdkÈÖçÁΩÆ.txt  √æ2flumeÈÖçÁΩÆ.txt  √æ3zookeeperÈÖçÁΩÆ.txt  √æ4kafkaÈÖçÁΩÆ.txt  √æ5hadoopÈÖçÁΩÆ.txt  √æ6hbase_phoenixÈÖçÁΩÆ.txt  √æ7elasticsearchÈÖçÁΩÆ.txt  √æ8kibanaÈÖçÁΩÆ.txt  √æopenLDAP  √æ√æ## Á≥ªÁªüÁõ∏ÂÖ≥Á±ªÊâãÂÜå(Ë∂ÖËøá13Áßç‰ª•‰∏äÁ≥ªÁªüÁõ∏ÂÖ≥ÊâãÂÜåÂ∏¶Ëß£ÂÜ≥ÊñπÊ°à)  √ævskeddemolist/vskeddemos/system√æcentos7ÂÆâË£ÖÊåáÂçó.docx  √æftpÁõ∏ÂÖ≥ÂëΩ‰ª§.txt  √æSecureCRT‰øùÂ≠òÊó•ÂøóËÆæÁΩÆ.docx  √ævskedBashShell.txt  √ævskedbat.txt  √ævskedcenteros.txt  √ævskedcplusplus.txt  √ævskedcpu.txt  √ævskeddos.txt  √ævskederlang.txt  √ævskedlinux.txt  √ævskedvagrant.txt  √ævskedvirtualbox.txt  √ævskedwin10.txt  √æwinÂÜôÂÖ•centosÊñá‰ª∂Â§π.docx  √æÂÆâË£ÖÂÆåcentos7miniÂêé.docx  √æËôöÊãüÊú∫ÂÖãÈöÜÂÆåÂêé.docx  √æ√æ‰ΩøÁî®gradleÊûÑÂª∫È°πÁõÆ  √ævskeddemolist/vskeddemos/gradleproject  √æ## ÂêÑÁßçÂâçÁ´ØÁ§∫‰æã(ÂæàÂ§öÁî®Ê≥ï‰∏éÁßØÁ¥ØË∂ÖËøá33Áßç‰ª•‰∏äÂâçÁ´ØÊäÄÊúØÁ§∫‰æã)  √ævskeddemolist/vskeddemos/htmljavascriptcss  √æapexcharts  √æaxiosdemo  √æbinary  √æbootstrapdemo  √ædatetimedemo  √æduallistboxdemo  √æeasyuidemo  √æechartsdemo  √æes6demo  √æflotdemo  √æfontawesomedemo  √ægritterdemo  √æhtmltemplate  √æicheckdemo  √æIon.RangeSlider  √æjavascript  √æjquerydemo  √æjqueryprototype  √æjquerystepsdemo  √æjwttoken  √ælocalOrSessionStore  √æmetisMenudemo  √æmockdemo  √æselect2demo  √æsvgdemo  √æsweetalertdemo  √ætablesdemo  √ætoastrdemo  √ætouchspindemo  √ætreedemo  √æuikit3demo  √æuikitdemo  √æweuidemo  √æÁ§∫‰æãËØ¥Êòé.txt  √æ√æ## ‰ΩøÁî®mavenÊûÑÂª∫ÁöÑÈ°πÁõÆ(Ë∂ÖËøá101Áßç‰∏çÂêåÊäÄÊúØÁ§∫‰æã)  √ævskeddemolist/vskeddemos/mavenproject/  √æ0pomtemplate  √æactivitidemo  √æanimatedemo  √æapitest  √æbabylondemo  √æcommonconfigurationdemo  √æcommonlangdemo  √æcommonscodecdemo  √æcommonscompress  √æcqrsdemo  √ædatadisp  √ædddexample  √ædesignmode  √æelasticsearch  √æexeshell  √æfastdfsclientdemo  √æfilterdemo  √æflinkdemo  √æflume_mys1  √æftpdemo  √æhikaricpdemo  √æhttpunitdemo  √æimgdemo  √æjacksondemo  √æjavafx  √æjavaopcdemo  √æjodatimedemo  √æjodddboomdemo  √æjpinyindemo  √æjsoupdemo  √ækafkatest  √ælog4j2demo  √ælogbackdemo  √æmavendemo  √æmavenÈ°πÁõÆÁõ∏ÂÖ≥ÈóÆÈ¢òËß£ÂÜ≥.docx  √æmemcacheddemo  √æokhttpdemo  √æpoidemonew  √æportscan  √æqueuedemo  √æredisdemo  √æretrofitdemo  √ærmidemo  √ærunjar  √ærunjarex1  √ærxtxdemo  √æsessioncookie  √æshirorestful  √æshirorestfulpagination  √æsimcustc1  √æslf4jdemo  √æsocketdemo  √æspringboot2list  √æspringbootdemo1  √æspringmvcdemo  √æspringmvcjdbctemplate  √æspringmvcmybatismysql  √æspringmvcshiro  √æspringmybatis2demo  √æspringnoxml  √æspringnoxmljdbc  √æspringsessiondemo1  √æssmmv  √æsssdatajpa  √ætess4jdemo  √ætesseractocrdemo  √ætestdemo  √æTestJunit5  √æthymeleafservletdemo  √æthymeleafspringmvc  √ætomcatpass  √æudpdemo1  √ævskedtool  √æwebservcie  √æwebsocketdemo  √æxmldemo  √æyoutudemo  √æzookeeperdemo  √æ‰ΩøÁî®spring bootÁõ∏ÂÖ≥ÁöÑÈ°πÁõÆÂ¶ÇÂâçÂêéÁ´ØÂàÜÁ¶ªÔºåÂ§öÊï∞ÊçÆÊ∫êÁ≠âÁ§∫‰æã  √ævskeddemolist/vskeddemos/mavenproject/springboot2list √æmybatisdemo  √æmybatismutids  √æmybatisphoenixdemo  √æmyfbtest  √æmyfbtest1  √ærediscluster  √æremoteshell  √æspringboot2d1  √æspringboot2d2  √æspringboot2d3  √æspringboota  √æspringbootautostart  √æspringbootelasticsearch  √æspringbootkafka  √æspringbootmonitor  √æspringbootsocket  √æspringdatajpa  √æspringsecurity  √æuserrestddd  √ævskedDbTools  √æwebsocket  √æwebsocketredis  √æ√æ## ÊéßÂà∂Â±ÇÂçïÂÖÉÊµãËØïÔºåÊó•ÂøóÊâìÂç∞ÔºåÂÖ®Â±ÄÊÄßËÉΩÁõëÊéßÁ≠âÁªºÂêàÁ§∫‰æã  √ævskeddemolist/vskeddemos/mavenproject/springboot2listuserrestddd  √æ## Êó©ÊúüÈùûmavenÁâàÊú¨ÊäÄÊúØÁ§∫‰æã(Ë∂ÖËøá93Áßç‰ª•‰∏äÊäÄÊúØÁ§∫‰æãÂ∏¶jarÂåÖ)  √ævskeddemolist/vskeddemos/projects/  √æajaxdemo  √æasyn4jdemo  √æbeetl2demo  √æc3p0demo  √æcachedemo  √æcdidemo  √æcommonfileuploaddemo  √æcommoniodemo  √ædbcpdemo  √ædisruptor3demo  √ædruiddemo  √æfastjsondemo  √æfiledemo  √æflowplayerdemo  √æfontawesomedemo  √æfoundationdemo  √æfreemarkerDemo  √ægsondemo  √æhardwareinfo  √æhellospring  √æhessiandemo  √æhibernate4demo  √æhighchart  √æhottest  √æhottest2  √æhtml5demo  √æhttpclientdemo  √æitextdemo  √æjacksondemo  √æjavajdbcdemo  √æjdbctemplateex  √æjdicdemo  √æjfinal2demo  √æjodatimedemo  √æjogampdemo  √æjpa2demo  √æjqgriddemo  √æjqueryeasyuidemo  √æjsf22demo  √æjslibdemo  √æjstldemo  √æjunit4demo  √ælog4j1demo  √ælog4j2demo  √æmaildemo  √æmutiapponedb0  √æmybatisdemo  √ænettydemo  √æocr  √æpagehelperdemo  √æpaginationdemo  √æpaginationdemo1  √æpdfboxdemo  √æpjaxdemo  √æpoidemo  √æpopcorndemo  √æqfxJavaReadJSDemo  √æqrcode  √æquartzdemo  √ærabbitmq  √æredisdemo  √æregulardemo  √æservlet31demo  √æshirodemo  √æsocketdemo  √æspring4struts2h4  √æspringaspectdemo  √æspringdatajpademos  √æspringloadeddemo  √æspringmvcdemo  √æspringmvcjdbctemplatedemo  √æspringmvclog4j1demo  √æspringmvctransactiondemo  √æspringmybatisdemo  √æstruts2demo  √æswingdemo  √æswitcherydemo  √æswtdemo  √ætaskdemo  √ætestdemo  √ætestExams  √ætestservlet  √ætestsession  √ætilesdemo  √ætoastrdemo  √æurlrewritedemo  √ævalidate  √ævskedjstabledemo  √ævskedremote  √ævskedrequest  √ævskedtemplate  √æwebservice  √æxmldemo  √æ√æÈ°πÁõÆÂ§ßÂ§öÊï∞Áî®myeclipse2017Êàñmyeclipse2019√æÂêéÊúüÈ°πÁõÆ‰∏ªË¶Å‰ª•ideaÊàñeclipse‰∏∫‰∏ª  √æ√æÂÖ∂‰ªñÊäÄÊúØÈÄâÂûã‰∏éÁÆ°ÁêÜÊµÅÁ®ãÔºåÁü•ËØÜÊ®°ÂûãÁ≠âÂèØÂèÇËÄÉ‰ª•‰∏ãÁΩëÁ´ô  √æhttps://devops.phodal.com/home  
nekoteaparty/Alice-LiveMan,26318,100,8,14,Organization,False,ÈÄöÁî®Â§öÂπ≥Âè∞ËΩ¨Êí≠Âß¨ - Áà±‰∏Ω‰∏ù,,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",6,Java,"{'': 2, 'md': 1, 'yml': 1, 'xml': 1}",389,2,1,1,0,603,True,1,0,1,0,1,98,1,6,9,0,1,8,252,93,0,0,2,0,,,[![Build status](https://ci.appveyor.com/api/projects/status/8e7rkexflv8o359g/branch/master?svg=true)](https://ci.appveyor.com/project/NekoSunflower/alice-liveman/branch/master)√æ# Alice-LiveMan√æ## ÊîØÊåÅÁöÑÁõ¥Êí≠Ê∫ê√æ+ YouTube `https://www.youtube.com/channel/UCt0clH12Xk1-Ej5PXKGfdPA`√æ+ Twitcasting `https://twitcasting.tv/alice-liveman`√æ+ ShowRoom `https://www.showroom-live.com/alice-liveman`√æ+ Reality `reality://alice-liveman`√æ+ OpenRec `https://www.openrec.tv/user/alice-liveman`√æ+ Mirrativ `https://www.mirrativ.com/user/alice-liveman`√æ+ AbemaTV `https://abema.tv/channels/ultra-games-2/slots/Dufru6t7zsEuXV`√æ+ Twitch `https://www.twitch.tv/alicemana_v`√æ+ NicoLive `https://live2.nicovideo.jp/watch/lv318312102`Êàñ `https://cas.nicovideo.jp/user/83115560/lv319023737`√æ+ PscpTV `https://www.pscp.tv/w/xxxxxxxx`√æ+ 17Live `https://17.live/live/xxxxxxxx`√æ+ Colon `https://colon-live.com/Usr/VTuberProfile?vTuberUserId=37d68b1c-954b-4aab-b8ab-e00b614a5cb0`√æ√æ## ÊîØÊåÅÁöÑËΩ¨Êí≠ÁõÆÊ†á√æ+ Bilibili√æ+ ÊñóÈ±ºTV√æ+ 17Live√æ√æ‰æùËµñÈ°πÁõÆÔºöhttps://github.com/NekoSunflower/OneDriveJavaSDK
scrat-ryan/rent,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
BanuPrakash/CISCO_Share,115306,2,1,6,User,False,Core Java Material,,,24,Java,"{'': 2, 'java': 5, 'docx': 1, 'pdf': 2, 'zip': 9, 'uml': 1, 'ppt': 1, 'xml': 2}",50,3,0,1,0,2037,True,0,0,0,0,2,2,2,1,8,0,0,0,0,0,0,0,64,,38,,
sixhours-team/memcached-spring-boot,640,50,5,25,Organization,False,Library that provides support for auto-configuration of Memcached cache in a Spring Boot application.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 4, 'yml': 1, 'md': 1, 'gradle': 2, 'bat': 1, 'sh': 2}",295,2,12,6,5,1387,True,2,24,0,7,0,74,0,23,7,0,4,39,2681,818,0,0,6,2,,,"[![Build Status](https://travis-ci.org/sixhours-team/memcached-spring-boot.svg?branch=master)](https://travis-ci.org/sixhours-team/memcached-spring-boot)√æ[![codecov](https://codecov.io/gh/sixhours-team/memcached-spring-boot/branch/master/graph/badge.svg)](https://codecov.io/gh/sixhours-team/memcached-spring-boot)√æ[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=io.sixhours%3Amemcached-spring-boot&metric=alert_status)](https://sonarcloud.io/dashboard?id=io.sixhours%3Amemcached-spring-boot)√æ[![Join the chat at gitter.im/six-hours/memcached-spring-boot](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/six-hours/memcached-spring-boot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)√æ[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)√æ√æ# Memcached Spring Boot√æ√æLibrary that provides support for auto-configuration of Memcached cache in a Spring Boot application.√æ√æIt provides implementation for the [Spring Cache Abstraction](https://docs.spring.io/spring/docs/5.2.3.RELEASE/spring-framework-reference/integration.html#cache), backed by the [Xmemcached](https://github.com/killme2008/xmemcached).√æSupports cache eviction per key, as well as clearing out of the entire cache region. Binaries are available from **Maven Central** and **JCenter**.√æ√æ## Usage√æ√æTo plug-in Memcached cache in your application follow the steps below:√æ√æ1. Include library as a Gradle or Maven compile dependency:√æ   * **Gradle**√æ√æ      ```groovy√æ      compile('io.sixhours:memcached-spring-boot-starter:2.1.2')√æ      ```√æ   * **Maven**√æ√æ      ```xml√æ      <dependency>√æ          <groupId>io.sixhours</groupId>√æ          <artifactId>memcached-spring-boot-starter</artifactId>√æ          <version>2.1.2</version>√æ      </dependency>√æ      ```√æ√æ  * Snapshot repository√æ√æ    If you want to use `SNAPSHOT` versions, add the snapshot-repo `https://oss.jfrog.org/artifactory/libs-snapshot/` as shown in the [example](https://github.com/sixhours-team/spring-boot-memcached-demo-java/blob/master/build.gradle#L16).√æ√æ2. Configure `Memcached` key-value store in your properties file (`application.yml`).√æ√æ    **Example**√æ√æ    To manually connect to one or more cache servers (nodes), specify comma-separated list of hostname:port with the `static` provider:√æ√æ    ```yaml√æ     memcached.cache:√æ       servers: example1.com:11211,example2.com:11211√æ       provider: static√æ       # default expiration is '1d' ('86400' seconds) and custom ones for cache_name1 and cache_name2√æ       expiration: 1d√æ       expiration-per-cache:√æ         cache_name1: 1h√æ         cache_name2: 30h√æ     ```√æ√æ    To connect to a cluster with AWS [Auto Discovery](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/AutoDiscovery.html), specify√æ    cluster configuration endpoint in `memcached.cache.servers` property with the `aws` provider:√æ√æ    ```yaml√æ    memcached.cache:√æ        servers: mycluster.example.com:11211√æ        provider: aws√æ        expiration: 86400 # default expiration set to '86400' seconds i.e. 1 day√æ    ```√æ√æ    To connect to a cluster within Google App Engine memcached service, it is sufficient to specify√æ    the configuration property for provider with value `appengine`:√æ√æ    ```yaml√æ    memcached.cache:√æ        provider: appengine√æ        expiration: 86400 # default expiration set to '86400' seconds i.e. 1 day√æ    ```√æ√æ3. Enable caching support by adding `@EnableCaching` annotation to one of your `@Configuration` classes.√æ√æ    ```java√æ    import org.springframework.boot.SpringApplication;√æ    import org.springframework.boot.autoconfigure.SpringBootApplication;√æ    import org.springframework.cache.annotation.EnableCaching;√æ√æ    @SpringBootApplication√æ    @EnableCaching√æ    public class Application {√æ√æ     public static void main(String[] args) {√æ      SpringApplication.run(Application.class, args);√æ     }√æ    }√æ    ```√æ√æ    Now you can add caching to an operation of your service:√æ√æ    ```java√æ    import org.springframework.cache.annotation.Cacheable;√æ    import org.springframework.stereotype.Component;√æ√æ    @Component√æ    public class BookService {√æ√æ        @Cacheable(""books"")√æ        public Book findByTitle(String title) {√æ            // ...√æ        }√æ√æ    }√æ    ```√æ√æFor further details on using the Memcached cache in a Spring Boot application please look at the [demo](https://github.com/sixhours-team/spring-boot-memcached-demo-java) project.√æ√æ## Properties√æ√æProperties can be set in your `application.yml` file or as a command line properties. Below is the√æfull list of supported properties:√æ√æ```yaml√æ# MEMCACHED CACHE√æmemcached.cache.servers: # Comma-separated list of hostname:port for memcached servers (default ""localhost:11211"")√æmemcached.cache.provider: # Memcached server provider (use one of following: ""static"", ""aws"" or ""appengine""). Default provider is ""static"". Use ""aws"" for AWS node auto discovery, or ""appengine"" if running on Google Cloud Platform.√æmemcached.cache.expiration: # Default cache expiration if not configured per cache (default ""0"", meaning that cache will never expire). If unit not specified, seconds will be used.√æmemcached.cache.expiration-per-cache.cacheName: # To set expiration value for cache named ""cacheName"" {cache_name}:{number} e.g. ""authors: 3600"" or ""authors: 1h"". If unit not specified, seconds will be used.√æmemcached.cache.prefix: # Cache key prefix (default ""memcached:spring-boot"")√æmemcached.cache.protocol: # Memcached client protocol. Supports ""text"" and ""binary"" protocols (default is ""text"" protocol)√æmemcached.cache.operation-timeout: # Memcached client operation timeout (default ""2500 milliseconds""). If unit not specified, milliseconds will be used.√æmemcached.cache.hash-strategy: # Memcached client hash strategy for distribution of data between servers. Supports ""standard"" (array based : ""hash(key) mod server_count""), ""libmemcached"" (consistent hash), ""ketama"" (consistent hash), ""php"" (make easier to share data with PHP based clients), ""election"", ""roundrobin"", ""random"". Default is ""standard"".√æ```√æ√æAll of the values have sensible defaults and are bound to [MemcachedCacheProperties](https://github.com/sixhours-team/memcached-spring-boot/blob/master/memcached-spring-boot-autoconfigure/src/main/java/io/sixhours/memcached/cache/MemcachedCacheProperties.java) class.√æ√æDuration properties such as `expiration` and `expiration-per-cache` by default are using unit of seconds if no unit is specified. For `operation-timeout` property unit of milliseconds is the default one.√æ√æE.g. to specify an `expiration` of 30 seconds, `30`, `PT30S` (ISO-8601 format) and `30s` are all equivalent. An `operatio-timeout` of 500ms can be specified in any of the following form: `500`, `PT0.5S` and `500ms`.√æ√æSupported units are:√æ√æ* `ns` for nanoseconds√æ√æ* `us` for microseconds√æ√æ* `ms` for milliseconds√æ√æ* `s` for seconds√æ√æ* `m` for minutes√æ√æ* `h` for hours√æ√æ* `d` for days√æ√æ**Notice:**√æ>If different applications are sharing the same Memcached server, make sure to specify unique cache `prefix` for each application√æin order to avoid cache conflicts.√æ√æ## Build√æ√æIn order to build the project you will have to have [Java 1.8+](http://www.oracle.com/technetwork/java/javase/downloads/index.html) and [Docker](https://www.docker.com/get-docker) installed.√æTo build the project invoke the following command:√æ√æ    ./gradlew clean build√æ√æTo install the modules in the local Maven repository:√æ√æ    ./gradlew clean build publishToMavenLocal√æ√æ## License√æ√æMemcached Spring Boot is an Open Source software released under the [Apache 2.0 license](http://www.apache.org/licenses/LICENSE-2.0.html)."
DTStack/flinkx,16498,1352,112,576,Organization,False,Âü∫‰∫éflinkÁöÑÂàÜÂ∏ÉÂºèÊï∞ÊçÆÂêåÊ≠•Â∑•ÂÖ∑,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",47,Java,"{'': 2, 'md': 2, 'xml': 1}",1793,5,19,14,3,786,True,104,103,64,19,2,29,2,6,9,0,5,54,20399,11924,0,0,40,0,,,"# FlinkX√æ√æ## 1 ‰ªÄ‰πàÊòØFlinkX√æ√æ* **FlinkXÊòØÂú®ÊòØË¢ãÈº†‰∫ëÂÜÖÈÉ®ÂπøÊ≥õ‰ΩøÁî®ÁöÑÂü∫‰∫éflinkÁöÑÂàÜÂ∏ÉÂºèÁ¶ªÁ∫øÊï∞ÊçÆÂêåÊ≠•Ê°ÜÊû∂ÔºåÂÆûÁé∞‰∫ÜÂ§öÁßçÂºÇÊûÑÊï∞ÊçÆÊ∫ê‰πãÈó¥È´òÊïàÁöÑÊï∞ÊçÆËøÅÁßª„ÄÇ**√æ√æ‰∏çÂêåÁöÑÊï∞ÊçÆÊ∫êÂ§¥Ë¢´ÊäΩË±°Êàê‰∏çÂêåÁöÑReaderÊèí‰ª∂Ôºå‰∏çÂêåÁöÑÊï∞ÊçÆÁõÆÊ†áË¢´ÊäΩË±°Êàê‰∏çÂêåÁöÑWriterÊèí‰ª∂„ÄÇÁêÜËÆ∫‰∏äÔºåFlinkXÊ°ÜÊû∂ÂèØ‰ª•ÊîØÊåÅ‰ªªÊÑèÊï∞ÊçÆÊ∫êÁ±ªÂûãÁöÑÊï∞ÊçÆÂêåÊ≠•Â∑•‰Ωú„ÄÇ‰Ωú‰∏∫‰∏ÄÂ•óÁîüÊÄÅÁ≥ªÁªüÔºåÊØèÊé•ÂÖ•‰∏ÄÂ•óÊñ∞Êï∞ÊçÆÊ∫êËØ•Êñ∞Âä†ÂÖ•ÁöÑÊï∞ÊçÆÊ∫êÂç≥ÂèØÂÆûÁé∞ÂíåÁé∞ÊúâÁöÑÊï∞ÊçÆÊ∫ê‰∫íÈÄö„ÄÇ√æ√æ<div align=center>√æ    <img src=docs/images/template.png width=400 />√æ</div>√æ√æ## 2 Â∑•‰ΩúÂéüÁêÜ√æ√æÂú®Â∫ïÂ±ÇÂÆûÁé∞‰∏äÔºåFlinkX‰æùËµñFlinkÔºåÊï∞ÊçÆÂêåÊ≠•‰ªªÂä°‰ºöË¢´ÁøªËØëÊàêStreamGraphÂú®Flink‰∏äÊâßË°åÔºåÂ∑•‰ΩúÂéüÁêÜÂ¶Ç‰∏ãÂõæÔºö√æ√æ<div align=center>√æ    <img src=docs/images/diagram.png width=600 />√æ</div>√æ√æ## 3 Âø´ÈÄüËµ∑Ê≠•√æ√æ### 3.1 ËøêË°åÊ®°Âºè√æ√æ* ÂçïÊú∫Ê®°ÂºèÔºöÂØπÂ∫îFlinkÈõÜÁæ§ÁöÑÂçïÊú∫Ê®°Âºè√æ* standaloneÊ®°ÂºèÔºöÂØπÂ∫îFlinkÈõÜÁæ§ÁöÑÂàÜÂ∏ÉÂºèÊ®°Âºè√æ* yarnÊ®°ÂºèÔºöÂØπÂ∫îFlinkÈõÜÁæ§ÁöÑyarnÊ®°Âºè√æ√æ### 3.2 ÊâßË°åÁéØÂ¢É√æ√æ* Java: JDK8Âèä‰ª•‰∏ä√æ* FlinkÈõÜÁæ§: 1.4Âèä‰ª•‰∏äÔºàÂçïÊú∫Ê®°Âºè‰∏çÈúÄË¶ÅÂÆâË£ÖFlinkÈõÜÁæ§Ôºâ√æ* Êìç‰ΩúÁ≥ªÁªüÔºöÁêÜËÆ∫‰∏ä‰∏çÈôêÔºå‰ΩÜÊòØÁõÆÂâçÂè™ÁºñÂÜô‰∫ÜshellÂêØÂä®ËÑöÊú¨ÔºåÁî®Êà∑ÂèØ‰ª•ÂèØ‰ª•ÂèÇËÄÉshellËÑöÊú¨ÁºñÂÜôÈÄÇÂêàÁâπÂÆöÊìç‰ΩúÁ≥ªÁªüÁöÑÂêØÂä®ËÑöÊú¨„ÄÇ√æ√æ### 3.3 ÊâìÂåÖ√æ√æËøõÂÖ•È°πÁõÆÊ†πÁõÆÂΩïÔºå‰ΩøÁî®mavenÊâìÂåÖÔºö√æ√æ```√æmvn clean package -Dmaven.test.skip√æ```√æ√æÊâìÂåÖÁªìÊùüÂêéÔºåÈ°πÁõÆÊ†πÁõÆÂΩï‰∏ã‰ºö‰∫ßÁîübinÁõÆÂΩïÂíåpluginsÁõÆÂΩïÔºåÂÖ∂‰∏≠binÁõÆÂΩïÂåÖÂê´FlinkXÁöÑÂêØÂä®ËÑöÊú¨ÔºåpluginsÁõÆÂΩï‰∏ãÂ≠òÊîæÁºñËØëÂ•ΩÁöÑÊï∞ÊçÆÂêåÊ≠•Êèí‰ª∂ÂåÖ√æ√æ### 3.4 ÂêØÂä®√æ√æ#### 3.4.1 ÂëΩ‰ª§Ë°åÂèÇÊï∞ÈÄâÈ°π√æ√æ* **model**√æ  √æ  * ÊèèËø∞ÔºöÊâßË°åÊ®°ÂºèÔºå‰πüÂ∞±ÊòØflinkÈõÜÁæ§ÁöÑÂ∑•‰ΩúÊ®°Âºè√æ    * local: Êú¨Âú∞Ê®°Âºè√æ    * standalone: Áã¨Á´ãÈÉ®ÁΩ≤Ê®°ÂºèÁöÑflinkÈõÜÁæ§√æ    * yarn: yarnÊ®°ÂºèÁöÑflinkÈõÜÁæ§ÔºåÈúÄË¶ÅÊèêÂâçÂú®yarn‰∏äÂêØÂä®‰∏Ä‰∏™flink sessionÔºå‰ΩøÁî®ÈªòËÆ§ÂêçÁß∞""Flink session cluster""√æ  * ÂøÖÈÄâÔºöÂê¶√æ  * ÈªòËÆ§ÂÄºÔºölocal√æ√æ* **job**√æ  √æ  * ÊèèËø∞ÔºöÊï∞ÊçÆÂêåÊ≠•‰ªªÂä°ÊèèËø∞Êñá‰ª∂ÁöÑÂ≠òÊîæË∑ØÂæÑÔºõËØ•ÊèèËø∞Êñá‰ª∂‰∏≠‰ΩøÁî®jsonÂ≠óÁ¨¶‰∏≤Â≠òÊîæ‰ªªÂä°‰ø°ÊÅØ„ÄÇ√æ  * ÂøÖÈÄâÔºöÊòØ√æ  * ÈªòËÆ§ÂÄºÔºöÊó†√æ√æ* **pluginRoot**√æ  √æ  * ÊèèËø∞ÔºöÊèí‰ª∂Ê†πÁõÆÂΩïÂú∞ÂùÄÔºå‰πüÂ∞±ÊòØÊâìÂåÖÂêé‰∫ßÁîüÁöÑpluginRootÁõÆÂΩï„ÄÇ√æ  * ÂøÖÈÄâÔºöÊòØ√æ  * ÈªòËÆ§ÂÄºÔºöÊó†√æ√æ* **flinkconf**√æ  √æ  * ÊèèËø∞ÔºöflinkÈÖçÁΩÆÊñá‰ª∂ÊâÄÂú®ÁöÑÁõÆÂΩïÔºàÂçïÊú∫Ê®°Âºè‰∏ã‰∏çÈúÄË¶ÅÔºâÔºåÂ¶Ç/hadoop/flink-1.4.0/conf√æ  * ÂøÖÈÄâÔºöÂê¶√æ  * ÈªòËÆ§ÂÄºÔºöÊó†√æ√æ* **yarnconf**√æ  √æ  * ÊèèËø∞ÔºöHadoopÈÖçÁΩÆÊñá‰ª∂ÔºàÂåÖÊã¨hdfsÂíåyarnÔºâÊâÄÂú®ÁöÑÁõÆÂΩïÔºàÂçïÊú∫Ê®°Âºè‰∏ã‰∏çÈúÄË¶ÅÔºâÔºåÂ¶Ç/hadoop/etc/hadoop√æ  * ÂøÖÈÄâÔºöÂê¶√æ  * ÈªòËÆ§ÂÄºÔºöÊó†√æ√æ#### 3.4.2 ÂêØÂä®Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°√æ√æ* **‰ª•Êú¨Âú∞Ê®°ÂºèÂêØÂä®Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°**√æ√æ```√æbin/flinkx -mode local -job /Users/softfly/company/flink-data-transfer/jobs/task_to_run.json -pluginRoot /Users/softfly/company/flink-data-transfer/plugins -confProp ""{""flink.checkpoint.interval"":60000,""flink.checkpoint.stateBackend"":""/flink_checkpoint/""}"" -s /flink_checkpoint/0481473685a8e7d22e7bd079d6e5c08c/chk-*√æ```√æ√æ* **‰ª•standaloneÊ®°ÂºèÂêØÂä®Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°**√æ√æ```√æbin/flinkx -mode standalone -job /Users/softfly/company/flink-data-transfer/jobs/oracle_to_oracle.json  -pluginRoot /Users/softfly/company/flink-data-transfer/plugins -flinkconf /hadoop/flink-1.4.0/conf -confProp ""{""flink.checkpoint.interval"":60000,""flink.checkpoint.stateBackend"":""/flink_checkpoint/""}"" -s /flink_checkpoint/0481473685a8e7d22e7bd079d6e5c08c/chk-*√æ```√æ√æ* **‰ª•yarnÊ®°ÂºèÂêØÂä®Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°**√æ√æ```√æbin/flinkx -mode yarn -job /Users/softfly/company/flinkx/jobs/mysql_to_mysql.json  -pluginRoot /opt/dtstack/flinkplugin/syncplugin -flinkconf /opt/dtstack/myconf/conf -yarnconf /opt/dtstack/myconf/hadoop -confProp ""{""flink.checkpoint.interval"":60000,""flink.checkpoint.stateBackend"":""/flink_checkpoint/""}"" -s /flink_checkpoint/0481473685a8e7d22e7bd079d6e5c08c/chk-*√æ```√æ√æ## 4 Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°Ê®°Áâà√æ√æ‰ªéÊúÄÈ´òÁ©∫‰øØËßÜÔºå‰∏Ä‰∏™Êï∞ÊçÆÂêåÊ≠•ÁöÑÊûÑÊàêÂæàÁÆÄÂçïÔºåÂ¶Ç‰∏ãÔºö√æ√æ```√æ{√æ    ""job"": {√æ        ""setting"": {...},√æ        ""content"": [...]√æ    }√æ}√æ```√æ√æÊï∞ÊçÆÂêåÊ≠•‰ªªÂä°ÂåÖÊã¨‰∏Ä‰∏™jobÂÖÉÁ¥†ÔºåËÄåËøô‰∏™ÂÖÉÁ¥†ÂåÖÊã¨settingÂíåcontent‰∏§ÈÉ®ÂàÜ„ÄÇ√æ√æ* setting: Áî®‰∫éÈÖçÁΩÆÈôêÈÄü„ÄÅÈîôËØØÊéßÂà∂ÂíåËÑèÊï∞ÊçÆÁÆ°ÁêÜ√æ* content: Áî®‰∫éÈÖçÁΩÆÂÖ∑‰Ωì‰ªªÂä°‰ø°ÊÅØÔºåÂåÖÊã¨‰ªéÂì™ÈáåÊù•ÔºàReaderÊèí‰ª∂‰ø°ÊÅØÔºâÔºåÂà∞Âì™ÈáåÂéªÔºàWriterÊèí‰ª∂‰ø°ÊÅØÔºâ√æ√æ### 4.1 setting√æ√æ```√æ    ""setting"": {√æ        ""speed"": {...},√æ        ""errorLimit"": {...},√æ        ""dirty"": {...}√æ    }√æ```√æ√æsettingÂåÖÊã¨speed„ÄÅerrorLimitÂíådirty‰∏âÈÉ®ÂàÜÔºåÂàÜÂà´ÊèèËø∞ÈôêÈÄü„ÄÅÈîôËØØÊéßÂà∂ÂíåËÑèÊï∞ÊçÆÁÆ°ÁêÜÁöÑÈÖçÁΩÆ‰ø°ÊÅØ√æ√æ#### 4.1.1 speed√æ√æ```√æ            ""speed"": {√æ                 ""channel"": 3,√æ                 ""bytes"": 0√æ            }√æ```√æ√æ* channel: ‰ªªÂä°Âπ∂ÂèëÊï∞√æ* bytes: ÊØèÁßíÂ≠óËäÇÊï∞ÔºåÈªòËÆ§‰∏∫ Long.MAX_VALUE√æ√æ#### 4.1.2 errorLimit√æ√æ```√æ            ""errorLimit"": {√æ                ""record"": 10000,√æ                ""percentage"": 100√æ            }√æ```√æ√æ* record: Âá∫ÈîôËÆ∞ÂΩïÊï∞Ë∂ÖËøárecordËÆæÁΩÆÁöÑÊù°Êï∞Êó∂Ôºå‰ªªÂä°Ê†áËÆ∞‰∏∫Â§±Ë¥•√æ* percentage: ÂΩìÂá∫ÈîôËÆ∞ÂΩïÊï∞Ë∂ÖËøápercentageÁôæÂàÜÊï∞Êó∂Ôºå‰ªªÂä°Ê†áËÆ∞‰∏∫Â§±Ë¥•√æ√æ#### 4.1.3 dirty√æ√æ```√æ        ""dirty"": {√æ                ""path"": ""/tmp"",√æ                ""hadoopConfig"": {√æ                    ""fs.default.name"": ""hdfs://ns1"",√æ                    ""dfs.nameservices"": ""ns1"",√æ                    ""dfs.ha.namenodes.ns1"": ""nn1,nn2"",√æ                    ""dfs.namenode.rpc-address.ns1.nn1"": ""node02:9000"",√æ                    ""dfs.namenode.rpc-address.ns1.nn2"": ""node03:9000"",√æ                    ""dfs.ha.automatic-failover.enabled"": ""true"",√æ                    ""dfs.client.failover.proxy.provider.ns1"": ""org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider"",√æ                    ""fs.hdfs.impl.disable.cache"": ""true""√æ                }√æ            }√æ```√æ√æ* path: ËÑèÊï∞ÊçÆÂ≠òÊîæË∑ØÂæÑ√æ* hadoopConfig: ËÑèÊï∞ÊçÆÂ≠òÊîæË∑ØÂæÑÂØπÂ∫îhdfsÁöÑÈÖçÁΩÆ‰ø°ÊÅØ(hdfsÈ´òÂèØÁî®ÈÖçÁΩÆ)√æ√æ#### 4.1.4  restore√æ√æ```√æ""restore"": {√æ√æ        ""isRestore"": false,√æ        ""restoreColumnName"": """",√æ        ""restoreColumnIndex"": 0√æ      }√æ```√æ√ærestoreÈÖçÁΩÆËØ∑ÂèÇËÄÉ[Êñ≠ÁÇπÁª≠‰º†](docs/restore.md)√æ√æ### 4.2 content√æ√æ```√æ        ""content"": [√æ            {√æ               ""reader"": {√æ                    ""name"": ""..."",√æ                    ""parameter"": {√æ                        ...√æ                    }√æ                },√æ               ""writer"": {√æ                    ""name"": ""..."",√æ                    ""parameter"": {√æ                         ...√æ                     }√æ                }√æ            }√æ        ]√æ```√æ√æ* reader: Áî®‰∫éËØªÂèñÊï∞ÊçÆÁöÑÊèí‰ª∂ÁöÑ‰ø°ÊÅØ√æ* writer: Áî®‰∫éÂÜôÂÖ•Êï∞ÊçÆÁöÑÊèí‰ª∂ÁöÑ‰ø°ÊÅØ√æ√æreaderÂíåwriterÂåÖÊã¨nameÂíåparameterÔºåÂàÜÂà´Ë°®Á§∫Êèí‰ª∂ÂêçÁß∞ÂíåÊèí‰ª∂ÂèÇÊï∞√æ√æ### 4.3 Êï∞ÊçÆÂêåÊ≠•‰ªªÂä°‰æãÂ≠ê√æ√æËØ¶ËßÅflinkx-examplesÂ≠êÂ∑•Á®ã√æ√æ## 5. Êï∞ÊçÆÂêåÊ≠•Êèí‰ª∂√æ√æ### 5.1 ËØªÂèñÊèí‰ª∂√æ√æ* [ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìËØªÂèñÊèí‰ª∂(Mysql,Oracle,Sqlserver,Postgresql,Db2,Gbase)](docs/rdbreader.md)√æ* [ÂàÜÂ∫ìÂàÜË°®ËØªÂèñÊèí‰ª∂](docs/rdbdreader.md)√æ* [HDFSËØªÂèñÊèí‰ª∂](docs/hdfsreader.md)√æ* [HBaseËØªÂèñÊèí‰ª∂](docs/hbasereader.md)√æ* [ElasticsearchËØªÂèñÊèí‰ª∂](docs/esreader.md)√æ* [FtpËØªÂèñÊèí‰ª∂](docs/ftpreader.md)√æ* [OdpsËØªÂèñÊèí‰ª∂](docs/odpsreader.md)√æ* [MongoDBËØªÂèñÊèí‰ª∂](docs/mongodbreader.md)√æ* [StreamËØªÂèñÊèí‰ª∂](docs/streamreader.md)√æ* [CarbondataËØªÂèñÊèí‰ª∂](docs/carbondatareader.md)√æ* [MySQL binlogËØªÂèñÊèí‰ª∂](docs/binlog.md)√æ* [KafKaËØªÂèñÊèí‰ª∂](docs/kafkareader.md)√æ* [KuduËØªÂèñÊèí‰ª∂](docs/kudureader.md)√æ√æ√æ### 5.2 ÂÜôÂÖ•Êèí‰ª∂√æ√æ* [ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÂÜôÂÖ•Êèí‰ª∂(Mysql,Oracle,Sqlserver,Postgresql,Db2,Gbase)](docs/rdbwriter.md)√æ* [HDFSÂÜôÂÖ•Êèí‰ª∂](docs/hdfswriter.md)√æ* [HBaseÂÜôÂÖ•Êèí‰ª∂](docs/hbasewriter.md)√æ* [ElasticsearchÂÜôÂÖ•Êèí‰ª∂](docs/eswriter.md)√æ* [FtpÂÜôÂÖ•Êèí‰ª∂](docs/ftpwriter.md)√æ* [OdpsÂÜôÂÖ•Êèí‰ª∂](docs/odpswriter.md)√æ* [MongoDBÂÜôÂÖ•Êèí‰ª∂](docs/mongodbwriter.md)√æ* [RedisÂÜôÂÖ•Êèí‰ª∂](docs/rediswriter.md)√æ* [StreamÂÜôÂÖ•Êèí‰ª∂](docs/streamwriter.md)√æ* [CarbondataÂÜôÂÖ•Êèí‰ª∂](docs/carbondatawriter.md)√æ* [KafkaÂÜôÂÖ•Êèí‰ª∂](docs/kafkawriter.md)√æ* [HiveÂÜôÂÖ•Êèí‰ª∂](docs/hivewriter.md)√æ* [KuduÂÜôÂÖ•Êèí‰ª∂](docs/kuduwriter.md)√æ√æ[Êñ≠ÁÇπÁª≠‰º†ÂíåÂÆûÊó∂ÈááÈõÜÂäüËÉΩ‰ªãÁªç](docs/restore.md)√æ√æ[Êï∞ÊçÆÊ∫êÂºÄÂêØKerberos](docs/kerberos.md)√æ√æ[ÁªüËÆ°ÊåáÊ†áËØ¥Êòé](docs/statistics.md)√æ√æ## 6.ÁâàÊú¨ËØ¥Êòé√æ√æ 1.flinkxÁöÑÂàÜÊîØÁâàÊú¨Ë∑üflinkÁöÑÁâàÊú¨ÂØπÂ∫îÔºåÊØîÂ¶ÇÔºöflinkx v1.5.0 ÂØπÂ∫î flink1.5.0,ÁâàÊú¨ËØ¥ÊòéÔºö√æ√æ| Êèí‰ª∂ÁâàÊú¨  | flinkÁâàÊú¨ |√æ| ----- | ------- |√æ| 1.5.x | 1.5.4   |√æ| 1.8.x | 1.8.1   |√æ√æ## 7.ÊãõËÅò‰ø°ÊÅØ√æ√æ 1.Â§ßÊï∞ÊçÆÂπ≥Âè∞ÂºÄÂèëÂ∑•Á®ãÂ∏àÔºåÊÉ≥‰∫ÜËß£Â≤ó‰ΩçËØ¶ÁªÜ‰ø°ÊÅØÂèØ‰ª•Ê∑ªÂä†Êú¨‰∫∫ÂæÆ‰ø°Âè∑ysqwhiletrue,Ê≥®ÊòéÊãõËÅòÔºåÂ¶ÇÊúâÊÑèËÄÖÂèëÈÄÅÁÆÄÂéÜËá≥sishu@dtstack.com„ÄÇ"
geozet/openls-databinding,4764,1,4,1,Organization,False,OpenLS databinding artifact for the geozet-webapp,https://geozet.github.io/openls-databinding,,11,Java,"{'': 1, 'yml': 2, 'md': 1, 'xml': 4}",158,2,2,2,0,3106,True,0,1,0,0,0,66,0,9,3,1,0,0,0,0,2,0,3,4,,,openls-databinding√æ==================√æ√æOpenLS databinding artifact for the geozet webapp.√æ√æ[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/t4me0fb8nvna01aq?svg=true)](https://ci.appveyor.com/project/mprins/openls-databinding)√æ[![Travis-CI Build Status](https://travis-ci.org/geozet/openls-databinding.png?branch=master)](https://travis-ci.org/geozet/openls-databinding)
typemeta/funcj,68098,41,4,6,Organization,False,Assorted functional-oriented data structures and algorithms for Java.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",11,Java,"{'': 3, 'yml': 1, 'xml': 1, 'md': 1}",698,2,22,2,7,1255,True,4,17,0,2,0,1,0,1,7,0,2,20,6874,3304,0,0,1,1,,,"![Funcj](https://github.com/typemeta/funcj/blob/master/resources/funcj.png)√æ√æ[<img src=""https://img.shields.io/maven-central/v/org.typemeta/funcj.svg""/>](https://search.maven.org/#search%7Cga%7C1%7Cfuncj)√æ[![Javadocs](https://www.javadoc.io/badge/org.typemeta/funcj.svg)](https://www.javadoc.io/doc/org.typemeta/funcj)√æ[![Build Status](https://travis-ci.org/typemeta/funcj.svg?branch=master)](https://travis-ci.org/typemeta/funcj)√æ[![Language grade: Java](https://img.shields.io/lgtm/grade/java/g/typemeta/funcj.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/typemeta/funcj/context:java)√æ√æA collection of functional-oriented data structures, algorithms and libraries, for Java.√æ√æ# Introduction√æ√æfuncj is a collection of functional-oriented data structures, algorithms and libraries.√æ√æAt present the project consists of the following sub-libraries:√æ√æ* [core](https://github.com/typemeta/funcj/tree/master/core) - primarily data and control structures.√æ* [parser](https://github.com/typemeta/funcj/tree/master/parser) - a combinator parser framework.√æ* [json](https://github.com/typemeta/funcj/tree/master/json) - a parser and data model for JSON data.√æ* [codec](https://github.com/typemeta/funcj/tree/master/codec) - a framework for serialising Java data into streams."
coinbase/coinbase-java,1225,125,37,92,Organization,False,Coinbase API v1 library for Java,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 1, 'sh': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",480,3,13,13,0,2204,True,21,10,0,0,2,83,2,0,6,0,1,2,12,1,30,0,90,5,,,"# Coinbase Android SDK√æ√æ![Platform](https://img.shields.io/badge/minsdk-15-blue.svg)√æ![SDK version](https://img.shields.io/badge/sdk__version-2.0.0-orange.svg)√æ![License](https://img.shields.io/badge/license-apache%202.0-green.svg)√æ√æAn easy way to buy, sell, send, and accept [bitcoin](http://en.wikipedia.org/wiki/Bitcoin) through the [Coinbase API](https://developers.coinbase.com/).√æ√æThis library is a wrapper around the [Coinbase JSON API](https://developers.coinbase.com/api/v2). It supports OAuth 2.0 for performing actions on other people's accounts.√æ√æWorking with the SDK:√æ* [Installation](#installation)√æ* [Usage](#usage)√æ* [OAuth2 and Authentication](#oauth-20-authentication-accessing-users-account-data)√æ* [Examples](#examples)√æ* [Proguard](#proguard-setup)√æ* [Security Notes](#security-notes)√æ* [Testing](#testing)√æ* [Contributing](#contributing)√æ√æOther resources:√æ* [Sample app](https://github.com/coinbase/coinbase-android-sdk-private/tree/v2.0.0/app) with examples√æ* [Project Wiki](https://github.com/coinbase/coinbase-java/wiki)√æ* [Coinbase REST API v2](https://developers.coinbase.com/api/v2)√æ* [OAuth2 Reference](https://developers.coinbase.com/docs/wallet/coinbase-connect/reference)√æ√æ## Installation√æ√æ### Using Maven√æ√æAdd the following dependency to your project's Maven pom.xml:√æ√æ```xml√æ<dependency>√æ <groupId>com.coinbase</groupId>√æ <artifactId>coinbase-android</artifactId>√æ <version>3.0.0</version>√æ</dependency>√æ```√æ√æThe library will automatically be pulled from Maven Central.√æ√æ### Using Gradle√æ√æ```gradle√ædependencies {√æ    compile 'com.coinbase:coinbase-android:3.0.0'√æ}√æ```√æ√æ### Manual√æ√æYou can build this library aar and all its dependencies to a folder as follows:√æ√æ```bash√ægit clone git@github.com:coinbase/coinbase-java.git√æ./gradlew coinbase-java:assembleRelease√æmv coinbase-java/build/outputs/aar/coinbase-java-release.aar $YOUR_JAR_DIRECTORY√æ```√æ√æ## Usage√æ√æ### Basic setup (only accessing public data)√æ√æConfigure `coinbase` object to access [public data](https://developers.coinbase.com/api/v2#data-endpoints).√æ√æ```kotlin√æ// Set up Coinbase object for public data access only√æval coinbase = CoinbaseBuilder.withPublicDataAccess(applicationContext).build()√æ√æ// Get any of public data resource and request data from it√æcoinbase.currenciesResource.supportedCurrencies.enqueue(callback)√æ```√æ√æWhen 'coinbase' instance is setup for public data access you can use these resources:√æ√æ1. currenciesResource√æ2. exchangeRatesResource√æ3. pricesResource√æ4. currenciesResource√æ√æ### OAuth 2.0 Authentication (accessing user's account data)√æ√æStart by [creating a new OAuth 2.0 application](https://www.coinbase.com/settings/api). Register redirect url under <b>Permitted Redirect URIs</b>.√æThis URL will be used after successful authorization. It should be an URL that your application is capable to handle, so auth result√ædelivered back to your app.√æ<br/>√æ<br/>√æAfter you create OAuth 2.0 application, go to application web page that will have an address like https://www.coinbase.com/oauth/applications/{your_app_id}.√æCopy <b>Client Id</b> and <b>Client Secret</b> to your android application.√æ<br/>√æ<br/>√æYour android application can now be authorized to access user account data:√æ√æ```kotlin√æ// Set up Coinbase object to access user data√æval coinbase = CoinbaseBuilder.withClientIdAndSecret(applicationContext, clientId, clientSecret).build()√æ√æ// Begin OAuth 2.0 flow with web sign in√æcoinbase.beginAuthorization(activityContext, redirectUri, scopes)√æ√æ// Get result of web authorization as an intent with mentioned redirectUri. Complete OAuth 2.0 flow√æoverride fun onNewIntent(intent: Intent?) {√æ        super.onNewIntent(intent)√æ        if (intent == null) return√æ        coinbase.completeAuthorizationRx(intent)√æ                .observeOn(AndroidSchedulers.mainThread())√æ                .doOnSubscribe { showProgress() }√æ                .doFinally { hideProgress() }√æ                .subscribe(subscriber)√æ}√æ```√æ√æAfter authorization suceseed, you can call methods on `coinbase` similar to the ones described in the√æ[Wallet Endpoints documentation](https://developers.coinbase.com/api/v2#wallet-endpoints).  For example:√æ√æ```kotlin√æcoinbase.userResource.getAuthInfo.enqueue(callback);√æ```√æ√æ## Examples√æ√æ### Get User currencies accounts√æ√æ```kotlin√æ// get user accounts asynchronously.√æcoinbase.accountResource.getAccounts().enqueue(object: Callback<PagedResponse<Account>> {√æ√æ    override fun onSuccess(result: PagedResponse<Account>?) {√æ            TODO(""Process accounts data"")√æ    }√æ√æ    override fun onFailure(t: Throwable?) {√æ        TODO(""process error"")√æ    }√æ})√æ```√æ√æGet a specific account.√æ√æ```kotlin√æcoinbase.accountResource.getAccount(accountId).enqueue(callback)√æ```√æ√æThe account name can be changed with√æ√æ```kotlin√æcoinbase.accountResource.updateAccount(accountId, newName).enqueue(callback)√æ```√æ√æAlso, an account can be deleted√æ√æ```kotlin√æcoinbase.accountResource.deleteAccount(accountId).enqueue(callback)√æ```√æ√æ√æ### Send bitcoin√æ√æ```kotlin√æval sendMoneyRequest = SendMoneyRequest(""user2@example.com"", ""0.01"", ""BTC"")√æcoinbase.transactionsResource.sendMoney(accountId, twoFactorAuthToken, sendMoneyRequest).enqueue(callback)√æ```√æ√æThe `to` value can be a bitcoin address and a description (notes) can be attached to the money.  The description is only visible on Coinbase (not on the general bitcoin network).√æ√æ```kotlin√æval sendMoneyRequest = SendMoneyRequest(""user2@example.com"", ""2.25"", ""USD"")√æsendMoneyRequest.setDescription(""Thanks for the coffee!"")√æcoinbase.transactionsResource.sendMoney(accountId, twoFactorAuthToken, sendMoneyRequest).enqueue(callback)√æ```√æ√æ### Request bitcoin√æ√æThis will send an email to the recipient, requesting payment, and give them an easy way to pay.√æ√æ```kotlin√æ// Synchronous calls are used for simplicity√æval moneyRequest = MoneyRequest(""user2@example.com"", ""100"", ""USD"")√æmoneyRequest.setDescription(""Invoice for window cleaning"")√æval moneyRequest = coinbase.transactionsResource.requestMoney(accountId, moneyRequest).execute().data√æ√æcoinbase.transactionsResource.resendMoneyRequest(accountId, moneyRequest.id).execute()√æ√æcoinbase.transactionsResource.cancelRequest(accountId, moneyRequest.id).execute()√æ√æ// From the other side√æ√æcoinbase.transactionsResource.completeRequest(accountId, transactionId).execute()√æ```√æ√æ### List your current transactions√æ√æBy default sorted in descending order by createdAt, 30 transactions per page√æ√æ```kotlin√æ// Synchronous call is used for simplicity√ævar transactions = coinbase.transactionsResource.listTransactions(accountId).execute().data√ætransactions[0].id√æ```√æ√æTransactions will always have an `id` attribute which is the primary way to identify them through the Coinbase API.√æ√æ### Get transaction details√æ√æThis will fetch the details/status of a transaction that was made within Coinbase√æ√æ```kotlin√æ// Synchronous call is used for simplicity√æval t = coinbase.transactionsResource.showTransaction(accountId, transactionId).execute().data√æt.status; // Transaction.STATUS_PENDING√æ```√æ√æ### Buy or Sell bitcoin√æ√æBuying and selling bitcoin requires you to [add a payment method](https://coinbase.com/accounts) through the web app first.√æ√æThen you can call `buy` or `sell` and pass a `quantity` of bitcoin you want to buy.√æ√æ```kotlin√æval transferOrder = TransferOrderBody(""0.01"", ""BTC"", paymentMethodId)√æ// Synchronous call is used for simplicity√æcoinbase.buysResource.placeBuyOrder(accountId,transferOrder).execute()√æ```√æ√æ√æ```kotlin√æval transferOrder = TransferOrderBody(""0.01"", ""BTC"", paymentMethodId)√æ// Synchronous call is used for simplicity√æcoinbase.sellsResource.placeSellOrder(accountId, transferOrder).execute()√æ```√æ√æ### Listing Buy/Sell History√æ√æYou can use `listBuys`, `listSells` to view past buys and sells.√æ√æ```java√æcoinbase.buysResource.listBuys(accountId).enqueue(callback)√æcoinbase.sellsResource.listSells(accountId).enqueue(callback)√æ```√æ√æCheck out the [sample app](https://github.com/coinbase/coinbase-android-sdk-private/tree/documentation/app#getting-started)√æwith example of how to use the SDK (both async and Rx).√æ√æ## Proguard setup√æ√æIf you are using proguard, include following lines to the application proguard properties file.√æ√æ```bash√æ-dontwarn okio.**√æ-dontwarn retrofit2.**√æ```√æ√æ## Security Notes√æ√æWhen creating an API Key, make sure you only grant it the permissions necessary for your application to function.√æ√æYou should take precautions to store your API key securely in your application.  How to do this is application specific, but it's something you should [research](http://programmers.stackexchange.com/questions/65601/is-it-smart-to-store-application-keys-ids-etc-directly-inside-an-application) if you have never done this before.√æ√æ## Testing√æ√æIf you'd like to contribute code or modify this library, you can run the test suite with:√æ√æ```bash√æ./gradlew :coinbase-java:test√æ```√æ√æ## Contributing√æ√æ1. Fork this repo and make changes in your own copy√æ2. Add Git pre-commit hook by executing ./add_precommit_git_hook.sh. This will add `Checkstyle` and `pmd` checks before commit√æ3. Add a test if applicable and run the existing tests with `./gradlew :coinbase-java:test` to make sure they pass√æ4. Commit your changes and push to your fork `git push origin master`√æ5. Create a new pull request and submit it back to us!"
antlr/antlr4-intellij-adaptor,333,106,11,25,Organization,False,A library to support the use of ANTLR grammars in jetbrains IDE plugins for building custom languages.,,"{'key': 'bsd-2-clause', 'name': 'BSD 2-Clause ""Simplified"" License', 'spdx_id': 'BSD-2-Clause', 'url': 'https://api.github.com/licenses/bsd-2-clause', 'node_id': 'MDc6TGljZW5zZTQ='}",12,Java,"{'': 3, 'yml': 1, 'md': 1, 'gradle': 1, 'txt': 1, 'properties': 1, 'bat': 1}",51,1,1,4,0,1680,True,6,3,2,0,2,6,0,0,8,0,0,0,0,0,0,0,25,6,,,"# ANTLRv4 support in IntelliJ IDEs [![Build Status](https://travis-ci.org/antlr/antlr4-intellij-adaptor.svg?branch=master)](https://travis-ci.org/antlr/antlr4-intellij-adaptor) [![Maven Central](https://img.shields.io/maven-central/v/org.antlr/antlr4-intellij-adaptor.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:%22org.antlr%22%20AND%20a:%22antlr4-intellij-adaptor%22)√æ√æA library to support the use of ANTLRv4 grammars for custom languages in IntelliJ-based IDEs plug-in development.√æ√æThis library has adaptors that convert ANTLR-generated parse trees into IntelliJ PSI trees.  Mostly this library is about adapting ANTLR parsers and trees, but there is considerable support to examine PSI trees derived from ANTLR parse trees. For example, if you're building a structure view for your plug-in and you want to get the list of function names you can use XPath-like specs such as `""/script/function/ID""`:√æ√æ```java√æCollection<? extends PsiElement> allfuncs =√æ    XPath.findAll(SampleLanguage.INSTANCE, tree,√æ                  ""/script/function/ID"");√æ```√æ√æ## Using the library in your project√æ√æThe library is [published on Maven Central](https://search.maven.org/search?q=a:antlr4-intellij-adaptor) which means you can download the JAR and add it to your classpath manually, or pull the dependency automatically if you are using a Gradle build:√æ√æ```groovy√ærepositories {√æ    mavenCentral()√æ}√æ√ædependencies {√æ    compile ""org.antlr:antlr4-intellij-adaptor:0.1""√æ}√æ```√æ√æIn Maven builds, use:√æ√æ```xml√æ<dependency>√æ  <groupId>org.antlr</groupId>√æ  <artifactId>antlr4-intellij-adaptor</artifactId>√æ  <version>0.1</version>√æ</dependency>√æ```√æ√æYou can now head over to the [Getting started section](https://github.com/antlr/antlr4-intellij-adaptor/wiki/Getting-started) of the wiki.√æ√æ## Examples√æ√æHere is a list of known plugins that use the adaptor:√æ√æ* [Sample IntelliJ plugin](https://github.com/antlr/jetbrains-plugin-sample)√æ* [ANTLRv4 grammar plugin](https://github.com/antlr/intellij-plugin-v4)√æ* [Pebble plugin](https://github.com/bjansen/pebble-intellij)√æ√æOther usages can be [found on GitHub](https://github.com/search?p=1&q=ANTLRParserAdaptor&type=Code)√æ√æ## Migration from the pre-Maven version√æ√æBefore 0.1, it was recommended to add this Git repo as a submodule of your own project, or to copy the source files directly.√æ√æIt is now recommended to use the Maven dependency. The main **breaking change** is that the base package has been renamed from `org.antlr.jetbrains.adaptor` to `org.antlr.intellij.adaptor`"
XBean1024/HttpHelperWeb,227749,1,1,2,User,False,:fire:‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÈ°πÁõÆÔºå‰ªéÂêéÂè∞Âà∞ÂâçÁ´Ø„ÄÅÁßªÂä®Á´ØÔºå‰∏ªË¶ÅÁî®‰∫éÊµãËØïÊé•Âè£„ÄÅÊï∞ÊçÆÂ∫ìÁ≠âÂäüËÉΩ,,,9,Java,"{'': 1, 'iml': 1, 'md': 2}",73,1,0,1,0,1056,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,78,,16,binny1024/HttpHelperWeb,"# HttpHelperWeb√æ:fire:Áî®‰∫éÊµãËØïÂÆâÂçìÁΩëÁªúËØ∑Ê±ÇÊ°ÜÊû∂ËÄåÂàõÂª∫ÁöÑwebÂ∑•Á®ã √æ√æ#### Êñ∞Â¢ûÊó∂ÈíüÁïåÈù¢√æ![](https://github.com/Xbean1024/HttpHelperWeb/blob/master/gif/clock.gif)√æ#### ÁôªÈôÜ√æ![](https://github.com/Xbean1024/XHttp/blob/master/gif/login.gif)√æ#### Ê≥®ÂÜå√æ![](https://github.com/Xbean1024/XHttp/blob/master/gif/register.gif) √æ#### ÁΩëÈ°µÁâàÁôªÈôÜ √æ![](https://github.com/Xbean1024/HttpHelperWeb/blob/master/gif/login_register.gif)√æ#### Êï∞ÊçÆÂ∫ì√æ![](https://github.com/Xbean1024/HttpHelperWeb/blob/master/gif/data.png)√æ### Êó•ÂøóÔºö√æ2017/8/10 17:21:20 √æ###  ‰∏ä‰º†Êï∞ÊçÆÂ∫ì  Êï∞ÊçÆÁªìÊûÑ√æ![](https://github.com/Xbean1024/HttpHelperWeb/blob/master/gif/db.png)√æ2017/8/8 13:27:53 √æ### 1„ÄÅpost ËØ∑Ê±ÇÔºåÊîØÊåÅÂ§öÊñá‰ª∂‰∏ä‰º† √æ√æ2017/8/4 19:13:44  √æ√æ###  1„ÄÅÈÄâÊã©Ë°® √æ√æ    user tablename; √æ√æ###  2„ÄÅ‰øÆÊîπË°®‰∏≠ÁöÑÂ≠óÊÆµÁöÑÂ≠óÁ¨¶ÈõÜ √æ√æ    mysql> alter table users modify user_account varchar(20) character set utf8; √æ###  3„ÄÅAndroidÁΩëÁªúÁºñÁ®ã‰πã‰ΩøÁî®getÊñπÂºèÂêëÊúçÂä°Á´ØÊèê‰∫§Êï∞ÊçÆÂíå‰π±Á†ÅÈóÆÈ¢òÁöÑËß£ÂÜ≥ √æ√æ    //Êèê‰∫§ÁöÑÊï∞ÊçÆÈúÄË¶ÅËøõË°åURLÁºñÁ†ÅÔºåÂ≠óÊØçÂíåÊï∞Â≠óÁºñÁ†ÅÂêéÈÉΩ‰∏çÂèò √æ    String path = ""http://192.168.252.1:8080/web/LoginServlet?name=""+URLEncoder.encode(name)+""&password=""+pass;√æ      √æ√æ## QQÔºö‰∫§ÊµÅÁæ§ Ôºö192268854√æ![](https://github.com/Xbean1024/XHttp/blob/master/gif/QQ.JPG)"
salesforce-marketingcloud/FuelSDK-Java,8214,57,31,87,Organization,False,Salesforce Marketing Cloud Java SDK,,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",11,Java,"{'': 2, 'yml': 1, 'md': 2, 'template': 1, 'xml': 1}",571,9,11,10,0,2549,True,54,16,4,0,10,40,2,1,6,3,0,0,0,0,7,0,42,2,,,"Salesforce Marketing Cloud Java SDK√æ===================================√æ√æThe Salesforce Marketing Cloud Java SDK enables developers to easily√æaccess the Salesforce Marketing Cloud (formerly ExactTarget) via the√æJava platform. Among other things, the SDK:√æ√æ* automatically acquires and refreshes Marketing Cloud√æ  access tokens√æ√æ* enables developers to access both Marketing Cloud SOAP√æ  and REST APIs in the same session√æ√æ* exposes simplified versions of the most commonly used Marketing√æ  Cloud objects and methods as Java native objects√æ√æ* provides passthroughs so developers can access the full√æ  REST and SOAP APIs directly when they need to go beyond√æ  the simplified interfaces√æ√æ* adds ""sugar"" methods for the most commonly used Marketing√æ  Cloud features that make it easy to use those features (e.g.,√æ  the SDK provides a SQL-like interface to data extensions)√æ√æFor more information about the Java SDK and how to use it, please see√æthe Javadocs at http://salesforce-marketingcloud.github.io/FuelSDK-Java/.√æ√æNew Features in Version 1.5.0√æ------------√æ* Added Refresh Token support for OAuth2 authentication√æ* Added Web/Public App support for OAuth2 authentication√æ√æ   More details on Access Tokens for Web/Public Apps can be found [here](https://developer.salesforce.com/docs/atlas.en-us.mc-app-development.meta/mc-app-development/access-token-app.htm)√æ√æ  Sample Config for OAuth2:√æ  √æ  ```√æ  clientId=<CLIENT_ID>√æ  clientSecret=<CLIENT_SECRET>√æ  authEndpoint=<AUTH TENANT SPECIFIC ENDPOINT>√æ  endpoint=<REST TENANT SPECIFIC ENDPOINT>√æ  soapEndpoint=<SOAP TENANT SPECIFIC ENDPOINT>√æ  useOAuth2Authentication=true√æ  accountId=<TARGET_ACCOUNT_ID>√æ  scope=<PERMISSION_LIST>√æ  applicationType=<APPLICATION_TYPE>√æ  redirectURI=<REDIRECT_URI_FOR_PUBLIC/WEB_APP>√æ  authorizationCode=<AUTHORIZATION_CODE_FOR_PUBLIC/WEB_APP>√æ  ```√æ  √æ* applicationType can have one of the following values: `server`, `public`, `web`. The default value of applicationType is `server`.√æ√æ√æNew Features in Version 1.4.0√æ------------√æ* Added support for OAuth2 authentication - [More Details](https://developer.salesforce.com/docs/atlas.en-us.mc-app-development.meta/mc-app-development/integration-considerations.htm)√æ* To enable OAuth2 authentication, set `useOAuth2Authentication=true` in the fuelsdk.properties file.√æ√æ  Sample Config for OAuth2:√æ√æ```√æclientId=<CLIENT_ID>√æclientSecret=<CLIENT_SECRET>√æauthEndpoint=<AUTH TENANT SPECIFIC ENDPOINT>√æendpoint=<REST TENANT SPECIFIC ENDPOINT>√æsoapEndpoint=<SOAP TENANT SPECIFIC ENDPOINT>√æuseOAuth2Authentication=true√æaccountId=<TARGET_ACCOUNT_ID>√æscope=<PERMISSION_LIST>√æ```√æ√æInstallation√æ------------√æ√æThe easiest way to install the Java SDK is via Maven&mdash;simply add the following dependency to your project's `pom.xml`:√æ√æ    <dependency>√æ      <groupId>com.github.salesforce-marketingcloud</groupId>√æ      <artifactId>fuelsdk</artifactId>√æ      <version>1.5.0</version>√æ    </dependency>√æ√æMaven will automatically resolve, download, and install all dependencies for you.√æ√æYou can also download a jar file from the [Releases](https://github.com/salesforce-marketingcloud/FuelSDK-Java/releases) page or clone the repository and build a jar file yourself in the standard way. If you go this route, you'll need to ensure you have manually downloaded and installed all dependencies ([Apache CXF](http://cxf.apache.org), [Apache Commons BeanUtils](http://commons.apache.org/proper/commons-beanutils), [Apache log4j 1.x](http://logging.apache.org/log4j/1.2/), and [Google Gson](https://code.google.com/p/google-gson)) to your class path.√æ√æOnce you have the SDK installed, you'll need to obtain a client ID and client secret from App Center and place them in `fuelsdk.properties` using `src/main/resources/fuelsdk.properties.template` as a starting template. Theses values authenticate you to the Saleforce Marketing Cloud API."
kakawait/cas-security-spring-boot-starter,435,123,12,41,User,False,Spring boot starter for Apereo CAS client fully integrated with Spring security,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",15,Java,"{'': 2, 'yml': 2, 'md': 3, 'cmd': 1, 'xml': 1, 'sh': 1}",220,3,25,3,6,1118,True,12,43,1,2,2,86,0,8,11,3,1,7,82,40,1,0,58,,89,,"# Spring Security CAS starter√æ√æ[![Travis](https://img.shields.io/travis/kakawait/cas-security-spring-boot-starter.svg)](https://travis-ci.org/kakawait/cas-security-spring-boot-starter)√æ[![Maven Central](https://img.shields.io/maven-central/v/com.kakawait/cas-security-spring-boot-starter.svg)](https://search.maven.org/#artifactdetails%7Ccom.kakawait%7Ccas-security-spring-boot-starter%7C1.0.2%7Cjar)√æ[![License](https://img.shields.io/github/license/kakawait/cas-security-spring-boot-starter.svg)](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/LICENSE.md)√æ[![Codecov](https://img.shields.io/codecov/c/github/kakawait/cas-security-spring-boot-starter.svg)](https://codecov.io/gh/kakawait/cas-security-spring-boot-starter)√æ[![SonarQube Tech Debt](https://img.shields.io/sonar/https/sonarcloud.io/com.kakawait%3Acas-security-spring-boot-parent/tech_debt.svg)](https://sonarcloud.io/dashboard?id=com.kakawait%3Acas-security-spring-boot-parent)√æ[![Twitter Follow](https://img.shields.io/twitter/follow/thibaudlepretre.svg?style=social&label=%40thibaudlepretre)](https://twitter.com/intent/follow?screen_name=thibaudlepretre)√æ√æ> A Spring boot starter that will help you configure [Spring Security Cas](http://docs.spring.io/spring-security/site/docs/current/reference/html/cas.html) within the application security context.√æ√æ## Features√æ√æ- Spring boot 1 and 2 support√æ- Configures CAS authentication and authorization√æ- Support dynamic service resolution based on current `HttpServletRequest`√æ- Advance configuration through [CasSecurityConfigurerAdapter](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-autoconfigure/src/main/java/com/kakawait/spring/boot/security/cas/CasSecurityConfigurerAdapter.java)√æ- Integration with _Basic authentication_ if `security.basic.enabled=true` that allow you to authenticate using header `Authorization: Basic ...` in addition to _CAS_√æ- `RestTemplate` integration√æ√æ## Setup√æ√æAdd the Spring boot starter to your project√æ√æ```xml√æ<dependency>√æ  <groupId>com.kakawait</groupId>√æ  <artifactId>cas-security-spring-boot-starter</artifactId>√æ  <version>1.0.2</version>√æ</dependency>√æ```√æ√æBut be careful `1.x.x` version has some **breaking changes** if you comes from `0.x.x` version.√æ√æPlease checkout [CHANGELOG.md](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/CHANGELOG.md), in particular `breaking changes` sections.√æ√æ\* breaking changes should be only possible between two major version, example:√æ√æ- from `0.x.x` to `1.x.x`√æ- from `1.x.x` to `2.x.x`√æ- ...√æ√æ## Usage√æ√æIn order to trigger auto-configuration you must fill, at least, the following properties regarding the resolution mode you want to use√æ√æ### _static_ (_classic_) resolution mode√æ√æ_static_ resolution mode is _classic_ and default mode that you could find if you're using plain old [Apereo Java client](https://github.com/apereo/java-cas-client) or [Spring Security CAS](http://docs.spring.io/spring-security/site/docs/current/reference/html/cas.html).√æ√æThus you have to fill at least the following mandatory properties:√æ√æ```yml√æsecurity:√æ  cas:√æ    server:√æ      base-url: http://your.cas.server/cas√æ    service:√æ      base-url: http://localhost:8080√æ```√æ√æ| Property                        | [Apereo Java client](https://github.com/apereo/java-cas-client) equivalent | Description                                                                                                                                                                                                              |√æ|---------------------------------|----------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|√æ| `security.cas.server.base-url`  | `casServerUrlPrefix`                                                       | The start of the CAS server url, i.e. https://localhost:8443/cas                                                                                                                                                         |√æ| `security.cas.service.base-url` | `serviceName`                                                              | The name of the server this application is hosted on. Service URL will be dynamically constructed using this, i.e. https://localhost:8443 (you must include the protocol, but port is optional if it's a standard port). |√æ√æ### _dynamic_ resolution mode:√æ√æ_dynamic_ resolution mode is a novel mode from that starter that will allow you to do not hard-code service url in your configuration. Thereby your configuration will be more portable and easy to use.√æ√æ**ATTENTION** _dynamic_ resolution mode use information from `HttpServletRequest` to build service url, that can be a security breach if you do not control headers like `Host` or `X-Forwarded-*` that why _dynamic_ resolution mode **is not the default mode** and you must activate it as describe on below properties.√æ√æ```yml√æsecurity:√æ  cas:√æ    server:√æ      base-url: http://your.cas.server/cas√æ    service:√æ      resolution-mode: dynamic√æ```√æ√æ| Property                               | [Apereo Java client](https://github.com/apereo/java-cas-client) equivalent | Description                                                                                                                                                                                                         |√æ|----------------------------------------|----------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|√æ| `security.cas.server.base-url`         | `casServerUrlPrefix`                                                       | the start of the CAS server url, i.e. https://localhost:8443/cas                                                                                                                                                    |√æ| `security.cas.service.resolution-mode` | **Not implemented**                                                        | Resolution modes can be `static` or `dynamic`, by default is `static` and you must fill `security.cas.service.base-url` whereas in `dynamic` mode service url will be generated from receiving `HttpServletRequest` |√æ√æif you're using `X-Forwarding-Prefix` header I will strongly recommend you to use [ForwardedHeaderFilter](http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/filter/ForwardedHeaderFilter.html) since _Tomcat_ [`RemoteIpValve`](https://tomcat.apache.org/tomcat-8.5-doc/api/org/apache/catalina/valves/RemoteIpValve.html) used when setting up `server.use-forward-headers=true` does not support _prefix_/_context-path_.√æ√æ```java√æ@Bean√æFilterRegistrationBean forwardedHeaderFilter() {√æ    FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();√æ    filterRegistrationBean.setFilter(new ForwardedHeaderFilter());√æ    filterRegistrationBean.setOrder(Ordered.HIGHEST_PRECEDENCE);√æ    return filterRegistrationBean;√æ}√æ```√æ√æ## Properties√æ√æThe supported properties are:√æ√æ| Property                                    | Default value                  | Description|√æ|---------------------------------------------|--------------------------------||√æ| `security.cas.enabled`                      | `true`                         | Enable CAS security|√æ| `security.cas.key`                          | `UUID.randomUUID().toString()` | An id used by the [`CasAuthenticationProvider`](https://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/cas/authentication/CasAuthenticationProvider.html#setKey-java.lang.String-)                                                                                                                                                                                                                                                                                                                                                                             |√æ| `security.cas.paths`                        | `/**`                          | Comma-separated list of paths to secure (work as same way as `security.basic.path`|√æ| `security.cas.user.default-roles`           | `USER`                         | Comma-separated list of default user roles. If roles have been found from `security.cas.user.roles-attributes` default roles will be append to the list of users roles                                                                                                                                                                                                                                                                                                                                                                                                                                |√æ| `security.cas.user.roles-attributes`        |                                | Comma-separated list of CAS attributes to be used to determine user roles|√æ| `security.cas.proxy-validation.enabled`     | `true`                         | Defines if proxy should be checked again chains `security.cas.proxy-validation.chains`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |√æ| `security.cas.proxy-validation.chains`      |                                | Defines proxy chains. Each acceptable proxy chain should include a comma-separated list of URLs (for exact match) or regular expressions of URLs (starting by the ^ character)                                                                                                                                                                                                                                                                                                                                                                                                                        |√æ| `security.cas.server.protocol-version`      | `3`                            | Determine which CAS protocol version to be used, only protocol version 1, 2 or 3 is supported.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |√æ| `security.cas.server.base-url`              |                                | The start of the CAS server url, i.e. https://localhost:8443/cas|√æ| `security.cas.server.validation-base-url`   |                                | Optional, `security.cas.server.base-url` is used if missing. The start of the CAS server url (similar to `security.cas.server.base-url`) used during ticket validation flow. Could be useful when server (your service) to server (CAS server) network is different from your external/browser network (i.e. docker environment, see [docker profile properties](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-sample/src/main/resources/application.yml)).                                                                                       | √æ| `security.cas.server.paths.login`           | `/login`                       | Defines the location of the CAS server login path that will be append to the existing `security.cas.server.base-url` url                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |√æ| `security.cas.server.paths.logout`          | `/logout`                      | Defines the location of the CAS server logout path that will be append to the existing `security.cas.server.base-url` url                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |√æ| `security.cas.service.resolution-mode`      | `static`                       | Resolution modes can be `static` or `dynamic`, by default is `static` and you must fill `security.cas.service.base-url` whereas in `dynamic` mode service url will be generated from receiving `HttpServletRequest`. **Attention** will not override `security.cas.server.validation-base-url` and `security.cas.service.callback-base-url` if defined, see [docker profile properties](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-sample/src/main/resources/application.yml) to get an example.                                               |√æ| `security.cas.service.base-url`             |                                | The name of the server this application is hosted on. Service URL will be dynamically constructed using this, i.e. https://localhost:8443 (you must include the protocol, but port is optional if it's a standard port). Skipped if resolution mode is `dynamic`.                                                                                                                                                                                                                                                                                                                                     |√æ| `security.cas.service.callback-base-url`    |                                | Optional, `security.cas.service.base-url` is used if missing. Represents the base url that will be used to compute _Proxy granting ticket callback_ (see `security.cas.service.paths.proxy-callback`). It could be useful to be different from `security.cas.service.base-url` when server (CAS server) to server (your service) network is different from your external/browser network (i.e. docker environment, see see [docker profile properties](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-sample/src/main/resources/application.yml)). | √æ| `security.cas.service.paths.login`          | `/login`                       | Defines the application login path that will be append to the existing `security.cas.service.base-url` url                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |√æ| `security.cas.service.paths.logout`         | `/logout`                      | Defines the application logout path that will be append to the existing `security.cas.service.base-url` url                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |√æ| `security.cas.service.paths.proxy-callback` |                                | The callback path that will be, if present, append to the `security.cas.service.callback-base-url` or `security.cas.service.base-url` and add to as parameter inside request validation. **It must be set if you want to receive _Proxy Granting Ticket_ `PGT`**.                                                                                                                                                                                                                                                                                                                                     |√æ√æOtherwise you can checkout [CasSecurityProperties](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-autoconfigure/src/main/java/com/kakawait/spring/boot/security/cas/CasSecurityProperties.java) class.√æ√æ## Additional configuration√æ√æIf you need to set additional configuration options simply register within Spring application context instance of [`CasSecurityConfigurerAdapter`](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-autoconfigure/src/main/java/com/kakawait/spring/boot/security/cas/CasSecurityConfigurerAdapter.java)√æ√æ```java√æ@Configuration√æclass CustomCasSecurityConfiguration extends CasSecurityConfigurerAdapter {√æ    @Override√æ    public void configure(CasAuthenticationFilterConfigurer filter) {√æ        // Here you can configure CasAuthenticationFilter√æ    }√æ    √æ    @Override√æ    public void configure(CasSingleSignOutFilterConfigurer filter) {√æ        // Here you can configure SingleSignOutFilter√æ    }√æ√æ    @Override√æ    public void configure(CasAuthenticationProviderSecurityBuilder provider) {√æ        // Here  you can configure CasAuthenticationProvider√æ    }√æ    √æ    @Override√æ    public void configure(HttpSecurity http) throws Exception {√æ        // Here you can configure Spring Security HttpSecurity object during init configure√æ    }√æ    √æ    @Override√æ    public void configure(CasTicketValidatorBuilder ticketValidator) {√æ        // Here you can configure CasTicketValidator√æ    }√æ}√æ```√æ√æOtherwise many beans defined in that starter are annotated with `@ConditionOnMissingBean` thus you can override default bean definitions.√æ√æ## Proxy granting storage√æ√æStarter does not provide any additional _proxy granting storage_ (yet), by default an _in memory_ storage is used [`ProxyGrantingTicketStorageImpl`](https://github.com/apereo/java-cas-client/blob/master/cas-client-core/src/main/java/org/jasig/cas/client/proxy/ProxyGrantingTicketStorageImpl.java).√æ√æTo override it you can expose a `ProxyGrantingTicketStorage` beans like following:√æ√æ```java√æ@Bean√æProxyGrantingTicketStorage proxyGrantingTicketStorage() {√æ    return new MyCustomProxyGrantingTicketStorage();√æ}√æ```√æ√æ**Or** use `configurer` but a bit longer since you must report `ProxyGrantingTicketStorage` in both `CasAuthenticationFilter` and `TicketValidator`√æ√æ```java√æ@Configuration√æclass CustomCasSecurityConfiguration extends CasSecurityConfigurerAdapter {√æ    @Override√æ    public void configure(CasAuthenticationFilterConfigurer filter) {√æ        filter.proxyGrantingTicketStorage(new MyCustomProxyGrantingStorage());√æ    }√æ    √æ    @Override√æ    public void configure(CasTicketValidatorBuilder ticketValidator) {√æ        ticketValidator.proxyGrantingTicketStorage(new MyCustomProxyGrantingStorage());√æ    }√æ}√æ```√æ√æ## Logout & SLO√æ√æBy default starter will configure both _logout_ and _single logout (SLO)_.√æ√æ**ATTENTION** default _logout_ (on `/logout`) behavior will:√æ √æ1. Logout from application and also logout from CAS server that will logout any other applications.√æ2. Keep default Spring security behavior concerning _CSRF_ and _logging out_ to summarize if _CSRF_ is enabled logout will only mapped on `POST`, see https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#csrf-logout for more details √æ√æIf you want to change those behaviors, for example by adding a logout page that will propose user to logout from other application, you may configure like following:√æ√æ```java√æ@Configuration√æclass CasCustomLogoutConfiguration extends CasSecurityConfigurerAdapter {√æ    private final CasSecurityProperties casSecurityProperties;√æ√æ    private final LogoutSuccessHandler casLogoutSuccessHandler;√æ    √æ    public CustomLogoutConfiguration(LogoutSuccessHandler casLogoutSuccessHandler) {√æ        this.casLogoutSuccessHandler = casLogoutSuccessHandler;√æ    }√æ√æ    @Override√æ    public void configure(HttpSecurity http) throws Exception {√æ        http.logout()√æ            .permitAll()√æ            // Add null logoutSuccessHandler to disable CasLogoutSuccessHandler√æ            .logoutSuccessHandler(null)√æ            .logoutSuccessUrl(""/logout.html"")√æ            .logoutRequestMatcher(new AntPathRequestMatcher(""/logout""));√æ        LogoutFilter filter = new LogoutFilter(casLogoutSuccessHandler, new SecurityContextLogoutHandler());√æ        filter.setFilterProcessesUrl(""/cas/logout"");√æ        http.addFilterBefore(filter, LogoutFilter.class);√æ    }√æ}√æ√æ@Configuration√æclass WebMvcConfiguration extends WebMvcConfigurerAdapter {√æ    @Override√æ    public void addViewControllers(ViewControllerRegistry registry) {√æ        registry.addViewController(""/logout.html"").setViewName(""logout"");√æ        registry.setOrder(Ordered.HIGHEST_PRECEDENCE);√æ    }√æ}√æ```√æ√æWith possible `logout.html` like following√æ √æ ```html√æ<!DOCTYPE html>√æ<html xmlns:th=""http://www.thymeleaf.org"">√æ<head>√æ    <meta charset=""UTF-8"" />√æ    <title>Logout page</title>√æ</head>√æ<body>√æ    <h2>Do you want to log out of CAS?</h2>√æ    <p>You have logged out of this application, but may still have an active single-sign on session with CAS.</p>√æ    <p><a href=""/cas/logout"" th:href=""@{/cas/logout}"">Logout of CAS</a></p>√æ</body>√æ</html>√æ```√æ√æYou can checkout & run sample module [`cas-security-spring-boot-sample`](https://github.com/kakawait/cas-security-spring-boot-starter/tree/master/cas-security-spring-boot-sample) with _profile_ `custom-logout`.√æ√æ## Proxy chains validation√æ√æBy default client configuration is `security.cas.proxy-validation.enabled = true` with empty proxy chains (`security.cas.proxy-validation.chains`). That mean you will not be able to validate proxy ticket since proxy chains is empty.√æ√æYou should disable proxy validation using:√æ√æ```yml√æsecurity:√æ  cas:√æ    proxy-validation:√æ      enabled: false√æ```√æ√æ**But is not recommended for production environment**, or define your own proxy chains:√æ√æ```yml√æsecurity√æ  cas:√æ    proxy-validation:√æ      chains:√æ        - http://localhost:8180, http://localhost:8181√æ        - - http://localhost:8280√æ          - http://localhost:8281√æ        - ^http://my\\.domain\\..*√æ```√æ√æAs you can see there is multiple syntaxes for `yml` format to define _collection of collection_:√æ√æ1. Using _comma-separated_ list√æ2. Using double `- -` syntax√æ√æIf you are using `properties` format you could translate like following:√æ√æ```properties√æsecurity.cas.proxy-validation.chains[0] = http://localhost:8180, http://localhost:8181√æsecurity.cas.proxy-validation.chains[1] = http://localhost:8280, http://localhost:8281√æsecurity.cas.proxy-validation.chains[2] = ^http://my\\.domain\\..*√æ```√æ√æ## RestTemplate integration with Proxy ticket√æ√æSince `0.7.0` version, there is a simple integration with `RestTemplate` but not enabled by default.√æ√æIn order to enabled it you must create your own `RestTemplate` bean and adding an _interceptor_√æ√æ```java√æ@Bean√æRestTemplate casRestTemplate(ServiceProperties serviceProperties, ProxyTicketProvider proxyTicketProvider) {√æ    RestTemplate restTemplate = new RestTemplate();√æ    restTemplate.getInterceptors().add(new CasAuthorizationInterceptor(serviceProperties, proxyTicketProvider));√æ    return restTemplate;√æ}√æ```√æ√æThis _interceptor_ is pretty simple, it will simply ask a new _proxy ticket_ for each request and append it to request query parameter.√æFor example with: `http://httpbin.org/get` interceptor will modify request uri to become `http://httpbin.org/get?ticket=PT-XX-YYYYYYYYYY`.√æ√æ**ATTENTION** if _interceptor_ get any issue to get _proxy ticket_ from CAS server, it will throw an `IllegalStateException`.√æ√æPlease checkout You can found sample usage for both on [`CasSecuritySpringBootSampleApplication`](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-sample/src/main/java/com/kakawait/CasSecuritySpringBootSampleApplication.java) to get an sample usage.√æ√æ### AssertionProvider and ProxyTicketProvider√æ√æIn addition to `RestTemplate` integration, since `0.7.0` there is now two new autoconfigured beans:√æ√æ1. `AssertionProvider` that will provide you a way to retrieve the current (bounded to current authenticated request) `org.jasig.cas.client.validation.Assertion`√æ2. `ProxyTicketProvider` that will provide you a simple way to ask a _proxy ticket_ for a given service (regarding the current authenticated request)√æ√æYou can found sample usage for both on [`CasSecuritySpringBootSampleApplication`](https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/cas-security-spring-boot-sample/src/main/java/com/kakawait/CasSecuritySpringBootSampleApplication.java)√æ√æ## License√æ√æMIT License"
wenbochang888/house,6620,82,1,13,User,False,ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÔºöÁ®ãÂ∫èÂëòÂçöÂçö„ÄÇÊúâÂÆåÊï¥ÁâàÁöÑPDF‰∏ãËΩΩ„ÄÇ,,,9,Java,"{'': 2, 'md': 1, 'pdf': 2, 'cmd': 1, 'xml': 1}",29,4,0,1,3,598,True,0,0,0,0,0,0,0,0,8,0,1,1,3,3,0,0,25,,23,,"# **<a href = ""#"">ÁÇπÁÇπÂè≥‰∏äËßíStarÔºåÊÑüË∞¢ÊîØÊåÅÔºåË∞¢Ë∞¢</a>**√æ# **<a href = ""https://github.com/wenbochang888/house/raw/master/house.pdf"">ÁÇπÊàë‰∏ãËΩΩPDFÊñáÊ°£</a>**√æ√æ### **ÂâçË®ÄÔºö**√æ√æ- Êú¨‰∫∫ÂØπÁªèÊµé‰∏Ä‰∫õÊØîËæÉÊÑüÂÖ¥Ë∂£Ôºå‰πüÊØîËæÉÁªèÂ∏∏ÂÖ≥Ê≥®Êñ∞ÈóªÔºåÈÄõÈÄõËÆ∫Âùõ‰ªÄ‰πàÁöÑ„ÄÇ√æ√æ- ÂàöÁúãÂà∞Áü•‰πé‰∏Ä‰∏™ÈóÆÈ¢ò <a href = ""https://www.zhihu.com/question/284939230/answer/449853894""> **Êàø‰ª∑ÁúüÁöÑ‰ºöÂ∞±ËøôÊ†∑‰∏ÄÁõ¥Ê∂®‰∏ãÂéªÂêóÔºü**</a>  ÊÑüÊÖ®ÁîöÂ§ö√æ- ÈáåÈù¢ÊèêÂà∞‰∫Ü‰∏ÄÁØá2010Âπ¥Â§©Ê∂ØÁ§æÂå∫ÁöÑ‰∏ÄÁØáÂ∏ñÂ≠ê  <a href = ""https://bbs.tianya.cn/m/post-house-252774-1.shtml"">2010Âπ¥ÁöÑÊàøÂú∞‰∫ßË∞ÉÊéßÔºåÊàë‰ª¨Êî∂Ëé∑‰∫Ü‰ªÄ‰πàÔºüÂÜôÂú®Êàø‰ª∑Êö¥Ê∂®Ââç</a>√æ- ËøôÁØáÂ§©Ê∂ØÁöÑÂ∏ñÂ≠êÔºå**Áé∞Âú®2018Âπ¥ÔºåÂú®ÂΩìÊó∂ÁöÑ2010Âπ¥ÂÆåÂÖ®È¢ÑÊµãÂà∞‰∫Ü‰∏≠ÂõΩÊàø‰ª∑ÁöÑË∂ãÂäø**√æ- **Âπ∂‰∏îÂΩìÊó∂Ê•º‰∏ª‰π∞‰∫Ü‰∏âÂ•óÊàøÔºåÁé∞Âú®‰º∞ËÆ°Â∑≤ÁªèËµöÁøª‰∫Ü**√æ- ÁßâÁùÄÂØπÂ§ßÁ•ûÁöÑÊÜßÊÜ¨ÔºåÊú¨‰∫∫ÂèàÊòØÂ≠¶ËÆ°ÁÆóÊú∫ÁöÑÔºåÊó¢ÁÑ∂Â∏ñÂ≠êÂÜÖÂÆπËøô‰πàÂ•Ω√æ- ÈÇ£Áà¨‰∏ãÊù•‰∫ÜÔºåËØ¥Âä®ÊâãÂ∞±Âä®Êâã√æ√æ### ËøêÁî®ÊäÄÊúØ√æ√æ- SpringBoot√æ- HttpClient√æ- JSoup√æ- Ê≠£Âàô√æ√æ### ÊàêÊûú√æ√æ- PDFÊñáÊ°£Â∑≤ÁªèÊîæ‰∫éGithubÔºåÊ¨¢Ëøé‰∏ãËΩΩÊµèËßà√æ- GithubÂú∞ÂùÄÔºö<a href = ""https://github.com/wenbochang888/house"">wenbochang888-house</a>ÔºåÊ¨¢ËøéÁªôÊàë‰∏Ä‰∏™Â∞èÂ∞èÁöÑstar√æ- PDFÂú®Á∫øÊµèËßàÂú∞ÂùÄ(ÂèØËÉΩÂä†ËΩΩÁºìÊÖ¢)Ôºö<a href = ""https://github.com/wenbochang888/house/blob/master/house.pdf"">Êàø‰ª∑PDFÁâàÊú¨</a>√æ- PDF‰∏ãËΩΩÂú∞ÂùÄÔºö<a href = ""https://github.com/wenbochang888/house/raw/master/house.pdf"">ÁÇπÊàë‰∏ãËΩΩ</a>√æ√æ![1](https://github.com/wenbochang888/house/blob/master/src/img/1.png)√æ√æ![2](https://github.com/wenbochang888/house/blob/master/src/img/2.jpg)"
openshift-evangelists/Wild-West-Backend,87,7,5,16,Organization,False,,,,4,Java,"{'': 1, 'sh': 1, 'xml': 1}",31,3,0,2,0,1005,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,45,6,,,
weblicht/wlfxb,1101,2,5,5,Organization,False,handler for TCF WebLicht data exchange format,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",7,Java,"{'': 1, 'txt': 4, 'xml': 1}",199,3,11,6,0,2846,True,4,12,0,0,0,6,0,1,7,0,1,5,42,14,24,0,18,2,,,
WarCraft/Monolith,2879,0,1,2,Organization,False,WarCraft: Monolith is a quality of life framework for creating Minecraft plugins.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",11,Scala,"{'': 1, 'conf': 1, 'md': 2, 'sbt': 1}",1116,1,0,2,0,748,True,0,0,0,0,0,3,0,0,8,0,1,321,36244,36439,0,0,6,1,,WarCraft/monolith,"# WarCraft: Monolith√æ√æ![](http://warcraft.gg/image/wcgg-logo.png)√æ√æMonolith is an effort by WarCraft to open source its code and get involved with the Minecraft plugin community. It is the result of collecting common functionality encountered during years of server development and its purpose is to provide a more convenient API for certain aspects of creating Minecraft plugins. Despite the name, Monolith does not encourage the similarly named anti-pattern, but actually tries to steer the consumer towards proper modularization and composition over inheritance by design. You will find that most modules are written in an immutable style to improve testability and reduce side effects. The project takes some elements from Domain Driven Design (DDD) to improve project structure, but by no means attempts to implement it to its full potential.√æ√æ## Work in progress√æThe Monolith project is a work in progress and as such you might run into block types or events that have not yet been implemented. When you do please open an issue on our GitHub at [github.com/WarCraft/Monolith](https://github.com/WarCraft/Monolith) and we will do our best to implement it as quickly as we can. Alternatively you can look into implementing the missing piece yourself and opening a pull request. More on contributing below.√æ√æ## Ask questions√æWe open source our code for everyone's benefit. If you run into a concept or snippet that you don't understand do not hesitate to ask a question in the #dev channel on our Discord at [discord.warcraft.gg](http://discord.warcraft.gg) or in the development category on our forum at [community.warcraft.gg](http://community.warcraft.gg) and we'll do our best to explain what it does, how it does it, and share our thoughts on why we felt that's how it should do it.√æ√æ## Contributing√æIf you run into a concept or snippet that you feel could be improved please do get in touch via the aforementioned channels, or through a pull request, and we can discuss potential changes. In addition you could pick up a task from our YouTrack board at [warcraft.myjetbrains.com](https://warcraft.myjetbrains.com/youtrack), but more on that in the future. To enable collaboration we impose a minimal set of house rules:√æ- The API layer will be fully documented at all times√æ- The application layer will enjoy extensive automated testing wherever appropriate√æ√æ## Plugins√æModules that have use cases as standalone plugins will eventually be provided as simple downloads. Other, more niche, implementations will have to be provided on the class path or fat compiled into your own plugins. We're looking into getting our artifacts on Maven Central.√æ√æ## Accessing plugin data√æ#### In-memory data√æMany plugin services keep their data in memory only and as such return concrete data types. These services guarantee they have all necessary data ready and will never block the main thread.√æ#### Persistent data√æOn the other hand there are plenty services working with persistent data. These services will _always_ expose their data as a Future and it should _never_ be assumed that these services are able to return the requested data immediately. While it is often the case that this can be done for online players to improve the player's experience, again; it should _never_ be assumed. All consumers of persistent data services should expect to not be able to complete their computation during the current tick and deal with the Future accordingly. To improve the developer experience using this approach an `immediatelyOrOnComplete` extension method for Futures has been made available in the `gg.warcraft.monolith.api.util.Ops` object. This method runs the onComplete function on the calling thread if the result was available immediately, but runs it asynchronously wrapped in a call to the task service to run on the next synchronous server tick if not."
relvaner/actor4j-core,8347,39,7,6,User,False,Actor4j is an actor-oriented Java framework. Useful for building lightweighted microservices (these are the actors themselves or groups of them). Enhanced performance of message passing.,http://actor4j.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",675,4,1,1,9,1722,True,0,0,0,0,0,0,0,0,7,0,1,30,2567,736,10,0,20,,7,,"[![Build Status](https://travis-ci.org/relvaner/actor4j-core.svg?branch=master)](https://travis-ci.org/relvaner/actor4j-core)√æ[![Coverage Status](https://coveralls.io/repos/github/relvaner/actor4j-core/badge.svg?branch=master)](https://coveralls.io/github/relvaner/actor4j-core?branch=master)√æ[![License](https://img.shields.io/hexpm/l/plug.svg)](https://www.apache.org/licenses/)√æ<!-- [![gitter: actor4j/actor4j](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/actor4j/actor4j) -->√æ<!-- [<img title=""gitter: actor4j/actor4j"" src=""https://badges.gitter.im/Join Chat.svg"" alt=""gitter: actor4j/actor4j"">](https://gitter.im/actor4j/actor4j) -->√æ√æ## Actor4j promotion ##√æ<img src=""doc/images/promo.png"" alt=""Representation of the basic calls to the actor4j REST API"" width=""686"" height=""486""/>√æ√æNovel thread pool architecture introduced for improving the performance of the message passing between the actors. Actors in this implementation don't have their own queue, it's located on their belonging thread (use of multiple task-specific queues), that are used together. By this, double queueing is avoided  (worker-queue of the thread + message queue for every actor). Additionally differentiating between intra-thread and inter-thread communication, this leads to a better performance and was shown in our research paper [[18](#18)]. Actors on the same thread don't even need any kind of synchronization protection mechanism for communicating between each other, this is one of the key-advantages of this implementation. This results in a significant performance boost, and can lead to a near unlimited speedup, only limited by the numbers of cores.√æ√æ## What is an actor? ##√æ√æThere are three axioms for actors written by Carl Hewitt [[22](#22)]. ""When an Actor receives a message, it can concurrenlty:√æ - send messages to addresses of Actors that it has√æ - create new Actors√æ - designate how to handle the next message it receives"" [[23](#23)].√æ√æCompact Explanation:√æ√æ""One actor is no actor"" [[22](#22)]. ""Actors come always in groups, and collaborate through messaging. In the reality, they have asynchronous behavior. This avoids blocking behavior on the side of the caller. Actors can be executed in parallel, but the same actor only once at the same time [('processed in a single isolated step' [[24](#24)]), A/N]. This avoids corruption in state. They can hold state and share their state over (im) mutable messages. Actors can be passive, reactive or even proactive. They can change their behavior over time, often as a result of the messages they receive"" [[26](#26)]. ""Actors avoids the need for expensive locking and potential deadlocks [5] [[[24](#24)], A/N] through their asynchronous message passing, often realized over lock-free queues in a concurrent environment"" [[26](#26)]. Lock-free programming is a difficult job too. A system of actors is in its nature independent of a global clock (no lock-step computation) [[23](#23)].√æ√æOf course, it can be tried alternatively to solve the problem by making a classical map-reduce-approach. The disadvantage is that it must go always through all layers [[23](#23)] of the system for every iteration of computation (coarse granulation in time, lock-step computation). This is not necessary in a network of loosely coupled objects (here actors), interacting events will be processed always near in time and are accurate (finer granulation in time).√æ√æ## Use Cases ##√æ√æ- Multi-agent systems (see also [FIPA Interaction Protocols [actor4j-fipa]](https://github.com/relvaner/actor4j-fipa/tree/master/src/main/java/actor4j/core/protocols/fipa))√æ- Simulations√æ- Games (e.g., MMOG, MMORPG)√æ- Business Process Modeling (BPM): e.g., [[21](#21)]√æ- Business logic (for Client-Server architectures) inclusively caching/database access √æ- Caching (see [volatile and persistent caching [actor4j-data]](https://github.com/relvaner/actor4j-data/tree/master/src/main/java/actor4j/core/data/access))√æ- In-memory database (see [IMDB [actor4j-data]](https://github.com/relvaner/actor4j-data/tree/master/src/main/java/actor4j/core/data/access/imdb))√æ- Messaging (see [Publish-Subscribe [actor4j-data]](https://github.com/relvaner/actor4j-data/tree/master/src/main/java/actor4j/core/publish/subscribe))√æ- Reactive Streams ([see publisher, subscriber and proccessor [actor4j-data]](https://github.com/relvaner/actor4j-data/tree/master/src/main/java/actor4j/core/reactive/streams))√æ- Reactive System (responsive, elastic, resilient and message driven)√æ- Internet of Things ([interfaces for REST, Websocket, gRPC, CoAP, MQTT, AMQP [actor4j-web]](https://github.com/relvaner/actor4j-web))√æ- Digital representatives of devices (e.g., Device Shadows, AWS IoT)√æ- Function (here actor) as a Service in combination with Vert.x (future work)√æ- Batch-processing and stream-processing (see [Nodes4j](https://github.com/relvaner/nodes4j-core))√æ√æ>The realized solutions are conceptualizations that require further completion. For any inquiries, I'm willing to help.√æ√æ## Actor Model in Practice ##√æ√æ- Using Erlang: e.g., WhatsApp, RabbitMQ (AMQP), CouchDB, Amazon SimpleDB√æ- Using Akka: [Case Studies by Lightbend](https://www.lightbend.com/case-studies)√æ- Using JADE for multi-agent systems: e.g., [[20](#20)]√æ- Using Orleans: e.g., Halo Xbox game [[25](#25)]√æ- [India's Aadhaar program](https://uidai.gov.in/) (source: [The Actor Model and the Queue or ‚ÄúBatch is the New Black‚Äù by James Whitehead II](https://www.usenix.org/conference/lisa17/conference-program/presentation/whitehead))√æ- ""Deutscher Wetterdienst"" (Germany's National Meteorological Service) [[19](#19)]√æ√æ**Why using the Actor Model?**√æ- Video: [Vaughn Vernon - The Language of Actors](https://www.youtube.com/watch?v=T7M2kkjKxHg)√æ- Text: [Lightbend - What problems does the actor model solve?](https://doc.akka.io/docs/akka/2.5.3/scala/guide/actors-intro.html)√æ√æ## Actor4j an actor implementation ##√æAim of this project [[18](#18)] was to enhance the performance in message passing. As a reference implementation `Akka` [[1](#1)] was used. Results of the research shown that intra-thread-communication is much better than inter-thread-communication. You can group actors, so they are bound to the same thread, for instance. Message queues of the actors are outsourced to the thread. The **four principles of reactive manifesto** [[2](#2)] and the **four semantic properties** [[3](#3)] of actor systems have been applied. The actor system is from extern accessible by the REST-API or by a websocket. Between the server nodes (cluster configuration) are websockets for message transfer established. Time consuming tasks can be outsourced to `ResourceActor's`, which are executed by an extra `ThreadPool`. So the responsiveness of the actor system therfore will not tangented.√æ√æ## Installation ##√æ√æYou can add the following Maven dependency to your pom.xml file:√æ√æ```xml√æ  <dependency>√æ   <groupId>io.actor4j</groupId>√æ   <artifactId>actor4j-core</artifactId>√æ   <version>1.0.2</version>√æ  </dependency>√æ```√æ√æ## Configuration, starting and stopping the actor system ##√æIn `actor4j` the following important configuration options are available.√æ```java√æActorSystem system = new ActorSystem();√æ√æsystem√æ .setParallelismMin(1)√æ .setParallelismFactor(1);√æ //.parkMode() [default] or .softMode() [using sleep() on idle] or .hardMode();√æ```√æOn the one hand, the number of threads can be set with `setParallelismMin` and the scaling factor with `setParallelismFactor`:√æ√æ>Number of threads = parallelismMin * parallelismFactor√æ√æIn addition, it can be determined whether the threads are operating in soft or hard mode if the situation occurs that temporarily no messages are received. The actor system is started with the call:√æ```java√æsystem.start();√æ```√æThe actor system can be terminated, either with controlled shutdown of all actors or not. With a controlled shutdown, a stop directive is sent internally to all actors. By means of parameter transfer, it is possible to determine whether the calling thread waits until the shutdown of the actor system has been completely terminated.√æ```java√æsystem.shutdown(); // normal shutdown√æsystem.shutdown(true); // shutdown and wait√æ√æsystem.shutdownWithActors(); // shutdown with actors√æsystem.shutdownWithActors(true);√æ```√æ√æ`Actor4j` solves a controlled shutdown by sending a termination message to the user actor (father node of all actors, tree structure), which results that the other subordinate actors are terminating in a cascade form. The actors themselves are responsible for an orderly handling of their termination.√æ√æ## Actors, pattern matching and behaviour ##√æThere are two possibilities to add actors to the actor system. On one hand, by specifying the class and its constructor (is then instantiated by using reflection) or via a factory method. Both variants are passed to a dependency injection container, which can then instantiate the actors accordingly. Actors can be generated outside the actor system, these are automatically subordinated to the user actor (father of all user-generated actors). However, they can also be generated within an actor, but these are then child actors of the corresponding actor. After instantiation, the function returns a unique `UUID` (unambiguous identification of the actor).√æ```java√æ// over reflection√æsystem.addActor(MyActor.class, ""MyActor"", ...);√æ// or using a factory method√æsystem.addActor(new ActorFactory() {√æ @Override√æ public Actor create() {√æ   return new MyActor(); √æ  }√æ});√æ√æ// or in the context of an actor√æaddChild(MyActor.class, ""MyActor"", ...);    √æ// or√æUUID myActor = addChild( () -> new MyActor() ); √æ```√æActors must derive from the class `Actor` and implement the `receive` method. In the example below, `MyActor` waits for a message that contains a `String` and then outputs it via a logger. Subsequently, the message is sent back to the sender. When a different message is received, a warning (`unhandled (message)`) is outputted if `debugUnhandled` has been set in the actor system. [[4](#4)]√æ```java√æpublic class MyActor extends Actor {√æ @Override√æ public void receive(ActorMessage<?> message) {√æ  if (message.value instanceof String) {√æ   logger().info(String.format(√æ    ""Received String message: %s"", message.valueAsString()));√æ   send(message, message.source);√æ  } √æ  else√æ   unhandled(message);√æ }√æ}              √æ/* Adapted for actor4j according to [4] */√æ```√æ√æMessages can be sent using the `send` method. The following methods are available. `Tell` offers a similar syntax to `Akka`. A message can also be forwarded (`forward`). Aliases are among other things available to access a remote actor in a simplified manner. Messages can be sent also with `priority` (will be delivered with priority).√æ```java√æsend(ActorMessage<?> message)√æsend(ActorMessage<?> message, UUID dest)√æsendViaPath(ActorMessage<?> message, String path)√æsendViaAlias(ActorMessage<?> message, String alias)√ætell(T value, int tag, UUID dest)√ætell(T value, int tag, UUID dest, UUID interaction)√ætell(T value, int tag, String alias)√ætell(T value, int tag, String alias, UUID interaction)√æ√æforward(ActorMessage<?> message, UUID dest)√æpriority(ActorMessage<?> message, UUID dest)√æ```√æ√æMessages that can be exchanged between the actors are of the `ActorMessage<T>` type. A message (see Table 1) consists of the object to be transferred (payload of the message), a tag that helps for differentiating between messages, the sender address of the message, the receiver address of the message, an interaction ID for messages related to an interaction protocol (conversation) and the ontology, the knowledge model for the domain of the message. Methods for sending messages within the actor can be called (see above).√æ√æThe structure of the `ActorMessage<T>` looks like that:√æ√æ| Type | Name | Description |√æ| :---: | :---: | :---: |√æ| T | value | payload of the message |√æ| int | tag | tags helps for differentiating between messages  |√æ| UUID | source | source of the message |√æ| UUID | dest | destination of the message |√æ||||√æ| UUID | interaction | associated interaction |√æ| String | protocol | interaction protocol |√æ| String | ontology | ontology of the message |√æ<!--| boolean | ref | call-by-reference or call-by-value (needs deep copy)|-->√æ√æTab. 1: Structure of the `ActorMessage<T>`√æ√æ### Patern matching ###√æTo receive messages, pattern matching can be used with the `ActorMessageMatcher` class. This class was inspired by pattern matching in `Scala` [[12](#12)]. The message can be checked to match a tag, source, or class of the passed object (value). If a match is true, an action is triggered. This example is based on the top, except that this is expressed by the language means of the class `ActorMessageMatcher`. Tags serve as a simple means of communication. `ACK` would be such a tag.√æ```java√æpublic class MyActor extends Actor {√æ protected ActorMessageMatcher matcher;√æ protected final int ACK = 1;√æ √æ @Override√æ public void preStart() {√æ  matcher = new ActorMessageMatcher();√æ  √æ  matcher√æ  .match(String.class, √æ   msg -> logger().info(String.format(√æ    ""Received String message: %s"", msg.valueAsString())))√æ  .match(ACK, √æ   msg -> logger().info(""ACK tag received""))√æ  .matchAny(√æ   msg -> send(msg, msg.dest))√æ  .matchElse(√æ   msg -> unhandled(msg));√æ }√æ √æ @Override√æ public void receive(ActorMessage<?> message) {√æ  matcher.apply(message);√æ }√æ}                √æ```√æ`MatchAny` is always triggered, no matter what message has been received. If no match is found, `MatchElse` is fired.√æ√æ### Behaviour ###√æThe message processing method `receive` of an actor can be replaced by another method at runtime (`HotSwap`  to `Akka` [[6](#6)]). In the later example, the behavior of the actor is changed (on receipt of a tag `SWAP`). Upon receipt of the next message, information about the then received message is outputted. Finally, the behavior with `unbecome` is returned to the original `receive` method.√æ```java√æpublic class MyActor extends Actor {√æ protected final int SWAP=22;√æ √æ @Override√æ public void receive(ActorMessage<?> message) {√æ  if (message.tag == SWAP)√æ   become(msg -> {√æ    logger().info(String.format(√æ     ""Received message: %s"", msg));√æ    unbecome();√æ   }, false); // false -> putted on stack√æ  else√æ   unhandled(message);√æ }√æ}√æ```√æ## Simple Example ##√æ```java√æ// Initialize the actor system√æActorSystem system = new ActorSystem(""Example"");√æ  √æ// Creation of actor pong√æUUID pong = system.addActor(() -> new Actor() {√æ @Override√æ public void receive(ActorMessage<?> message) {√æ  // Receives message from ping√æ  System.out.println(message.valueAsString());√æ  // Sends message ""pong"" to ping√æ  tell(""pong"", 0, message.source);√æ }√æ});√æ// Creation of actor ping√æUUID ping = system.addActor(() -> new Actor() {√æ @Override√æ public void receive(ActorMessage<?> message) {√æ  if (message.value!=null)√æ   // Receives message from pong√æ   System.out.println(message.valueAsString());√æ  // Sends message ""ping"" to pong√æ  tell(""ping"", 0, pong);√æ }√æ});√æ  √æ// Starts the actor system√æsystem.start();√æ  √æ// Sends a message to ping to start the ping-pong process√æsystem.send(new ActorMessage<>(null, 0, system.SYSTEM_ID, ping));√æ  √æ// Lifetime for the ping-pong process√ætry {√æ Thread.sleep(2000);√æ} catch (InterruptedException e) {√æ e.printStackTrace();√æ}√æ// Wait until all actors are shutdown√æsystem.shutdownWithActors(true);√æ```√æ√æ## Life cycle of actors, monitoring ##√æ<img src=""doc/images/lifecycle1_v2.png"" alt=""Representation of the life cycle of an actor"" width=""864"" height=""642""/>√æ√æFig. 1: Representation of the life cycle of an actor (adapted for `actor4j` according to [[4](#4)])√æ√æ### Life cycle ###√æAs already mentioned, actors are either instantiated via `system.addActor(...)` or `parentActor.addChild(...)`. Actors then receive a randomly generated (or persistent) `UUID` as a unique identifier, with which they then can communicate with other actors (sending messages). An actor can also have an alternative identifier, the alias (also for the purpose of better legibility or when the `UUID` is not previously known). By the first awaken of the actor the `preStart` method is initially called. This method will be used for first initializations of the actor. It will be also called the method `recover`, if the actor is a `PersistentActor`. This method recoveres then the state of the actor. An actor can also be restarted, usually triggered by an exception (see chapter Supervision). In this case, by the old instance `preRestart` is called first. Then a new instance is generated with the dependency injection container. The old instance is replaced by the new instance, and the method `postRestart` is called by the new instance. The `preRestart` and `postRestart` methods are used so that the actor can react adequately to the situation of the restart. The marking (`UUID`) of the original actor is retained. This also guarantees that references from other actors to this actor will stay valid. An actor can be stopped either by calling the `stop` method or by receiving the `STOP` or `POISONPILL` message. [[4](#4)][[15](#15)]√æ### Monitoring ###√æAn actor can also monitor another actor for that it has not yet terminated itself. If the observed actor is terminated, a message `TERMINATED` is sent to the observer. An assignment is then made via `message.source`, which corresponds to the sender's `UUID`. With `watch`, an observer can register with an actor and de-register with `unwatch`. [[4](#4)]√æ```java√æwatch(UUID dest)√æunwatch(UUID dest)√æ```√æ### Comparison to Akka ###√æThe life cycle and monitoring are largely similar to Akka's approach. Instead of a `UUID`, an `ActorRef` is returned when an actor is instantiated.√æ## Supervision ##√æ√æ<img src=""doc/images/supervision.png"" alt=""OneForOne-Strategy and OneForAll-Strategy"" width=""589"" height=""268""/>√æ√æFig. 2: `OneForOne-Strategy` and `OneForAll-Strategy` (cp. [[7](#7)][[8](#8)])√æ√æThe supervisor actor monitors its child actors, in the event of an error, they are resumed or restarted or stopped by them. Two strategies are foreseen (see Fig. 2). In the `OneForOne-Strategy`, only the affected actor is considered. In the `OneForAll-Strategy`, on the other hand, not only the affected actor is considered but also the neighbouring actors (below the supervisor actor). [[7](#7)][[8](#8)] The default strategy for `actor4j` is a `OneForOne-Strategy` [[11](#11)] and is specified as:√æ```java√æpublic SupervisorStrategyDirective apply(Exception e) {√æ if (√æ      e instanceof ActorInitializationException || √æ      e instanceof ActorKilledException)√æ  return STOP;√æ else√æ  return RESTART;√æ}√æ```√æAn `ActorInitializationException` is thrown if an error occurs during the instantiation of an actor. An `ActorKilledException` is triggered by an incoming `KILL` message at the actor. In this case, an exception is deliberately provoked to activate the supervisor and its error handling strategy. A restart is carried out by default for every exception otherwise the actor is stopped. The default strategy can be changed by overriding the `supervisorStrategy` method. [[4](#4)]√æ√æ<img src=""doc/images/lifecycle2.png"" alt=""Extended representation of the life cycle of an actor"" width=""800"" height=""455""/>√æ√æFig. 3: Extended representation of the life cycle of an actor (cp. [[5](#5)])√æ√æ`Actor4j` currently supports eight directives: `RESUME`, `STOP`, `TERMINATED`, `RESTART`, `ESCALATE`, `RECOVER`, `ACTIVATE` and `DEACTIVATE` (see also Fig. 3). Stopping and restarting of the actors is asynchronous.√æ√æ* `RESUME`: In this case, the supervisor remains passive. The actor can continue its activities undisturbed [[5](#5)].√æ* `STOP`:√æ  * To all children the message `STOP` is sent (recursive process, if the children also have children) so that they can terminate. Use of `watch`, to observe that all children have terminated.√æ  * Call of `postStop`.√æ* `TERMINATED`: Actor is stopped.√æ* `RESTART`:√æ  * `PreRestart` is called at the current instance.√æ  * To all children the message `STOP` is sent (recursive process, if the children also have children) so that they can terminate. Use of `watch`, to observe that all children have terminated.√æ  * Call of `postStop` at the current instance, after all children have finished and confirmed this with the `TERMINATED` message.√æ  * Instantiate a new instance with the dependency injection container. It is ensured that the `UUID` is maintained.√æ  * Call of `postRestart` (with `preStart` (with optional `recover`) for the new instance.√æ* `ESCALATE`: If a supervisor is unclear as to what the correct strategy is in the event of a specific error, he can pass it on to his superior supervisor for clarification.√æ* `RECOVER`: The actor will be recovered to it's last state, novel events can lead to an update of the actor's state.√æ* `ACTIVATE` and `DEACTIAVTE`: Activates or deactivates the actor (messages will be or not longer processed). The current explained directives remains deliverable, even when the actor is deactivated.√æ√æ[[4](#4)][[5](#5)][[11](#11)][[15](#15)]√æ√æ## Persistence ##√æTo persist the state of an actor, this must be derived from the `PersistentActor` class. A `PersistentActor` is characterized by events and a state, which can be saved, depending on use case. In the example below, two events are defined. First, a snapshot of the state is made and persisted. Then the two events are saved. Handlers are defined for error handling and for a successful case. In general after successful saving the events, the state of the actor can be updated. Side effects can be triggered, which may be affects other actors. The `recover` method is called to recover the state of the actor. It is loaded from the database, where the last state and the last events have been persisted. With the help of the `Recovery` class this attributes can be loaded, for this purpose the `json` `String` will be transformed to a `Recovery` object. The principles of `Event Sourcing` [[16](#16)] are followed, as a database `MongoDB` [[17](#17)] is currently used. Every `PersistentActor` must have a persistent `UUID` for unique access. [[15](#15)]√æ```java√æpublic class MyActor extends PersistentActor<MyState, MyEvent> {√æ @Override√æ public void receive(ActorMessage<?> message) {√æ     // two events are generated based on the received message (!)√æ  MyEvent event1 = new MyEvent(""I am the first event!"");√æ  MyEvent event2 = new MyEvent(""I am the second event!"");√æ  √æ        // the events will be persisted√æ  persist(√æ   (s) -> logger().debug(String.format(""Event: %s"", s)), √æ   (e) -> logger().error(String.format(""Error: %s"", e.getMessage())),√æ   event1, event2);  √æ            √æ        // the state will be persisted√æ        saveSnapshot(null, null, new MyState(""I am a state!""));√æ }√æ    √æ    @Override√æ public void recover(String json) {√æ  if (!Recovery.isError(json)) {√æ   Recovery<MyState, MyEvent> obj = Recovery.convertValue(json, √æ             new TypeReference<Recovery<MyState, MyEvent>>(){});√æ   logger().debug(String.format(""Recovery: %s"", obj.toString()));√æ  }√æ  else√æ   logger().error(String.format(""Error: %s"", Recovery.getErrorMsg(json)));√æ }√æ   √æ @Override√æ public UUID persistenceId() {√æ  return UUID.fromString(""60f086af-27d3-44e9-8fd7-eb095c98daed"");√æ }√æ}              √æ```√æ√æ## Presentation of different actor types within `actor4j` ##√æFour important actors, derived from the class `Actor`, are to be presented next. The class `Actor` is an abstract class.√æ√æ### ActorGroupMember (Interface) ###√æThe use of this interface signals to the `ActorSystem` that the correspondingly implemented actor is a member of a group. This is taken into account when distributing the actors to the threads. Actors belonging to a group are held together on a thread. The basic idea behind this has been explained in our paper (see chapters results and conclusion [[18](#18)]). Inter-communication between threads is more expensive than pure intra-communication (within the same thread).√æ√æ### ActorWithGroup ###√æThis class implements the interface `ActorGroupMember`.√æ√æ### ResourceActor ###√æWorkload tasks should not be performed within the `ActorSystem`. Because they block the reactive system and it is no longer responsive. Therefore the class `ResourceActor` is provided. These special actors are executed in a separate thread pool, thus avoiding disturbances within the `ActorSystem`. It should distinguish stateless (`@Stateless`) and stateful (`@Stateful`) actors. The advantage of this distinction lies in the fact that stateless actors can be executed in parallel.√æ√æ### ActorWithRxStash ###√æThe `ActorWithRxStash` class implements the queue `stash`, from the class `Actor`. With `stash`, messages can be temporarily stored, which are not to be processed immediately. `RxStash` provides access to `stash` as an observer by using `RxJava` [[9](#9)]. This allows a comfortable access to `stash` (filters, transformations, aggregators, etc.).√æ√æ### PseudoActor ###√æA `PseudoActor` is a mediator between the outside world and the `ActorSystem`. It allows communication with the actors within the actor system from outside. Unlike the other actors, the `PseudoActor` has its own message queue, in which the messages of other actors can then be stored by the `ActorSystem`. The class `PseudoActor` is derived from the class `ActorWithRxStash`. To be able to process received messages, the run method must be started manually.√æ√æ#### Note ####√æExamples for the actors `ActorWithRxStash` and `PseudoActor` can be viewed under GitHub [[10](#10)]. Application examples for `ActorGroupMember` are also included in the benchmarks of `actor4j`.√æ√æ## Class diagram to the core components ##√æNow, the core components of `actor4j` are presented both from the user perspective as well from the developer perspective. In particular, connections between the core components will be clarified.√æ√æ### User's point of view ###√æThe most important core components of `actor4j` can be seen in the overview (Fig. 4). The normal user of `actor4j` will mainly work with the classes `ActorSystem` and the different actor classes (`Actor`, `ActorGroupMember`, `ActorWithRxStash`, `ResourceActor`). Possibly, the user will change the supervisor strategy. A timer (`ActorTimer`) should also be relatively useful in different situations. The `ActorService` class is used for a potential server (see also chapter, cluster configuration).√æ√æ### Developer's point of view ###√æFor a potential supporter or interested person, further details are helpful. The class `ActorSystem` is a wrapper of the class `ActorSystemImpl`. `ActorSystemImpl` internally creates a map of the set `ActorCell`. A wrapper is also the class `Actor` from the class `ActorCell`. `ActorSystemImpl` uses the `ActorExecuterService` to generate the `ActorThreads`. `ActorThreads` are executing the actors when they have received a message. The `ActorMessageDispatcher` acts as a link between the actors during message passing. It places the new message in the appropriate queue of the `ActorThread`. In the case of an actor error, the `ActorThread` class is called the auxiliary class `ActorStrategyOnFailure`, which then executes the defined strategy of the supervisor (`OneForOneSupervisorStrategy` or `OneForAllSupervisorStrategy`). Supervisor strategies can affect the `RestartProtocol` as well as the `StopProtocol`. These protocols can also be triggered by a corresponding message to the actor (`RESTART`, `STOP` or `POISONPILL`). `PseudoActor` has its own `ActorCell`, which is called `PseudoActorCell`. This also includes a separate queue for the purpose of communication between the actor system and the outside world (the `PseudoActor`). Last but not least again to the `ActorMessageDispatcher`. The `ActorBalancingOnCreation` class is used to distribute the actors on the `ActorThreads` when the actor system is started. At runtime, the class `ActorBalancingOnRuntime` is used.√æ√æ<img src=""doc/images/class diagram.png"" alt=""Class diagram to the core components of actor4j"" width=""1061"" height=""567""/>√æ√æFig. 4: Class diagram to the core components of `actor4j`√æ√æ#### Note ####√æ√æEnclosed two scruffy class diagrams maked with `yuml.me`, have fun!√æ* [Class diagram - top down](https://raw.githubusercontent.com/relvaner/actor4j-core/master/doc/images/cd_top_down.png)√æ* [Class diagram - left to right](https://raw.githubusercontent.com/relvaner/actor4j-core/master/doc/images/cd_left_right.png)√æ√æ## Cluster configuration ##√æ√æIn a cluster, `actor4j` can also be operated. A tomcat server is in generally used. A server node can be addressed via a `REST API` ([see the current specification](http://docs.actor4j.apiary.io)) or over a websocket connection. The servers in the cluster exchange messages via websocket connections. Of course access to a server node is also possible over a client API. The websocket approach is similar to the REST API (see Fig. 5).√æ√æ<img src=""doc/images/rest api.png"" alt=""Representation of the basic calls to the actor4j REST API"" width=""730"" height=""64""/>√æ√æFig. 5: Representation of the basic calls to the `actor4j` `REST API`√æ√æEach actor has a unique ID (`UUID`). Alternatively, an actor can also be addressed via an alias instead of its ID. For remote access this is quite handy. Before a message can be processed, it is checked whether the corresponding addressee (actor) is running on the local machine. If this is not the case, an attempt is made to determine on which host the addressee can be located (1, 2). Subsequently, the message is sent to the destination host (3). Already found addressees are temporarily stored for a later easy access (usage of Guava Cache [[14](#14)]).√æ√æ> Currently, there is worked on a new cluster architecture, that is using Actor4j and Vert.x together, with a focus on a container-based environment.√æ√æ<!--√æ#### Note ####√æ~~An example can be found under ([Actor4j - Cluster Examples](https://github.com/relvaner/actor4j-cluster-examples))~~ and there is also a template (see [Actor4j - Web - Template](https://github.com/relvaner/actor4j-web-template)).√æ-->√æ√æ## Structure and behavioral analysis with an analysis tool ##√æ√æAn analysis tool (using JGraphX [[13](#13)] for visualizations) is suitable for testing, checking and optimizing an actor system. Such a tool is shown in Fig. 6. The internal structure of the actor system and the behavior of the actor system are shown on the left. The ellipses each correspond to one actor. The numbers at the edges between the actors, corresponds to the frequency of the exchange of messages. The right representation contains two rings, a hub and a tuple, linked in the message exchange. The impetus for message distribution is triggered via a timer (marked as `system`, since implemented from outside the actor system). It might be useful to see what kind of messages are exchanged between the actors.√æ√æ<img src=""doc/images/analyzer.png"" alt=""Representation of the analysis tool for actor4j"" width=""871"" height=""464""/>√æ√æ√æFig. 6: Representation of the analysis tool for `actor4j`√æ√æ## License ##√æThis framework is released under an open source Apache 2.0 license.√æ√æ## Publications ##√æD. A. Bauer and J. M√§ki√∂, ‚ÄúActor4j: A Software Framework for the Actor Model Focusing on the Optimization of Message Passing,‚Äù AICT 2018: The Fourteenth Advanced International Conference on Telecommunications, IARIA, Barcelona, Spain 2018, pp. 125-134, [Online]. Available from: http://www.thinkmind.org/download.php?articleid=aict_2018_8_10_10087√æ√æD. A. Bauer and J. M√§ki√∂, ""Hybrid Cloud ‚Äì Architecture for Administration Shells with RAMI4.0 Using Actor4j,"" 2019 IEEE 17th International Conference on Industrial Informatics (INDIN), Helsinki, Finland 2019, pp. 79-86, [Online]. Available from: https://doi.org/10.1109/INDIN41052.2019.8972075√æ√æ## Announcement ##√æThis software framework is currently under an prototype state.√æ√æ## References ##√æ[1]<a name=""1""/> Lightbend (2016). Akka. http://akka.io/  √æ[2]<a name=""2""/> Jonas Bon√©r, Dave Farley, Roland Kuhn, and Martin Thompson (2014). The Reactive Manifesto. http://www.reactivemanifesto.org/  √æ[3]<a name=""3""/> Rajesh K. Karmani, Gul Agha (2011). Actors. In Encyclopedia of Parallel Computing, Pages 1‚Äì11. Springer. http://osl.cs.illinois.edu/media/papers/karmani-2011-actors.pdf  √æ[4]<a name=""4""/> Lightbend (2015). Actors. UntypedActor API. http://doc.akka.io/docs/akka/2.4/java/untyped-actors.html  √æ[5]<a name=""5""/> Derek Wyatt (2013). AKKA Concurrency. Artima Inc. Pages 160-164.  √æ[6]<a name=""6""/> Lightbend (2015). Actors. HotSwap. http://doc.akka.io/docs/akka/2.4/java/untyped-actors.html#untypedactor-hotswap  √æ[7]<a name=""7""/> Joe Armstrong (2013). Programming Erlang. Software for a Concurrent World (Pragmatic Programmers). Pragmatic Bookshelf. Pages 398-399  √æ[8]<a name=""8""/> Lightbend (2015). Supervision and Monitoring. http://doc.akka.io/docs/akka/2.4/general/supervision.html  √æ[9]<a name=""9""/> Netflix, Inc (2013). RxJava. https://github.com/ReactiveX/RxJava  √æ[10]<a name=""10""/> David A. Bauer (2015). Actor4j Examples. https://github.com/relvaner/actor4j-examples  √æ[11]<a name=""11""/> Lightbend (2015). Fault tolerance. http://doc.akka.io/docs/akka/2.4/java/fault-tolerance.html  √æ[12]<a name=""12""/> EPFL (2015). Pattern Matching. http://docs.scala-lang.org/tutorials/tour/pattern-matching.html  √æ[13]<a name=""13""/> JGraph Ltd (2016). JGraphX. https://github.com/jgraph/jgraphx  √æ[14]<a name=""14""/>  Google Inc (2015). Guava. Google Core Libraries for Java. CachesExplained. https://github.com/google/guava/wiki/CachesExplained  √æ[15]<a name=""15""/> Lightbend (2015). Persistence.  http://doc.akka.io/docs/akka/2.4/java/persistence.html  √æ[16]<a name=""16""/> Martin Fowler (2005). Event Sourcing. http://martinfowler.com/eaaDev/EventSourcing.html  √æ[17]<a name=""17""/> MongoDB Inc (2016). MongoDB. https://www.mongodb.com/  √æ[18]<a name=""18""/> D. A. Bauer and J. M√§ki√∂, ""Actor4j: A Software Framework for the Actor Model Focusing on the Optimization of Message Passing,"" AICT 2018: The Fourteenth Advanced International Conference on Telecommunications, IARIA, Barcelona, Spain 2018, pp. 125-134, [Online]. Available from: http://www.thinkmind.org/download.php?articleid=aict_2018_8_10_10087   √æ[19]<a name=""19""/> M. Lehmann and M. Werner, ""Gut Wetter machen! Java, Play und Akka f√ºr meteorologische Anwendungen beim Deutschen Wetterdienst,"" in JavaSPEKTRUM 3/2016, 2016  √æ[20]<a name=""20""/> N. Rodrigues, A. Pereira, P. Leit√£o, ""Adaptive Multi-agent System for a Washing Machine Production Line"", Industrial Applications of Holonics and Multi-agent Systems, vol. 8062, pp. 212-223, 2013.  √æ[21]<a name=""21""/> M. Geisriegler, M. Kolodiy, S. Stani and R. Singer, ""Actor Based Business Process Modeling and Execution: A Reference Implementation Based on Ontology Models and Microservices,"" 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), Vienna, 2017, pp. 359-362.  √æ[22]<a name=""22""/> Hewitt, Meijer and Szyperski (2012): The Actor Model (everything you wanted to know, but were afraid to ask). Lang.NEXT 2012. https://channel9.msdn.com/Shows/Going+Deep/Hewitt-Meijer-and-Szyperski-The-Actor-Model-everything-you-wanted-to-know-but-were-afraid-to-ask  √æ[23]<a name=""23""/> Carl Hewitt (2017). Creator of Actor Model. Concurrency and Strong Types for IoT. Erlang & Elixir Factory San Francisco Bay Area 2017 Conference. http://www.erlang-factory.com/sfbay2017/carl-hewitt.html  √æ[24]<a name=""24""/> J. de Koster, T. van Cutsem and  W. de Meuter, ""43 years of actors: a taxonomy of actor models and their key properties,"" AGERE 2016: Proceedings of the 6th International Workshop on Programming Based on Actors, Agents, and Decentralized Control, 2016, pp. 31-40.  √æ[25]<a name=""25""/> Microsoft (2010). Orleans ‚Äì Virtual Actors. https://www.microsoft.com/en-us/research/project/orleans-virtual-actors/  √æ[26]<a name=""26""/> D. A. Bauer and J. M√§ki√∂, ""Hybrid Cloud ‚Äì Architecture for Administration Shells with RAMI4.0 Using Actor4j,"" 2019 IEEE 17th International Conference on Industrial Informatics (INDIN), Helsinki, Finland 2019, pp. 79-86, https://doi.org/10.1109/INDIN41052.2019.8972075  √æ√æPage to be updated 02/02/2020"
zycgit/hasor,63149,545,46,163,User,False,HasorÊòØ‰∏ÄÂ•óÂü∫‰∫é Java ËØ≠Ë®ÄÁöÑÂºÄÂèëÊ°ÜÊû∂ÔºåÂå∫Âà´‰∫éÂÖ∂ÂÆÉÊ°ÜÊû∂ÁöÑÊòØ Hasor ÊúâÁùÄËá™Â∑±‰∏ÄÂ•óÂÆåÊï¥ÁöÑ‰ΩìÁ≥ªÔºåÂêåÊó∂ËøòÂèØ‰ª•ÂíåÂÖàÊúâÊäÄÊúØ‰ΩìÁ≥ªÂÅöÂà∞ÂÆåÁæéËûçÂêà„ÄÇÂÆÉÂåÖÂê´ÔºöIoC/AopÂÆπÂô®Ê°ÜÊû∂„ÄÅWebÊ°ÜÊû∂„ÄÅJdbcÊ°ÜÊû∂„ÄÅRSFÂàÜÂ∏ÉÂºèRPCÊ°ÜÊû∂„ÄÅDataQLÂºïÊìéÔºåÁ≠âÂá†Âùó„ÄÇ,http://www.hasor.net,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",21,Java,"{'': 2, 'yml': 1, 'txt': 1, 'md': 1, 'cmd': 1, 'xml': 1}",3372,2,73,8,12,3910,True,11,35,11,34,0,7,0,5,12,0,6,389,120346,131032,2,0,13,,68,,# Hasor√æ√æ&emsp;&emsp; Èù¢ÂêëÁîü‰∫ßÁéØÂ¢ÉËÄåËÆæËÆ°ÁöÑ Java Â∫îÁî®ÂºÄÂèëÊ°ÜÊû∂„ÄÇÂÆÉÁöÑÊ†∏ÂøÉËÆæËÆ°ÁõÆÊ†áÊòØÊèê‰æõ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰∫§‰∫íÊé•Âè£ÁªôÂºÄÂèëËÄÖÔºåÂºÄÂèëËÄÖÂèØ‰ª•Âú®Ê≠§Âü∫Á°Ä‰∏äÁÅµÊ¥ªÁöÑÊûÑÂª∫Ëá™Â∑±ÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇÊó†ËÆ∫ÊòØÂ∫îÁî®Á±ªÁ®ãÂ∫èËøòÊòØÊ°ÜÊû∂Á±ªÂ∑•ÂÖ∑ Hasor ÈÉΩ‰ºöÁªô‰∫àÊúÄÊúâÂäõÁöÑÊîØÊåÅ„ÄÇ√æ√æ&emsp;&emsp; Âå∫Âà´‰∫éÂÖ∂ÂÆÉÊ°ÜÊû∂ÁöÑÊòØ Hasor ÊúâÁùÄËá™Â∑±‰∏ÄÂ•óÂÆåÊï¥ÁöÑÊâ©Â±ï‰ΩìÁ≥ª„ÄÇÊó†ËÆ∫ÊÇ®ÊòØ‰∏ÄËà¨ÁöÑÂ∫îÁî®Â∑•Á®ãÔºåËøòÊòØÂºÄÂèëÂ∑•ÂÖ∑Ê°ÜÊû∂Á±ªÈ°πÁõÆ„ÄÇHasorÈÉΩ‰ºöÊòØ‰∏Ä‰∏™Âº∫ÊúâÂäõÁöÑÂü∫Áü≥„ÄÇ√æ√æ----------√æ## ËÆæËÆ°ÊÄùÊÉ≥√æ&emsp;&emsp;Hasor ÁöÑËÆæËÆ°ÊÄùÊÉ≥ÊòØ‚Äú ÂæÆÂÜÖÊ†∏+Êèí‰ª∂ ‚ÄùÁöÑÊñπÂºè„ÄÇ‰∏•Ê†ºÊÑè‰πâÊù•ËØ¥ÊâÄÊúâ Hasor Â≠êÊ°ÜÊû∂ÈÉΩÂ±û‰∫é Hasor Êèí‰ª∂ËåÉÁï¥ÔºåÂõ†Ê≠§ÊûÑÁ≠ëÊàê Hasor Ê†∏ÂøÉÁöÑÂè™Êúâ hasor-core„ÄÇ√æ√æ### ÁâπÁÇπ√æ- ‚ÄúÂæÆÂÜÖÊ†∏+Êèí‰ª∂‚Äù ÁÆÄÂçï„ÄÅÂ∞èÂ∑ß„ÄÅÂäüËÉΩÂº∫Â§ß„ÄÅ‰ΩøÁî®ÁÆÄÂçï„ÄÇ√æ- COCÂéüÂàôÁöÑÊúÄ‰Ω≥ÂÆûË∑µÔºå‚ÄòÈõ∂‚ÄôÈÖçÁΩÆÊñá‰ª∂„ÄÇ√æ- ÂêàÁêÜÁöÑÊï¥‰ΩìÊû∂ÊûÑËßÑÂàíÔºåÂç≥ÊòØÂ∞èÊ°ÜÊû∂‰πüÊòØÂ§ßÂπ≥Âè∞„ÄÇ√æ- ÂêÑÈÉ®ÂàÜÂÖ®ÈÉ®Áã¨Á´ãÔºåÊåâÈúÄ‰ΩøÁî®ÔºåÁªù‰∏çËáÉËÇø„ÄÇ√æ- ‰ΩìÁßØÂ∞èÔºåÊó†‰æùËµñ„ÄÇ√æ- ÊúÄ‰ΩéË¶ÅÊ±ÇÁéØÂ¢Éjdk8√æ√æ### ÊäÄÊúØ‰ΩìÁ≥ª√æ![avatar](https://www.hasor.net/web/_images/CC2_403A_3BD5_D581.png)√æ√æ- Core ÂÖ∑Â§á Aop Âπ∂ÂÖºÂÆπ JSR-330 ÁöÑBeanÂÆπÂô®Ê°ÜÊû∂Ôºà[ËØ¶ÁªÜ..](hasor-core/README.md)Ôºâ√æ  - Êèê‰æõ‰∏Ä‰∏™ÊîØÊåÅIoC„ÄÅAopÁöÑBeanÂÆπÂô®„ÄÇ√æ  - Âü∫‰∫é Module + ApiBinder Êú∫Âà∂Êèê‰æõÁªü‰∏ÄÁöÑÊèí‰ª∂ÂÖ•Âè£„ÄÇ√æ  - ÁâπËâ≤ÁöÑ Xml Ëß£ÊûêÂô®„ÄÇËÆ©‰Ω†Êó†ÈúÄ‰∫åÊ¨°ÂºÄÂèëÊó†ÈúÄÈÖçÁΩÆÔºåÁõ¥Êé•ËØªÂèñËá™ÂÆö‰πâxmlÈÖçÁΩÆÊñá‰ª∂„ÄÇ√æ  - ÊîØÊåÅ JSR-330√æ- DB ÊòØ‰∏ÄÊ¨æÂü∫‰∫éjdbcÁöÑÊï∞ÊçÆÂ∫ìÊ°ÜÊû∂ÔºåÊèê‰æõ‰∫ÜJDBCÊìç‰ΩúÂíåÂÆåÊï¥‰∫ãÂä°ÁÆ°ÁêÜËÉΩÂäõÔºà[ËØ¶ÁªÜ..](hasor-db/README.md)Ôºâ√æ  - Êèê‰æõ JDBC Êìç‰ΩúÊé•Âè£ 90% ÂÖºÂÆπ SpringJDBC„ÄÇ√æ  - ‰∏é Spring ‰∏ÄÊ†∑ÔºåÊèê‰æõ‰∏ÉÁßç‰∫ãÂä°‰º†Êí≠Â±ûÊÄßÁöÑÊéßÂà∂„ÄÇ√æ  - ÊîØÊåÅÂ§öÁßç‰∫ãÂä°ÊéßÂà∂ÊñπÂºèÂåÖÊã¨ÔºöÊâãÂä®‰∫ãÂä°ÊéßÂà∂„ÄÅÊ≥®Ëß£ÂºèÂ£∞Êòé‰∫ãÂä°„ÄÅTransactionTemplateÊ®°Êùø‰∫ãÂä°„ÄÇ√æ  - ÊîØÊåÅÂ§öÊï∞ÊçÆÊ∫êÔºà‰∏çÊîØÊåÅÂàÜÂ∏ÉÂºè‰∫ãÂä°Ôºâ√æ- RSF ÂàÜÂ∏ÉÂºè RPC ÊúçÂä°Ê°ÜÊû∂Ôºà[ËØ¶ÁªÜ..](hasor-rsf/README.md)Ôºâ√æ  - ÊîØÊåÅÂÆπÁÅæ„ÄÅË¥üËΩΩÂùáË°°„ÄÅÈõÜÁæ§ÔºõÊîØÊåÅÂä®ÊÄÅÂèëÂ∏É„ÄÅÂç∏ËΩΩ√æ  - ÊîØÊåÅÊúçÂä°ÂàÜÁªÑ„ÄÅÂàÜÁâàÊú¨√æ  - Â§öÁßçË∞ÉÁî®ÊñπÂºèÔºöÁÇπÂØπÁÇπ„ÄÅÂàÜÂ∏ÉÂºèËΩÆËØ¢„ÄÅÊ≥õÂåñË∞ÉÁî®„ÄÅÂêåÊ≠•„ÄÅÂºÇÊ≠•„ÄÅÂõûË∞É„ÄÅÊé•Âè£‰ª£ÁêÜ„ÄÇ√æ  - ÊîØÊåÅËôöÊãüÊú∫Êàø„ÄÅÈöêÂºè‰º†ÂèÇ„ÄÅÊúçÂä°Ë∑ØÁî±„ÄÅTelnet Á≠âÈ´òÁ∫ßÂäüËÉΩ„ÄÇ√æ- Web ËΩªÈáèÂåñ Web MVC Ê°ÜÊû∂Ôºà[ËØ¶ÁªÜ..](hasor-web/README.md)Ôºâ√æ  - Êèê‰æõ RESTful È£éÊ†ºÁöÑ mvc ÂºÄÂèëÊñπÂºè„ÄÇ√æ  - Êèê‰æõËØ∑Ê±ÇÈ™åËØÅÊé•Âè£„ÄÅÈ™åËØÅÊîØÊåÅÂú∫ÊôØÂåñ„ÄÇ√æ  - ÂºÄÊîæÁöÑÊ®°ÁâàÊ∏≤ÊüìÊé•Âè£ÔºåÊîØÊåÅÂêÑÁßçÁ±ªÂûãÁöÑÊ®°ÁâàÂºïÊìé„ÄÇ√æ  - ÂÜÖÁΩÆÊñá‰ª∂‰∏ä‰º†ÁªÑ‰ª∂ÔºåÊó†ÈúÄÂºïÂÖ•‰ªª‰ΩïjarÂåÖ„ÄÇ√æ- tConsole ‰∏ìÊ≥®Âü∫‰∫é Telnet ÂëΩ‰ª§Ë°å‰∫§‰∫íÊ°ÜÊû∂Ôºà[ËØ¶ÁªÜ..](hasor-tconsole/README.md)Ôºâ√æ  - ÊîØÊåÅÁõëÂê¨Êú¨Âú∞Á´ØÂè£Êèê‰æõ Telnet ‰∫§‰∫íÁöÑÁïåÈù¢„ÄÇ√æ  - ÊîØÊåÅÂü∫‰∫éÊ†áÂáÜËæìÂÖ•ËæìÂá∫ÊûÑÂª∫‰∫§‰∫íÊéßÂà∂Âè∞ÁöÑËÉΩÂäõ„ÄÇ√æ  - Âà©Áî® tConsole ÂèØ‰ª•ËΩªÊùæÊûÑÂª∫ÂëΩ‰ª§Â∑•ÂÖ∑ÂåÖ„ÄÇ√æ- DataQL ÊúçÂä°ËÅöÂêàÊü•ËØ¢ÂºïÊìéÔºà[ËØ¶ÁªÜ..](hasor-dataql/README.md)Ôºâ√æ  - Â±ÇÊ¨°ÁªìÊûÑÔºöÂèØ‰ª•‰∫ßÂá∫ÂÖ∑ÊúâÊï∞ÊçÆÁöÑÂ±ÇÊ¨°ÁªìÊûÑÁöÑÊü•ËØ¢ÁªìÊûú„ÄÇ√æ  - Âº±Á±ªÂûãÔºö‰∏çË¶ÅÊ±ÇÂ£∞Êòé‰ªª‰ΩïÂΩ¢ÂºèÁöÑÁ±ªÂûãÁªìÊûÑ„ÄÇ√æ  - ËΩªÈÄªËæëÔºö‰ªÖÊîØÊåÅË°®ËææÂºè„ÄÅÂèñÂÄº„ÄÅÊù°‰ª∂ÂàÜÊîØ„ÄÅlambdaÂíåÂáΩÊï∞„ÄÇ‰∏çÊîØÊåÅËµãÂÄºÂíåÂæ™ÁéØ√æ  - ÁºñËØëËøêË°åÔºöÊü•ËØ¢ÁöÑÊâßË°åÊòØÂü∫‰∫éÁºñËØëÁªìÊûúÁöÑ„ÄÇ√æ  - Êâ©Â±ï‰ª£Á†ÅÁâáÊÆµÔºöÂÖÅËÆ∏ DataQL Êü•ËØ¢‰∏≠Ê∑∑ÂêàÂÖ∂ÂÆÉËØ≠Ë®ÄÁöÑËØ≠Âè•„ÄÇ√æ√æ----------√æ### ÊúÄ‰ΩéË¶ÅÊ±Ç√æ* jdk8√æ* servlet 2.3√æ√æ----------√æ### Áõ∏ÂÖ≥ËøûÊé•√æ* QQÁæ§Ôºö193943114√æ* [![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/net.hasor/hasor-core/badge.svg)](https://maven-badges.herokuapp.com/maven-central/net.hasor/hasor-core)√æ[![Build Status](https://travis-ci.org/zycgit/hasor.svg?branch=master)](https://travis-ci.org/zycgit/hasor)√æ[![Build Status](https://travis-ci.org/zycgit/hasor.svg?branch=dev)](https://travis-ci.org/zycgit/hasor)√æ* Docs : [http://www.hasor.net/](http://www.hasor.net/)
scottishgovernment/gov-scot,24644,0,7,2,Organization,False,Site and publishing environment for gov.scot beta based on Hippo CMS,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 3, 'md': 1, 'xml': 1}",1693,105,902,6,6,1792,True,0,0,0,0,3,3,2,2,9,0,0,0,0,0,0,0,30,6,,,"## Running locally√æ√æThis project uses the Maven Cargo plugin to run Essentials, the CMS and site locally in Tomcat.√æFrom the project root folder, execute:√æ√æ    mvn clean verify√æ    mvn -P cargo.run√æ√æBy default this includes and bootstraps repository data from the repository-data/development module,√æwhich is deployed by cargo to the Tomcat shared/lib.√æIf you want or need to start *without* bootstrapping the development data, for example when testing√æagainst an existing repository, you can specify the *additional* Maven profile without-development-data to do so:√æ√æ    mvn -P cargo.run,without-development-data√æ√æThis additional profile will modify the target location for the development module to the Tomcat temp/ folder so that√æit won't be seen and picked up during the repository bootstrap process.√æ√æAccess the Hippo Essentials at http://localhost:8080/essentials.√æAfter your project is set up, access the CMS at http://localhost:8080/cms and the site at http://localhost:8080/site.√æLogs are located in target/tomcat8x/logs√æ√æBest Practice for development√æ=============================√æ√æUse the option -Drepo.path=/some/path/to/repository during start up. This will avoid√æyour repository to be cleared when you do a mvn clean.√æ√æFor example start your project with:√æ√æ    mvn -P cargo.run -Drepo.path=/home/usr/tmp/repo√æ√æor with jrebel:√æ√æ    mvn -P cargo.run -Drepo.path=/home/usr/tmp/repo -Djrebel√æ√æ## Hot deploy√æ√æTo hot deploy, redeploy or undeploy the CMS or site:√æ√æ    cd cms (or site)√æ    mvn cargo:redeploy (or cargo:undeploy, or cargo:deploy)√æ√æ## Automatic Export√æ√æAutomatic export of repository changes to the filesystem is turned on by default. To control this behavior, log into√æhttp://localhost:8080/cms/console and press the ""Enable/Disable Auto Export"" button at the top right. To set this√æas the default for your project edit the file√æ./repository-data/application/src/main/resources/configuration/modules/autoexport-module.xml√æ√æ## Monitoring with JMX Console√æ√æYou may run the following command:√æ√æ    jconsole√æ√æNow open the local process org.apache.catalina.startup.Bootstrap start"
SpringCloud/spring-cloud-code,15457,1582,117,881,Organization,False,üî•„ÄäÈáçÊñ∞ÂÆö‰πâSpring CloudÂÆûÊàò„ÄãÂÆû‰Ωì‰π¶ÂØπÂ∫îÊ∫êÁ†ÅÔºåÊ¨¢ËøéÂ§ßÂÆ∂StarÁÇπËµûÊî∂Ëóè,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",79,Java,"{'': 2, 'md': 1, 'xml': 1, 'txt': 1}",66,4,0,7,0,838,True,3,34,0,1,3,5,2,1,9,0,0,0,0,0,0,0,61,14,,,"„ÄäÈáçÊñ∞ÂÆö‰πâSpring CloudÂÆûÊàò„Äã√æ================√æ* ÂΩìÂΩìË¥≠‰π∞:http://product.dangdang.com/25348282.html√æ* ‰∫¨‰∏úË¥≠‰π∞:https://item.jd.com/12447280.html√æ√æ## 1. ÂâçË®Ä√æ √æ   ÈöèÁùÄ‰∫íËÅîÁΩëÁöÑÂø´ÈÄüÊôÆÂèäÔºå‰∫ëËÆ°ÁÆóËøëÂπ¥Êù•ÂæóÂà∞Ëì¨ÂãÉÂèëÂ±ïÔºå‰ºÅ‰∏öÁöÑITÁéØÂ¢ÉÂíåÊû∂ÊûÑ‰ΩìÁ≥ª‰πüÈÄêÊ∏êÂèëÁîüÂèòÈù©ÔºåÂÖ∂‰∏≠ÊúÄÂÖ∏ÂûãÁöÑÂ∞±ÊòØ`ËøáÂéªÁöÑÂçï‰ΩìÂ∫îÁî®Êû∂ÊûÑÂèëÂ±ï‰∏∫ÂΩì‰ªäÊµÅË°åÁöÑÂæÆÊúçÂä°Êû∂ÊûÑ`„ÄÇÂæÆÊúçÂä°ÊòØ‰∏ÄÁßçÊû∂ÊûÑÈ£éÊ†ºÔºåÂÖ∂‰ºòÂäøÊòØ‰∏∫ËΩØ‰ª∂Â∫îÁî®ÂºÄÂèëÂ∏¶Êù•ÂæàÂ§ßÁöÑ‰æøÂà©ÔºåËÆ©ÊïèÊç∑ÂºÄÂèëÂíåÂ§çÊùÇÁöÑ‰ºÅ‰∏öÂ∫îÁî®Âø´ÈÄüÊåÅÁª≠‰∫§‰ªòÊàê‰∏∫ÂèØËÉΩ„ÄÇÈöèÁùÄÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÊµÅË°åÔºåÂæàÂ§ö‰ºÅ‰∏öÁ∫∑Á∫∑‰ΩøÁî®ÂæÆÊúçÂä°Êû∂ÊûÑÊù•Êê≠Âª∫Êñ∞ÁöÑÁ≥ªÁªüÊàñËÄÖÂØπÂéÜÂè≤Á≥ªÁªüËøõË°åÈáçÊûÑÔºå‰ΩÜÊòØÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÂÆûÊñΩÂíåËêΩÂú∞‰ºöÈù¢‰∏¥ÂæàÂ§ßÁöÑÊåëÊàò„ÄÇ`ËôΩÁÑ∂ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑËß£ÂÜ≥ÊñπÊ°àÂæàÂ§öÔºå‰ΩÜÊòØÂØπ‰∫éÂ¶Ç‰ΩïÁúüÊ≠£ËêΩÂú∞ÂæÆÊúçÂä°Êû∂ÊûÑÔºåÁõÆÂâçËøòÊ≤°ÊúâÂÖ¨ËÆ§ÁöÑÊäÄÊúØÊ†áÂáÜÂíåËßÑËåÉ`„ÄÇÂπ∏ËøêÁöÑÊòØÔºå‰∏öÁïåÂ∑≤ÁªèÊúâ‰∏Ä‰∫õÂæàÊúâÂΩ±ÂìçÂäõÁöÑÂºÄÊ∫êÂæÆÊúçÂä°Ëß£ÂÜ≥ÊñπÊ°àÔºå`ÊØîÂ¶Ç2015Âπ¥Âπ¥ÂàùÔºåSpringÂõ¢ÈòüÊé®Âá∫ÁöÑSpring CloudÔºåÂÖ∂ÁõÆÊ†áÊòØÊàê‰∏∫JavaÈ¢ÜÂüüÂæÆÊúçÂä°Êû∂ÊûÑËêΩÂú∞ÁöÑÊ†áÂáÜ„ÄÇSpring CloudÁªèËøáÈ´òÈÄüËø≠‰ª£ÂíåÂèëÂ±ïÔºåËá≥‰ªäÂ∑≤ÁªèÊàê‰∏∫JavaÈ¢ÜÂüüËêΩÂú∞ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÊé®ËçêËß£ÂÜ≥ÊñπÊ°àÔºå‰∏∫‰ºÅ‰∏öITÊû∂ÊûÑÂèòÈù©‰øùÈ©æÊä§Ëà™`„ÄÇ√æ√æ   Spring CloudÊòØ‰∏Ä‰∏™`‰ºòË¥®ÁöÑÂºÄÊ∫êÈ°πÁõÆ`Ôºå`ÂÆÉÁöÑÁ®≥ÂÅ•ÂèëÂ±ïÁ¶ª‰∏çÂºÄ‰ºóÂ§öÂºÄÂèë‰∫∫ÂëòÁöÑÂÆûË∑µ‰∏éÂèçÈ¶àÔºåÂºÄÂèë‰∫∫ÂëòÈÄöËøá‰∏Ä‰∏™Á§æÂå∫ÂåñÁöÑÂπ≥Âè∞Âéª‰∫§ÊµÅÂ≠¶‰π†‰ªéËÄå‰ΩøSpring CloudÈÄêÊ∏êÂÆåÂñÑ`„ÄÇSpring CloudÂèëÂ±ïÂà∞2016Âπ¥ÔºåÂæóÂà∞ÂõΩÂÜÖË∂äÊù•Ë∂äÂ§öÁöÑ‰∫∫ÁöÑÂÖ≥Ê≥®Ôºå‰ΩÜÊòØÁõ∏Â∫îÁöÑÂ≠¶‰π†‰∫§ÊµÅÂπ≥Âè∞ÂíåÊùêÊñôÊØîËæÉÂàÜÊï£ÔºåËøôÈòªÁ¢ç‰∫ÜSpring CloudÂú®ÊàëÂõΩÁöÑÊôÆÂèäÂíåÂèëÂ±ï„ÄÇÂõ†Ê≠§Spring Cloud‰∏≠ÂõΩÁ§æÂå∫Â∫îËøêËÄåÁîü„ÄÇSpring Cloud‰∏≠ÂõΩÁ§æÂå∫ (http://springcloud.cn) ÊòØÂõΩÂÜÖÂü∫‰∫éSpring CloudÂæÆÊúçÂä°‰ΩìÁ≥ªÂàõÂª∫ÁöÑÈùûÁõàÂà©ÊäÄÊúØÁ§æÂå∫ÔºåÊòØ‰∏ì‰∏∫Spring BootÊàñSpring CloudÊäÄÊúØ‰∫∫ÂëòÊèê‰æõÂàÜ‰∫´Âíå‰∫§ÊµÅÊúçÂä°ÁöÑÂπ≥Âè∞ÔºåÁõÆÁöÑÊòØÊé®Âä®Spring CloudÂú®‰∏≠ÂõΩÁöÑÊôÆÂèäÂíåÂ∫îÁî®„ÄÇÂÖ≥Ê≥®Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑Ôºå‰∏ÄËµ∑‰∫§ÊµÅÂ≠¶‰π†„ÄÇ√æ   √æ   ![](/doc/image/ewm.png)  √æ   √æ## 2.ËÉåÊôØÊ¶ÇËø∞√æ√æ   Spring Cloud‰∏≠ÂõΩÁ§æÂå∫(http://springcloud.cn) ÊòØÂõΩÂÜÖÂü∫‰∫éSpring CloudÂæÆÊúçÂä°‰ΩìÁ≥ªÂàõÂª∫ÁöÑÈùûÁõàÂà©ÊäÄÊúØÁ§æÂå∫„ÄÇËá™2016Âπ¥10Êúà‰ªΩÂàõÂª∫‰ª•Êù•ÔºåÂú®Âåó‰∫¨Ôºå‰∏äÊµ∑ÔºåÊ∑±Âú≥ÔºåÊàêÈÉΩÁ≠âÂú∞‰∏æÂäû‰∫ÜÂ§öÊ¨°ÊäÄÊúØÊ≤ôÈæôÔºåÊèê‰æõÊäÄÊúØ‰∫§ÊµÅÂπ≥Âè∞,Â∏ÆÂä©Êï∞‰∏áÂºÄÂèëËÄÖÂø´ÈÄüÂ≠¶‰π†Spring CloudÂπ∂Áî®‰∫éÁîü‰∫ß„ÄÇ‰∏∫Êõ¥Â•ΩÁöÑÊé®Âä®Spring CloudÂú®‰∏≠ÂõΩÁöÑÂèëÂ±ïÔºåËÆ©Êõ¥Â§öÁöÑÂºÄÂèëËÄÖÂèóÁõä„ÄÇÁ§æÂå∫ÈíàÂØπSpring CloudÂú®ÂõΩÂÜÖÁöÑ‰ΩøÁî®ÊÉÖÂÜµÔºåÁªìÂêàÂõΩÂÜÖ‰ºÅ‰∏ö‰ΩøÁî®Spring CloudËêΩÂú∞ÂæÆÊúçÂä°Êû∂ÊûÑÈÅáÂà∞ÁöÑÈóÆÈ¢òÁªôÂá∫ÂÆûÊàòËß£ÂÜ≥ÊñπÊ°àÔºåÁâπÊé®Âá∫Ê≠§‰π¶„ÄÇ„ÄäÈáçÊñ∞ÂÆö‰πâSpring CloudÂÆûÊàò„ÄãÂ∞ÅÈù¢Â¶Ç‰∏ãÂõæÊâÄÁ§∫:√æ√æ![](http://xujin.org/images/re/fm.png)√æ√æ   Êú¨‰π¶Âü∫‰∫é`Spring CloudÁöÑFinchley.RELEASEÁâàÁºñÂÜô`ÔºåÁî±7‰Ωç‰ΩúËÄÖËëóÔºå`ÂÖ±25Á´†ÔºåÂÖ±670È°µ`ÔºåÊàë‰ª¨7‰Ωç‰ΩúËÄÖÂπ∂‰∏çÊòØSpring CloudÂæÆÊúçÂä°ËêΩÂú∞ÁöÑÊû∂ÊûÑ‰∏ìÂÆ∂ÔºåÊàë‰ª¨Âè™ÊòØSpring CloudÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÂÆûË∑µËÄÖÔºåÊääÊàë‰ª¨Ëá™Â∑±ÁöÑÂÆûË∑µÁªèÈ™åÂàÜ‰∫´ÁªôÂ§ßÂÆ∂ÔºåÂ∏ÆÂä©Â§ßÂÆ∂Ëß£ÂÜ≥Â≠¶‰π†ÂíåÂ∑•‰Ωú‰∏äÈÅáÂà∞ÁöÑÈóÆÈ¢ò„ÄÇ`‰∏â‰∫∫Ë°åÔºåÂøÖÊúâÊàëÂ∏àÁÑâÔºåÁî±‰∫éÊàë‰ª¨Â≠¶ËØÜÊúâÈôêÔºåÈöæÂÖç‰ºöÊúâ‰∏çË∂≥‰πãÂ§ÑÔºåËøòËØ∑ËØªËÄÖÂ§öÂ§öÂåÖÊ∂µÔºå‰∏ÄËµ∑‰∫§ÊµÅÂ≠¶‰π†ÔºåÂÖ±ÂêåËøõÊ≠•`„ÄÇ√æ√æ![](/doc/image/dy.jpg)√æ√æ√æ## 3.Êú¨‰π¶‰ªãÁªç√æ√æ### 3.1 Â°´ÂùëËÆ∞ÂΩï√æ√æ![](http://xujin.org/images/re/tkjl.png)√æ√æ### 3.2 BATJÈÉ®ÂàÜ‰π¶ËØÑ√æ√æËøáÂéªÂçÅÂá†Âπ¥ÈáåÔºåÂπø‰πâÁöÑ‚ÄúÂæÆÊúçÂä°‚ÄùÊû∂ÊûÑ‰ª•ÂÖ∂Â∞èÂõ¢ÈòüÂø´ÈÄüÂàõÂª∫ÂíåËø≠‰ª£ÊúçÂä°Â∏¶Êù•ÁöÑÊû∂ÊûÑÂºπÊÄß„ÄÅÊâ©Â±ïÊÄß„ÄÅÊïèÊç∑ÊÄßÔºåÂ§©ÁÑ∂ÂåπÈÖç‰∫Ü‰∫íËÅîÁΩë‰∏öÂä°Âø´ÈÄüÂèëÂ±ïÂíåÂèòÂåñÁöÑÁâπÁÇπÔºåÂú®ÂêÑÂ§ß‰∫íËÅîÁΩëÂÖ¨Âè∏ÂèñÂæó‰∫ÜÂ∑®Â§ßÁöÑÊàêÂäü„ÄÇÊó∂Ëá≥‰∫ëÂéüÁîüÂ∫îÁî®Êó∂‰ª£ÔºåÂ∑≤‰∏çÂÜçÊòØÊòØÂê¶ÈááÁî®ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÈóÆÈ¢òÔºåËÄåÊòØ‰ΩïÊó∂ÈááÁî®‰ª•ÂèäÂ¶Ç‰ΩïÂú®Áîü‰∫ß‰∏äÂÆûÊàòÁöÑÈóÆÈ¢ò„ÄÇÊú¨‰π¶Â∞ÜÂ¶Ç‰ΩïÂü∫‰∫éSpring CloudÁîüÊÄÅ‰ΩìÁ≥ªËøõË°åÂæÆÊúçÂä°ÂÆûÊàòÁöÑÊñπÊñπÈù¢Èù¢ÁöÑÁªÜËäÇÈÉΩÊ∂µÁõñ‰∫ÜÔºåÔºå‰ªéËøô‰∏™ÊÑè‰πâ‰∏äÊù•ËÆ≤ÔºåÁ°ÆÂÆûÂÅöÂà∞‰∫Ü‚ÄúÈáçÊñ∞ÂÆö‰πâ‚Äù„ÄÇ√æ√æ`‚Äî‚Äî Âù§ÂÆá NacosÂºÄÊ∫êÈ°πÁõÆÂàõÂßã‰∫∫/ÈòøÈáåÂ∑¥Â∑¥È´òÁ∫ßÊäÄÊúØ‰∏ìÂÆ∂`√æ√æ√æ√æÂæÆÊúçÂä°‰ª•ÊïèÊç∑‰∏∫ÁõÆÊ†áÔºå‰ª•Èôç‰ΩéÂ§çÊùÇÁöÑÁ≥ªÁªüÁªìÊûÑ‰∏∫Âü∫Á°ÄÔºåÂ∏¶ÁªôÊàë‰ª¨Êõ¥Â•ΩÁöÑÁ≥ªÁªüÂèØÁî®ÊÄßÂíåÁ®≥ÂÆöÊÄß„ÄÇSpring Cloud‰Ωú‰∏∫‰∏ÄÂ•óÂÆåÂñÑÁöÑÂæÆÊúçÂä°Ê≤ªÁêÜÁöÑÂÖ∏ÂûãÊ°ÜÊû∂ÔºåÊ∂µÁõñ‰∫ÜÂæÆÊúçÂä°Ê≤ªÁêÜÁöÑÊñπÊñπÈù¢Èù¢„ÄÇÊú¨‰π¶ËØ¶ÁªÜ‰ªãÁªç‰∫ÜSpring CloudÁöÑÊØè‰∏Ä‰∏™Ê†∏ÂøÉÊ®°ÂùóÔºå‰ª•ÁêÜËÆ∫‰∏éÂÆûÈôÖÁõ∏ÁªìÂêàÁöÑÊñπÂºèÔºåÈÄèÂΩªÂú∞ËÆ≤Ëø∞‰∫ÜSpring CloudÁöÑÁ≤æÈ´ìÔºåÊòØÊØè‰∏Ä‰ΩçÂ•ãÊàòÂú®ÊúçÂä°ÂåñÈ¢ÜÂüü‰∏ÄÁ∫øÁöÑÂ∑•Á®ãÂ∏à„ÄÅÊû∂ÊûÑÂ∏àÁöÑ*ÈÄâÊäÄÊúØ‰π¶Á±ç„ÄÇ√æ√æ`‚Äî‚ÄîÊùéËâ≥Èπè ËöÇËöÅÈáëÊúçÈ´òÁ∫ßÊäÄÊúØ‰∏ìÂÆ∂/„ÄäÂàÜÂ∏ÉÂºèÊúçÂä°Êû∂ÊûÑ„Äã„ÄäÂèØ‰º∏Áº©ÊúçÂä°Êû∂ÊûÑ„Äã‰ΩúËÄÖ√æ`√æ√æ√æÊú¨‰π¶ÂèØ‰ª•ËØ¥ÊòØÂêéÁ´ØÊû∂ÊûÑÂ∏àÁöÑËøõÈò∂ÂÆùÂÖ∏ÔºåÂÖ®Èù¢Âú∞ËÆ≤Ëß£‰∫ÜÂ¶Ç‰ΩïÊâìÈÄ†‰∏ÄÂ•óÂº∫Â§ß„ÄÅÂÅ•Â£ÆÁöÑÂæÆÊúçÂä°‰ΩìÁ≥ªÔºåÊ∑±ÂÖ•ÂàÜÊûê‰∫ÜÊ∂âÂèäÂà∞ÁöÑÂêÑ‰∏™ÁªÑ‰ª∂„ÄÇ*ÈöæÂæóÁöÑÊòØÔºå‰π¶‰∏≠ÁªìÂêà‰∫Ü‰ΩúËÄÖÂ§öÂπ¥ÁßØÁ¥ØÁöÑÊû∂ÊûÑÁªèÈ™åÔºåÂàÜÊûê‰∫ÜÂêÑÁßçÁªÑ‰ª∂ÈÄÇÁî®ÁöÑÂú∫ÊôØÔºåÂπ≥ÂÆûÂú∞ËØ¥Êòé‰∫ÜÂÆûÈôÖ‰ΩøÁî®‰∏≠ÁöÑÂêÑÁßçËÄÉÈáèÂíåÁªÜËäÇ‰ºòÂåñÔºåÁÆÄÁõ¥ÊòØÂ•ãÊñóÂú®‰∏ÄÁ∫øÁöÑÂ∑•Á®ãÂ∏àÁöÑÂøÉË°ÄÁªìÊô∂„ÄÇ‰ªª‰ΩïÊÉ≥ÊéåÊè°Â§ßÂûãÂêéÁ´ØÊû∂ÊûÑÁöÑÂ∑•Á®ãÂ∏àÔºåÊó†ËÆ∫‰ΩøÁî®‰ªÄ‰πàÊäÄÊúØÊ°ÜÊû∂ÔºåÈÉΩËÉΩ‰ªéÊú¨‰π¶Ëé∑ÁõäÂå™ÊµÖ„ÄÇ√æ√æ` ‚Äî‚ÄîÊùéÂèåÊ∂õ È•ø‰∫Ü‰πà‰∏≠Èó¥‰ª∂ËµÑÊ∑±Êû∂ÊûÑÂ∏à`√æ√æ√æ√æSpring CloudÂ∑≤ÁÑ∂Êàê‰∏∫JavaÈ¢ÜÂüüÂ∫îÁî®ÂæÆÊúçÂä°ÂåñÁöÑ*ÈÄâÊ°ÜÊû∂Ôºå‰ΩÜÂõΩÂÜÖ‰∏ÄÁõ¥Áº∫Â∞ëÂÖ®Èù¢ËÆ∫Ëø∞Spring CloudÂïÜÁî®ÂÆûË∑µÁõ∏ÂÖ≥ÁöÑ‰π¶Á±ç„ÄÇÊú¨‰π¶Âõ¥ÁªïSpring CloudÊ°ÜÊû∂‰∏≠ÁöÑÊúçÂä°Ê≥®ÂÜåÂèëÁé∞„ÄÅÊúçÂä°Ë∑ØÁî±„ÄÅÊúçÂä°ÁΩëÂÖ≥„ÄÅÂàÜÂ∏ÉÂºèÈÖçÁΩÆ„ÄÅÊúçÂä°Ê≤ªÁêÜ„ÄÅÂÆπÂô®ÂåñÂèäÂæÆÊúçÂä°ËÆæËÆ°Á≠âÂÖ≥ÈîÆÈ¢ÜÂüüËøõË°å‰∫ÜÊ∑±ÂÖ•ÊµÖÂá∫ÁöÑËÆ≤Ëß£ÔºåÂπ∂Áªô‰∫à‰∫ÜÂ§ßÈáèÁöÑÁúüÂÆûÂ∫îÁî®Ê°à‰æãÔºåÊñ∞ÊâãÂíåËÄÅÊâãÈÉΩÂèØ‰ª•‰ªé‰∏≠ÂèóÁõäËâØÂ§ö„ÄÇ‰ΩúËÄÖ‰Ωú‰∏∫Spring Cloud‰∏≠ÂõΩÁöÑËµÑÊ∑±‰∏ìÂÆ∂ÔºåÂØπ‰∫éSpring CloudÂèäÂæÆÊúçÂä°ÊúâÁùÄÊ∑±ÂàªÁöÑÊû∂ÊûÑÂíåÂÆûÊàòÁªèÈ™åÔºåÂÄºÂæó‰ø°Ëµñ„ÄÇ√æ√æ`‚Äî‚ÄîÂçïÂÆ∂È™è ËÖæËÆØ‰∏≠Èó¥‰ª∂È´òÁ∫ßÂ∑•Á®ãÂ∏à`√æ√æ√æÂú®ÂæÆÊúçÂä°‰ΩìÁ≥ª‰∏≠ÔºåSpring CloudÊòØÁõÆÂâçÊúÄÁÉ≠Èó®ÁöÑÊûÑÂª∫ÂæÆÊúçÂä°‰ΩìÁ≥ªÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂÆÉÊèê‰æõ‰∫ÜÊûÑÂª∫ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑ‰∏Ä‰∫õÂü∫Á°ÄËÆæÊñΩ„ÄÇÊú¨‰π¶ÂÜÖÂÆπ‰∏äË¶ÜÁõñ‰∫ÜSpring CloudÁöÑ‰∏Ä‰∫õ‰∏ªË¶ÅÁªÑ‰ª∂Ôºå‰∏ç‰ªÖÂú®Â¶Ç‰Ωï‰ΩøÁî®‰∏äÂÅö‰∫ÜËØ¶ÁªÜÁöÑ‰ªãÁªçÔºå‰πü‰ªéÂéüÁêÜ‰∏äÊ∑±ÂÖ•ÊµÖÂá∫Âú∞ÂâñÊûê‰∫ÜÂÖ∂‰∏≠ÁöÑÊäÄÊúØË¶ÅÁÇπÔºåÂêåÊó∂ÈÉ®ÂàÜÁªÑ‰ª∂‰πüË∑üÂë®ËæπÁöÑ‰∏Ä‰∫õÂºÄÊ∫êÈ°πÁõÆËøõË°å‰∫ÜÂØπÊØîÔºå‰∏îÊèê‰æõ‰∫Ü‰∏Ä‰∫õÂéüÁêÜÂàÜÊûêÂíåÁõ∏ÂÖ≥ÁöÑÁ§∫‰æãÔºåÊòØ‰∏ÄÊú¨‰∏çÂèØÂ§öÂæóÁöÑSpring CloudÂÆûÊàò‰π¶Á±ç„ÄÇÊñ∞ÊâãÂíåÊúâÂæÆÊúçÂä°ÂÆûË∑µÁªèÈ™åÁöÑËØªËÄÖÈÉΩËÉΩ‰ªé‰π¶‰∏≠ÂæóÂà∞‰∏Ä‰∫õ‰∏ç‰∏ÄÊ†∑ÁöÑÊî∂Ëé∑„ÄÇ√æ√æ`‚Äî‚ÄîÂº†Ëâ∫Ëæ∞ ËÖæËÆØÈ´òÁ∫ßÁ†îÂèëÂ∑•Á®ãÂ∏à`√æ√æÊú¨‰π¶‰∏ç‰ªÖÂØπSpring CloudÂêÑÊ†∏ÂøÉÁªÑ‰ª∂ËøõË°å‰∫ÜÁªÜËá¥ÂÖ•ÂæÆÁöÑ‰ªãÁªçÔºåÂêåÊó∂‰πüË∑≥Âá∫‰∫ÜÊ°ÜÊû∂Êú¨Ë∫´Ôºå‰∏∫ÂæÆÊúçÂä°ÁöÑÂÆûÊñΩÂíåÂàÜÂ∏ÉÂºèÊû∂ÊûÑÊâÄÈù¢‰∏¥ÁöÑÂü∫Êú¨ÈóÆÈ¢ò‰∫§Âá∫‰∫ÜSpring CloudÂºèÁ≠îÂç∑ÔºåÊòØÂºÄÂèëËÄÖÂø´ÈÄüÊéåÊè°Spring CloudÊäÄÊúØÊ†àÁöÑÁ•ûÂÖµÂà©Âô®„ÄÇ‰∏ç‰ªÖÂ¶ÇÊ≠§ÔºåÊú¨‰π¶ËøòÂáùËÅöÁùÄSpring Cloud‰∏≠ÂõΩÁ§æÂå∫ÁöÑÊô∫ÊÖßÁªìÊô∂ÔºåËÆ©Êàë‰ª¨ÁúãÂà∞‰∫ÜÂõΩ‰∫∫Âú®ÂºÄÊ∫êÈ¢ÜÂüüÁöÑÁ†îÂèëÂäõÈáèÔºå ÂèØÂñúÂèØË¥∫„ÄÇ√æ√æ`‚Äî‚ÄîÁéãÈ∏øÈ£û ÁôæÂ∫¶È´òÁ∫ßÁ†îÂèëÂ∑•Á®ãÂ∏à`√æ√æÂú®ÂæÆÊúçÂä°Â¶ÇÁÅ´Â¶ÇËçºÁöÑ‰ªäÂ§©ÔºåÂêÑÁßçÂæÆÊúçÂä°Ê°ÜÊû∂Â±ÇÂá∫‰∏çÁ©∑ÔºåËÄåSpring CloudÊó†ÁñëÊòØÈÇ£È¢óÊúÄÈó™‰∫ÆÁöÑÊòü„ÄÇ‰ªéSpring FrameworkÂà∞Spring BootÔºåÂÜçÂà∞Â¶Ç‰ªäÁöÑSpring CloudÔºåSpringÂÖ®ÂÆ∂Ê°∂Áªô‰ºóÂ§öÁ®ãÂ∫èÂëòÂ∏¶Êù•‰∫ÜÁúüÊ≠£ÁöÑÊò•Â§©„ÄÇÁî±‰∫éÂàÜÂ∏ÉÂºèÂíåÊúçÂä°ÂåñÊòØÊûÅÂÖ∑ÊåëÊàòÁöÑ‰ªªÂä°ÔºåÂõ†Ê≠§Spring Cloud‰πü‰∏çÂèØÈÅøÂÖçÁöÑÊÑàÂä†Â§çÊùÇ„ÄÇSpring CLoud‰∏≠ÂõΩÁ§æÂå∫‰∏∫Spring CloudÁöÑÊôÆÂèäÂÅöÂá∫‰∫ÜÂ∑®Â§ßÁöÑË¥°ÁåÆÔºåÂπ∂ËøÖÈÄüÁöÑÈôç‰Ωé‰∫ÜËØ≠Ë®ÄÈóÆÈ¢òÊâÄÂ∏¶Êù•ÁöÑÂ≠¶‰π†Èó®Êßõ„ÄÇËøôÊú¨‰π¶Áî±Spring CLoud‰∏≠ÂõΩÁ§æÂå∫ÂÄæÂäõÊâìÈÄ†Ôºå‰π¶Á±çÊ∂µÁõñ‰∫ÜSpring CloudÁöÑÊúçÂä°ÂèëÁé∞„ÄÅÁΩëÂÖ≥„ÄÅÁÜîÊñ≠Âô®„ÄÅÈÖçÁΩÆ„ÄÅÂÖ®ÈìæË∑ØÁõëÊéßÁ≠âÊúÄÊ†∏ÂøÉÁªÑ‰ª∂ÔºåÂπ∂ÂæàÊé•Âú∞Ê∞îÂú∞ËØ¶Ëø∞‰∫ÜDubboÂêëSpring CloudËøÅÁßª‰ª•ÂèäSpring Cloud‰∏éÂàÜÂ∏ÉÂºè‰∫ãÂä°Áõ∏ÂÖ≥ÂÜÖÂÆπÔºåÂÄºÂæó‰∏ÄÁúã„ÄÇ√æ√æ`‚Äî‚ÄîÂº†‰∫Æ ‰∫¨‰∏úÈáëËûçÊï∞ÊçÆÁ†îÂèëË¥üË¥£‰∫∫/ÂàÜÂ∏ÉÂºèÊï∞ÊçÆÂ∫ì‰∏≠Èó¥‰ª∂Sharding-SphereË¥üË¥£‰∫∫`√æ√æSpring CloudÊèê‰æõ‰∫ÜÂÆåÊï¥ÁöÑÂæÆÊúçÂä°ÊäÄÊúØ‰ΩìÁ≥ªÔºåÂèØ‰ª•Â∏ÆÂä©ÂºÄÂèëËÄÖÂø´ÈÄüÂú∞ÂÆûÁé∞Êû∂ÊûÑÂçáÁ∫ß„ÄÇ„ÄäÈáçÊñ∞ÂÆö‰πâSpring CloudÂÆûÊàò„Äã‰∏Ä‰π¶ÂÆåÊï¥Âú∞‰ªãÁªç‰∫ÜSpring Cloud‰∏≠ÂêÑ‰∏™ÁªÑ‰ª∂ÁöÑ‰ΩøÁî®ÊñπÊ≥ïÂπ∂Ê∑±Â∫¶ÂâñÊûê‰∫ÜÂÖ∂‰∏≠ÁöÑÂéüÁêÜÔºåÊñáÁ´†Ê∑±ÂÖ•ÊµÖÂá∫Â∏ÆÂä©ÂºÄÂèëËÄÖÂø´ÈÄüÊéåÊè°ÂíåÁêÜËß£Spring Cloud„ÄÇ√æ√æ`‚Äî‚ÄîÊùéËâ∫ÊÅí ËÖæËÆØÁ†îÂèëÂ∑•Á®ãÂ∏à `√æ√æ### 3.3 ÂÜÖÂÆπÁÆÄ‰ªã√æ√æËøôÊòØ‰∏ÄÊú¨ÂÆûË∑µ‰∏éÁêÜËÆ∫Âπ∂Èáç„ÄÅÂπøÂ∫¶‰∏éÊ∑±Â∫¶ÂÖºÈ°æÁöÑSpring CloudÁîü‰∫ßÂÆûË∑µÂºÄÂèëÊåáÂçóÔºåÁî±Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ÂÄæÂäõÊâìÈÄ†Ôºå‰ΩúËÄÖÊù•Ëá™ÈòøÈáå„ÄÅËöÇËöÅÈáëÊúç„ÄÅ‰∫¨‰∏úÈáëËûçÁ≠â‰ºÅ‰∏öÔºåÊú¨‰π¶ÈíàÂØπSpring CloudÂú®ÂõΩÂÜÖÁöÑ‰ΩøÁî®ÊÉÖÂÜµÔºåÁªìÂêàÂõΩÂÜÖ‰ºÅ‰∏ö‰ΩøÁî®Spring CloudËêΩÂú∞ÂæÆÊúçÂä°Êû∂ÊûÑÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºåÊèêÂá∫ÂèØËêΩÂú∞ÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ√æ√æÊú¨‰π¶ÂÜÖÂÆπÊúâ3Â§ßÁâπËâ≤Ôºö√æ√æ* `Ë∂≥Â§üÂπø`ÔºöËØ¶ÁªÜËÆ≤Ëß£‰∫ÜSpring CloudÁöÑÊ†∏ÂøÉÂ∏∏Áî®ÁªÑ‰ª∂‰ª•ÂèäSpring CloudÁöÑÂ¢ûÂº∫ÁîüÊÄÅÔºåÈíàÂØπÁîü‰∫ßÂÆûË∑µ‰∏≠Â∏∏ËßÅÈóÆÈ¢òÁªôÂá∫ÂèØËêΩÂú∞ÁöÑÊúÄ‰Ω≥ÂÆûË∑µÊñπÊ°àÔºåÊó†ËÆ∫ÊÇ®ÊòØÂàùÂ≠¶ËÄÖËøòÊòØÂºÄÂèë‰∫∫ÂëòÔºåËøòÊòØÊû∂ÊûÑÂ∏àÔºåÈÉΩËÉΩ‰ªéÊ≠§‰π¶Ëé∑Áõä„ÄÇ√æ√æ* `ÊúâÊ∑±Â∫¶`ÔºöÊú¨‰π¶ÂØπÊ∂âÂèäÁöÑSpring CloudÁªÑ‰ª∂ÊåâÁÖß‰ªéÂÖ•Èó®„ÄÅËøõÈò∂„ÄÅÂÆûÊàò„ÄÅÊâ©Â±ïÂ¢ûÂº∫ÁöÑÈ°∫Â∫èÂæ™Â∫èÊ∏êËøõËøõË°åÂâñÊûêÂíåËÆ≤Ëß£,Â∏ÆÂä©‰ΩúËÄÖÁü•ÂÖ∂ÁÑ∂Âπ∂Áü•ÂÖ∂ÊâÄ‰ª•ÁÑ∂ÔºåÊéà‰πã‰ª•Ê∏î„ÄÇ√æ√æ* `ÈáçÂÆûË∑µ`ÔºöÊ≥®ÈáçÁîü‰∫ßÂÆûË∑µÔºåÈÄöËøáÊ°à‰æãÈ©±Âä®ÔºåÁªôÂá∫‰ºòÁßÄÁöÑÁîü‰∫ßÂÆûË∑µÊñπÊ°àÂíå‰ºòÁßÄÁöÑÁîü‰∫ßÈÖçÁΩÆÔºåÂ∏ÆÂä©ËØªËÄÖÂø´ÈÄüËêΩÂú∞‰ºÅ‰∏öÂæÆÊúçÂä°Êû∂ÊûÑ„ÄÇ√æ√æÂÖ®‰π¶ÂÖ±25Á´†ÔºåÂàÜ‰∏∫‰∏â‰∏™ÈÉ®ÂàÜÔºö√æ√æ* Á¨¨‰∏ÄÈÉ®ÂàÜ Ê†∏ÂøÉÁªÑ‰ª∂ÁØáÔºàÁ¨¨1~10Á´†Ôºâ√æ  ‰∏ªË¶ÅËÆ≤Ëß£Spring CloudÁöÑÊ†∏ÂøÉÁªÑ‰ª∂„ÄÇÈ¶ñÂÖà‰ªéÂ∫îÁî®Êû∂ÊûÑÁöÑÂèëÂ±ïÂéÜÁ®ãËÆ≤Ëµ∑Ôºå‰ªãÁªç‰∫ÜÂæÆÊúçÂä°Âá∫Áé∞ÁöÑËÉåÊôØÔºåÂπ∂ÂØπÂæÆÊúçÂä°Êû∂ÊûÑÁöÑËêΩÂú∞ÊèêÂá∫‰∫ÜÁõ∏Â∫îÁöÑËß£ÂÜ≥ÊñπÊ°àÔºõÁÑ∂ÂêéÂàÜÂà´ËØ¶ÁªÜ‰ªãÁªç‰∫ÜSpring CloudÂæÆÊúçÂä°‰ΩìÁ≥ª‰∏≠ÁöÑÊ†∏ÂøÉÂ∏∏Áî®ÁªÑ‰ª∂ÔºåÂ¶ÇEureka„ÄÅFeign„ÄÅRibbon„ÄÅHystrix„ÄÅZuulÁ≠âÔºõÊúÄÂêéÈÄöËøá‰∏Ä‰∏™ÁªºÂêàÊ°à‰æãÂ∞ÜÂâçÈù¢‰ªãÁªçÁöÑÁªÑ‰ª∂ËøûÊé•Ëµ∑Êù•ÔºåÂ∏ÆÂä©Â§ßÂÆ∂Ëûç‰ºöË¥ØÈÄö„ÄÇ√æ√æ* Á¨¨‰∫åÈÉ®ÂàÜ ËøõÈò∂ÂÆûÊàòÁØáÔºàÁ¨¨11~18Á´†Ôºâ√æ  Âú®Ê†∏ÂøÉÁªÑ‰ª∂ÁöÑÂü∫Á°Ä‰∏äÔºåÂØπConfig„ÄÅConsul„ÄÅËÆ§ËØÅÂíåÈâ¥ÊùÉ„ÄÅÂÖ®ÈìæË∑ØÁõëÊéß‰ª•ÂèäÂØπSpring CloudÁîüÊÄÅÂúà‰∏≠Á¨¨‰∫å‰ª£ÁΩëÂÖ≥Spring Cloud GatewayËøõË°å‰∫ÜËØ¶ÁªÜÈòêËø∞ÔºåÂæ™Â∫èÊ∏êËøõ„ÄÅÊ°à‰æãÈ©±Âä®ÔºåÂ∏ÆÂä©ËØªËÄÖÂä†Ê∑±ÂØπÁªÑ‰ª∂ÁöÑÁêÜËß£ÂíåËøêÁî®ÔºåÊõ¥Â•ΩÂú∞ÊéåÊè°Áõ∏ÂÖ≥ÂÜÖÂÆπËøêÁî®‰∫éÁîü‰∫ßÂÆûË∑µ„ÄÇ√æ√æ* Á¨¨‰∏âÈÉ®ÂàÜ Ëß£ÂÜ≥ÊñπÊ°àÁØáÔºàÁ¨¨19~25Á´†Ôºâ√æ   ‰∏ªË¶Å‰ªéËß£ÂÜ≥ÊñπÊ°àÁùÄÊâãÔºåÂÜÖÂÆπÂåÖÊã¨Spring Cloud‰∏égRPCÁöÑÊï¥ÂêàÊñπÂºè„ÄÅÁâàÊú¨ÊéßÂà∂‰∏éÁÅ∞Â∫¶ÂèëÂ∏É„ÄÅSpring CloudÂÆπÂô®Âåñ„ÄÅDubboÂêëSpring CloudÁöÑËøÅÁßª„ÄÅÂàÜÂ∏ÉÂºè‰∫ãÂä°„ÄÅÈ¢ÜÂüüÈ©±Âä®Á≠âÁîü‰∫ßÁ∫ßÂÆûÁî®Ëß£ÂÜ≥ÊñπÊ°àÔºå‰∏∫‰ºÅ‰∏öITÊû∂ÊûÑÂæÆÊúçÂä°ÂåñÂíåÂèòÈù©‰øùÈ©æÊä§Ëà™„ÄÇ√æ√æ### 3.4 Êé®ËçêÁêÜÁî±√æ√æ* Êú¨‰π¶Áî±Spring CloudÁ§æÂå∫ÂÆòÊñπÊí∞ÂÜôÔºåÊ†∏ÂøÉÊàêÂëòÊù•Ëá™ÂéüÈòøÈáå„ÄÅËöÇËöÅÈáëÊúç„ÄÅ‰∫¨‰∏úÈáëËûçÁ≠â‰∫íËÅîÁΩë‰ºÅ‰∏öÔºåÁªèÈ™å‰∏∞ÂØå„ÄÇ√æ√æ* Êú¨‰π¶ÂÜÖÂÆπÊúâ3Â§ßÁâπËâ≤ÔºöÂÆΩÂ∫¶Ë∂≥Â§üÂπø„ÄÅÊ∑±Â∫¶Ë∂≥Â§üÊ∑±ÔºåËÄå‰∏îÁ´ãË∂≥‰∫éÁîü‰∫ßÂÆûË∑µÔºåÁõ¥Êé•‰ªéÁîü‰∫ßÂÆûË∑µÂá∫ÂèëÔºåÂåÖÂê´Â§ßÈáèÁîü‰∫ßÂÆûË∑µÁöÑÈÖçÁΩÆ√æ√æ* Êú¨‰π¶ÂæóÂà∞‰∫ÜÊù•Ëá™ÈòøÈáå„ÄÅËÖæËÆØ„ÄÅÁôæÂ∫¶„ÄÅ‰∫¨‰∏úÁ≠âÂ§ßÂûã‰∫íËÅîÁΩë‰ºÅ‰∏öÁöÑËøë10‰Ωç‰∏ìÂÆ∂ÁöÑÈºéÂäõÊé®Ëçê„ÄÇ√æ√æ√æ### 3.5 ËØªËÄÖÂèçÈ¶à√æ√æhttps://github.com/SpringCloud/spring-cloud-code/issues/1√æ√æ√æ### 3.6 Ê∫êÁ†ÅÁõ∏ÂÖ≥√æ√æ‰π¶Á±çÁõÆÂΩïÔºöhttps://github.com/SpringCloud/spring-cloud-catalog√æ√æÊ∫êÁ†ÅÂú∞ÂùÄ:https://github.com/SpringCloud/spring-cloud-code√æ√æhttp://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html√æ√æ* Áî±‰∫éËÅöÂêàÂ∑•Á®ãÂæàÂ§öÔºåMavenÂÜÖÂ≠òÂ¶ÇÊûú‰∏çË∂≥ÔºåÂú®/spring-cloud-code/pom.xmlËÆæÁΩÆÂ¶Ç‰∏ãÔºåÊ¨¢Ëøé**Star**„ÄÇ√æ![](/doc/image/szm1.jpg)√æ√æ* IDE‰∏≠ÈÖçÁΩÆÂ¶Ç‰∏ã:√æ![](/doc/image/sz_maven.jpg)√æ√æÂ∑•Á®ãÊòéÁªÜ√æ√æchÊòØÁ´†ËäÇÁöÑÁÆÄÁß∞Ôºåch10Ë°®Á§∫Á¨¨ÂçÅÁ´†Ôºåch10-1Ë°®Á§∫Á¨¨ÂçÅÁ´†ÁöÑÁ¨¨‰∏Ä‰∏™Ê°à‰æãÂ∑•Á®ãÔºå√æ√æ```√æ‚îú‚îÄ‚îÄ ch10-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-common√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-data-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-hystrix-dashboard√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-user-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch10-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch11-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-1-config-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-1-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ reademe.txt√æ‚îú‚îÄ‚îÄ ch11-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-2-config-client-refresh√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-2-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch11-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-3-config-client-bus-refresh√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-3-config-client-bus-refresh-second√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-3-config-server-bus√æ‚îÇ   ‚îú‚îÄ‚îÄ ch11-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-1-config-client-placeholders√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-1-config-server-placeholders√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-10√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-10-config-client-apollo√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-10-config-client-apollo2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-10-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-10-gateway-zuul-apollo√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-10.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-2-config-client-multiple-repositories√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-2-config-server-multiple-repositories√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-3-config-client-db√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-3-config-server-db√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-4-config-client-mongodb√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-4-config-server-mongodb√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-4.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-5-config-client-auto-refresh√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-5-config-client-refresh-autoconfig√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-5-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-5.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-6√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-6-config-client-fallback√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-6-config-client-fallback-autoconfig√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-6-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-6.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-7√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-7-config-client-auth-jwt√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-7-config-client-jwt√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-7-config-server-auth-jwt√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-7.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-8√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-8-config-client-high-availability√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-8-config-client-high-availability-autoconfig√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-8-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-8.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch12-9√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-9-config-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-9-config-server-high-availability√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-9-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch12-9.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch13-1√æ‚îÇ   ‚îú‚îÄ‚îÄ README.md√æ‚îÇ   ‚îú‚îÄ‚îÄ ch13-1-consul-config√æ‚îÇ   ‚îú‚îÄ‚îÄ ch13-1-consul-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch13-1-consul-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch13-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch14-1√æ‚îÇ   ‚îú‚îÄ‚îÄ README.md√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-1-consul-register√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch14-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2-consul-consumer-discoveryclient√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2-consul-consumer-ribbon√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2-consul-provider-tag-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2-consul-provider-tag-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2-cosul-provider-tag-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch14-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-3-consul-config-customize√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch14-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-4-consul-override-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-4-consul-override-provider-tag1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-4-consul-override-provider-tag2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-4.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch14-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-5-consul-override-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-5-consul-override-consumer-new√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-5-consul-provider1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-5-consul-provider2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch14-5.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch15-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1-client-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1-core-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1-eureka-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1-provider-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch15-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch16-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-1-sleuth-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-1-sleuth-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch16-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-2-sleuth-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-2-sleuth-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch16-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3-eureka-server-skywalking√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3-script√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3-service-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3-service-b√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3-zuul-skywalking√æ‚îÇ   ‚îú‚îÄ‚îÄ ch16-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch17-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-1-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-1-2-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch17-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-2-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-3-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-4-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-5-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-6-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-7-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-8-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-9-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch17-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-2-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-3-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-4-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-5-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-6-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-7-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch17-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch18-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-1-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-1-eureka√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-1-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch18-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-2-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-2-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ reademe.txt√æ‚îú‚îÄ‚îÄ ch18-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-3-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-3-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch18-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-4-eureka√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-4-gateway-https√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-4-service-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-4-service-b√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-4.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ reademe.md√æ‚îú‚îÄ‚îÄ ch18-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-5-eureka√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-5-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-5-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-5.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch18-6√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-6-1-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-6-2-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-6-3-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-6-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-6.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch18-7√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-7-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch18-7.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch19-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch19-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ src√æ‚îú‚îÄ‚îÄ ch19-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch19-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ grpc-lib-1√æ‚îÇ   ‚îú‚îÄ‚îÄ grpc-simple-client√æ‚îÇ   ‚îú‚îÄ‚îÄ grpc-simple-server√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch2-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch2-1-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch2-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch2-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch20√æ‚îÇ   ‚îú‚îÄ‚îÄ ch20.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ cloud-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ cloud-grpc-client√æ‚îÇ   ‚îú‚îÄ‚îÄ cloud-grpc-server√æ‚îÇ   ‚îú‚îÄ‚îÄ grpc-lib√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch21-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch21-1-discovery-console√æ‚îÇ   ‚îú‚îÄ‚îÄ ch21-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch21-1-original-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch21-1-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch21-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch22-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-1-2-dockerfile√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-1-3-jdk8-docker√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-1-4-jdk10-docker√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch22-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-1-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-3-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-4-turbine√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-5-spring-admin√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2-6-biz-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch22-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-3-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-3-2-example-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-3-3-example-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch22-3.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ metrics-server-0.2.1√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch23-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch23-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ demo-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ demo-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ dubbo-provider-api√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch23-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch23-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ demo-dubbo-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ demo-dubbo-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ demo-dubbo-provider-api√æ‚îÇ   ‚îú‚îÄ‚îÄ eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch24√æ‚îÇ   ‚îú‚îÄ‚îÄ ch24-jta-atomikos√æ‚îÇ   ‚îú‚îÄ‚îÄ ch24-saga-servicecomb√æ‚îÇ   ‚îú‚îÄ‚îÄ ch24-tcc-rest√æ‚îÇ   ‚îú‚îÄ‚îÄ ch24.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch25√æ‚îÇ   ‚îú‚îÄ‚îÄ LICENSE√æ‚îÇ   ‚îú‚îÄ‚îÄ README.md√æ‚îÇ   ‚îú‚îÄ‚îÄ ch25.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-app√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-client√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-domain√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-infrastructure√æ‚îÇ   ‚îú‚îÄ‚îÄ crm-sales-start√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ tree.md√æ‚îú‚îÄ‚îÄ ch3-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-1-config-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-1-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch3-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-2-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-2-zuul-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch3-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-3-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-3-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-3-zuul-gateway√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-3.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch3-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-4-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-4-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-4.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch3-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-5-eureka-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-5-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch3-5.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw√æ‚îÇ   ‚îú‚îÄ‚îÄ mvnw.cmd√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch4-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-1-gzip√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-1-hello√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch4-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-2-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-2-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-2.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch4-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-3-httpclient√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-3-okhttp√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-3.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch4-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-4-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-4-feign-file-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-4-feign-upload-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-4.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch4-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-5-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-5-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-5-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-5.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch4-6√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-6-consumer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-6-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-6-provider√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-6-provider-client√æ‚îÇ   ‚îú‚îÄ‚îÄ ch4-6.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ readme.md√æ‚îú‚îÄ‚îÄ ch5-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-1-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-1-ribbon-loadbalancer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch5-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-2-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-2-ribbon-loadbalancer√æ‚îÇ   ‚îú‚îÄ‚îÄ ch5-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch6-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-1-client-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch6-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-2-consumer-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-2-provider-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch6-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-hello-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-hystrix-dashboard√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-hystrix-exception-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-provider-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3-turbine√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch6-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4-collapsing√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4-hystrix-cache√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4-hystrix-thread-context√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4-provider-service√æ‚îÇ   ‚îú‚îÄ‚îÄ ch6-4.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch7-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-1-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-1-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-1.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ pom.xml√æ‚îÇ   ‚îî‚îÄ‚îÄ reademe.txt√æ‚îú‚îÄ‚îÄ ch7-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-2-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-2-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch7-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-3-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-3-client-b√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-3-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-3-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch7-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-1√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-1-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-1-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-1-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-1.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-2√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-2-auth-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-2-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-2-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-2-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-2.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-3√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-3-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-3-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-3-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-3.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-4√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-4-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-4-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-4-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-4.iml√æ‚îÇ   ‚îú‚îÄ‚îÄ mysql.sql√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-5√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-5-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-5-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-5-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-5.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-6√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-6-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-6-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-6.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ ch8-7√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-7-client-a√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-7-eureka-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-7-zuul-server√æ‚îÇ   ‚îú‚îÄ‚îÄ ch8-7.iml√æ‚îÇ   ‚îî‚îÄ‚îÄ pom.xml√æ‚îú‚îÄ‚îÄ pom.xml√æ```√æ>tree -L 2 >>tree.txt√æ√æ√æ√æ### 3.7 ‰ΩúËÄÖ‰ªãÁªç√æ√æ1. ËÆ∏Ëøõ:Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ÂàõÂßã‰∫∫ÔºåÈòøÈáåÂéüËµÑÊ∑±Â∑•Á®ãÂ∏àÔºåËä±ÂêçÁéπÈúñÔºå‰∏ìÊ≥®‰∫éÂü∫Á°ÄÊû∂ÊûÑ‰∏é‰∏≠Èó¥‰ª∂Á†îÂèëÔºåÊõæÂ∞±ËÅå‰∫éÂîØÂìÅ‰ºöÂπ≥Âè∞Êû∂ÊûÑÈÉ®ÂíåÈ•ø‰∫Ü‰πà„ÄÇ‰∏™‰∫∫ÁΩëÁ´ôÔºöhttp://xujin.org„ÄÇ√æ√æ2. ÈíüÂ∞äÂèë:Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ËÅîÂêàÂàõÂßã‰∫∫ÔºåÁé∞Â∞±ËÅå‰∫é‰∫¨‰∏úÈáëËûçÔºåÂØπÂæÆÊúçÂä°ÊúâÊ∑±ÂÖ•Á†îÁ©∂„ÄÇ√æ√æ3. Âè∂ÂøóËøú:Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ËÅîÂêàÂàõÂßã‰∫∫ÔºåÁé∞Â∞±ËÅå‰∫éËöÇËöÅÈáëÊúçÔºåËä±ÂêçÊ¢ìÂ∞ß„ÄÇCSDNÂçöÂÆ¢‰∏ìÂÆ∂ÔºåÂºÄÊ∫êÁ§æÂå∫Ê¥ªË∑ÉËÄÖÔºåÂõΩÂÜÖSpring CloudÊó©ÊúüÂÆûË∑µËÄÖ√æ√æ4. ÊñπÂøóÊúã:Spring Cloud‰∏≠ÂõΩÁ§æÂå∫ËÅîÂêàÂàõÂßã‰∫∫ÔºåÁ°ïÂ£´Â≠¶ÂéÜÔºå„ÄäÊ∑±ÂÖ•ÁêÜËß£Spring Cloud‰∏éÂæÆÊúçÂä°ÊûÑÂª∫„Äã‰ΩúËÄÖÔºåCSDNÂçöÂÆ¢‰∏ìÂÆ∂ÔºàÈòÖËØªÈáè600‰∏á+ÔºâÔºåÂú®Á§æÂå∫ÂÖ∑ÊúâËæÉÈ´òÊ¥ªË∑ÉÂ∫¶‰∏éÂΩ±ÂìçÂäõ„ÄÇ√æ√æ5. Ëî°Ê≥¢ÊñØ:Êã•ÊúâÂ§öÂπ¥JavaÂºÄÂèëÁªèÈ™åÔºåÊõæÂ∞±ËÅå‰∫éÁæéÂõ¢„ÄÅËÖæËÆØ„ÄÇÂõΩÂÜÖSpring CloudÈ¢ÜÂüüÁöÑÊó©ÊúüÂÆûË∑µËÄÖÔºåÁé∞Âú®ÈáëËûçË°å‰∏ö‰ªé‰∫ãFinTechÁõ∏ÂÖ≥Á†îÂèë√æ√æ6. ÈÉ≠Ëä≥Á¢ß:Â§öÂπ¥ÂæÆÊúçÂä°ÂÆûË∑µÁªèÈ™åÔºåÁé∞‰ªªËÅå‰∫éÊüê‰∫íËÅîÁΩëÈáëËûçÂÖ¨Âè∏‰∏≠Èó¥‰ª∂ÈÉ®Èó®„ÄÇ√æ√æ7. Êú±Âæ∑Êòé:Êã•Êúâ10Âπ¥JavaÂºÄÂèëÁªèÈ™åÔºåÂ§öÂπ¥ÊäÄÊúØÊû∂ÊûÑÂíåËß£ÂÜ≥ÊñπÊ°àÁªèÈ™åÔºåÁé∞‰ªªÁÅµÈõÄ‰∫ëÂæÆÊúçÂä°Êû∂ÊûÑÂ∏àÔºåÂú®ÂæÆÊúçÂä°È¢ÜÂüüÊúâÁùÄ‰∏∞ÂØåÁöÑËêΩÂú∞ÁªèÈ™åÔºåÊõæ‰ªªÊüêÂàõ‰∏öÂÖ¨Âè∏ÊäÄÊúØË¥üË¥£‰∫∫„ÄÇ√æ√æ## Stargazers over time√æ√æ[![Stargazers over time](https://starcharts.herokuapp.com/SpringCloud/spring-cloud-code.svg)](https://starcharts.herokuapp.com/SpringCloud/spring-cloud-code)√æ      "
wavemaker/wavemaker-commons,1613,2,7,1,Organization,False,WaveMaker common application utilities,http://www.wavemaker.com,,3,Java,"{'': 1, 'xml': 1}",764,145,964,18,3,1915,True,0,0,0,0,2,2,2,2,8,0,0,0,0,0,0,0,40,0,,,
TheBusyBiscuit/Slimefun4,25766,232,55,257,User,False,Slimefun 4 - A modpack-like experience for Bukkit/Spigot Servers (since 2013),,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",7,Java,"{'': 2, 'md': 2, 'xml': 1}",3563,3,45,138,9,1530,True,7,1102,4,217,2,857,2,435,9,0,72,1254,589500,556863,0,0,45,,116,,"# Slimefun 4√æLooking for the download link? [**Click here**](https://github.com/TheBusyBiscuit/Slimefun4/blob/master/README.md#download-slimefun-4)√æ√æSlimefun is a plugin which aims to turn your Bukkit/Spigot Server into a modpack without ever installing a single mod. It offers everything you could possibly imagine. From Backpacks to Jetpacks! Slimefun lets every player decide on their own how much they want to dive into Magic or Tech.<br>√æWe got everything from magical wands to nuclear reactors.<br>√æWe feature a magical altar, an electric power grid and even item transport systems.√æ√æThis project originally started back in 2013 and has grown ever since.<br>√æFrom one single person working on this plugin back then, we grew to a community of thousands of players and over 100 contributors to this project.<br>√æIt currently adds over **500 new items and recipes** to Minecraft ([Read more about the history of this project](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Slimefun-in-a-nutshell)).√æ√æBut it also comes with a lot of Addons too!<br>√æCheck out our [Addons](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Addons), you may find exactly what you were looking for.√æ√æ### Quick navigation√æ* **[Download Slimefun4](#download-slimefun-4)**√æ* **[Discord Support Server](#discord)**√æ* **[Bug Tracker](https://github.com/TheBusyBiscuit/Slimefun4/issues)**√æ* **[Wiki](https://github.com/TheBusyBiscuit/Slimefun4/wiki)**√æ* **[FAQ](https://github.com/TheBusyBiscuit/Slimefun4/wiki/FAQ)**√æ√æ## Download Slimefun 4√æ(See also: [How to install Slimefun](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Installing-Slimefun))√æ√æSlimefun 4 can be downloaded **for free** on our builds page.<br>√æWe currently provide two distinct versions of Slimefun, development builds and ""stable"" builds.<br>√æHere is a full summary of the differences between the two different versions of Slimefun.√æ√æ| | development (latest) | ""stable"" |√æ| ------------------ | -------- | -------- |√æ| **Minecraft version(s)** | :video_game: 1.13.X - 1.15.X | :video_game: 1.13.X - 1.15.X |√æ| **automatic updates** | :heavy_check_mark: | :heavy_check_mark: |√æ| **frequent updates** | :heavy_check_mark: | :x: |√æ| **latest content** | :heavy_check_mark: | :x: |√æ| **Discord support** | :heavy_check_mark: | :x: |√æ| **Bug Reports** | :heavy_check_mark: | :x: |√æ| **testing before release** | :x: | :heavy_check_mark: |√æ| **change logs** | :x: | :memo: **[change log](https://github.com/TheBusyBiscuit/Slimefun4/blob/master/CHANGELOG.md)** |√æ| **Download link** | :floppy_disk: **[download latest](https://thebusybiscuit.github.io/builds/TheBusyBiscuit/Slimefun4/master/)** | :floppy_disk: **[download ""stable""](https://thebusybiscuit.github.io/builds/TheBusyBiscuit/Slimefun4/stable/)** |√æ√æ**:exclamation: We wholeheartedly recommend you to use _development builds_, they are the most recent version of Slimefun and also receive the most frequent updates!**√æ<details>√æ  <summary>Here's why...</summary>√æ  √æ""Stable"" builds do not receive frequent updates or fast patches. As time goes on, bugs are fixed but it will take some time until these fixes make it into a ""stable"" build. We will also not accept or review any bug reports from ""stable"" builds. They are in fact just old development builds that seemed to run fine without any __major__ issues.√æ√æ**Why use a ""stable"" build then?**<br>√æWhile ""stable"" builds most definitely contain more bugs than development builds due to their very slow update schedule. you can be sure that they will not include __game-breaking__ issues, but rest assured that development builds almost never contain such issues either. If your server or business however heavily depends on a version of Slimefun that does not change/update a lot, you are forgiven if you choose the ""stable"" branch. But development builds will bring you the best experience, both in terms of features and bug fixes.√æ√æ**What exactly are these ""stable"" builds then and why do you put them in quotes?**<br>√æ""Stable"" builds are literally just outdated development builds that seemed to run fine without any __major__ issues. But they are far from bug-free hence why actually calling them stable would be hypocritical. However these builds can only really stay ""stable"" if there are enough people using development builds and report any bugs they come across. Otherwise potential issues may go unnoticed and slip into a ""stable"" build. Again, we really recommend you to choose the development builds. But since a few people really wanted ""stable"" builds, they are now an option too.√æ√æ</details>√æ√æ## Discord√æYou can find Slimefun's community on Discord and connect with **over 2000** users of this plugin from all over the world.<br>√æClick the badge down below to join the server for suggestions/questions or other discussions about this plugin.<br>√æWe are also hosting a community event every so often, join us to find out more.<br>√æ**Important**: We do **not** accept bug reports on discord, please use our [Issue Tracker](https://github.com/TheBusyBiscuit/Slimefun4/issues) to submit bug reports!√æ√æDue to the sheer size of this discord server, we need to enforce some [important rules](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Discord-Rules).<br>√æNot following these rules can lead to a kick or even a ban from the server.√æ√æ<p align=""center"">√æ  <a href=""https://discord.gg/fsD4Bkh"">√æ    <img src=""https://img.shields.io/discord/565557184348422174?color=7289DA&label=Discord&style=for-the-badge"" alt=""Discord Invite""/>√æ  </a><br>√æ  (Click the badge to join)√æ</p>√æ√æ## Wiki√æSlimefun has a (detailed and well-maintained - *cough*) Wiki for new players, maybe also consider√æexpanding the wiki to help grow our community and help out new users of this plugin.√æhttps://github.com/TheBusyBiscuit/Slimefun4/wiki√æ√æ##### Highlighted Articles√æ* [What is Slimefun?](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Slimefun-in-a-nutshell)√æ* [How to install Slimefun](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Installing-Slimefun)√æ* [Addons for Slimefun 4](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Addons)√æ* [How to create an Addon for Slimefun 4](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Developer-Guide)√æ* [Getting Started](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Getting-Started)√æ* [Frequently Asked Questions](https://github.com/TheBusyBiscuit/Slimefun4/wiki/FAQ)√æ* [Common issues](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Common-Issues)√æ* [Help us expand the Wiki!](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Expanding-the-Wiki)√æ* [Help us translate Slimefun!](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Translating-Slimefun)√æ√æThe wiki is entirely community-run, so if you find an article missing, feel free to write one and share it with others.√æ√æ## Contributing to this project√æSlimefun 4 is an Open-Source project and licensed under√æ[GNU GPLv3](https://github.com/TheBusyBiscuit/Slimefun4/blob/master/LICENSE).<br>√æOver 100 people have already contributed to this amazing project. You guys are awesome.<br>√æPlease consider helping us maintain this project too, your engagement keeps the project alive <3.√æ√æ### Translations√æSlimefun4 has recently added suport for translations, note that translations are still _work in progress_.<br>√æSo not everything may be available for translation yet.<br>√æ[Read more...](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Translating-Slimefun)√æ√æ### Pull requests√æThis is an open-source community project, so **your contributions keep this plugin alive!**<br>√æPull Requests can be fixes, changes or even additions, but please keep in mind that if you add too much content to Slimefun 4, you should maybe consider making an Addon for it instead ([Developer Guide](https://github.com/TheBusyBiscuit/Slimefun4/wiki/Developer-Guide)).√æ√æ### Code Quality√æSlimefun uses [Sonarcloud.io](https://sonarcloud.io/dashboard?id=TheBusyBiscuit_Slimefun4) to monitor Code Quality.√æ√æ| [Overall Maintainability](https://sonarcloud.io/documentation/user-guide/metric-definitions/#maintainability) | ""Code Smells"" | ""Technical Debt"" | Test Coverage |√æ| ---- | ---- | ---- | ---- |√æ| [![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=TheBusyBiscuit_Slimefun4&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=TheBusyBiscuit_Slimefun4) | [![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=TheBusyBiscuit_Slimefun4&metric=code_smells)](https://sonarcloud.io/dashboard?id=TheBusyBiscuit_Slimefun4) | [![Technical Debt](https://sonarcloud.io/api/project_badges/measure?project=TheBusyBiscuit_Slimefun4&metric=sqale_index)](https://sonarcloud.io/dashboard?id=TheBusyBiscuit_Slimefun4) | [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=TheBusyBiscuit_Slimefun4&metric=coverage)](https://sonarcloud.io/dashboard?id=TheBusyBiscuit_Slimefun4) |√æ√æ##### ""Code Smells""√æCode Smells are portions of the source code that are confusing, lack documentation or are just done very badly in general. These code smells should be held to a bare minimum.√æ√æ_Please contact us on [Discord](#discord) before working on any code smells. Some design patterns may not be changed abruptly because an addon might depend on them._√æ√æ##### ""Technical Debt""√æTechnical Debt is basically an estimate for how long it would take to fix all issues and code smells.√æ√æ##### Test Coverage√æSlimefun now also uses Automated Tests to determine whether an update could break something. The coverage shows how much these tests cover. Higher coverage means less breaking changes and as a result also better and more reliable builds.√æDue to this being a very huge project though, getting to `100% coverage` is probably close to impossible. But increasing that number even slightly still helps. So feel free to write Unit Tests for Slimefun and place them in the [/src/test/java/](https://github.com/TheBusyBiscuit/Slimefun4/tree/master/src/test/java) folder.√æ√æ## Disclaimers√æSlimefun4 uses various systems that collect usage information or download automatic updates as well as the latest information about the project.√æWe do not collect any personal information from you but there are some services that may gather or download some form of data.√æ√æYou can opt-out of the Auto-Updater and stats collection at any time.√æ√æ<details>√æ  <summary>Automatic updates</summary>√æ  √æSlimefun4 uses an Auto-Updater which connects to https://thebusybiscuit.github.io/builds/ to check for and download updates.<br>√æThis behaviour is enabled by default but can be turned off under `/plugins/Slimefun/config.yml`.<br>√æWe highly recommend you to keep this on at any time though, as you could be missing out on important patches.√æ</details>√æ√æ<details>√æ  <summary>Metrics and Statistics</summary>√æ  √æSlimefun4 uses [bStats](https://bstats.org/plugin/bukkit/Slimefun/4574) to collect anonymous information about the usage of this plugin.<br>√æThis is solely for statistical purposes, as we are interested in how Servers/Players use this plugin.<br>√æAll available data is anonymous and aggregated, at no point can we see individual server or player information.<br>√æAll of the collected data is publicly accessible: https://bstats.org/plugin/bukkit/Slimefun/4574√æ√æYou can also disable this behaviour under `/plugins/bStats/config.yml`.<br>√æFor more info see [bStats' Privacy Policy](https://bstats.org/privacy-policy)√æ</details>√æ√æ<details>√æ  <summary>GitHub Integration</summary>√æ  √æLastly, Slimefun4 connects to https://api.github.com/ to gather information about this open-source project.<br>√æNo information about you or your Minecraft Server is sent to GitHub.√æ√æThis information includes (but is not limited to)√æ* list of contributors, their username and profile link (from the repositories `TheBusyBiscuit/Slimefun4`, `Slimefun/Slimefun-Wiki` and `Slimefun/Resourcepack`)√æ* amount of open issues in this repository√æ* amount of pending pull requests in this repository√æ* amount of stars in this repository√æ* amount of forks of this repository√æ* amount of code-bytes in this repository√æ* date of the last commit to this repository√æ</details>√æ√æAdditionally the plugin connects to https://mojang.com/ to retrieve the Minecraft skins of our contributors (if possible).<br>√æNote that Slimefun is not associated with `Mojang Studios` or Minecraft."
reaktivity/nukleus-sse.spec,404,0,2,6,Organization,False,Server-Sent Events Nukleus Specification,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 5, 'yml': 1, 'md': 1, 'cmd': 1, 'xml': 1}",410,3,47,6,0,1299,True,0,0,0,0,0,14,0,3,9,0,3,17,590,393,1,0,47,0,,,# Server-Sent Events Nukleus Specification√æ√æ[![Build Status][build-status-image]][build-status]√æ[![Code Coverage][code-coverage-image]][code-coverage]√æ√æ[Server-Sent Events specification](https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events)√æ√æAlso support for setting the initial value of `Last-Event-ID` via `lastEventId` query parameter. √æAlso support for adding new field for timestamp with `accept:text/event-stream;ext=timestamp` and `content-type:text/event-stream;ext=timestamp`√æ√æ```√ædata:example\n√ætimestamp:0x1619fe172c7\n√æ\n√æ```√æ√æ#### Build√æ```bash√æ./mvnw clean install√æ```√æ#### Build on Windows√æ```bash√æmvnw.cmd clean install√æ```√æ√æ[build-status-image]: https://travis-ci.com/reaktivity/nukleus-sse.spec.svg?branch=develop√æ[build-status]: https://travis-ci.com/reaktivity/nukleus-sse.spec√æ[code-coverage-image]: https://codecov.io/gh/reaktivity/nukleus-sse.spec/branch/develop/graph/badge.svg√æ[code-coverage]: https://codecov.io/gh/reaktivity/nukleus-sse.spec
i-BP/boem,247,3,4,4,Organization,False,Builder Of Emf Models,https://i-bp.github.io/boem/,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",11,Java,"{'': 3, 'yml': 1, 'md': 1, 'sh': 1}",34,1,0,2,4,1099,True,2,5,0,1,0,12,0,0,8,0,0,0,0,0,0,0,1,0,,,"# BOEM√æ√æ_**B**uilder **O**f **E**MF **M**odels_ √æ√æThe aim of the BOEM library is to provide an API that eases the creation of EMF Model using XTend syntax. Using such syntax helps to:√æ * Speed up the creation of tests√æ * Improve the readability of the tests√æ * Improve maintainability when the tested metamodel changes√æ * Ease the creation of inter-connected models√æ√æIt has been created and used in industrial project to ease the creation input for JUnit tests on the metamodel and business rules.√æ√æ## Installation√æ√æInstall the feature BOEM Feature (fr.ibp.odv.boem.feature) from one of the following update sites:√æ√æ[1.0.0 Nightly Update Site](https://dl.bintray.com/i-bp/boem/)√æ√æ## Usage√æ√æ### How to start√æCreate a BOEM factory√æ√æ```xtend√æextension BoemFactory factory = new BoemFactory(YourMM.eINSTANCE)√æ```√æ√æ_Use the keyword extension in order to use all public methods from the BOEM factory anywhere in your class_√æ√æImport static APIs√æ√æ```xtend√æimport static extension fr.ibp.odv.boem.lib.Boems.*√æ```√æ√æ### Examples√æAll the examples use the following metamodel:√æ![BOEM Test Metamodel](docs/img/BoemTestMM.jpg)√æ√æ#### How to create an element√æ```xtend√æ// Simple creation√æval model = A.build [√æ  name = ""AName""√æ].buildTree√æ```√æ√æ√æ#### How to add children√æ```xtend√æval model = A.build [√æ  name = ""AName"";√æ√æ  // Single valued containment feature√æ  childNodeA = Node.build [√æ    name = ""SingleChildName""√æ  ]√æ√æ  // Adds one child√æ  childrenNodeA += Node.build [√æ    name = ""ANodeName0""√æ  ]√æ√æ  // Adds several children at once√æ  childrenNodeA += #[√æ    Node.build [√æ      name = ""ANodeName1""√æ    ],√æ    Node.build [√æ      name = ""ANodeName2""√æ    ]√æ  ]√æ].buildTree√æ```√æ√æ#### How to add pointers to created objects√æ√æ```xtend√æval model = B.build [√æ  name = ""AName""√æ√æ  // Adds one child with reference√æ    childrenNodeA += ""id0"" >> Node.build [√æ      name = ""ANodeName0""√æ  ]√æ  // Adds several children at once with references√æ  childrenNodeA += #[√æ    ""id1"" >> Node.build [√æ      name = ""ANodeName1""√æ    ],√æ    ""id2"" >> Node.build [√æ      name = ""ANodeName2""√æ    ]√æ  ]√æ√æ  // Adds several children at once with references√æ  childrenNodeB += #[√æ    ""id3"" >> Node.build [√æ      name = ""ANodeName3""√æ    ],√æ    ""id4"" >> Node.build [√æ      name = ""ANodeName4""√æ    ]√æ  ]√æ].buildTree√æ√æ// Accessing node√æassertEquals(""ANodeName0"", model.access(Node, ""id0"").name)√æassertEquals(""ANodeName1"", model.access(Node, ""id1"").name)√æassertEquals(""ANodeName2"", model.access(Node, ""id2"").name)√æ√æassertEquals(2, model.root.childrenNodeB.size)√æassertEquals(""ANodeName3"", model.access(Node, ""id3"").name)√æassertEquals(""ANodeName4"", model.access(Node, ""id4"").name)√æ```√æ√æYou can even register an id provider against the BoemFactory. It will compute an id for each element (at build time) using your rules. For example:√æ √æ```xtend√æextension BoemFactory factory = new BoemFactory(BoemTestPackage.eINSTANCE).registerIdProvider([√æ  if (it instanceof NamedElement) {√æ    return it.name√æ  }√æ  return null√æ])√æ√æ//...√æ√æval model = B.build [√æ  name = ""AName""√æ  // Adds one child with reference√æ  childrenNodeA += Node.build [√æ    name = ""ANodeName0""√æ  ]√æ  // Adds several children at once with references√æ  childrenNodeA += #[√æ    Node.build [√æ      name = ""ANodeName1""√æ    ],√æ    Node.build [√æ      name = ""ANodeName2""√æ    ]√æ  ]√æ√æ  // Adds several children at once with references√æ  childrenNodeB += #[√æ    Node.build [√æ      name = ""ANodeName3""√æ    ],√æ    Node.build [√æ      name = ""ANodeName4""√æ    ]√æ  ]√æ].buildTree√æ√æ// Accessing node√æassertEquals(""ANodeName0"", model.access(Node, ""ANodeName0"").name)√æassertEquals(""ANodeName1"", model.access(Node, ""ANodeName1"").name)√æassertEquals(""ANodeName2"", model.access(Node, ""ANodeName2"").name)√æ√æassertEquals(2, model.root.childrenNodeB.size)√æassertEquals(""ANodeName3"", model.access(Node, ""ANodeName3"").name)√æassertEquals(""ANodeName4"", model.access(Node, ""ANodeName4"").name)√æ```√æ√æYou can also use a shorter syntax to access your elements√æ√æ```xtend√æval model = A.build [√æ  name = ""AName""√æ  childrenNodeA += ""id1"" >> Node.build [√æ    name = ""ANode""√æ  ]√æ].buildTree√æ√æval target = model.access(Node, ""id1"");√æval target2 = (""id1"" => model) as Node√æassertTrue(target2 == target)√æval target3 = model.access(""id1"")√æassertTrue(target3 == target)√æassertTrue(target == ""id1"" => model)√æ```√æ√æ#### How to create references√æ```xtend√æval it = A.build [√æ  name = ""AName""√æ  autoContainementA += ""id0"" >> B.build [√æ    referenceNodeA = Node.buildRef(""id1"")√æ  ]√æ  childrenNodeA += ""id1"" >> Node.build [√æ    name = ""ANode""√æ  ]√æ].buildTree√æ```√æ√æor with a shorter syntax√æ√æ```xtend√æval it = A.build [√æ  name = ""AName""√æ  autoContainementA += ""id0"" >> B.build [√æ    referenceNodeA = Node << ""id1""√æ  ]√æ  childrenNodeA += ""id1"" >> Node.build [√æ    name = ""ANode""√æ  ]√æ].buildTree√æ```√æ√æ#### How to update an element√æ```xtend√æval model = A.build [√æ  autoContainementA += ""B"" >> B.build [√æ    autoContainementA += ""D"" >> C.build√æ  ]√æ].buildTree√æ√æassertEquals(null, model.root.name)√æassertEquals(null, model.access(NamedElement, ""B"").name)√æassertEquals(null, model.access(A, ""C"").name)√æ√æmodel.update [√æ  name = ""NameA""√æ  autoContainementA.get(0).with [√æ    name = ""NameB""√æ    autoContainementA.get(0).with [√æ      name = ""NameD""√æ    ]√æ  ]√æ]√æ√æassertEquals(""NameA"", model.root.name)√æassertEquals(""NameB"", model.access(B, ""B"").name)√æassertEquals(""NameC"", model.access(C, ""C"").name)√æ√æmodel.access(B, ""B"").name = ""NameB2""√æmodel.access(C, ""C"").name = ""NameB2""√æ√æassertEquals(""NameB2"", model.access(B, ""B"").name)√æassertEquals(""NameC2"", model.access(C, ""C"").name)√æ```√æ√æ## Presentations√æ√æ* [Eclipse Con France 2018](https://adaussy.github.io/boem-eclipseconfrancefrance2018/#/)√æ√æ## Contributing√æ1. Fork it!√æ2. Create your feature branch: `git checkout -b my-new-feature`√æ3. Commit your changes: `git commit -am 'Add some feature'`√æ4. Push to the branch: `git push origin my-new-feature`√æ5. Submit a pull request :smiley:√æ√æ## License√æ[Eclipse Public License - v 1.0](https://www.eclipse.org/legal/epl-v10.html)  √æ[Contribution guidelines for this project](docs/CONTRIBUTING.md)"
hackingwu/EasySpring,37,2,1,2,User,False,‰ΩøÁî®SpringÊõ¥Âø´Êõ¥Â•ΩÂú∞Êê≠Âª∫RestfulÈ£éÊ†ºÁöÑwebÂ∫îÁî®,,,3,Java,"{'md': 1, 'xml': 1}",16,1,0,1,0,1771,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,32,,17,,# EasySpring√æ1. Êèê‰æõ‰∏Ä‰∏™Âø´ÈÄüÊê≠Âª∫SpringMVCÁöÑÊ°ÜÊû∂√æ2. ÂÆûÁé∞oDataÂçèËÆÆÔºå‰ΩøÁî®RestfulÈ£éÊ†ºÂú®Url params ÂÆûÁé∞Êü•ËØ¢ÈÄªËæë√æ3. ‰ΩøÁî®RedisÂÆûÁé∞GuavaÁöÑLoadingCacheÊé•Âè£ÔºåËß£ÂÜ≥ÂÜÖÂ≠òÁºìÂ≠òÂú®Â§öÊú∫‰∏ãÁöÑÈóÆÈ¢ò√æ4. ‰ΩøÁî®ÈÖçÁΩÆËÆ∞ÂΩïÊìç‰ΩúÊó•ÂøóÔºå‰∏ÄÂ§ÑÈÖçÁΩÆÔºåËÆ∞ÂΩïÊâÄÊúâ„ÄÇ
CSC131Fall2018/Group3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
mkulesh/molecularDynamics,37086,3,2,2,User,False,Classical molecular dynamics method on Android combined with HD live wallpaper,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",11,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1}",54,1,6,2,3,1037,True,0,5,0,0,0,1,0,0,7,0,1,2,11,19,0,0,10,,17,,"# <img src=""https://github.com/mkulesh/molecularDynamics/blob/master/images/ic_launcher.png"" align=""center"" height=""48"" width=""48""> ""Molecular Dynamics - Classical molecular dynamics method combined with HD live wallpaper""√æ√æMMD is a classical molecular dynamics code implemented as an App for Android. MMD is acronym for Method of Molecular Dynamics, which is a computer simulation of particles (atoms, molecules) motion. This simulation is done with respect to the given initial and boundary conditions and a potential that describes the particle interaction.√æ√æThe trajectories of the particles are determined numerically. The well known Velocity Verlet integration of Newton's equation of motions is used for a system of interacting particles. Forces between particles are defined analytically using a ""pair potential function"" that depends on the distance between two particles.√æ√æIn physics, MMD is used to examine the dynamics of atomic-level phenomena that cannot be observed directly. Within the mobile devices context, it can be used as a small mobile laboratory to understand the basics of the particle physics. Furthermore it can be used to produce nice dynamical pictures that are suitable as a live wallpaper.√æ![main view](https://github.com/mkulesh/molecularDynamics/blob/master/images/main_view_hor.png)√æ√æ<a href='https://play.google.com/store/apps/details?id=com.mkulesh.mmd&hl=en'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' width=323 height=125/></a>√æ√æ## Application features:√æ- The application can be set as a live wallpaper that visualizes the current experimental set up.√æ- In the live wallpaper mode, the active ‚Äústatic‚Äù wallpaper can be used as a background. You can mix your favorite background picture with particles ‚Äúflying‚Äù in front of it.√æ- The changes made in main application will be applied to live wallpaper daemon to make the wallpaper tuning easier.√æ- Generation of an initial structure of the particles use diagonal or square grids with given dimension√æ- Possibility to select a boundary condition (full energy is constant, kinetic energy is constant, or no constraints)√æ- If kinetic energy is constrained, it is possible to apply ‚Äúthermal change‚Äù that simulates heating/cooling of the system√æ- Possibility to change the gravity value. The gravity vector can be also changed by rotating of the device.√æ- Possibility to select and visualize selected potential. Currently, three common potentials are available: Lennard-Jones, Morse and Born-Mayer.√æ- The particle skin can be selected from build-in clip art.√æ- Multi-touch interface is used to zoom and drag the experimental area.√æ√æNote: since the application implements a numerical integration method, it generates a significant CPU load. Therefore, the live wallpaper mode is not suitable for low-power devices.√æ√æ## Languages√æ* English√æ* Russian√æ* Brazilian Portuguese√æ√æ## License√æThis software is published under the *GNU General Public License, Version 3*√æ√æCopyright (C) 2014-2017 Mikhail Kulesh√æ√æThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.√æ√æThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.√æ√æIf not, see [www.gnu.org/licenses](http://www.gnu.org/licenses).√æ√æ## Dependencies√æ√æThis App depends or includes the following third-party libraries or code fragments:√æ* [The Android Support v7 Library](https://developer.android.com/topic/libraries/support-library/packages.html)√æ* [AndroidSVG Library](https://github.com/BigBadaboom/androidsvg)"
fidusio/zoxweb-core,3139,0,3,2,User,False,,,,5,Java,"{'': 2, 'md': 1, 'xml': 1}",1053,1,0,3,0,1361,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,9,0,10,,2,," zoxweb-core :: Java utility Library√æ==========================================================================√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.zoxweb/zoxweb-core/badge.svg)](http://mvnrepository.com/artifact/org.zoxweb/zoxweb-core)√æ√æ√æ## PROJECT INFORMATION√æ√æProject website: http://www.zoxweb.com/ <br />√æ<br />√æ √æCopyright (C) 2015-2019 http://www.zoxweb.com√æ√æ## LICENSE√æ ZoxWeb.com LLC√æ √æ Licensed under the Apache License Version 2.0 (the ""License"");√æ you may not use this file except in compliance with the License.√æ You may obtain a copy of the License at√æ√æ https://www.apache.org/licenses/LICENSE-2.0√æ  √æ Unless required by applicable law or agreed to in writing, software√æ distributed under the License is distributed on an ""AS IS"" BASIS,√æ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ See the License for the specific language governing permissions and√æ limitations under the License.√æ√æ## RELEASES√æ√æ<ul> Versions√æ<li>2.2.1 2019-05-12√æ<li>2.2.0 2019-05-08√æ<li>2.1.9 2019-03-22√æ<li>2.1.8 2019-02-01 √æ<li>2.1.7 2019-01-26√æ<li>2.1.6 2019-01-14√æ<li>2.1.5 2019-01-04√æ<li>2.1.4 2019-01-02 (defunct)√æ<li>2.1.3 2018-12-02√æ<li>2.1.0 2018-08-19√æ<li>2.0.9 2018-07-04√æ<li>2.0.8 2018-03-17√æ<li>2.0.7 2017-09-03√æ<li>2.0.5 2017-05-09√æ<li>2.0.2 2017-03-16√æ</ul>√æ√æ√æ## KNOWN ISSUES√æ√æ√æ## IN DEVELOPMENT"
The-SourceCode/Advanced-Bukkit-S2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
getsocial-im/getsocial-android-sdk,44915,12,4,6,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 2, 'md': 1}",144,1,106,4,0,1952,True,0,2,0,0,0,0,0,0,7,0,0,0,0,0,0,0,8,0,,,"# GetSocial Android SDK Demo√æ√æThis is the demo application for GetSocial SDK, which you can also find in [Play Store](https://play.google.com/store/apps/details?id=im.getsocial.demo).√æLearn more about the products we build at [getsocial.im](http://getsocial.im).√æ√æ√æ## Running Demo√æ√æProvided demo application will show you GetSocial SDK features effortlessly, no configuration needed.√æ  √æ1. Clone or download the repo:√æ√æ       git clone git@github.com:getsocial-im/getsocial-android-sdk.git√æ       √æ1. Open project from `example/` folder in Android Studio.√æ1. Build the demo.√æ√æIn case of any questions ping us at [support@getsocial.im](mailto:support@getsocial.im).√æ√æ√æ## Fresh Integration of the GetSocial SDK √æ√æFollow the Getting Started guide for Android at: [docs.getsocial.im/guides/getting-started/android/](http://docs.getsocial.im/guides/getting-started/android/).√æ√æGetSocial Android SDK API Reference can be found at: [docs.getsocial.im/reference/android/](http://docs.getsocial.im/reference/android/).√æ√æ## Repo Structure√æ√æ- An example application that showcases all GetSocial features in `example/` folder.√æ- GetSocial Invite Channel plugins in `plugins/` folder. Learn more about Invite Plugins in [docs](http://docs.getsocial.im/guides/smart-invites/channels/setup-android/).√æ√æ√æ## Licence√æ√æExample app and GetSocial Invite Channel plugins are distributed under [Apache 2](https://choosealicense.com/licenses/apache-2.0/) license. GetSocial Android SDK is distributed under the [commercial license](https://www.getsocial.im/legal/)."
yahoojapan/multiple-dimension-spread,2250,28,5,10,Organization,False,Multiple-Dimension-Spread (MDS) is a Schema-less columnar storage format. Provide flexible representation like JSON and efficient reading similar to other columnar storage formats.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 1, 'txt': 1, 'md': 1, 'xml': 1}",374,13,8,7,3,1085,False,,,,,0,95,0,2,7,0,0,0,0,0,0,0,77,21,,,"<!---√æ  Licensed under the Apache License, Version 2.0 (the ""License"");√æ  you may not use this file except in compliance with the License.√æ  You may obtain a copy of the License at√æ√æ   http://www.apache.org/licenses/LICENSE-2.0√æ√æ  Unless required by applicable law or agreed to in writing, software√æ  distributed under the License is distributed on an ""AS IS"" BASIS,√æ  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ  See the License for the specific language governing permissions and√æ  limitations under the License. See accompanying LICENSE file.√æ-->√æ√æ# MDS (acronym of Multiple Dimension Spread)√æ√æ# Introduction√æ## What does this project do?√æMDS (acronym of Multiple Dimension Spread) is a Schema-less columnar storage format.√æProvide flexible representation like JSON and efficient reading√æsimilar to other columnar storage formats.√æ√æ√æ## Why is this project useful?√æThere was a problem that it is too large to compress√æand save the data as it is in the Big Data era.√æFrom the demand for improvement in compression ratio and read performance,√æseveral columnar data formats (for example, Apache ORC and Apache Parquet)√æwere proposed.√æThey achieve the high compression ratio from similar data in column√æand reading performance for grouping data by column when data is used.√æ√æHowever, these data formats are required√æthe data structure in a row (or a record) should be defined√æbefore saving the data.√æIt was necessary to decide how to use it at the time of data storage,√æand it was often a problem that it was difficult to decide√æwhat kind of data to use.√æ√æIn this project, we provide a new columnar format√æwhich does not require the schema at the time of data storage√æwith compression and read performance equal to (or higher in case)√æthan other formats.√æ√æ√æ## Use cases√æ### Data Analysis√æAnalyzing big data requires store data compactly and get data smoothly.√æMDS as a columnar format is useful for this needs.√æ√æ### Data Lake√æData Lake is a data pool that is not required the data structure√æ(as a schema) in the row at the time of data storage.√æAnd stored data can be used with defining its schema at the time of analyzing.√æSee [DataLake](https://en.wikipedia.org/wiki/Data_lake).√æ√æ√æ## How do I get started?√æFirstly, please get MDS related repositories following section named ""How to get source"".√æ√æMDS format can treat data without Hadoop environment.√æHowever, it is useful for big data.√æso, it needs a Hadoop environment for storage and Hive for read to use efficiently.√æ√æWe have a plan to create a docker environment of Hadoop and Hive for test use,√æbut current situation, you need to prepare Hadoop and Hive firstly.√æ√æ### Setup environment√æ- [Apache Hadoop](https://hadoop.apache.org)√æ- [Apache Hive](https://hive.apache.org/)√æ√æ√æ## CLI√æCLI is a Command Line Interface tool for using MDS.√æfollowing tools are provided.√æ√æ* bin/setup.sh # for gathering MDS related jars√æ* bin/mds.sh   # create mds data, and show data√æ√æmds.sh needs some jars, so please create jar files before using.√æ√æ    $ mvn package√æ√æ## How to use√æ### Preparation√æFor preparation, get MDS jars and store then to proper directories.√æ√æ    $ bin/setup.sh # get MDS jars from Maven repository (bin/setup.sh -h for help)√æ√æAnd, put MDS related jars to Hadoop.√æ√æ    $ cp -r jars/mds /tmp/mds_lib√æ    $ hdfs dfs -put -r /tmp/mds_lib /mds_lib√æ√æ### Create MDS formatted file√æconvert JSON data to MDS format.√æ√æ    $ bin/mds.sh create -i src/example/src/main/resources/sample_json.txt -f json -o /tmp/sample.mds√æ    $ bin/mds.sh cat -i /tmp/sample.mds -o '-' # show whole data√æ    {""summary"":{""total_price"":550,""total_weight"":412},""number"":5,""price"":110,""name"":""apple"",""class"":""fruits""}√æ    {""summary"":{""total_price"":800,""total_weight"":600},""number"":10,""price"":80,""name"":""orange"",""class"":""fruits""}√æ    $ bin/mds.sh cat -i /tmp/sample.mds -o '-' -p '[ [""name""] ]' # show part of data√æ    {""name"":""apple""}√æ    {""name"":""orange""}√æ√æ### Copy MDS file to HDFS environment√æCopy MDS file to HDFS environment.√æ√æ    $ hdfs dfs -mkdir -p /tmp/ss√æ    $ hdfs dfs -put /tmp/sample.mds /tmp/ss/sample.mds√æ√æ### Read MDS file using Hive√æEnter Hive and add jar files to use MDS format.√æ√æ    $ hive -i jars/mds/add_jar.hql√æ    > create database test;√æ    > use test;√æ    > create external table sample_json (√æ        summary struct<total_price: bigint, total_weight: bigint>,√æ        number bigint,√æ        price bigint,√æ        name string,√æ        class string√æ      )√æ      ROW FORMAT SERDE√æ        'jp.co.yahoo.dataplatform.mds.hadoop.hive.MDSSerde'√æ      STORED AS INPUTFORMAT√æ        'jp.co.yahoo.dataplatform.mds.hadoop.hive.io.MDSHiveLineInputFormat'√æ      OUTPUTFORMAT√æ        'jp.co.yahoo.dataplatform.mds.hadoop.hive.io.MDSHiveParserOutputFormat'√æ      location '/tmp/ss';√æ    > select * from sample_json;√æ    {""total_price"":550,""total_weight"":412}  5 110 apple fruits√æ    {""total_price"":800,""total_weight"":600}  10  80  orange  fruits√æ√æSee [document Hive](docs/getting_started_hive.md) for further detail to use.√æ√æ√æ## Where can I get more help, if I need it?√æSupport and discussion of MDS are on the Mailing list.√æPlease refer the following subsection named ""How to contribute"".√æ√æWe plan to support and discussion of MDS on the Mailing list.√æHowever, please contact us via GitHub until ML is opened.√æ√æ# How to contribute√æWe welcome to join this project widely.√æ√æ## Document√æSee [document MDS](docs/develop/developing_mds.md)√æ√æ## License√æThis project is on the [Apache License](https://www.apache.org/licenses/LICENSE-2.0).√æPlease treat this project under this license.√æ√æ## Mailing list√æUser support and discussion of MDS development are on the following Mailing list.√æPlease send a blank e-mail to the following address.√æ√æ* subscribe: open_mds+subscribe@googlegroups.com√æ* unsubscribe: open_mds+unsubscribe@googlegroups.com√æ√æ[Archive](https://groups.google.com/forum/#!forum/open_mds) is useful for what was communicated at this project.√æ√æ## for Developer√æPlease accept [Contributer licence agreement](https://gist.github.com/ydnjp/3095832f100d5c3d2592)√æwhen participating as a developer.√æ√æWe invite you to [JIRA](https://multiple-dimension-spread.atlassian.net/projects/MDS) as a bug tracking,√æwhen you mentioned in the above Mailing list.√æ√æ√æ## System requirement√æFollowing environments are required.√æ√æ* Mac OS X or Linux√æ* Java 8 Update 92 or higher (8u92+), 64-bit√æ* Maven 3.3.9 or later (for building)√æ* Hadoop 2.7.3 or later√æ* Hive 2.0 or later (for reading data)√æ√æ√æ# How to get the source√æMDS library constructs jar files on following modules.√æ√æ* multiple-dimension-spread√æ* dataplatform-config√æ* dataplatform-schema-lib√æ√æ√æ## GitHub√æMDS sources are there.√æ√æ* [multiple-dimension-spread](https://github.com/yahoojapan/multiple-dimension-spread.git)√æ* [dataplatform-config](https://github.com/yahoojapan/dataplatform-schema-lib.git)√æ* [dataplatform-schema-lib](https://github.com/yahoojapan/dataplatform-schema-lib)√æ√æ### Preparement√æInstall gpg and create a gpg key for maven plugin to use git clone.√æ√æ    gpg --gen-key√æ    gpg --list-keys√æ√æAdd following gpg setting to maven-local-repository-home/conf/settings.xml .√æUsually, maven-local-repository-home is $HOME/.m2 .√æ√æ    </profiles>√æ      <profile>√æ        <id>sign</id>√æ        <activation>√æ            <activeByDefault>true</activeByDefault>√æ        </activation>√æ        <properties>√æ            <gpg.passphrase>***YOUR-PASSPHRASE***</gpg.passphrase>√æ        </properties>√æ      </profile>√æ    </profiles>√æ√æ## Maven√æMDS sources can get from the Maven repository.√æ√æ### multiple-dimension-spread√æ√æ* [multiple-dimension-spread-arrow](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.mds/multiple-dimension-spread-arrow)√æ* [multiple-dimension-spread-common](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.mds/multiple-dimension-spread-common)√æ* [multiple-dimension-spread-hadoop](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.mds/multiple-dimension-spread-hadoop)√æ* [multiple-dimension-spread-hive](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.mds/multiple-dimension-spread-hive)√æ* [multiple-dimension-spread-schema](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.mds/multiple-dimension-spread-schema)√æ√æ√æ### dataplatform-config√æ* [dataplatform-common-config](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.config)√æ√æ### dataplatform-schema-lib√æ√æ* [schema-common](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.schema/schema-common)√æ* [schema-hive](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.schema/schema-hive)√æ* [schema-jackson](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.schema/schema-jackson)√æ* [schema-orc](https://mvnrepository.com/artifact/jp.co.yahoo.dataplatform.schema/schema-orc)√æ√æ√æ## Compile sources√æCompile each source following instructions.√æ√æ### multiple-dimension-spread√æ√æ    $ cd /local/mds/home√æ    $ git clone https://github.com/yahoojapan/multiple-dimension-spread.git√æ    $ cd multiple-dimension-spread√æ    $ mvn clean install√æ√æ### dataplatform-schema-lib√æ√æ    $ cd /local/mds/home√æ    $ git clone https://github.com/yahoojapan/dataplatform-schema-lib.git√æ    $ cd dataplatform-schema-lib√æ    $ mvn clean install√æ√æ### dataplatform-config√æ√æ    $ cd /local/mds/home√æ    $ git clone https://github.com/yahoojapan/dataplatform-config.git√æ    $ cd dataplatform-config√æ    $ mvn clean install√æ√æ# Next Reading√æ* [How to use command line tool](docs/to_use/cli.md)√æ* [How to use Java](docs/to_use/java.md)√æ* [How to use Hive](docs/getting_started_hive.md)√æ√æ# MISC√æ## Change Logs√æ## FAQ"
JavaEden/OrchidStarter,302,11,2,12,Organization,False,This is a quickstart repo for Orchid to get you up and running as soon as possible. ,,,10,Kotlin,"{'': 2, 'md': 1, 'kts': 2, 'properties': 1, 'bat': 1, 'toml': 1}",44,1,0,2,4,,True,0,4,0,0,0,3,0,0,7,0,1,3,144,41,0,0,3,0,,orchidhq/OrchidStarter,"This is a quickstart repo for Orchid to get you up and running as soon as possible. The only system dependency √ænecessary to run Orchid is a valid Java 8 JDK and git. √æ√æ```bash√ægit clone https://github.com/orchidhq/OrchidStarter.git√æcd OrchidStarter√æ./gradlew orchidServe√æ√æ# View your generated site at http://localhost:8080/√æ```√æ√æAlternatively, you can click the button below to automatically clone this repo and deploy it to Netlify. This starter √ærepo includes the [Netlify CMS](https://www.netlifycms.org/), so you will be up and publishing content as soon as √æpossible. You will need to set the Github user/repo in `src/orchid/resources/config/netlifyCms.yml`, but the rest of the √æCMS config is automatically generated based on your current Orchid plugins and configurations.  √æ√æ[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/JavaEden/OrchidStarter)√æ√æ### Example Orchid Sites√æ√æ* [Official Orchid documentation](https://orchid.netlify.com/)√æ* [caseyjbrooks.com](https://www.caseyjbrooks.com/)√æ* [pebbletemplates.io](https://pebbletemplates.io/)√æ* [strikt.io](https://strikt.io/)√æ* [Krow documentation](https://copper-leaf.github.io/krow/)√æ* [Trellis documentation](https://copper-leaf.github.io/trellis/)√æ* [Clog documentation](https://javaeden.github.io/Clog/)"
jetty-project/jetty-reactive-httpclient,131,46,14,4,Organization,False,Jetty ReactiveStreams HttpClient,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",8,Java,"{'': 3, 'md': 2, 'txt': 1, 'xml': 1}",93,1,12,3,0,1042,True,1,16,0,1,0,4,0,0,7,0,1,16,81,58,262,0,121,8,,,"# Jetty ReactiveStream HttpClient√æ√æA [ReactiveStreams](http://www.reactive-streams.org/) wrapper around √æ[Jetty](https://eclipse.org/jetty)'s √æ[HttpClient](http://www.eclipse.org/jetty/documentation/current/http-client.html).√æ√æ### Usage√æ√æ#### Plain ReactiveStreams Usage√æ√æ```java√æ// Create and start Jetty's HttpClient.√æHttpClient httpClient = new HttpClient();√æclient.start();√æ√æ// Create a request using the HttpClient APIs.√æRequest request = httpClient.newRequest(""http://localhost:8080/path"");√æ√æ// Wrap the request using the API provided by this project.√æReactiveRequest reactiveRequest = ReactiveRequest.newBuilder(request).build();√æ√æ// Obtain a ReactiveStream Publisher for the response, discarding the response content.√æPublisher<ReactiveResponse> publisher = reactiveRequest.response(ReactiveResponse.Content.discard());√æ√æ// Subscribe to the Publisher to send the request.√æpublisher.subscribe(new Subscriber<ReactiveResponse>() {√æ    @Override√æ    public void onSubscribe(Subscription subscription) {√æ        // This is where the request is actually sent.√æ        subscription.request(1);√æ    }√æ√æ    @Override√æ    public void onNext(ReactiveResponse response) {√æ        // Use the response√æ    }√æ√æ    @Override√æ    public void onError(Throwable failure) {√æ    }√æ√æ    @Override√æ    public void onComplete() {√æ    }√æ});√æ```√æ√æ#### RxJava 2 Usage√æ√æ```java√æ// Create and start Jetty's HttpClient.√æHttpClient httpClient = new HttpClient();√æclient.start();√æ√æ// Create a request using the HttpClient APIs.√æRequest request = httpClient.newRequest(""http://localhost:8080/path"");√æ√æ// Wrap the request using the API provided by this project.√æReactiveRequest reactiveRequest = ReactiveRequest.newBuilder(request).build();√æ√æ// Obtain a ReactiveStreams Publisher for the response, discarding the response content.√æPublisher<ReactiveResponse> publisher = reactiveRequest.response(ReactiveResponse.Content.discard());√æ√æ// Wrap the ReactiveStreams Publisher with RxJava.√æint status = Single.fromPublisher(publisher)√æ        .map(ReactiveResponse::getStatus)√æ        .blockingGet();√æ```√æ√æ#### Response Content Processing√æ√æThe response content is processed by passing a `BiFunction` to `ReactiveRequest.response()`.√æ√æThe `BiFunction` takes as parameters the `ReactiveResponse` and a `Publisher` for the response√æcontent, and must return a `Publisher` of items of type `T` that is the result of the response√æcontent processing.√æ√æBuilt-in utility functions can be found in `ReactiveResponse.Content`.√æ√æ##### Example: discarding the response content√æ√æ```java√æPublisher<ReactiveResponse> response = request.response(ReactiveResponse.Content.discard());√æ```√æ√æ##### Example: converting the response content to a String√æ√æ```java√æPublisher<String> string = request.response(ReactiveResponse.Content.asString());√æ```√æ√æAlternatively, you can write your own processing `BiFunction` using any√æReactiveStreams library, such as RxJava 2 (which provides class `Flowable`):√æ√æ##### Example: discarding non 200 OK response content√æ√æ```java√æPublisher<ContentChunk> publisher = reactiveRequest.response((reactiveResponse, contentPublisher) -> {√æ    if (reactiveResponse.getStatus() == HttpStatus.OK_200) {√æ        // Return the response content itself.√æ        return contentPublisher;√æ    } else {√æ        // Discard the response content.√æ        return Flowable.fromPublisher(contentPublisher)√æ                .filter(chunk -> {√æ                    // Tell HttpClient that you are done with this chunk.√æ                    chunk.callback.succeeded();√æ                    // Discard this chunk.√æ                    return false;√æ                });√æ    }√æ});√æ```√æ√æThen the response content (if any) can be further processed:√æ√æ```java√æSingle<Long> contentLength = Flowable.fromPublisher(publisher)√æ        .map(chunk -> {√æ            // Tell HttpClient that you are done with this chunk.√æ            chunk.callback.succeeded();√æ            // Return the number of bytes of this chunk.√æ            return chunk.buffer.remaining();√æ        })√æ        // Sum the bytes of the chunks.√æ        .reduce(0L, Long::sum);√æ```√æ√æ#### Providing Request Content√æ√æRequest content can be provided in a ReactiveStreams way, through the `ReactiveRequest.Content`√æclass, which _is-a_ `Publisher` with the additional specification of the content length√æand the content type.√æBelow you can find an example using the utility methods in `ReactiveRequest.Content`√æto create request content from a String:√æ√æ```java√æHttpClient httpClient = ...;√æ√æString text = ""content"";√æReactiveRequest request = ReactiveRequest.newBuilder(httpClient, ""http://localhost:8080/path"")√æ        .content(ReactiveRequest.Content.fromString(text, ""text/plain"", StandardCharsets.UTF_8))√æ        .build();√æ```√æ√æBelow another example of creating request content from another `Publisher`:√æ√æ```java√æHttpClient httpClient = ...;√æ√æ// The Publisher of request content.√æPublisher<T> publisher = ...;√æ√æ// Transform items of type T into ByteBuffer chunks.√æCharset charset = StandardCharsets.UTF_8;√æFlowable<ContentChunk> chunks = Flowable.fromPublisher(publisher)√æ        .map((T t) -> toJSON(t))√æ        .map((String json) -> json.getBytes(charset))√æ        .map((byte[] bytes) -> ByteBuffer.wrap(bytes))√æ        .map(ContentChunk::new);√æ√æReactiveRequest request = ReactiveRequest.newBuilder(httpClient, ""http://localhost:8080/path"")√æ        .content(ReactiveRequest.Content.fromPublisher(chunks, ""application/json"", charset))√æ        .build();√æ```√æ√æ#### Events√æ√æIf you are interested in the request and/or response events that are emitted√æby the Jetty HttpClient APIs, you can obtain a `Publisher` for request and/or√æresponse events, and subscribe a listener to be notified of the events.√æ√æThe event `Publisher`s are ""hot"" producers and do no buffer events.√æIf you subscribe to an event `Publisher` after the events have started, the √æ`Subscriber` will not be notified of events that already happened, and will√æbe notified of any event that will happen.√æ√æ```java√æHttpClient httpClient = ...;√æ√æReactiveRequest request = ReactiveRequest.newBuilder(httpClient, ""http://localhost:8080/path"").build();√æPublisher<ReactiveRequest.Event> requestEvents = request.requestEvents();√æ√æ// Subscribe to the request events before sending the request.√ærequestEvents.subscribe(new Subscriber<ReactiveRequest.Event>() {√æ    ...√æ});√æ√æ// Send the request.√æReactiveResponse response = Single.fromPublisher(request.response(ReactiveResponse.Content.discard()))√æ        .blockingGet();√æ```"
HbmMods/Hbm-s-Nuclear-Tech-GIT,103510,30,14,14,User,False,,,,5,Java,"{'md': 1, 'gradle': 1, '': 1, 'bat': 1}",479,1,50,6,0,1623,True,1,43,1,13,0,18,0,15,7,0,4,74,712009,620411,0,0,3,,21,,"# Hbm-s-Nuclear-Tech-GIT√æ√æhttps://minecraft.curseforge.com/projects/hbms-nuclear-tech-mod?gameCategorySlug=mc-mods&projectID=235439√æ√æFor a 1.12 fork, check this link: https://github.com/Drillgon200/Hbm-s-Nuclear-Tech-GIT/releases√æ√æ## Installation Instructions√æ√æ### Important note: Forge has since dropped support for 1.7.10, quite a few things are not going to work from the getgo. THIS IS NOT MY FAULT, so please, instead of opening an issue on this repository and making it my problem too, use this handy thing called ""google"" for instructions on how to fix 1.7.10 workspaces. The dependencies are also no longer available on the official forge site, you might have to resort to different versions of the CodeChicken mods, simply change the build.gradle file accordingly and check the code for any errors.√æ√æTired of waiting until the next version comes out? Here is a tutorial on how to compile the very newest version yourself:√æ1. Download minecraft forge 1.7.10 src√æ2. Unpack it somewhere√æ3. Go to the new folder and run `gradlew setupDecompWorkspace` on windows or `./gradlew setupDecompWorkspace` on linux√æ4. Download the source and insert it into `src/main/java/`√æ5. Open build.gradle with a text editor of your choice and write this into the dependencies brackets:√æ```√æcompile files('lib/CodeChickenCore-1.7.10-1.0.4.29-dev.jar')√æcompile files('lib/CodeChickenLib-1.7.10-1.1.3.140-dev.jar')√æcompile files('lib/NotEnoughItems-1.7.10-1.0.3.74-dev.jar')√æ```√æ6. Download these exact versions of NEI and it's core mods, and then create a folder named ""lib"" inside the root of the project (IE wheverer you downloaded forge), and place them inside that folder√æ7. Open up the CMD in the main directory and run `gradlew build` on windows or `./gradlew build` on linux√æ8. Head to `build/libs` and get the jar√æ9. Open the jar with an archieve manager of your choice and insert the mod's asset folder into the jar's main directory√æ10. Due to a *tiny* fuckup on my side (i.e. only using the `/main/java` folder in this repository and omitting `/main/resources`) the code in this repo does not include a `mcmod.info` file *which is mandatory, not including it will cause funny things to happen.* In order to fix this, either insert the file from one of my releases into your jar or write your own file, the most important part is including the `modid` kay-value pair (or at least from what i can tell).√æ11. The jar is now done, ready for use!√æ√æIf you want to do some changes in the code yourself, start here after 6. and continue with 7. once you are done:√æ1) Get the IDE of your choice and prepare the workspace (for eclipse, it's `gradlew eclipse` or `./gradlew eclipse`, then use the eclipse folder as workspace directory in eclipse)√æ2) Meddle with the code, you can run the code in the IDE (eclipse has a convenient green play button)√æ3) Save changes, close the IDE and continue with 7. of the previous list√æ√æ# License√æ√æThis software is licensed under the GNU Public License version 3. In short: This software is free, you may run the software freely, create modified versions, distribute this software and distribute modified versions, as long as the modified software too has a free software license. You win this round, Stallman.√æ√æTERMS AND CONDITIONS√æ0. Definitions.√æ‚ÄúThis License‚Äù refers to version 3 of the GNU General Public License.√æ√æ‚ÄúCopyright‚Äù also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.√æ√æ‚ÄúThe Program‚Äù refers to any copyrightable work licensed under this License. Each licensee is addressed as ‚Äúyou‚Äù. ‚ÄúLicensees‚Äù and ‚Äúrecipients‚Äù may be individuals or organizations.√æ√æTo ‚Äúmodify‚Äù a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a ‚Äúmodified version‚Äù of the earlier work or a work ‚Äúbased on‚Äù the earlier work.√æ√æA ‚Äúcovered work‚Äù means either the unmodified Program or a work based on the Program.√æ√æTo ‚Äúpropagate‚Äù a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.√æ√æTo ‚Äúconvey‚Äù a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.√æ√æAn interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.√æ√æ1. Source Code.√æThe ‚Äúsource code‚Äù for a work means the preferred form of the work for making modifications to it. ‚ÄúObject code‚Äù means any non-source form of a work.√æ√æA ‚ÄúStandard Interface‚Äù means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.√æ√æThe ‚ÄúSystem Libraries‚Äù of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A ‚ÄúMajor Component‚Äù, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.√æ√æThe ‚ÄúCorresponding Source‚Äù for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.√æ√æThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.√æ√æThe Corresponding Source for a work in source code form is that same work.√æ√æ2. Basic Permissions.√æAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.√æ√æYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.√æ√æConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.√æ√æ3. Protecting Users' Legal Rights From Anti-Circumvention Law.√æNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.√æ√æWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.√æ√æ4. Conveying Verbatim Copies.√æYou may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.√æ√æYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.√æ√æ5. Conveying Modified Source Versions.√æYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:√æ√æa) The work must carry prominent notices stating that you modified it, and giving a relevant date.√æb) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to ‚Äúkeep intact all notices‚Äù.√æc) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.√æd) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.√æA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ‚Äúaggregate‚Äù if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.√æ√æ6. Conveying Non-Source Forms.√æYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:√æ√æa) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.√æb) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.√æc) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.√æd) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.√æe) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.√æA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.√æ√æA ‚ÄúUser Product‚Äù is either (1) a ‚Äúconsumer product‚Äù, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, ‚Äúnormally used‚Äù refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.√æ√æ‚ÄúInstallation Information‚Äù for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.√æ√æIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).√æ√æThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.√æ√æCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.√æ√æ7. Additional Terms.√æ‚ÄúAdditional permissions‚Äù are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.√æ√æWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.√æ√æNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:√æ√æa) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or√æb) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or√æc) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or√æd) Limiting the use for publicity purposes of names of licensors or authors of the material; or√æe) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or√æf) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.√æAll other non-permissive additional terms are considered ‚Äúfurther restrictions‚Äù within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.√æ√æIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.√æ√æAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.√æ√æ8. Termination.√æYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).√æ√æHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.√æ√æMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.√æ√æTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.√æ√æ9. Acceptance Not Required for Having Copies.√æYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.√æ√æ10. Automatic Licensing of Downstream Recipients.√æEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.√æ√æAn ‚Äúentity transaction‚Äù is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.√æ√æYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.√æ√æ11. Patents.√æA ‚Äúcontributor‚Äù is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's ‚Äúcontributor version‚Äù.√æ√æA contributor's ‚Äúessential patent claims‚Äù are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, ‚Äúcontrol‚Äù includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.√æ√æEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.√æ√æIn the following three paragraphs, a ‚Äúpatent license‚Äù is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To ‚Äúgrant‚Äù such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.√æ√æIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. ‚ÄúKnowingly relying‚Äù means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.√æ√æIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.√æ√æA patent license is ‚Äúdiscriminatory‚Äù if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.√æ√æNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.√æ√æ12. No Surrender of Others' Freedom.√æIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.√æ√æ13. Use with the GNU Affero General Public License.√æNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.√æ√æ14. Revised Versions of this License.√æThe Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.√æ√æEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License ‚Äúor any later version‚Äù applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.√æ√æIf the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.√æ√æLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.√æ√æ15. Disclaimer of Warranty.√æTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ‚ÄúAS IS‚Äù WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.√æ√æ16. Limitation of Liability.√æIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.√æ√æ17. Interpretation of Sections 15 and 16.√æIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.√æ√æEND OF TERMS AND CONDITIONS"
MesquiteProject/Chromaseq,40008,1,2,2,Organization,False,,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",12,Java,"{'': 4, 'md': 1}",833,7,9,5,0,5190,True,0,0,0,0,0,26,0,4,6,0,1,12,675,307,0,0,16,1,,,Chromaseq√æ=========
RepreZen/KaiZen-OpenApi-Parser,1513,99,8,29,Organization,False,"High-performance Parser, Validator, and Java Object Model for OpenAPI 3.x",,,7,Java,"{'': 1, 'yml': 1, 'md': 3, 'html': 1}",420,14,2,10,17,1182,True,53,77,0,0,5,119,3,1,8,0,0,0,0,0,0,0,24,2,,,"<img src=""https://cdn2.hubspot.net/hubfs/597611/Assets_Swagger/KaiZen%20OpenAPI%20Parser%20Logo%20(medium).png"" height=""50%"" width=""50%"" alt=""KaiZen OpenAPI Parser Logo"" />√æ√æ# KaiZen OpenAPI Parser√æ√æ## Overview ##√æ√æThe KaiZen OpenApi Parser from RepreZen is a Java-based validating√æparser for OpenAPI 3.0 offering full compliance with the√æ[OpenAPI 3.0 Specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md),√æand a highly uniform read/write programming API.√æ[OpenAPI](http://openapis.org), formerly known as the Swagger√æspecification, is the industry-standard format for machine-readable√æREST API descriptions.√æ√æFeature highlights of KaiZen OpenAPI Parser include:√æ* **High Performance** - Informal testing shows a 3x-4x performance√æ  improvement over the current Java Swagger 2.0 parser. This is√æ  largely attributable to a design based on adapting Jackson√æ  `JsonNode` objects, rather than deserializing to internal POJOs.√æ  √æ* **Read/Write API** - All aspects of a model may be interrogated and√æ  modified. We also plan to provide fluent builders for all√æ  model object types. We provide bidirectional navigation throughout the√æ  model, and every object that is a property value of its containing√æ  object (whether as a named field or a map entry) knows its own name.√æ  √æ* **Tolerant Reader** - The parser yields a fully accessible result√æ  from any valid JSON or YAML input - whether or not the input is a√æ  valid OpenAPI specification.√æ  √æ* **Separate validation** - All validation beyond basic√æ  JSON/YAML parsing is performed after the initial parse, and it can√æ  be disabled for speed. Validation goes beyond checking what can be√æ  expressed in JSON Schema, to include all requirements described in√æ  the OpenAPI specification.√æ√æ* **Serialization** - Serialization to JSON or YAML is supported, and√æ  by default, round-tripping will not cause any reordering of model√æ  content.√æ  √æ* **Easy Evolution** - A YAML-based DSL is used to capture most of the√æ  details of the OpenAPI Specification. We use code generation to√æ  create interfaces and implementation classes. Member-level√æ  `@Generated` annotations make it possible to augment the generated√æ  sources with manual code that is preserved during re-generation.√æ  √æ* **Flexible Reference Handling** - All references are detected and√æ  during parsing, including references not technically permitted by√æ  the OpenAPI specification. References are normally traversed √æ  automatically by the API, but full details of references and √æ  their resolution status are also available.√æ  √æ* **Unpolluted API** - Many features of the parser API are not directly√æ  accessible from modeled objects, but are accessed via adapter objects.√æ  This ensures that these features will not collide with generated√æ  methods of the model API, even as new features are added to the√æ  OpenAPI specification in the future.√æ    √æ## Documentation√æ√æThe [Getting Started Guide](GettingStarted.md) shows how to build the √æsoftware locally, and contains a simple sample program that shows how √æto use the parser.√æ√æThe [API Overview](API-Overview.md) describes the APIs presented in√æthe project, including the parser, the serializer, the read/write√æmodel, and the treatment of references.√æ√æ## Who's using KaiZen Parser?√æ√æHere's a starting list of projects that are currently using KaiZen OpenAPI Parser. If you don't see your project here, please open an issue or pull request to add it:√æ√æ| Project Link | Description |√æ| --- | --- | √æ| [Eclipse Vert.x](http://vertx.io/) | Eclipse Vert.x is a tool-kit for building reactive applications on the JVM. | √æ| [Light-rest-4j](https://github.com/networknt/light-rest-4j) | Light-4j RESTful framework for building fast, lightweight microservices on the JVM. | √æ| [RepreZen API Studio](http://reprezen.com/OpenAPI) | RepreZen API Studio is an integrated workbench for API design, documentation and development, built on the Eclipse platform. | √æ√æ√æ## Current State√æ√æ* The parser is currently based on the pre-release [revision 3.0.0-rc0](https://github.com/OAI/OpenAPI-Specification/blob/d232e6d3e1ea4038a533329a82876ae868e9cf13/versions/3.0.md). We are nearly ready with an upgrade to the [3.0.2 draft revision](https://github.com/OAI/OpenAPI-Specification/blob/v3.0.2-dev/versions/3.0.2.md).√æ√æ* The [JsonOverlay Project](https://github.com/RepreZen/JsonOverlay) is a framework for creating parsers and APIs for YAML/JSON based DSLs. It is the backbone of the KaiZen OpenApi Parser. Features that that it provides include:√æ √æ  * Read-Write API for all model objects, based on a YAML document that describes the OpenAPI model structure√æ  * Factories for model objects (used internally, but not currently well exposed to user code; that will change shortly)√æ  * Full handling of all references.√æ  * Serialization, reference inspection, navigation, and numerous other features via its `Overlay` adapter classes.√æ  * Position-aware parser providing URL, line and file number for all parsed objects, available through `Overlay` adapters and used by the KaiZen parser in its validation messages.√æ√æ* Validations are currently all contained within this project, however many routine validations (e.g. validating proper JSON types throughout a model document, checking that required properties are present, etc.) will at some point be moved into the JsonOverlay project.√æ√æ* Most validations are present, but there are a number that are currently missing, and some existing validations still reflect the OpenAPI specification in its pre-release revision 3.0.0-rc0. Work is underway on Issue #26](https://github.com/RepreZen/KaiZen-OpenApi-Parser/issues/26), which should result in a complete and robust implementation of all model validations, updated to the 3.0.2 revision (currently in draft status).√æ√æ* Serialization is available via the `Overlay` adapter's `toJson` method. By default references appear in the serialized output, but an option causes references to be followed and inlined in the output. Recursive references cause serialization to blow up if this option is used.√æ  - A separate component, called ""OpenAPI Normalizer,"" will soon be made available that will provide much greater control over the treatment of references. This is currently a private feature embedded in [RepreZen API Studio](https://www.reprezen.com/). Its primary function is to turn an OpenAPI model spread across multiple files into an equivalent single-file model. Options control which references are inlined, and which are _localized_ as named component objects in the constructed single-file model.√æ  √æ* A handful of high-level tests have been implemented:√æ  - *BigParseTest* parses a large model without validation and checks√æ    that every value node in the input is accessible in the expected√æ    fashion in the resulting model object.√æ  - *ExamplesTest* - Parses and validates all example models currently√æ    in the the `OAI/OpenAPI-Specification` GitHub repo.√æ√æ    Many more tests are required!√æ√æ* Few JavaDocs exist at present, unfortunately. There's an open issue√æ  to correct that.√æ√æ### Packages√æ√æ_Some of these packages are likely to be refactored out into separate√æcomponent Maven projects._√æ√æAll packages are prefixed by `com.reprezen.kaizen`√æ√æ* `oasparser`: Top-level package, directly includes√æ  `OpenApiParser` class and some things related to code generation.√æ  √æ* `oasparser.model3`: Generated model interfaces (generated by JsonOverlay)√æ√æ* `oasparser.ovl3`: Generated model implementation classes (generated by JsonOverlay)√æ√æ* `oasparser.val`: Base classes for validators√æ√æ* `oasparser.val3`: Validators for all OpenAPI objects.√æ√æ* `oasparser.test`: The handful of tests that have been√æ  implemented so far. More needed√æ√æ√æ## License√æKaiZen OpenAPI Parser is provided under the Eclipse Public License (https://www.eclipse.org/legal/epl-v10.html)√æ√æ## Contributing√æ√æWe welcome serious contributors. However, we are at an early and√æfast-changing phase in this project, so we recommend coordinating√æwith us before diving into a juicy bit of coding. This might spare √æyou the frustration of finding that some sweeping low-level change√æhas rendered your efforts unusable.√æ√æIf you would like to work with us, please drop us a line at√æAPI.Community@RepreZen.com, or open a new issue if you have√æa suggestion or want to report a bug or omission.√æ√æ## Resources√æ* Blog Post: [Introducing KaiZen OpenAPI 3.0 Parser: fast, flexible Java parsing & validation](http://www.reprezen.com/blog/kaizen-openapi-3_0-parser-swagger-java-open-source)√æ* [Getting Started Guide](GettingStarted.md)√æ* [API Overview](API-Overview.md)"
bbeny123/KAPJ_rental,350,2,1,3,User,False,"spring mvc 5, spring jpa, spring security, postgresql, hibernate, thymeleaf, bootstrap 4, maven",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",5,Java,"{'': 2, 'md': 1, 'xml': 1}",32,1,0,1,12,768,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,17,,0,,"<b>Completion of following data is required for the proper working:</b><br /><br />√æ<b>config.SpringConfig</b> #getJavaMailSender<br />√æ<i>mailSender.setUsername("""");<br />√æmailSender.setPassword("""");</i><br /><br />√æ<b>util.CaptchaUtil</b> #checkCaptcha<br /> √æ<i>String URL = """";<br />√æString SECRET = """";</i>"
CenterForOpenScience/cas-overlay,3648,15,6,22,Organization,False," Central Authentication Service (CAS) Overlay + OAuth2 Provider, Shibboleth SP, CAS SP",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",19,Java,"{'': 4, 'yml': 1, 'md': 4, 'ipynb': 1, 'xml': 4}",1182,6,124,8,0,1898,True,0,6,0,0,0,179,0,11,7,1,1,36,1464,855,0,0,81,22,,,"# Center for Open Science - CAS Overlay√æ√æ`Master` Build Status: [![Build Status](https://travis-ci.org/CenterForOpenScience/cas-overlay.svg?branch=master)](https://travis-ci.org/CenterForOpenScience/cas-overlay)√æ√æ`Develop` Build Status: [![Build Status](https://travis-ci.org/CenterForOpenScience/cas-overlay.svg?branch=develop)](https://travis-ci.org/CenterForOpenScience/cas-overlay)√æ√æVersioning Scheme:  [![CalVer Scheme](https://img.shields.io/badge/calver-YY.MINOR.MICRO-22bfda.svg)](http://calver.org)√æ√æ## About√æ√æ""Center for Open Science - CAS Overlay"" is often referred to as **CAS** or **OSF CAS**. It is the centralized authentication and authorization system for [the OSF](https://osf.io/) and its services such as [Preprints](https://osf.io/preprints/), [Registries](https://osf.io/registries) and [SHARE](https://share.osf.io/).√æ√æ### Features√æ√æ* OSF Username and Password Login√æ* OSF Username and Verification Key Login√æ* OSF Two-Factor Authentication√æ* OSF Authentication Delegation√æ  * [ORCiD Login with OAuth](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/docs/osf-cas-as-an-oauth-client.md)√æ  * [Institution Login with CAS](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/docs/osf-cas-as-a-cas-client.md)√æ  * [Institution Login with SAML](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/docs/osf-cas-as-a-saml-sp.md)√æ* [OSF OAuth Provider](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/docs/osf-cas-as-an-oauth-server.md)√æ* Login Request Throttling√æ√æ### References√æ√æThe implementation of OSF CAS is based on [Yale/Jasig/Apereo CAS 4.1.x](https://github.com/apereo/cas/tree/4.1.x) using [CAS Overlay Template 4.1.x](https://github.com/apereo/cas-overlay-template/tree/4.1). Official docs from [Apereo CAS](https://www.apereo.org/projects/cas) can be found [here](https://apereo.github.io/cas/4.1.x). Learn more about the CAS protocol [here](https://apereo.github.io/cas/4.1.x/protocol/CAS-Protocol.html) or refer to [the full specification](https://apereo.github.io/cas/4.1.x/protocol/CAS-Protocol-Specification.html).√æ√æ## Running OSF CAS for Development√æ√æ### Java 8√æ√æ* Install Java Development Kit 8 (JDK 1.8) either from [Oracle](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) or [OpenJDK](https://openjdk.java.net/install/). For macOS, it is recommended to use *THE* package manager [Homebrew](https://brew.sh/) with command `brew cask install adoptopenjdk8`.√æ√æ### JCE with Unlimited Strength√æ√æ* Download and install [Unlimited Strength Jurisdiction Policy Files](https://www.oracle.com/java/technologies/jce-all-downloads.html) for Java Cryptography Extension (JCE). [Here](https://www.oracle.com/java/technologies/jce8-downloads.html) is the version for JDK 1.8. Unpack the ZIP file and follow the `README.txt` in the folder to back up existing cryptography policy files and install the new stronger ones.√æ√æ### Apache Maven√æ√æ* See [here](https://maven.apache.org/install.html) for how to install `maven` and [here](https://maven.apache.org/ide.html) for IDE integrations.√æ√æ### A Working OSF√æ√æ* CAS requires a working OSF (more specifically, its database server) running locally. See [Running the OSF For Development](https://github.com/CenterForOpenScience/osf.io/blob/develop/README-docker-compose.md) for how to run OSF locally with `docker-compose`.√æ√æ### Database√æ√æ* CAS requires [Postgres](https://www.postgresql.org/docs/9.6/index.html) as its backend database. Use a port other than `5432` since this default one has already been taken by OSF. Update `database.url`, `database.user` and `database.password` in the [`cas.properties`](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/etc/cas.properties#L141).√æ√æ* CAS also requires read-only access to OSF's database. No extra Postgres setup or CAS configuration is needed when running OSF locally with `docker-compose` as mentioned above. The [default](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/etc/cas.properties#L94) one works as it is.√æ√æ### Run CAS√æ√æ* Refer to the [`Dockerfile`](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/Dockerfile) in the repository for how to run CAS with the [Jetty Maven Plugin](https://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html). Only the `app` and `dev` stages are relevant in this case since the `dist` one is used for production and staging servers. Take a look at the [`.travis.yml`](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/.travis.yml) on how to run unit tests. You can skip `package` and go for `clean` and `install` directly; in addition, toggle the profile `nocheck` to turn unit tests on and off.√æ√æ* TL;DR, here are the commands that you need:√æ√æ    ```bash√æ    # clean and install w/ test√æ    mvn clean install -P !nocheck√æ    # clean and install w/o test√æ    mvn clean install -P nocheck√æ    # start jetty√æ    mvn -pl cas-server-webapp/ jetty:run√æ    ```√æ* With default settings, CAS runs on port `8080` at IP address `192.168.168.167` locally. Change `server.name` here in [`cas.properties`](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/etc/cas.properties#L117) if you want a different IP or port.√æ√æ### A Few Extra Notes√æ√æ* To use the ""Sign in with ORCiD"" feature, create an application at [ORCiD Developer Tools](https://orcid.org/developer-tools) with **Redirect URI** set as `http://192.168.168.167:8080/login`. Alternatively, COS developers can use the credentials provided in https://osf.io/m2hig/wiki/home/. Update `oauth.orcid.client.id` and `oauth.orcid.client.secret` accordingly here in the [`cas.properties`](https://github.com/CenterForOpenScience/cas-overlay/blob/develop/etc/cas.properties#L68). ORCiD login will not work if CAS is run on a different `server.name` without updating 1) OSF `docker-compose` settings and 2) the **Redirect URI** of the ORCiD developer application.√æ√æ* The ""Sign in through institution"" feature is not available for local development. It requires a Shibboleth server sitting in front of CAS handling both SAML 2.0 authentication and TLS.√æ√æ* Installing `java8` with [Homebrew](https://brew.sh/) on macOS (i.e. `brew cask install java8`) [no longer works](https://github.com/ashishb/dotfiles/pull/14) due to [Oracle's new license for Java SE](https://www.oracle.com/downloads/licenses/javase-license1.html). [Here](https://github.com/Homebrew/homebrew-cask-versions/issues/7253) is the discussion. Instead, use the alternative [AdoptOpenJDK](https://adoptopenjdk.net/) and here is the [Tap](https://github.com/AdoptOpenJDK/homebrew-openjdk).√æ√æ* We recommend using an IDE (e.g. [IntelliJ IDEA](https://www.jetbrains.com/idea/), [Eclipse IDE](https://www.eclipse.org/downloads/), etc.) for local development."
Opetushallitus/eperusteet,16990,1,76,2,Organization,False,eOpetussuunnitelmat ja tutkinnot,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 3, 'yml': 1, 'txt': 1, 'md': 2}",4023,257,209,19,1,2411,False,,,,,7,474,3,91,9,0,0,0,0,0,0,0,133,0,,,"# ePerusteet √æ√æOpetushallituksen ePerusteet-palvelu tutkintojen ja yleissivist√§v√§n koulutuksen opetussuunnitelmien perusteiden laadintaan ja julkaisuun.√æ√æ[![Build Status](https://travis-ci.org/Opetushallitus/eperusteet.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet)√æ√æ√æ## Palvelukortti√æ<https://confluence.csc.fi/display/oppija/ePerusteet>√æ√æ## Kehitysymp√§rist√∂n vaatimukset√æ√æ- JDK 8√æ- Maven 3√æ- [k√§ytt√§j√§kohtaisien asetuksien pohjat - dev-settings](/dev-settings.md)√æ- Nodejs sek√§ yo front-end-kehityst√§ varten√æ  - <http://nodejs.org/download/>√æ  - (sudo) npm -g install yo√æ  - Asenna riippupvuudet, jos puuttuvat√æ    - (sudo) npm -g install bower√æ    - (sudo) npm -g install grunt-cli√æ√æRiippuvuuksien takia k√§√§nn√∂saikana tarvitaan p√§√§sy sis√§iseen pakettien hallintaan, koska osa paketeista (l√§hinn√§ build-parent) ei ole julkisissa repoissa.√æ√æAjoaikana riippuu mm. keskitetyst√§ autentikaatiosta (CAS), k√§ytt√§j√§hallinnasta, organisaatiopalvelusta ja koodistosta joihin t√§ytyy olla ajoymp√§rist√∂st√§ p√§√§sy.√æ√æ## Ajaminen paikallisesti√æ√æ### eperusteet-service√æ√æ  #### &nbsp;&nbsp;K√§ynnistys√æ√æ  ```√æ  cd eperusteet/eperusteet-service√æ  mvn tomcat7:run√æ  ```√æ√æ  #### &nbsp;&nbsp;Testaus√æ√æ  ```√æ  cd eperusteet/eperusteet-service√æ  mvn clean install -Poph√æ  ```√æ√æ  #### &nbsp;&nbsp;API-generointi√æ√æ  ```√æ  cd eperusteet/eperusteet-service  √æ  mvn clean compile -Pgenerate-openapi√æ  specfile=""$EPERUSTEET_SERVICE_DIR/target/openapi/eperusteet.spec.json""√æ  npx openapi-generator generate -c ../../generator.config.json -i ""$specfile"" -g typescript-axios√æ  ```√æ√æ### eperusteet-app√æ√æ  #### &nbsp;&nbsp;K√§ynnistys√æ√æ  ```√æ  cd eperusteet/eperusteet-app/yo√æ  npm install√æ  bower install√æ  npm run dev√æ  ```√æ√æ  #### &nbsp;&nbsp;Testaus√æ√æ  ```√æ  cd eperusteet/eperusteet-app/yo√æ  npm run unit√æ  ```√æ√æ### Tietokannat (vaihtoehtoinen)√æ  √æ  #### &nbsp;&nbsp;K√§ynnistys√æ√æ  docker-compose.yml tiedosto talteen ( [k√§ytt√§j√§kohtaisien asetuksien pohjat - dev-settings](/dev-settings.md) )√æ√æ  ```√æ  docker-compose up√æ  ```√æ√æ## ePerusteet-projektit√æ√æ  Projekti | Build status | Maintainability | Test Coverage | Known Vulnerabilities√æ  -------- | ------------ | --------------- | ------------- | ----------------------√æ  [ePerusteet](https://github.com/Opetushallitus/eperusteet) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet)√æ  [ePerusteet-amosaa](https://github.com/Opetushallitus/eperusteet-amosaa) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-amosaa.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-amosaa)√æ  [ePerusteet-ylops](https://github.com/Opetushallitus/eperusteet-ylops) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-ylops.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-ylops)√æ  [ePerusteet-ylops-lukio](https://github.com/Opetushallitus/eperusteet-ylops-lukio) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-ylops-lukio.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-ylops-lukio) | [![Maintainability](https://api.codeclimate.com/v1/badges/eea9e59302df6e343d57/maintainability)](https://codeclimate.com/github/Opetushallitus/eperusteet-ylops-lukio/maintainability) | [![Test Coverage](https://api.codeclimate.com/v1/badges/eea9e59302df6e343d57/test_coverage)](https://codeclimate.com/github/Opetushallitus/eperusteet-ylops-lukio/test_coverage) | [![Known Vulnerabilities](https://snyk.io/test/github/Opetushallitus/eperusteet-ylops-lukio/badge.svg)](https://snyk.io/test/github/Opetushallitus/eperusteet-ylops-lukio)√æ  [ePerusteet-opintopolku](https://github.com/Opetushallitus/eperusteet-opintopolku) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-opintopolku.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-opintopolku) | [![Maintainability](https://api.codeclimate.com/v1/badges/24fc0c3e2b968b432319/maintainability)](https://codeclimate.com/github/Opetushallitus/eperusteet-opintopolku/maintainability) | [![Test Coverage](https://api.codeclimate.com/v1/badges/24fc0c3e2b968b432319/test_coverage)](https://codeclimate.com/github/Opetushallitus/eperusteet-opintopolku/test_coverage)√æ  [ePerusteet-backend-utils](https://github.com/Opetushallitus/eperusteet-backend-utils) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-backend-utils.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-backend-utils)√æ  [ePerusteet-frontend-utils](https://github.com/Opetushallitus/eperusteet-frontend-utils) | [![Build Status](https://travis-ci.org/Opetushallitus/eperusteet-frontend-utils.svg?branch=master)](https://travis-ci.org/Opetushallitus/eperusteet-frontend-utils) | [![Maintainability](https://api.codeclimate.com/v1/badges/f782a4a50622ae34a2bd/maintainability)](https://codeclimate.com/github/Opetushallitus/eperusteet-frontend-utils/maintainability) | [![Test Coverage](https://api.codeclimate.com/v1/badges/f782a4a50622ae34a2bd/test_coverage)](https://codeclimate.com/github/Opetushallitus/eperusteet-frontend-utils/test_coverage)"
odpi/egeria,151003,215,33,108,Organization,False,Open Metadata and Governance,https://egeria.odpi.org,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",41,Java,"{'': 5, 'properties': 1, 'md': 12, 'yaml': 1, 'yml': 1, 'p12': 2, 'xml': 3}",9463,26,11,38,7,753,True,217,1231,93,274,8,1769,8,559,54,3,21,1482,3574681,3412659,0,0,19,7,,,"<!-- SPDX-License-Identifier: CC-BY-4.0 -->√æ<!-- Copyright Contributors to the ODPi Egeria project. -->√æ√æ![Egeria Logo](assets/img/ODPi_Egeria_Logo_color.png)√æ√æ[![GitHub](https://img.shields.io/github/license/odpi/egeria)](LICENSE)√æ[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3044/badge)](https://bestpractices.coreinfrastructure.org/projects/3044)√æ[![Azure](https://dev.azure.com/odpi/egeria/_apis/build/status/odpi.egeria)](https://dev.azure.com/odpi/Egeria/_build)√æ[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=odpi_egeria&metric=alert_status)](https://sonarcloud.io/dashboard?id=odpi_egeria)√æ[![Maven Central](https://img.shields.io/maven-central/v/org.odpi.egeria/egeria)](https://mvnrepository.com/artifact/org.odpi.egeria)√æ√æ√æ# Egeria - Open Metadata and Governance√æ  √æEgeria provides the Apache 2.0 licensed [open metadata and governance](open-metadata-publication/website/README.md)√ætype system, frameworks, APIs, event payloads and interchange protocols to enable tools,√æengines and platforms to exchange metadata in order to get the best√ævalue from data whilst ensuring it is properly governed.√æ√æ## Digging deeper√æ√æSee the [Home Page](index.md) for more information about the project and [ODPi Egeria Site Organization Page](Content-Organization.md)√æfor details on how the content of the project is organized.  In addition,√æthe [release notes](release-notes) show the function that has been√ædelivered in each release and our future plans.√æ√æ## Egeria governance√æ√æThis project aims to operate in a transparent, accessible way for the benefit√æof the ODPi Egeria community.√æAll participation in this project is open and not√æbound to any corporate affiliation.√æ√æTo understand how to join and contribute see the √æ[Community Guide](./Community-Guide.md).√æ√æAll participants are bound the ODPi's [Code of Conduct](https://github.com/odpi/specs/wiki/ODPi-Code-of-Conduct).√æThe governance of the project is described in more detail in the√æ[Egeria Operations Guide](./Egeria-Operations.md).√æ√æ## Call schedule√æ√æThe Egeria team run two calls every Thursday and all are welcome√æ√æ* **Developers call** - one hour - √æ  Discussion on code development - not minuted -√æ  √æ  10 am (UK); 11 am (Amsterdam/CET); 12pm (Bucharest)√æ  √æ  Zoom Conference [https://zoom.us/j/523629111](https://zoom.us/j/523629111)√æ  √æ* **Community call** - one hour - √æ  Demos, meet-ups and other activities going on in the Egeria community√æ  √æ  2pm (UK); 3pm (Amsterdam/CET); 4pm (Bucharest)√æ  √æ  Zoom Conference [https://zoom.us/j/523629111](https://zoom.us/j/523629111)√æ √æ  Meeting Agenda and Minutes are here [https://github.com/odpi/data-governance/wiki](https://github.com/odpi/data-governance/wiki)√æ  √æ√æ## Monthly maintainers face-to-face meetings√æ√æ**Covid-19 update on Face-to-Face meetings**√æ√æThe Egeria face-to-face meetings are currently suspended√æto protect the health and welfare of the Egeria community.√æ√æMinutes of past meetings can be found on the√æ[Egeria GitHub wiki](https://github.com/odpi/egeria/wiki).√æ√æ## Monthly community webinars√æ√æThe Egeria community are running a monthly webinar series√æcovering a variety of topics.√æ√æFollow [this link](https://github.com/odpi/data-governance/tree/master/webinars)√æfor details of the webinar schedule, and links to download√æthe presentations from past webinars.√æ√æ----√æLicense: [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/),√æCopyright Contributors to the ODPi Egeria project."
google/desugar_jdk_libs,906,74,11,10,Organization,False,,,"{'key': 'gpl-2.0', 'name': 'GNU General Public License v2.0', 'spdx_id': 'GPL-2.0', 'url': 'https://api.github.com/licenses/gpl-2.0', 'node_id': 'MDc6TGljZW5zZTg='}",13,Java,"{'': 6, 'md': 3, 'txt': 2}",34,1,0,4,0,826,False,,,,,0,2,0,0,8,0,2,5,18,13,0,0,1,1,,,"# desugar_jdk_libs√æ√æThis project contains a small subset of OpenJDK libraries simplified for use on√æolder runtimes.√æ√æThis is not an official Google product.√æ√æPlease file bugs and feature requests in the [Android Issue Tracker, Dexer (D8)√æcomponent](https://issuetracker.google.com/issues/new?component=317603&template=1018721)√æand include `[library desugar]` in the title."
vert-x3/vertx-mail-client,1593,22,22,25,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'sh': 1, 'xml': 3, 'yml': 1, 'txt': 1, 'adoc': 1}",518,26,47,12,6,1953,True,14,64,2,6,2,69,1,9,16,1,6,26,1882,866,192,0,91,10,,,"== Vert.x mail (SMTP client)√æ√æimage:https://travis-ci.org/vert-x3/vertx-mail-client.svg?branch=master[""Build Status"",link=""https://travis-ci.org/vert-x3/vertx-mail-client""]√æ√æA simple asynchronous SMTP client for Vert.x√æ√æPlease see the main documentation on the web-site for a full description:√æ√æ* https://vertx.io/docs/vertx-mail-client/java/[Java documentation]√æ* https://vertx.io/docs/vertx-mail-client/js/[JavaScript documentation]√æ* https://vertx.io/docs/vertx-mail-client/kotlin/[Kotlin documentation]√æ* https://vertx.io/docs/vertx-mail-client/groovy/[Groovy documentation]√æ* https://vertx.io/docs/vertx-mail-client/ruby/[Ruby documentation]"
gravitee-io/gravitee-common,156,0,8,10,Organization,False,Gravitee Common,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 2, 'adoc': 2, 'txt': 1, 'yml': 1, 'xml': 1}",166,6,39,9,0,1828,False,,,,,2,37,2,7,8,1,5,11,567,20,86,0,121,6,,,"= Gravitee.io Common√æ√æifdef::env-github[]√æimage:https://ci.gravitee.io/buildStatus/icon?job=gravitee-io/gravitee-common/master[""Build status"", link=""https://ci.gravitee.io/job/gravitee-io/job/gravitee-common/""]√æimage:https://badges.gitter.im/Join Chat.svg[""Gitter"", link=""https://gitter.im/gravitee-io/gravitee-io?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge""]√æendif::[]"
bakdata/conquery,22142,22,8,5,Organization,False,"Visual, interactive queries against big databases",https://conquery-dev.herokuapp.com/app/static,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",18,Java,"{'': 3, 'yaml': 1, 'md': 1, 'xml': 2, 'yml': 1, 'config': 1}",4157,50,182,15,3,1076,True,2,137,0,0,40,1053,33,232,13,0,0,0,0,0,0,0,28,2,,,"# Conquery√æ*fast & efficient Analysis*√æ√æ![conquery Screenshot](images/screenshot.png)√æ√æBranch | Travis CI  | Quality | Coverage | Heroku√æ------ | ---------- | ------- | -------- | ------√æmaster  | [![Build Status](https://travis-ci.org/bakdata/conquery.svg?branch=master)](https://travis-ci.org/bakdata/conquery) | [![Codacy Badge](https://api.codacy.com/project/badge/Grade/ec39f307f9e149b185378061cd9b7a5d?branch=master)](https://www.codacy.com/app/bakdata/conquery) | [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/ec39f307f9e149b185378061cd9b7a5d?branch=master)](https://www.codacy.com/app/bakdata/conquery) | [![Heroku](https://heroku-badge.herokuapp.com/?app=conquery&svg=1)](https://conquery.herokuapp.com/) | √ædevelop  | [![Build Status](https://travis-ci.org/bakdata/conquery.svg?branch=develop)](https://travis-ci.org/bakdata/conquery) | [![Codacy Badge](https://api.codacy.com/project/badge/Grade/ec39f307f9e149b185378061cd9b7a5d?branch=develop)](https://www.codacy.com/app/bakdata/conquery) | [![Codacy Badge](https://api.codacy.com/project/badge/Coverage/ec39f307f9e149b185378061cd9b7a5d?branch=develop)](https://www.codacy.com/app/bakdata/conquery) | [![Heroku](https://heroku-badge.herokuapp.com/?app=conquery-dev&svg=1)](https://conquery-dev.herokuapp.com/) |√æ√æConquery provides a powerful web-based platform to compose and execute queries against large event-like data sets.√æ√æEvent data sets typically associate events with a certain subject (i.e. a person or a physical object). One common use case for the data is to identify groups of similar subjects based on the assumption that they share similar events in a given time frame.√æ√æAs a result, Conquery provides a powerful mechanism to group and classify event types in a hierarchical *concept tree* structure. Elements of this tree represent a group of similar subjects and can be intuitively selected and arranged to run queries against the data set.√æ√æ## Starting the demo√æ√æThis repository includes the Conquery frontend along with a non-functional backend. It provides a set of example concept trees to demonstrate the capabilities of the UI: The example's use case is to search for groups of actors who appeared in movies of the same genre or received the same award.√æ√æThe demo can be started using the following commands, provided that node.js (version 8.x LTS) and yarn are already installed:√æ√æ```sh√æcd frontend/√æyarn install√æyarn start√æ```√æ√æ## Acknowledgements√æ√æThis platform was created by [InGef ‚Äì Institut f√ºr angewandte Gesundheitsforschung Berlin GmbH](http://www.ingef.de/) in cooperation with [bakdata GmbH](http://www.bakdata.com). Special thanks go to [Kai Rollmann](https://kairollmann.de/) for a great job directing frontend and design in the first half year of the project.√æ√æ[<img alt=""InGef ‚Äì Institut f√ºr angewandte Gesundheitsforschung Berlin GmbH"" src=""images/ingef_logo.svg"" height=50 align=""top"">](http://www.ingef.de/)√æ&emsp;√æ[<img alt=""bakdata GmbH"" src=""images/bakdata_logo.svg"" height=37 align=""top"">](http://www.bakdata.com)"
olcaytaner/MorphologicalAnalysis,1785,8,6,3,Organization,False,Turkish Morphological Analysis library,,,5,Java,"{'': 2, 'md': 1, 'xml': 1}",122,2,0,5,5,753,True,2,1,1,0,0,1,0,0,9,0,0,0,0,0,11,0,104,0,,StarlangSoftware/TurkishMorphologicalAnalysis,"For Developers√æ============√æ√æYou can also see [Python](https://github.com/starlangsoftware/TurkishMorphologicalAnalysis-Py), [C++](https://github.com/starlangsoftware/TurkishMorphologicalAnalysis-CPP), or [C#](https://github.com/starlangsoftware/TurkishMorphologicalAnalysis-CS) repository.√æ√æ## Requirements√æ√æ* [Java Development Kit 8 or higher](#java), Open JDK or Oracle JDK√æ* [Maven](#maven)√æ* [Git](#git)√æ√æ### Java √æ√æTo check if you have a compatible version of Java installed, use the following command:√æ√æ    java -version√æ    √æIf you don't have a compatible version, you can download either [Oracle JDK](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) or [OpenJDK](https://openjdk.java.net/install/)    √æ√æ### Maven√æTo check if you have Maven installed, use the following command:√æ√æ    mvn --version√æ    √æTo install Maven, you can follow the instructions [here](https://maven.apache.org/install.html).      √æ√æ### Git√æ√æInstall the [latest version of Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).√æ√æ## Download Code√æ√æIn order to work on code, create a fork from GitHub page. √æUse Git for cloning the code to your local or below line for Ubuntu:√æ√æ git clone <your-fork-git-link>√æ√æA directory called MorphologicalAnalysis will be created. Or you can use below link for exploring the code:√æ√æ git clone https://github.com/starlangsoftware/TurkishMorphologicalAnalysis.git√æ√æ## Open project with IntelliJ IDEA√æ√æSteps for opening the cloned project:√æ√æ* Start IDE√æ* Select **File | Open** from main menu√æ* Choose `MorphologicalAnalysis/pom.xml` file√æ* Select open as project option√æ* Couple of seconds, dependencies with Maven will be downloaded. √æ√æ√æ## Compile√æ√æ**From IDE**√æ√æAfter being done with the downloading and Maven indexing, select **Build Project** option from **Build** menu. After compilation process, user can run Morphological Analysis.√æ√æ**From Console**√æ√æGo to `MorphologicalAnalysis` directory and compile with √æ√æ     mvn compile √æ√æ## Generating jar files√æ√æ**From IDE**√æ√æUse `package` of 'Lifecycle' from maven window on the right and from `MorphologicalAnalysis` root module.√æ√æ**From Console**√æ√æUse below line to generate jar file:√æ√æ     mvn install√æ√æ## Maven Usage√æ√æ        <dependency>√æ            <groupId>io.github.starlangsoftware</groupId>√æ            <artifactId>MorphologicalAnalysis</artifactId>√æ            <version>1.0.15</version>√æ        </dependency>"
ksch-workflows/ksch-workflows,1393,5,5,5,Organization,False,A Workflow Management System for the Kirpal Sagar Charitable Hospital,https://ksch-workflows.github.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",24,Java,"{'': 5, 'xml': 1, 'yml': 2, 'md': 3, 'js': 1, 'gradle': 2, 'properties': 1, 'bat': 1, 'json': 1}",112,3,0,3,0,824,True,3,22,2,2,1,77,1,11,12,0,1,6,239,211,0,0,10,0,,,"# K.S.C.H. Workflows√æ√æ[![Build Status](https://travis-ci.com/ksch-workflows/ksch-workflows.svg?branch=master)](https://travis-ci.com/ksch-workflows/ksch-workflows) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2328/badge)](https://bestpractices.coreinfrastructure.org/projects/2328)√æ√æThe [Kirpal Sagar Charitable Hospital](https://kirpal-sagar.org/en/kirpal-charitable-hospital-en/) is a small hospital in [Punjab, India](https://www.google.com/maps/place/Kirpal+Sagar+Hospital/@31.02067,76.0855824,16z/data=!4m8!1m2!2m1!1skirpal+sagar!3m4!1s0x0:0xc422150834d1e3a5!8m2!3d31.0187086!4d76.0890837) where all people receive treatment and then pay what they can afford. It is envisioned to grow up to 500 beds and become part of a Medical College. The purpose of this project is to support that vision.√æ√æ## Software architecture√æ√æ### Values√æ- Robustness: The KSCH staff can trust the software to do the right thing√æ- Simplicity: The KSCH staff can operate the software independently√æ√æ### Technology stack√æ√æThe project is built upon the following technologies:√æ√æ- [Java](https://github.com/ksch-workflows/ksch-workflows/wiki/Java) - the primarily used programming language√æ- [Spring Boot](https://github.com/ksch-workflows/ksch-workflows/wiki/Spring-Boot) - a framework for the development of enterprise applications√æ- [Apache Wicket](https://github.com/ksch-workflows/ksch-workflows/wiki/Apache-Wicket) - connects the HTML web pages with the business logic expressed in Java√æ- [Bootstrap](https://github.com/ksch-workflows/ksch-workflows/wiki/Bootstrap) - provides a comprehensive set of patterns for the layout of the HTML pages√æ- [Gradle](https://github.com/ksch-workflows/ksch-workflows/wiki/Gradle) - used for the compilation of the source code into an executable application  √æ√æ### Repository structure√æ√æThe project is split into modules with the help of [Gradle multi-project builds](https://docs.gradle.org/current/userguide/multi_project_builds.html). Each one of the domain modules consists of two sub-modules, one for the API and one for its implementation. The API defines interfaces for the domain's data objects and services which can be executed on it. The implementation specifies the business logic and persistence details with the help of Spring and other common open-source tools. The User Interface then uses the APIs specified by the various domain modules and composes the hospital workflows.√æ√æWhen a module declares a dependency on another module it can use its API via Spring's dependency injection functionality. However, the module dependencies cannot be bi-directional. If the modules need to interact nevertheless, they can do so by using events and the [publish-subscribe interaction model](https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern) which is facilitated by [Spring Application Events](https://spring.io/blog/2015/02/11/better-application-events-in-spring-framework-4-2).√æ√æ![module structure](infrastructure/doc/architecture/ProjectDependencies.png)√æ√æ## Development√æ√æ### Dependencies√æ√æThe project uses the JDK 11. Here are some hints for the installation of the Java Development Kit:√æ√æ- [Ubuntu](https://github.com/ksch-workflows/ksch-workflows/wiki/Installing-Java-on-Ubuntu)√æ- [Windows](https://github.com/ksch-workflows/ksch-workflows/wiki/Installing-Java-on-Windows)√æ- [MacOS](https://github.com/ksch-workflows/ksch-workflows/wiki/Installing-Java-on-MacOS)√æ√æFor the development environment IntelliJ and Eclipse are supported.√æPlease refer to the following wiki pages for explanations for configuring those IDEs for this project:√æ√æ- [IntelliJ](https://github.com/ksch-workflows/ksch-workflows/wiki/Import-Project-with-IntelliJ)√æ- [Eclipse](https://github.com/ksch-workflows/ksch-workflows/wiki/Import-Project-with-Eclipse)√æ√æ### Starting the application√æ√æThe application can be started for development tests with the following Gradle task:√æ√æ```√æ./gradlew bootRunDev√æ```√æ√æThen it is accessible in the browser under the URL http://localhost:8080 (login: user / pwd).√æ√æThe database can be inspected under this URL: http://localhost:8080/h2-console√æ√æThe following values need to be entered for getting access:√æ√æ| Option | Value |√æ|--------|-------|√æ| Driver Class | org.h2.Driver |√æ| JDBC URL | jdbc:h2:mem:test-db |√æ| User Name | sa |√æ| Password | <empty string> |√æ√æ### Hot reload of Wicket markup√æ√æWhen the application is [started in development mode](https://ci.apache.org/projects/wicket/guide/8.x/single.html#_switching_wicket_to_deployment_mode),√æit is possible to apply changes in Wicket markup files without restarting the application.√æ√æIt doesn't work with the `bootRun` task though. The application needs to be started by running the `main` method in√æthe `KschWorkflowsApplication` class from within the IDE. Then after a build of the project the next page load√æshould render the new data.√æ√æ√æ### Run Java tests√æ√æ```√æ./gradlew test√æ```√æ√æ### Run mutation tests√æ√æWith the help of mutation tests it is possible to improve the quality of the unit√ætests. It works like this that the mutation testing tool injects defects into the√æsource code and then executes the test suite. Afterwards it creates a report about√æthe defects which where caught by the unit tests and which where not. Those√æinstances where the injected defects where not caught are hints about parts of the√æsource code for which better unit tests should be created.√æ√æ```√æ./gradlew clean pitest√æ```√æ√æAfterwards HTML reports are generated for each respective sub-project and can be found in the directory `build/reports/pitest`:√æ√æ```√æfind . -name ""index.html"" | grep --regexp=""pitest/[0-9]*/index\.html""√æ```√æ√æ### Run JavaScript tests√æ√æThe unit tests for the JavaScript files are implemented with the [QUnit](https://api.qunitjs.com/) library.√æThey can be executed by opening the respective `*.test.html` file in a web browser.√æ√æThe build system is doing this automatically in a headless browser (see [.travis.yml](.travis.yml#L6)).√æ√æ√æ## Maintenance√æ√æ### Code Scene analysis√æ√æhttps://codescene.io/projects/5094/jobs/latest-successful/results√æ√æ√æ### SonarCube analysis√æ√æ```√ædocker run -d --name sonarqube -p 9000:9000 sonarqube√æ./gradlew sonarqube -Dsonar.host.url=http://localhost:9000√æ```√æ√æ### Check for updates of dependencies√æ√æ```√æ./gradlew dependencyUpdates -Drevision=release√æ```√æ√æGet an overview over transitive dependencies:√æ√æ```√æ./gradlew dependencyTree√æ```√æ√æ## Deployment√æ√æThe executable JAR file can be compiled with the following Gradle task:√æ√æ```√æ./gradlew clean bootJar√æ```√æ√æAfterwards you can find the JAR file in the following directory:√æ√æ```√æ$ ls user-interface/build/libs√æksch-workflows-0.1.0-SNAPSHOT.jar√æ```√æ√æThe JAR file can then be copied onto the server and started like this:√æ√æ```√æjava -jar ksch-workflows-0.1.0-SNAPSHOT.jar√æ```√æ√æ### Build Docker image√æ√æ```√ædocker build --tag expsoftware/ksch-workflows .√ædocker push expsoftware/ksch-workflows√æ√ædocker run -p 80:8080 expsoftware/ksch-workflows√æ```√æ√æ## Contact information√æ√æIf you have any question or idea, please join this chat room and post it there:√æ√æhttps://gitter.im/ksch-workflows/Lobby√æ√æ√æ## Glossary√æ√æ| Term | Description |√æ|------|-------------|√æ| OPD | Outpatient department. |√æ| IPD | Inpatient department. |√æ| OPD number | Used as visit number which is assigned to each patient who enters the hospital, including IPD patients |√æ√æ## License√æ√æK.S.C.H. Workflows is maintained by [KS-plus e.V.](https://ks-plus.org/en/welcome/),√æa non-profit association dedicated to supporting the [Kirpal Sagar](https://kirpal-sagar.org/en/welcome/) project.√æ√æIt is licensed under the [Apache License Version 2.0](https://github.com/ksch-workflows/ksch-workflows/blob/master/LICENSE).√æ√æ### Third-party licenses√æ√æ- [LOINC 2.66](infrastructure/doc/third-party-licenses/Loinc_2.66_License_3.0.txt)"
iamshouvikmitra/DITU-Lab-Programs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
DescartesResearch/TeaStore,91727,43,6,30,Organization,False,"A micro-service reference test application for model extraction, cloud management, energy efficiency, power prediction, single- and multi-tier auto-scaling",https://se.informatik.uni-wuerzburg.de,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 1, 'xml': 2}",1440,10,14,8,4,1039,True,2,108,0,5,0,42,0,9,9,2,5,121,2684,890,0,0,4,0,,,"# TeaStore #  √æ√æThe TeaStore is a micro-service reference and test application to be used in benchmarks and tests. The TeaStore emulates a basic web store for automatically generated, tea and tea supplies. As it is primarily a test application, it features UI elements for database generation and service resetting in addition to the store itself. √æ√æThe TeaStore is a distributed micro-service application featuring five distinct services plus a registry. Each service may be replicated without limit and deployed on separate devices as desired. Services communicate using REST and using the Netflix [Ribbon](https://github.com/Netflix/ribbon) client side load balancer. Each service also comes in a pre-instrumented variant that uses [Kieker](http://kieker-monitoring.net) to provide detailed information about the TeaStore's actions and behavior.√æ√æCheck out our **[wiki](https://github.com/DescartesResearch/TeaStore/wiki)** with information on how to [get started using/developing the TeaStore](https://github.com/DescartesResearch/TeaStore/wiki/Getting-Started), more information on the architecture and services of the Tea Store, guides on how to [run the TeaStore for benchmarking/testing](https://github.com/DescartesResearch/TeaStore/wiki/Testing-and-Benchmarking), and common [troubleshooting tips](https://github.com/DescartesResearch/TeaStore/wiki/Troubleshooting).√æYou can also watch a short demonstration of the TeaStore running in Kubernetes with its monitoring environment enabled on **[YouTube](https://www.youtube.com/watch?v=6OcSNrErzGE&feature=youtu.be)**.√æ√æ## Cite Us√æ√æThe TeaStore was first published in [Proceedings of the 26th IEEE International Symposium on the Modelling, Analysis, and Simulation of Computer and Telecommunication Systems (MASCOTS2018)](https://ieeexplore.ieee.org/document/8526888). If you use the TeaStore please cite the following publication:√æ√æ    @inproceedings{KiEiScBaGrKo2018-MASCOTS-TeaStore,√æ      author = {J{\'o}akim von Kistowski and Simon Eismann and Norbert Schmitt and Andr{\'e} Bauer and Johannes Grohmann and Samuel Kounev},√æ      title = {{TeaStore: A Micro-Service Reference Application for Benchmarking, Modeling and Resource Management Research}},√æ      booktitle = {Proceedings of the 26th IEEE International Symposium on the Modelling, Analysis, and Simulation of Computer and Telecommunication Systems},√æ      series = {MASCOTS '18},√æ      year = {2018},√æ      month = {September},√æ      location = {Milwaukee, WI, USA},√æ    }√æ√æ√æ## Getting Started√æ√æTo get started, we recommend running the TeaStore in an environment of your choice. We offer three ways of deploying and running the TeaStore:√æ* The easiest way: [Run TeaStore Container(s) using Docker](https://github.com/DescartesResearch/TeaStore/wiki/Getting-Started#run-pet-supply-store-containers-using-docker) (Recommended, we also provide [configs for Kubernetes](https://github.com/DescartesResearch/TeaStore/wiki/Getting-Started#3-run-the-teastore-on-a-kubernetes-cluster))√æ* [Deploy the TeaStore in one or several Java Application Container(s)](https://github.com/DescartesResearch/TeaStore/wiki/Getting-Started#deploy-the-pet-supply-store-in-java-application-containers)√æ* [Setup and run the TeaStore Development Environment](https://github.com/DescartesResearch/TeaStore/wiki/Getting-Started#setup-and-run-the-pet-supply-store-development-environment)"
monowai/flockdata.org,12165,5,2,6,User,False,Build Neo4j and ElasticSearch databases - fast,http://www.flockdata.com,,22,Java,"{'': 1, 'md': 1, 'yml': 1, 'png': 2, 'json': 1, 'xml': 2}",4908,166,9,5,0,2590,True,0,0,0,0,165,8,30,2,8,0,0,0,0,0,0,0,13,,11,,"[FlockData](http://FlockData.com) - Data management framework        √æ===========√æ√æ[![CircleCI](https://circleci.com/gh/monowai/flockdata.org.svg?style=shield)](https://circleci.com/gh/monowai/flockdata.org)√æ√æFlockData lets you visually model your system data and connect it to core business domain concepts in your organisation.√æ√æDesigned as a collection of modularized services, FD tracks and integrates changes to your data happening in core business systems. You can integrate data across systems and enrich it with data from other sources in a controlled manner. √æFD takes a domain driven approach to data normalization which enables users of all levels to engage with your data with minimal friction as data is modeled with the organisation context in mind - Invoice, Customer, Policy etc. The underlying structure is largely irrelevant at this level of abstraction. Full access to the underlying data, using a unified access pattern, allows you to build beautifully rich cross application data solutions. √æ√æFD provides data transformation, information integration and reporting for any data.  Using the power of NoSQL, data is written to Neo4j and ElasticSearch where it can be efficiently and effectively queried in dynamic ways to uncover insights in your data with minimal effort.√æ√æ * Model management standardizes and reduces the effort in integration by modelling conceptual organisational structures from your existing data√æ * Information is integrated between Neo4j - for connected analysis - and ElasticSearch for aggregate analysis.√æ * Reporting structures are captured to provide dynamic reporting capabilities with little programmer intervention√æ√æFD can take any data, including your SQL data/queries/views, and pipes it into graph and content database for sophisticated analysis and secured access.√æ√æ    Model->Load->Analyze√æ√æ## Overview√æFlockData allows you to model your data and normalize it around the business context - the conceptual model. The results allow you to √æ√æ  * Standardised way in which data can be securely read and analyzed√æ  * Independence from the underlying structure of your data √æ  * Track the conceptual structure of your data to understand how it is used across system √æ√æAll functionality, including querying of the databases, can be performed over REST APIs or using any JSON aware reporting tool.√æ√æ## How√æModel the data you want to import, load it then start analyzing using your favourite tools√æ√æFlockData is a system of insight built as a [DataShore](http://martinfowler.com/bliki/DataLake.html) using the principals of Microservices and Domain Driven Design. By tracking your data using DDD your data is indexed in a consistent manner and offers enhanced analytics capabilities using graph and search databases, √æ√æThis approach to data modelling makes it intuitive to model and integrate data. Standardizing the language used to describe data improves conversations and can improve engagement across groups of varying technical levels.√æ√æ## Design√æFlockData is inspired by a combination of Domain Driven Design and [Microservice](http://martinfowler.com/articles/microservices.html) goals.√æ√æ    Entities represent the high level ""things"" your organization should care about√æ    Tags represent ""concepts"" - that help you index the entities for retrieval√æ√æLoosely coupled services are the way to build systems to support independent scaling and reduce impact of change. √æ√æ## Technical√æFD is built on Spring Boot, Integration, Security, MVC etc, RabbitMQ, Neo4j, ElasticSearch, and Riak. [Docker images](https://hub.docker.com/u/flockdata/) are available for each service√æ√æWe have crafted integration between these services to be as configurable and easy to deploy as possible. To this end we really do suggest you start with the docker-compose functionality to get going with the minimum of fuss and to more easily understand the extensive configuration and concepts involved with this stack. √æ√æThis stack requires Java 8 and mvn 3.x if you're going to build it. If you want to build docker images then you will also require Docker to be installed.√æ√æThe docker-compose script includes [fd-view](http://github.com/monowai/fd-view), our AngularJS based data modelling, administration and reporting framework. Use to model data files and give you an idea of the functionality you can add to your applications.√æ√æWe use the mvn spotify project for docker management and run integration tests using testcontainers in Docker -see [fd-docker-integration](fd-docker-integration/README.md)√æ√æfd-client allows you to inject the necessary client components directly into your application giving you the power of search and graph in next to no time. It also offers support for unit testing your interactions with the service.√æ√æ## Docker√æWe love Docker. We even have a docker-compose script to make evaluation a snap. √æ √æ     `git clone http://github.com/monowai/fd-demo`√æ     `docker-compose up -d`√æ     `http://docker-ip - login as demo/123`√æ       √æFurther details can be found on [fd-demo](http://github.com/monowai/fd-demo)√æ√æ## Datastores√æFlockData coordinates and directs information to various highly scalable data sources to achieve functionality. √æ * [elasticsearch](https://github.com/elasticsearch/elasticsearch)√æ * [neo4j](https://github.com/neo4j/neo4j)√æ * [redis](https://github.com/antirez/redis)√æ * [riak](http://basho.com/riak/)√æ * [rabbitmq](https://github.com/rabbitmq/rabbitmq-server)√æ√æ## Postman√æPoke around the API using the supplied postman [Postman](https://github.com/monowai/flockdata.org/blob/master/fd.api-postman.json) package. This contains environments for both localhost DEV and docker and gives you an idea of the rich set of features that can be invoked √æ√æ## Features√æ√æ### Explore√æNeo4J is the world leading graph database enabling you to explore how your business information is connected. FD builds a graph for you by using information tags that you determine to be of value. Start exploring your enterprise information as a social graph in hours.√æ√æ### Search√æBuild efficiently structured ElasticSearch databases, ready to query, directly from SQL queries. Sending FD your application data you can offer your organzation Full Text Search capabilities across business data that your users will understand. √æ  √æUsing [Kibana](http://www.elasticsearch.org/overview/kibana/) on the front and you can start to accumulate realtime dashboards that give you the pulse of change in your business. √æ√æThink LogStash for application data. FlockData maintains your ElasticSearch data giving you cross-system search capabilities in a matter of hours.√æ√æ### Compare√æFlockData can record changes to your data giving you an event source that lets everyone recall the state of domain documents at any point in time.√æ√æ## Get going√æTake some time to review FlockData's key services√æ * [fd-client](fd-client/README.md) - apache licenced library that allow read/write data access to the services from the commandline or within your own code√æ * [fd-engine](fd-engine/README.md) - tracks your entities and tags as metadata into Neo4j√æ * [fd-search](fd-search/README.md) - search writer that builds ElasticSearch databases from graph data stored in fd-engine √æ * [fd-store](fd-store/README.md) - blob store for data√æ√æContact us if you'd like access to some of the analysis repos we have put together. Not all of these are currently public on GitHub√æ√æ## Work with us√æThis is a platform to create well managed data applications. We want to help you and welcome contributions. Drop us a line over at [flockdata.com](http://flockdata.com/) and we'd be happy to have a ramblechat to see if we can help you reach your goals.√æ√æ## Contributing√æWe encourage contributions to FlockData from the community. Here‚Äôs how to get started.√æ√æ * Fork the project√æ * Create a branch√æ * Make your changes and run the functional and integration test suite `mvn verify -P docker,integration`√æ * Commit your changes and push them to your fork√æ    * Please interactively rebase your commits to aid review√æ * Open pull-requests for you changes√æ * We will review your pull-request, suggest changes, and merge it when it‚Äôs ready and/or offer feedback√æ√æTo report a bug or issue, please register and open a new [issue](https://monowai.atlassian.net/) in our Jira issue tracking system.√æ√æ### Licensing√æWe use a mix of Apache and GPL licenses. √æ√æfd-client is the Apache licensed library providing access to the GPL licensed backend of fd-engine, fd-store and fd-search.√æWe know there is some resistance to GPL, so why do we use it? It's to ensure that changes to core FD services, the stuff that runs behind the API, can be made shared with everyone including us. We want everyone to get the most out of data using FD. √æOur licenses place no restrictions whatsoever on your data or applications. In fact you could build your databases then remove FD from the picture completely.√æ√æTalk to us about clustering/backup as there may be 3rd party licensing costs involved with the underlying databases. We can offer commercial licenses if required by [contacting](http://flockdata.com/)√æ √æ "
LineageOS/android_packages_apps_UnifiedEmail,58191,0,4,16,Organization,False,,,,11,Java,"{'mk': 2, 'xml': 1, '': 1, 'flags': 2}",19400,39,7,28,0,3119,False,,,,,0,0,0,0,7,0,1,2,2199,753,0,0,2,89,,,
lsu-ub-uu/cora-beefeater,72,1,4,2,Organization,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",4,Java,"{'': 1, 'txt': 1, 'xml': 1}",66,9,6,4,0,1945,True,0,0,0,0,0,0,0,0,7,0,2,7,631,168,0,0,89,0,,,
spring-cloud/spring-cloud-app-broker,25220,18,17,25,Organization,False,Spring Cloud project for implementing service brokers that conform to the Open Server Broker API specification,http://projects.spring.io/spring-cloud/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",31,Java,"{'': 6, 'adoc': 3, 'gradle': 3, 'properties': 1, 'bat': 1}",432,6,13,16,6,791,True,36,158,22,18,0,200,0,36,27,6,9,79,8199,2417,0,0,94,10,,,"image:https://circleci.com/gh/spring-cloud/spring-cloud-app-broker.svg?style=svg[""CircleCI"", link=""https://circleci.com/gh/spring-cloud/spring-cloud-app-broker""]√æimage:https://api.codacy.com/project/badge/Grade/72dc83489cb84106bcca9d0d20430622[""Codacy code quality"", link=""https://www.codacy.com/app/scottfrederick/spring-cloud-app-broker?utm_source=github.com&utm_medium=referral&utm_content=spring-cloud/spring-cloud-app-broker&utm_campaign=Badge_Grade""]√æimage:https://codecov.io/gh/spring-cloud/spring-cloud-app-broker/branch/master/graph/badge.svg[""Codecov"", link=""https://codecov.io/gh/spring-cloud/spring-cloud-app-broker/branch/master""]√æimage:https://img.shields.io/gitter/room/spring-cloud-app-broker/community.svg?style=flat-square[""Gitter"", link=""https://gitter.im/spring-cloud-app-broker/community""]√æ√æ== Spring Cloud App Broker√æ√æSpring Cloud App Broker is a framework for building Spring Boot applications that implement the Open Service Broker API to deploy applications to a platform.√æ√æThe Open Service Broker API project allows developers to deliver services to applications running within cloud native platforms such as Cloud Foundry, Kubernetes, and OpenShift.√æSpring Cloud App Broker provides a framework based on Spring Boot that enables you to quickly create a service broker that deploys applications and services to the platform when managed services are provisioned.√æ√æCurrently Cloud Foundry is supported as a target platform for service instance backing applications and services.√æ√æ=== Getting Started√æ√æSee the https://spring.io/projects/spring-cloud-app-broker/[project site] and https://docs.spring.io/spring-cloud-app-broker/docs/current/reference/[reference documentation] to get started building a service broker using this framework.√æ√æTake a look at this https://spring.io/blog/2019/05/30/introducing-spring-cloud-app-broker[introduction blog post] and to our https://github.com/spring-cloud-samples/spring-cloud-app-broker-samples[sample apps].√æ√æJoin us in our gitter channel: https://gitter.im/spring-cloud-app-broker/community√æ√æ=== Compatibility√æ√æ==== 1.1.x√æ√æ* https://projects.spring.io/spring-framework/[Spring Framework] 5.2.x√æ* https://projects.spring.io/spring-boot/[Spring Boot] 2.2.x√æ* https://github.com/cloudfoundry/cf-java-client/[Cloud Foundry Java Client] 4.x√æ* https://github.com/reactor/[Reactor] 3.3.x√æ* https://spring.io/projects/spring-cloud-open-service-broker/[Spring Cloud Open Service Broker] 3.1.x√æ* https://github.com/openservicebrokerapi/servicebroker/tree/v2.15/[Open Service Broker API] 2.15√æ√æ==== 1.0.x√æ√æ* https://projects.spring.io/spring-framework/[Spring Framework] 5.1.x√æ* https://projects.spring.io/spring-boot/[Spring Boot] 2.1.x√æ* https://github.com/cloudfoundry/cf-java-client/[Cloud Foundry Java Client] 3.x√æ* https://github.com/reactor/[Reactor] 3.2.x√æ* https://spring.io/projects/spring-cloud-open-service-broker/[Spring Cloud Open Service Broker] 3.0.x√æ* https://github.com/openservicebrokerapi/servicebroker/tree/v2.14/[Open Service Broker API] 2.14√æ√æ=== Build√æ√æThis project requires Java 8 at a minimum.√æ√æThe project is built with Gradle.√æThe https://docs.gradle.org/current/userguide/gradle_wrapper.html[Gradle wrapper] allows you to build the project on multiple platforms and even if you do not have Gradle installed; run it in place of the `gradle` command (as `./gradlew`) from the root of the main project directory.√æ√æ==== Compile the project and run tests√æ√æ    ./gradlew build"
aigents/aigents-java,5257,13,3,5,Organization,False,Aigents Java Core Platform,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",20,Java,"{'': 2, 'md': 1, 'sh': 2, 'txt': 8, 'out': 1}",208,1,13,2,0,589,True,26,4,23,4,0,1,0,1,11,0,0,0,0,0,0,0,6,0,,,"# Aigents Java Core Platform√æ![https://aigents.com/](https://aigents.com/img/aigents_wrench.png)√æ√æ## Pre-requisites√æ1. Ensure that the following software is installed for build and test purposes:√æ- Java JDK 6,7,8 (any version, Oracle Java strongly recommended) - used for build and run√æ- PHP (any version with cURL for PHP installed) - used for tests√æ- Python (Python 2 or Python 3) - used for tests√æ2. Clone this repostory as at **aigents-java**√æ3. Create folder **lib** in the repository root at **aigents-java**√æ4. Download the following **jar** libraries and class files to **lib** folder:√æ- **mail.jar** ([Java Mail 1.4.7](http://www.java2s.com/Code/Jar/j/Downloadjavaxmailapi147jar.htm)) - needed for Aigents e-mail operations√æ- **servlet.jar** ([Java Servlet 2.5](http://www.java2s.com/Code/Jar/s/Downloadservlet25jar.htm)) - needed for Aigents/Webstructor exposure as a servlet√æ- **javax.json-1.0.2.jar** ([JSON Libarary](http://www.java2s.com/Code/Jar/j/Downloadjavaxjson102jar.htm)) - needed for Aigents JSON interoperability√æ- **pdfbox-app-2.0.18.jar** ([Apache PDFBox Application](https://pdfbox.apache.org/) [version 2.0.18](https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox-app/2.0.18)) - needed to parse PDF documents√æ- **jfxrt.jar** ([Java FX](https://www.oracle.com/technetwork/java/javafx2-archive-download-1939373.html)) - needed for Aigents Desktop User Interface√æ- **appbundler-1.0.jar** ([Java App Bundler for Mac](https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/packagingAppsForMac.html)) - needed for Aigents OSX Application√æ- **org** ([Jar Class Loader](https://github.com/raisercostin/eclipse-jarinjarloader)) - need for launching Aigents from Jar file automatically, have to be placed in the following structure under **lib** root: √æ```√æorg√æ‚îî‚îÄ‚îÄ eclipse√æ    ‚îî‚îÄ‚îÄ jdt√æ        ‚îî‚îÄ‚îÄ internal√æ            ‚îî‚îÄ‚îÄ jarinjarloader√æ                ‚îú‚îÄ‚îÄ JIJConstants.class√æ                ‚îú‚îÄ‚îÄ JarRsrcLoader$ManifestInfo.class√æ                ‚îú‚îÄ‚îÄ JarRsrcLoader.class√æ                ‚îú‚îÄ‚îÄ RsrcURLConnection.class√æ                ‚îú‚îÄ‚îÄ RsrcURLStreamHandler.class√æ                ‚îî‚îÄ‚îÄ RsrcURLStreamHandlerFactory.class√æ```√æ√æ## Build instructions√æ1. Run build script with Linux shell as **sh build.sh**√æ2. Run test script with Linux shell as *sh test.sh*√æ- See test pre-requisites in the ""test"" shell script file√æ- Successful tests pass will be indicated with **SUCCESS!** in the very end√æ3. Pick built Java jar file as **Aigents.jar**√æ4. Run Aigents GUI with java command as **java -jar Aigents.jar**√æ5. If needed, bundle Aigents Desktop App for Mac accordingly to [instructions](https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/packagingAppsForMac.html)√æ6. If needed, build Aigents Desktop for Windows Executable from Jar using [Excelsior JET Technology](https://www.excelsiorjet.com/kb/35/howto-create-a-single-exe-from-your-java-application)  √æ√æ## Manuals√æ1. If needed, configure Aigents Power Server following [Aigents Server requirements configuration, operation and API use instructions](https://aigents.com/download/latest/readme.html)√æ2. If needed, integrate Aigents Power Server in your own application following [Aigents Server Documentation](https://github.com/aigents/aigents-java/blob/master/doc/README.md) √æ√æ## Credits and Attributions√æ1. English and Russian positive and negative sentiment lexicons are created relying on works of [SentiWordNet](https://github.com/aesuli/SentiWordNet), [Bing Liu](https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html#lexicon), [–†—É–°–µ–Ω—Ç–∏–õ–µ–∫—Å](https://www.labinform.ru/pub/rusentilex/index.htm) and [Linis Crowd](http://www.linis-crowd.org/).    √æ√æ![https://aigents.com/](https://aigents.com/img/aigents_wrench.png)"
EMCECS/atmos-client-java,32569,3,18,4,Organization,False,The Atmos Java Client implements a Java wrapper around the Atmos protocol for use with Atmos and ECS object stores.,,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",15,Java,"{'': 3, 'txt': 3, 'md': 1, 'gradle': 2, 'bat': 1, 'vm': 1}",553,2,6,5,0,3848,True,1,2,0,0,0,3,0,0,7,0,0,0,0,0,0,0,58,2,,,atmos-client-java√æ====================√æ√æJava SDK for the Atmos API
Cantara/dropwizard-logging-logstash,52,0,6,1,Organization,False,Integrate the Logstash JSON file appender with the Dropwizard logging framework,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 2, 'md': 1, 'xml': 1}",46,18,2,5,0,1719,True,2,0,0,0,0,21,0,9,8,0,1,7,7,7,0,0,93,5,,,# dropwizard-logging-logstash√æ√æ[![Known Vulnerabilities](https://snyk.io/test/github/Cantara/dropwizard-logging-logstash/badge.svg)](https://snyk.io/test/github/Cantara/dropwizard-logging-logstash)√æ√æIntegrate the Logstash JSON file appender with the Dropwizard logging framework
svpino/cs7641-assignment4,72,14,1,13,User,False,CS7641 - Machine Learning - Assignment 4 - Markov Decision Processes,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",4,Java,"{'': 2, 'md': 1}",24,1,0,1,13,815,True,1,1,0,0,1,0,0,0,8,0,0,0,0,0,0,0,22,,18,,"# CS7641 - Machine Learning - Assignment 4 - Markov Decision Processes√æ√æWe are encouraged to grab, take, copy, borrow, steal (or whatever similar concept you can come up with) the code to run our experiments and focus all of our time doing the analysis. Hopefully, this code will help others do that.√æ√æFor Assignment 4, we need to come up with two interesting MDPs, one with a small number of steps, and the other with a large number of steps. While ""small"" and ""large"" are largely subjective terms, this code uses an `8x8` grid map as the ""small"" example and a `21x21` grid map as the ""large"" one. You are encouraged to change these examples and make something different and exciting out of them. If you don't, then your report will probably look very similar to others, and you might get in trouble. Be creative.√æ√æ## Running the project√æ√æThe simplest way to get this thing up and running is by using [Eclipse](http://www.eclipse.org/). Of course, you can also use _your-sweetheart-tool_, but Eclipse will get you there faster because that's what I used and uploaded to this repository.√æ√æClone this repository, and import the project into Eclipse. Then you need to update the project using Maven (which should be conveniently added as an option when you right click your project inside Eclipse). Maven will download [Burlap](http://burlap.cs.brown.edu/) and a bunch of other things that come with it. Maven will save you 3 hours of library-chasing, so embrace it and make it work. Make sure you are using Java 8 or later. √æ√æAs soon as all error indicators are gone, you can run the Main.java class from inside Eclipse. That's pretty much it.√æ√æ## What can you do with this thing?√æ√æ### First, the map surface√æStart by changing the surface of the problems. Try and be creative and come up with something cool. This shouldn't be too hard. Find the `createProblem1()` and `createProblem2()` static methods and start playing with the `map` array inside them. Here are the rules to describe the surface:√æ√æ * `X` ‚Äî The starting point of the agent.√æ * `0` ‚Äî Represents a safe cell where the agent can move.√æ * `1` ‚Äî Represents a wall. The agent can't move to this cell.√æ * `G` ‚Äî Represents the goal that the agent wants to achieve.√æ * `S` ‚Äî Represents a small hazard. The agent will be penalized.√æ * `M` ‚Äî Represents a medium hazard. The agent will be penalized.√æ * `L` ‚Äî Represents a large hazard. The agent will be penalized.√æ√æFor example, here is the ""code"" representation of a map:√æ√æ```√æX0011110√æ01000S10√æ010M110S√æ0M0000M1√æ01111010√æ00L010S0√æ0S001000√æ000000SG√æ```√æSet the `PROBLEM` constant to the specific problem you want to execute:√æ√æ```java√æprivate static int PROBLEM = 1;√æ```√æI set up the code with two different problems. You should be able to extend that to more problems if you want with very few modifications.√æ√æ### Dealing with rewards√æAll those hazards are just rewards (negative rewards, in this case) that you can set up however you like. Out of the box, you'll get that small hazards are worth `-1.0`, medium hazards are worth `-2.0`, and large hazards are worth `-3.0`.√æ√æPlay with these values, and you'll see how your agent will react to those changes by trying to get as far away as possible from substantial penalties. You can change the optimal policy by just making small adjustments to these rewards.√æ√æMake your changes where you see the following:√æ√æ```java√æhazardRewardsHashMap.put(HazardType.SMALL, -1.0);√æhazardRewardsHashMap.put(HazardType.MEDIUM, -2.0);√æhazardRewardsHashMap.put(HazardType.LARGE, -3.0);√æ```√æYes, you can set up different rewards for each problem. That's why I have two separate methods to deal with all of these.√æ√æFinally, don't forget the specific reward for reaching the goal state. Out of the box you get a positive `10`, but feel free to change it (of course, keep it positive unless you want your agent avoiding reaching the goal). You also need to worry about the default reward (a reward attached to any blank cell where the agent can move). You want to make this a negative value (out of the box you get `-0.1`), so the agent has some incentive to stop wandering around. You can change both of these values using the `Problem` constructor: √æ√æ```java√æreturn new Problem(map, numIterationsHashMap, -0.1, 10, hazardRewardsHashMap);√æ```√æ√æ### The algorithms√æThis code implements three different algorithms: Value Iteration, Policy Iteration, and Q-Learning. Only one of these algorithms runs at a time. To select which algorithm to run, modify the following constant:√æ√æ```java√æprivate final static Algorithm algorithm = Algorithm.ValueIteration;√æ```√æThe source code should be straightforward to follow to find out what are the specific things you can change to see how these algorithms work, but here are some recommendations:√æ√æ* Look in the `main` method, when `runAlgorithm` is called to see the specific initialization of each one of these algorithms.√æ* I'm setting the value of _gamma_ for all three algorithms to `0.99`. Feel free to investigate how this value changes your results and make sure you always keep it under `1`.√æ* The _maxDelta_ for Value and Policy Iteration is set at `0.001`. Your specific problem might benefit from a different value.√æ* For Policy Iteration we need to specify the number of iterations of Value Iteration that the algorithm will use internally to compute the corresponding values. By default, the code is using the same number of iterations specified for the Value Iteration algorithm. A recommended modification is to change this value to the actual number of iterations that it takes Value Iteration to converge. This will considerably improve the runtime of the algorithm (assuming that Value Iteration converges faster than the number of configured iterations).√æ* For Q-Learning, the Q-value and learning rate are a couple more attributes that you can change to explore the results of the algorithm. They are currently set at `0.3` and `0.1` respectively.√æ√æAssuming you ignore all of the above, you'll probably be fine, but here is something that you definitely want to check: the specific number of iterations for each algorithm. The way you configure this is right inside the `createProblem1()` and `createProblem2()` static methods:√æ√æ```java√æHashMap<Algorithm, Integer> numIterationsHashMap = new HashMap<Algorithm, Integer>();√ænumIterationsHashMap.put(Algorithm.ValueIteration, 100);√ænumIterationsHashMap.put(Algorithm.PolicyIteration, 20);√ænumIterationsHashMap.put(Algorithm.QLearning, 1000);√æ```√æMake sure to explore the effect the number of iterations has on the convergence of each algorithm.√æ√æ## Analysis, analysis, analysis√æIn the end, this is what matters for this assignment. The code should help to give you some results and charts you can later use in your report. Here is what you'll get after running any of the three algorithms:√æ```√æEpisode, Steps, Reward, Time√æ 1, 30, -4.02, 134√æ 2, 30, -4.02, 177√æ 3, 30, -4.02, 201√æ 4, 24, -3.33, 140√æ 5, 28, -3.48, 155√æ 6, 18, -3.06, 157√æ 7, 16, -2.98, 138√æ 8, 18, -3.06, 152√æ 9, 15, -2.75, 130√æ10, 16, -2.98, 148√æ...√æ√æAverage Reward: -3.37√æAverage Number of Steps: 23√æMinimum Number of Steps: 15 √æAverage Time (in milliseconds): 153√æ```√æYou can then copy this and paste it into a spreadsheet where you can generate as many charts as you consider helpful. √æ√æIn the case of Q-Learning, BURLAP offers a `LearningAlgorithmExperimenter` class that display some cool charts (pretty much the same information above, but laid out nicely in charts). To get these charts, make sure you set the `USE_LEARNING_EXPERIMENTER` constant to true.√æ√æ```java√æprivate static boolean USE_LEARNING_EXPERIMENTER = true;√æ```√æ## Good luck!√æNot sure what else to put here that helps you get the coding portion of the assignment out of the way and lets you focus exclusively on the analysis. Of course, don't just run this, grab the results and write a report; it will be helpful if you try to understand the code a little bit. Knowing how this works will be a huge help when writing the report."
stanwood/CRM_Framework_android,187,0,7,1,Organization,False,,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",11,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",52,2,12,3,1,754,True,0,0,0,0,0,26,0,0,8,0,0,0,0,0,0,0,62,4,,,"# CRM Framework (Android)√æ√æ[![](https://jitpack.io/v/stanwood/CRM_Framework_android.svg)](https://jitpack.io/#stanwood/CRM_Framework_android)√æ√æThis library contains easy to implement support for firebase push notifications. It uses Analytics Framework (https://github.com/stanwood/Analytics_Framework_android) to track application data which can be used for generating CRM campaigns. √æ√æ## Motivation√æThe motivation of this framework is to ease the implementation of push notification implementation. The notifications and inapp messages are triggered based on firebase data tracked by analytics framework. This data can be used to create funnels and creating CRM campaigns.√æ√æ## Requirements√æ- Integrated Analytics Framework√æ- Sample app needs to integrate firebase. Please remember to add google-services.json to the project. √æ√æ## Import√æ//TODO√æ√æ## Integration√æ√æ1. Init CRM class in your application's `onCreate()` method and pass to it application context and instance of BaseAnalyticsTracker.√æCRM class is used for passing the push token to the tracking library.√æ```java√æ  Crm.init(this, SimpleAppTracker.instance());√æ```√æ√æ2. Create a concrete implementation of `BaseNotificationHandler` and override `createNotification()`. √æ`createNotification()` is called after receiving the push notification and is responsible for handling its display.√æ```java√æ  @Override√æ     public void createNotification() {√æ         //Creating default notification chanel based on crm.xml configuration√æ         NotificationManager notificationManager = createDefaultNotificationChannel();√æ         //Specifying intent of target activity√æ         Intent intent = new Intent(getContext(), MainActivity.class);√æ         //Creating default notification builder√æ         NotificationCompat.Builder builder = createDefaultNotificationBuilder(intent, getTitle(), getMessage());√æ         //Sending notification√æ         sendNotification(notificationManager, builder);√æ     }√æ```√æ√æ3. Create a concrete implementation of `BaseMessagingService` override `createBaseNotificationHandler()` and return a new instance of Notification Handler from step 2. √æ```java√æ    @NonNull√æ    @Override√æ    public BaseNotificationHandler createBaseNotificationHandler() {√æ        return new CrmNotificationsHandler(getApplication(), SimpleAppTracker.instance());√æ    }√æ```√æ√æ4. Register the service in your application manifest.√æ```java√æ <service android:name="".notification.CrmNotificationService"">√æ            <intent-filter>√æ                <action android:name=""com.google.firebase.MESSAGING_EVENT"" />√æ            </intent-filter>√æ </service>√æ```√æ√æ5. In App messages exemplar implementation. InApp messages are received as a silent push notifications and stored for later use. √æOn start of every screen `displayInAppIfAny()` is checking if there are any pending messages for specific screen to be displayed. √æ```java√æ/**√æ * Exemplar implementation. Same can be done with Fragments.√æ * The important part is to check if there are any inApp messages to be displayed for the current screen.√æ */√æpublic abstract class BaseActivity extends AppCompatActivity {√æ√æ    protected abstract String getScreenName();√æ√æ    @Override√æ    public void onStart() {√æ        super.onStart();√æ        if (!TextUtils.isEmpty(getScreenName())) {√æ            //Check if there are any screens to be displayed for specific screen√æ            Crm.getInstance().displayInAppIfAny(this, getScreenName());√æ            //Sample implementation of analytics framework needed for creating funnel based CRM √æ            //campaigns in order to increase re-targeting. √æ            SimpleAppTracker.instance().trackScreenView(getScreenName());√æ        }√æ    }√æ}√æ```√æ√æ6. (Optional) create crm.xml file with custom specifications√æ```xml√æ<?xml version=""1.0"" encoding=""utf-8""?>√æ<resources xmlns:tools=""http://schemas.android.com/tools"" tools:override=""true"">√æ    <!--Default channel id -->√æ    <string name=""default_notification_channel_id"">chanel_id</string>√æ    <!--Default channel description -->√æ    <string name=""default_notification_channel_description"">Notifications Description</string>√æ    <!--Deeplink key used for parsing data send from push server -->√æ    <string name=""deeplink_key"">link</string>√æ    <!--Title key used for parsing data send from push server -->√æ    <string name=""title_key"">title</string>√æ    <!--Message key used for parsing data send from push server -->√æ    <string name=""message_key"">message</string>√æ    <!--Big message key used for parsing data send from push server -->√æ    <string name=""big_message_key"">messageBig</string>√æ    <!--Message Id key used for parsing data send from push server. Used for grouping/replacing notifications based on campaign -->√æ    <string name=""messageId_key"">messageId</string>√æ    <!--Default notification color -->√æ    <color name=""default_notification_color"">#FF4081</color>√æ    <!--Message type key for differentiating  push notifications from inApp messages -->√æ    <string name=""message_type_key"">type</string>√æ    <!--Target Screen on which the inApp message should be displayed -->√æ    <string name=""target_screen"">target_screen</string>√æ</resources>√æ```√æ√æ7. (Optional) Specifying different designs for inApps messages based on the screen name in your application's `onCreate()` method:√æ```java√æ    Crm.getInstance().addDialogDesign(""main_view"", CustomInAppDialogFragment.class);√æ```√æ√æAlternatively extended method can be used in order to display a custom InAppDialogFragment implementation.√æ```java√æ Crm.getInstance().displayInAppIfAny(this, getScreenName(), new CustomInAppDialogFragment());√æ```√æ√æ## Campaign tool (under development)√æ√æCampaign tool can be found:√æ- https://stanwood-crm.appspot.com/campaigns - very dummy implementation√æ- stub for firing event with debug information: https://stanwood-crm.appspot.com/event?user_email=zyzniewski@gmail.com - basically any GET params are injected into `user_properties`"
blikoon/QRCodeScanner,587,90,3,73,Organization,False,Android QR Code scanning library : QR Scanning library based on zxing for android devices API 15 and up,,,12,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1, 'gif': 1}",21,1,3,1,4,1144,True,15,14,1,0,4,2,0,0,7,2,0,0,0,0,0,0,11,1,,,"# QRCodeScanner√æQR Scanning library based on zxing for android devices API 15 and up√æ√æ![In action](https://github.com/blikoon/QRCodeScanner/blob/master/showOff.gif)√æ√æ# Features√æ * Scan QR Code√æ * Load images containing QR Code and scan them√æ * Easy to use√æ * Flash light√æ√æ# How to use√æ* In your root gradle file do the following :√æ```java√æ   allprojects {√æ     repositories {√æ ...√æ maven { url 'https://jitpack.io' }√æ }√æ   }√æ```√æ* In your app module gradle file just add the dependency√æ```java√æ   dependencies {√æ    compile 'com.github.blikoon:QRCodeScanner:0.1.2'√æ   }√æ```√æBe sure to check the latest version [here](https://github.com/blikoon/QRCodeScanner/releases) √æ* In your activity, Declare the Request code for QR Code scan√æ```java√æprivate static final int REQUEST_CODE_QR_SCAN = 101;√æ```√æ* Start the QR Code scan activity, FOR RESULT,√æ```java√æ@Override√æpublic void onClick(View v) {√æ   Intent i = new Intent(MainActivity.this,QrCodeActivity.class);√æ   startActivityForResult( i,REQUEST_CODE_QR_SCAN);√æ}√æ```√æ* And catch the scan result:√æ```java√æprotected void onActivityResult(int requestCode, int resultCode, Intent data) {√æ√æ        if(resultCode != Activity.RESULT_OK)√æ        {√æ            Log.d(LOGTAG,""COULD NOT GET A GOOD RESULT."");√æ            if(data==null)√æ                return;√æ            //Getting the passed result√æ            String result = data.getStringExtra(""com.blikoon.qrcodescanner.error_decoding_image"");√æ            if( result!=null)√æ            {√æ                AlertDialog alertDialog = new AlertDialog.Builder(MainActivity.this).create();√æ                alertDialog.setTitle(""Scan Error"");√æ                alertDialog.setMessage(""QR Code could not be scanned"");√æ                alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, ""OK"",√æ                        new DialogInterface.OnClickListener() {√æ                            public void onClick(DialogInterface dialog, int which) {√æ                                dialog.dismiss();√æ                            }√æ                        });√æ                alertDialog.show();√æ            }√æ            return;√æ√æ        }√æ        if(requestCode == REQUEST_CODE_QR_SCAN)√æ        {√æ            if(data==null)√æ                return;√æ            //Getting the passed result√æ            String result = data.getStringExtra(""com.blikoon.qrcodescanner.got_qr_scan_relult"");√æ            Log.d(LOGTAG,""Have scan result in your app activity :""+ result);√æ            AlertDialog alertDialog = new AlertDialog.Builder(MainActivity.this).create();√æ            alertDialog.setTitle(""Scan result"");√æ            alertDialog.setMessage(result);√æ            alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, ""OK"",√æ                    new DialogInterface.OnClickListener() {√æ                        public void onClick(DialogInterface dialog, int which) {√æ                            dialog.dismiss();√æ                        }√æ                    });√æ            alertDialog.show();√æ√æ        }√æ    }√æ```√æ* You're good to go!√æ√æ# Example app√æhttps://github.com/blikoon/QRCodeScanner/tree/master/app√æ√æ# Video Tutorial√æhttps://www.youtube.com/watch?v=R9JxDpKpkAk√æ√æ# Licence√æGPLv3√æ√æ# Found a bug?√æSubmit a [github issue](https://github.com/blikoon/QRCodeScanner/issues/new)√æ√æ# Need help?√æIf you need one of our [Commercial Services](http://www.blikoontech.com/services) then do [Contact us](http://www.blikoontech.com/contact) otherwise shoot us in the comments section of [This librarie's](http://www.blikoontech.com/programming/how-to-scan-qr-code-in-android-apps) article.We won't respond to general usage questions posted as github issues."
FreeMobileOS/Lawnchair,167289,0,2,1,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",35,Java,"{'yml': 2, '': 4, 'mk': 2, 'xml': 2, 'md': 1, 'png': 1, 'gradle': 1, 'jks': 1, 'py': 2, 'properties': 1, 'bat': 1, 'flags': 1}",21140,6,328,82,0,4262,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,101,0,,,"# Lawnchair - [![Travis](https://img.shields.io/travis/Deletescape-Media/Lawnchair.svg)](https://travis-ci.org/Deletescape-Media/Lawnchair) - [![Github All Releases](https://img.shields.io/github/downloads/Deletescape-Media/Lawnchair/total.svg)](https://github.com/Deletescape-Media/Lawnchair/releases) - [![Donate on PayPal](https://img.shields.io/badge/PayPal-Donate%20Now-brightgreen.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=E2EFKTUC62KDQ)√æ√æ√æ![What in launcher creation?](meme.jpg)√æ√æYes, I know, there are already waaaay to many launchers out there.√æYes I know this won't be successful. But I am only doing this for fun (and for the pun :innocent:) anyways.√æI don't even know what kind of features I want to add to this, so if you have a great idea just open an issue or submit a PR!√æ√æ## Now what does this cost?√æ√æNothing, I am promising that Lawnchair, including all it's features, will always be free! But if you really like it, you can still pay me a beer or something on [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=E2EFKTUC62KDQ).√æ√æ## How to Contribute?√æ√æContributing to Lawnchair is pretty straight forward! Fork the project, clone your fork and start coding!√æ√æBefore implementing any new big features I would be happy if you would either hit me up in an issue, or on [Telegram](https://t.me/deletescape). I probably won't reject it, but this is just to make sure that you don't invest your time for something I won't include.√æ√æUnfortunately I cannot share a decrypted version of `google-services.json`, to build without this file you will have to comment out the following lines in `build.gradle`√æ * `classpath 'com.google.gms:google-services:3.1.0'` (at the beginning of the file)√æ * `apply plugin: 'com.google.gms.google-services'` (at the bottom of the file)√æ √æ> **DO NOT PUSH THIS CHANGE OR I WILL NOT ACCEPT YOUR PR UNTIL YOU CHANGE THIS!**"
vert-x3/vertx-consul-client,1164,28,22,14,Organization,False,Vert.x Consul Client,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 2, 'sh': 1, 'xml': 2, 'yml': 1, 'txt': 1, 'md': 1}",320,8,35,14,0,1408,True,3,23,0,5,0,52,0,4,10,1,6,13,360,133,90,0,91,10,,,# Consul Client√æ√æ[![Build Status](https://travis-ci.org/vert-x3/vertx-consul-client.svg?branch=master)](https://travis-ci.org/vert-x3/vertx-consul-client)√æ√æAn asynchronous client for interacting with a Consul√æ√æPlease see the asciidoc documentation:√æ√æ* [Java documentation](http://vertx.io/docs/vertx-consul-client/java/)√æ* [JavaScript documentation](http://vertx.io/docs/vertx-consul-client/js/)√æ* [Kotlin documentation](http://vertx.io/docs/vertx-consul-client/kotlin/)√æ* [Groovy documentation](http://vertx.io/docs/vertx-consul-client/groovy/)√æ* [Ruby documentation](http://vertx.io/docs/vertx-consul-client/ruby/)
xnio/xnio,4889,220,25,121,Organization,False,XNIO,http://www.jboss.org/xnio,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 1, 'txt': 1, 'xml': 1}",1404,13,131,28,0,4396,False,,,,,6,219,0,16,0,0,2,15,673,61,4,0,4,2,,,
WISVCH/payments,356,0,10,1,Organization,False,Payment provider wrapper,https://ch.tudelft.nl/payments/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",15,Java,"{'': 4, 'yml': 1, 'md': 4, 'gradle': 1, 'bat': 1}",86,5,0,6,1,,True,18,9,0,0,0,58,0,2,14,0,1,2,27,2,0,0,86,17,,,"# CH-Payments√æWelcome to CH Payments, a simple paymentprovider wrapper for stuff you want CH to get money for.√æPayments makes it easy to create products, and implement it in your own website.√æNo hassle with keys, accounts and webhooks, just a single call to initiate a payment.√æ√æBelow you can find some ready-to-use code examples for your website.√æ√æThe administration panel (for now) is only available for board members.√æThey can create products to generate the keys required.√æ√æ# API Endpoints√æ√æCH Payments has an API containing the following endpoints.√æ√æ### `POST` Request payment `/api/v1/orders`√æ√æRequesting a payment url.√æ√æ#### Parameters√æ√æ|   |   |   |√æ|---|---|---|√æ| `name` <br> (required)  | string |   The name of the customer  |√æ| `email`<br> (required)  | string | The email of the customer for the order confirmation. |√æ| `productKeys` <br> (required) | array  | Array of CH Payments products keys of the products the customer wants to order | √æ| `returnUrl`  | string | The URL the customer will be redirected to after the payment process. <br> Default: `https://ch.tudelft.nl/`  |√æ|  `method`<br> | string  |  Payment method selection. Possible values: `IDEAL`, `SOFORT`. <br>Default: `IDEAL` |√æ| `mailConfirmation` | boolean | Flag if CH Payments should send a Order confirmation email. <br>Default: `true` |√æ| `webhookURl`  | string | Set the webhook URL, where CH Payments will send order status updates to. See section **Webhook call**. |√æ√æ#### Responses√æ√æ`201 CREATED` - Order has been successfully created√æ√æ```json√æ{√æ    ""url"": ""<mollie-url>"",√æ    ""publicReference"": ""1073dc09-1b53-427f-ad3f-21b1057dd254"",√æ    ""status"": ""WAITING""√æ}√æ```√æ√æ`500 INTERNAL_SERVER_ERROR` - Something went wrong√æ√æ```json√æ{√æ    ""timestamp"": 1537533514873,√æ    ""status"": 500,√æ    ""error"": ""Internal Server Error"",√æ    ""exception"": ""<exception>"",√æ    ""message"": ""<error-message>"",√æ    ""path"": ""/payments/api/orders""√æ}√æ```√æ√æ### `GET` Get order status `/api/v1/orders/{public-reference}`√æ√æGet the status of an order.√æ√æ#### Responses√æ√æ`200 OK` - Successful√æ√æ```json√æ{√æ    ""url"": ""<mollie-url>"",√æ    ""publicReference"": ""1073dc09-1b53-427f-ad3f-21b1057dd254"",√æ    ""status"": ""WAITING""√æ}√æ```√æ√æ`500` - Something went wrong√æ√æ```json√æ{√æ    ""timestamp"": 1537533514873,√æ    ""status"": 500,√æ    ""error"": ""Internal Server Error"",√æ    ""exception"": ""<exception>"",√æ    ""message"": ""<error-message>"",√æ    ""path"": ""/payments/api/orders""√æ}√æ```√æ√æ### Webhook call√æ√æThe call CH Payments makes about an order status update.√æ√æ#### Body√æ√æ```json√æ{√æ  ""message"": ""OrderStatus update!"",√æ  ""publicReference"": ""1073dc09-1b53-427f-ad3f-21b1057dd254""√æ}√æ```√æ√æ# Code examples√æNo idea how to code, but still want to sell tickets on your CH site?√æUse one of these code examples to get going.√æ√æ#### Python 3.5√æ```python√æimport requests√æ√æurl = ""http://localhost:9000/api/orders""√æ√æpayload = {√æ        'name': 'Thomas Ticket',√æ        'email': 'thomasticket@example.com',√æ        'returnUrl': 'https://www.ch.tudelft.nl/payments/ordercompleted',√æ        'productKeys': ['e44685c5-a360-467c-960d-29843a101bb1', '879941f4-43d1-4ff2-ad66-cbdf3b141cab']√æ    }√æ√æresponse = requests.post(url, json=payload)√æ√æprint(response.json())√æ```√æ√æ#### JavaScript√æ√æThe full workflow is as follows.√æ√æ```js√æasync function main() {√æ  const productsRequest = await fetch('http://localhost:9000/api/products/SYMPOSIUM/2016');√æ  const products = await productsRequest.json();√æ√æ  const orderRequest = await fetch('http://localhost:9000/api/orders', {√æ    method: 'POST',√æ    headers: {'Content-Type':'application/json'},√æ    body: JSON.stringify({√æ      name: 'Thomas Ticket',√æ      email: 'thomasticket@example.com',√æ      returnUrl: 'https://www.ch.tudelft.nl/payments/ordercompleted',√æ      productKeys: products.map(p => p.key)√æ    })√æ  });√æ  const order = await orderRequest.json();√æ  console.log(`You should redirect the user to url ${order.url}`);√æ√æ  // After that you can obtain the order status with:√æ  const statusRequest = await fetch(`http://localhost:9000/api/orders/${order.publicReference}`);√æ  const status = await statusRequest.json();√æ  console.log(`The order status is right now ${status.status}`);√æ}√æ√æmain();√æ```√æ(You can copy-paste this snippet into the Dev console of your browser to try it out. It requires Chrome 55+.√æ√æ#### PHP (you filthy sjaarsCH)√æ```php√æ$url  = 'http://localhost:9000/api/orders';√æ$data = [√æ  'name'        => ""Thomas Ticket"",√æ  'email'       => ""thomasticket@example.com"",√æ  'returnUrl'   => ""<return-url>"",√æ  'productKeys' => [ ""<product-key>"", ""<product-key>"" ],√æ  'method'      => 'CREDIT_CARD'  // options: IDEAL, CREDIT_CARD, SOFORT, PAYPAL√æ];√æ√æ$options = [√æ  'http' => [√æ    'header'  => [√æ      ""Content-Type:application/json"",√æ    ],√æ    'method'  => ""POST"",√æ    'content' => json_encode( $data ),√æ  ],√æ];√æ√æ$response = json_decode( file_get_contents( $url, false, stream_context_create( $options ) ) );√æ```√æ√æ# HootHub√æThis project currently is quite minimal, and offers lots of opportunities for great features built by you!√æCheck out the issue page for HootHub issues, and start earning Uilenballen.√æ√æFirst, pick an issue and self-assign it. Make your changes in a new branch, with the following naming convention:√æ√æ- Fixing a bug? > ""fix-description_of_bug""√æ- Implementing a new feature? > ""feature-description_of_feature""√æ√æOnce you're satisfied with your changes, create a pull request and give it the label ""Ready for review"".√æYou can assign someone in specific or wait for someone to pick it up.√æMake sure to include tests and documentation.√æIf Travis isn't happy, we're not happy.√æ√æ# Running√æ## From IntelliJ√æ1.  Import the project into IntelliJ IDEA, we really recommend using [IntelliJ IDEA Ultimate Edition](https://www.jetbrains.com/idea/), since it includes all the support for Spring. You could use another IDE, but we do not recommend this√æ2.  Make sure you have installed the `Lombok Plugin`√æ3.  Enable annotation processing, this can be enabled in `Settings > Build, Execution, Deployment > Compiler > Annotation Processors`. Here you have to check the checkmark that says `Enable Annotation Processors`√æ4.  Copy `config/application.properties.sample` to `config/application.properties`.√æ√æ  You should change:√æ  - `payments.molliekey` and `payments.returnUrl` to their respective keys if you have those√æ  - Add the group that you are a part of to the `payments.admin.groups`√æ√æ5.  Right click the `Application` class (`src -> main -> java -> ch.wisv.payments`) and choose `Run`. Terminate the process (you don't have to wait for it to finish starting). Now go to the Run/Debug Configuration window `Run -> Edit Configurations` choose the `Spring Boot` configuration called `Application`. Enable the dev profile for this configuration by entering `dev` in the `Active Profiles` box.√æ√æ## Running without IntelliJ√æIt is also possible to run without IntelliJ. This can be done by performing all the previous instructions `1-4`, after this run the `./gradlew dev` command.√æ√æ## Build√æTo generate a runnable JAR file, make sure that you have followed all the instructions under the **run** section. When you have done so, run `./gradlew build`. This command will run all tests, and create a runnable JAR file in the `./build` folder. You could also run `Build` from the gradle view in IntelliJ IDEA.√æ√æ## Docker√æTo run a docker container with payments issue the following commands:√æ```bash√æ./gradlew build√ædocker build -t payments√ædocker run -e ""SPRING_PROFILES_ACTIVE=production""√æ  -e ""SPRING_MAIL_HOST=localhost"" -e ""SPRING_MAIL_PORT=1025""√æ  -e ""PAYMENTS_MAIL_SENDER=${MAIL_SENDER}"" -e ""SPRING_DATASOURCE_URL=jdbc:hsqldb:mem:payments""√æ  -e ""SPRING_DATASOURCE_USERNAME=sa"" -e ""SPRING_DATASOURCE_PASSWORD=""√æ  -e ""PAYMENTS_MOLLIEKEY=${FILL_MOLLIEKEY_HERE}""√æ  -e ""PAYMENTS_ADMIN_GROUPS=chbeheer,bestuur,hoothub,${SOME_GROUP_YOU_ARE_IN}""√æ  -e ""PAYMENTS_ADMIN_USERNAME=${SOME_USERNAME}"" -e ""PAYMENTS_ADMIN_PASSWORD=${SOME_PASSWORD}""√æ  -p 8080:8080 payments:latest√æ```√æ√æTo run the container in a production environment, use the following configuration. If you are starting for the first time without an existing database present, please add `-e ""SPRING_JPA_HIBERNATE_DDL_AUTO=create""` to generate the database.√æ```bash√ædocker run -e ""SPRING_PROFILES_ACTIVE=production""√æ -e ""SPRING_MAIL_HOST=localhost"" -e ""SPRING_MAIL_PORT=1025""√æ -e ""PAYMENTS_MAIL_SENDER=${MAIL_SENDER}"" -e ""SPRING_DATASOURCE_URL=jdbc:postgresql://${DATABASE_LOCATION}""√æ -e ""SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}"" -e ""SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}""√æ -e ""PAYMENTS_MOLLIEKEY=${MOLLIE_KEY}"" -e ""PAYMENTS_ADMIN_GROUPS=chbeheer,bestuur,hoothub,${GROUP_YOU_ARE_IN}""√æ -e ""PAYMENTS_ADMIN_USERNAME=${ADMINISTRATOR_USERNAME}"" -e ""PAYMENTS_ADMIN_PASSWORD=${ADMINISTRATOR_PASSWORD}""√æ -p 8080:8080 payments:latest√æ```"
Dsiner/DMusic,13838,107,5,38,User,False,"DMusic Player for Android - An online music player based on Component + MVP Base + MVP Customization + greenDAO + OkHttp3 + Retrofit + RxJava2; supports local and network music playback; can play Baidu music, Netease cloud music; support online music list , radio, MV, music online, download, local and online lyrics; Lyrics, music cache; self-built song list, song management, collection, sorting, sorting, skinning, sleep timing, mode switching, more settings, etc. Âü∫‰∫é Component + MVP Base + MVP Customization + greenDAO + OkHttp3 + Retrofit + RxJava2 ÁöÑÂú®Á∫øÈü≥‰πêÊí≠ÊîæÂô®; ÊîØÊåÅÊú¨Âú∞ÂèäÁΩëÁªúÈü≥‰πêÊí≠Êîæ; ÂèØÊí≠ÊîæÁôæÂ∫¶Èü≥‰πêÔºåÁΩëÊòì‰∫ëÈü≥‰πê; ÊîØÊåÅÂú®Á∫øÈü≥‰πêÊ¶úÂçï, ÁîµÂè∞, MV, Èü≥‰πêÂú®Á∫øÊí≠Êîæ,‰∏ãËΩΩ, Êú¨Âú∞ÂèäÂú®Á∫øÊ≠åËØç; Ê≠åËØç, Èü≥‰πêÁºìÂ≠ò; Ëá™Âª∫Ê≠åÂçï, Ê≠åÊõ≤ÁÆ°ÁêÜ, Êî∂Ëóè, ÊéíÂ∫è, ÂàÜÁ±ª, Êç¢ËÇ§, Áù°Áú†ÂÆöÊó∂, Ê®°ÂºèÂàáÊç¢, Êõ¥Â§öËÆæÁΩÆÁ≠â",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'': 3, 'md': 3, 'gradle': 3, 'properties': 1, 'bat': 1}",151,2,0,3,11,1141,True,3,5,0,0,0,3,0,0,7,0,0,0,0,0,0,0,30,,63,,"# DMusic for Android√æ√æ[![License](https://img.shields.io/badge/license-Apache%202-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ[![API](https://img.shields.io/badge/API-11%2B-green.svg?style=flat)](https://android-arsenal.com/api?level=11)√æ√æ![Logo](https://github.com/Dsiner/DMusic/blob/master/app/src/main/res/mipmap-xhdpi/ic_launcher.png)√æ√æ> Âü∫‰∫é `Component + MVP Base + MVP Customization + greenDAO + OkHttp3 + Retrofit + RxJava2` ÁöÑÂú®Á∫øÈü≥‰πêÊí≠ÊîæÂô®√æ√æ## Features√æ- [x] ÊîØÊåÅÊú¨Âú∞„ÄÅÁΩëÁªúÈü≥‰πêÂú®Á∫øÊí≠Êîæ√æ- [x] ÊîØÊåÅÂú®Á∫øÈü≥‰πêÊ¶úÂçï„ÄÅÁîµÂè∞„ÄÅMV√æ- [x] ÊîØÊåÅÈü≥‰πêÂú®Á∫øÊí≠Êîæ„ÄÅ‰∏ãËΩΩ√æ- [x] ÊîØÊåÅMVÊí≠Êîæ„ÄÅ‰∏ãËΩΩ√æ- [x] ÊîØÊåÅÊú¨Âú∞ÂèäÂú®Á∫øÊ≠åËØç√æ- [x] ÊîØÊåÅÂú®Á∫øÊêúÁ¥¢√æ- [x] ÊîØÊåÅÊ≠åËØç„ÄÅÈü≥‰πêÁºìÂ≠ò√æ- [x] ÊîØÊåÅËá™Âª∫Ê≠åÂçï„ÄÅÊ≠åÊõ≤ÁÆ°ÁêÜ„ÄÅÊî∂Ëóè„ÄÅÊéíÂ∫è„ÄÅÂàÜÁ±ª√æ- [x] ÊîØÊåÅÊç¢ËÇ§„ÄÅÁù°Áú†ÂÆöÊó∂„ÄÅÊ®°ÂºèÂàáÊç¢„ÄÅÊõ¥Â§öËÆæÁΩÆÁ≠â√æ√æ## Design√æ<img src=""https://github.com/Dsiner/Resouce/blob/master/app/DMusic/dmusic-design.png"" width=""500"" height=""187""/>√æ√æ## Screenshot√æ![Artboard](https://github.com/Dsiner/Resouce/blob/master/app/DMusic/dmusic.png)√æ√æ## Contributors√æ- [Imrul Kayes](https://github.com/saifulfrank) Logo design contribution√æ- [Harry](https://github.com/HarryHeights) Privacy Policy and contributors guide document√æ√æ## Download√æ- [Download apk](https://github.com/Dsiner/Resouce/raw/master/app/DMusic/release/com.d.music_release.apk)√æ- QR Code:√æ√æ![QR Code](https://github.com/Dsiner/Resouce/blob/master/app/DMusic/release/dmusic_download_qr.png)√æ√æ## Licence√æ√æ```txt√æCopyright 2017 D√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
Agontuk/react-native-geolocation-service,5235,702,12,123,User,False,React native geolocation service for iOS and android,https://www.npmjs.com/package/react-native-geolocation-service,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",17,Java,"{'': 6, 'md': 2, 'ts': 1, 'json': 1, 'podspec': 1, 'lock': 1}",139,5,14,16,9,893,True,30,116,11,15,0,39,0,9,10,0,2,35,4417,9594,1958,15,44,,84,,"# react-native-geolocation-service√æReact native geolocation service for iOS and android.√æ√æ# Why ?√æThis library is created in an attempt to fix the location timeout issue on android with the react-native's current implementation of Geolocation API. This library tries to solve the issue by using Google Play Service's new `FusedLocationProviderClient` API, which Google strongly recommends over android's default framework location API. It automatically decides which provider to use based on your request configuration and also prompts you to change the location mode if it doesn't satisfy your current request configuration.√æ√æ> NOTE: Location request can still timeout since many android devices have GPS issue in the hardware/system level. Check the [FAQ](#faq) for more details.√æ√æ# Installation√æyarn√æ```bash√æyarn add react-native-geolocation-service√æ```√æ√ænpm√æ```bash√ænpm install react-native-geolocation-service√æ```√æ√æ# Compatibility√æ| RN Version | Package Version |√æ| ---------- | --------------- |√æ| >=0.60     | >=3.0.0         |√æ| <0.60      | 2.0.0           |√æ| <0.57      | 1.1.0           |√æ√æ# Setup√æ√æ## iOS√æ### 1) Linking√æFor RN 0.60 or higher, no manual linking is needed. After installing the package, just run `pod install` from inside ios directory. It'll automatically pickup the package and install it.√æ√æ<details>√æ<summary>0.59 or below</summary>√æ√æ### Using Cocoapods√æ- Update your `Podfile`√æ    ```√æ    pod 'react-native-geolocation-service', path: '../node_modules/react-native-geolocation-service'√æ    ```√æ - Then run `pod install` from ios directory√æ√æ### Manually linking√æ√æ#### `Open project.xcodeproj in Xcode`√æ√æDrag `RNFusedLocation.xcodeproj` to your project on Xcode (usually under the Libraries group on Xcode):√æ√æ![xcode-add](screenshots/01-ios-add-to-library.png?raw=true)√æ√æ#### Link `libRNFusedLocation.a` binary with libraries√æ√æClick on your main project file (the one that represents the `.xcodeproj`) select `Build Phases` and drag the static library from the `Products` folder inside the Library you are importing to `Link Binary With Libraries` (or use the `+` sign and choose library from the list):√æ√æ![xcode-link](screenshots/02-ios-add-to-build-phases.png?raw=true)√æ</details>√æ√æ### 2) Enable Swift Support√æSince the iOS implementation is written in swift, you need to add swift support in your project. It can be done just by adding an empty swift file and a bridging header in your project folder. You have to do it from xcode, otherwise swift compiler flag won't be updated.√æ- Select `File -> New -> File` from xcode√æ- Choose Swift file, name it anything√æ- Click `Next` and say yes when prompted if you‚Äôd like to generate a bridging header (important)√æ√æ### 3) Update `info.plist`√æThere are three info.plist keys for location service√æ- NSLocationWhenInUseUsageDescription√æ- NSLocationAlwaysUsageDescription√æ- NSLocationAlwaysAndWhenInUseUsageDescription√æ√æUnless you need background location update, adding only the first key will be enough. To enable background location update, you need to add all the keys in `info.plist` and add location as a background mode in the `Signing & Capabilities -> Capability` tab in Xcode.√æ√æ## Android√æ√æ### 1) Linking√æFor RN 0.60 or higher, no manual linking is needed. You can override following gradle properties from your root build.gradle file.√æ√æ```gradle√æext {√æ  compileSdkVersion   = 28√æ  buildToolsVersion   = ""28.0.3""√æ  minSdkVersion       = 16√æ  targetSdkVersion    = 28√æ√æ  // Any of the following will work√æ  googlePlayServicesVersion      = ""17.0.0""√æ  // playServicesVersion         = ""17.0.0""√æ  // playServicesLocationVersion = ""17.0.0""√æ}√æ```√æ√æ<details>√æ<summary>0.59 or below</summary>√æ√æ1. In `android/app/build.gradle`√æ√æ    ```gradle√æ    ...√æ    dependencies {√æ        ...√æ        implementation project(':react-native-geolocation-service')√æ    }√æ    ```√æ√æ    If you've defined [project-wide properties](https://developer.android.com/studio/build/gradle-tips#configure-project-wide-properties) (recommended) in your root build.gradle, this library will detect the presence of the following properties:√æ√æ    ```gradle√æ    buildscript {√æ        /**√æ         + Project-wide Gradle configuration properties√æ         */√æ        ext {√æ            compileSdkVersion   = 28√æ            minSdkVersion       = 16√æ            targetSdkVersion    = 28√æ            buildToolsVersion   = ""28.0.3""√æ            googlePlayServicesVersion = ""17.0.0""√æ        }√æ        repositories { ... }√æ        dependencies { ... }√æ    }√æ    ```√æ√æ    If you do not have *project-wide properties* defined and have a different play-services version than the one included in this library, use the following instead. But play service version should be `11+` or the library won't work.√æ√æ    ```gradle√æ    ...√æ    dependencies {√æ        ...√æ        implementation(project(':react-native-geolocation-service')) {√æ            exclude group: 'com.google.android.gms', module: 'play-services-location'√æ        }√æ        implementation 'com.google.android.gms:play-services-location:<insert your play service version here>'√æ    }√æ    ```√æ√æ2. In `android/setting.gradle`√æ√æ    ```gradle√æ    ...√æ    include ':react-native-geolocation-service'√æ    project(':react-native-geolocation-service').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-geolocation-service/android')√æ    ```√æ√æ3. In `MainApplication.java`√æ√æ    ```java√æ    ...√æ    import com.agontuk.RNFusedLocation.RNFusedLocationPackage;√æ√æ    public class MainApplication extends Application implements ReactApplication {√æ        ...√æ        @Override√æ        protected List<ReactPackage> getPackages() {√æ            return Arrays.<ReactPackage>asList(√æ                ...√æ                new RNFusedLocationPackage()√æ            );√æ        }√æ    }√æ    ```√æ</details>√æ√æ### 2) Permissions√æAdd permission in your `AndroidManifest.xml` file based on your project requirement.√æ```xml√æ<uses-permission android:name=""android.permission.ACCESS_COARSE_LOCATION"" />√æ<uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION"" />√æ```√æ√æ# Usage√æSince this library was meant to be a drop-in replacement for the RN's Geolocation API, the usage is pretty straight forward, with some extra error cases to handle.√æ√æ> One thing to note, for android this library assumes that location permission is already granted by the user, so you have to use `PermissionsAndroid` to request for permission before making the location request.√æ√æ```js√æ...√æimport Geolocation from 'react-native-geolocation-service';√æ...√æ√æcomponentDidMount() {√æ  if (hasLocationPermission) {√æ    Geolocation.getCurrentPosition(√æ        (position) => {√æ          console.log(position);√æ        },√æ        (error) => {√æ          // See error code charts below.√æ          console.log(error.code, error.message);√æ        },√æ        { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }√æ    );√æ  }√æ}√æ```√æ√æ# API√æ#### `async requestAuthorization(authorizationLevel) (iOS only)`√æRequest location permission based on the authorizationLevel parameter. Can be either `""whenInUse""` or `""always""`. You have to configure the plist keys during setup.√æ√æWhen promise resolves, returns the status of the authorization.√æ- `disabled` - Location service is disabled√æ- `granted` - Permission granted√æ- `denied` - Permission denied√æ- `restricted` - Permission restricted√æ√æ#### `getCurrentPosition(successCallback, ?errorCallback, ?options)`√æ - **successCallback**: Invoked with latest location info.√æ - **errorCallback**: Invoked whenever an error is encountered.√æ - **options**:√æ√æ    | Name | Type | Default | Description |√æ    | -- | -- | -- | -- |√æ    | timeout | `ms` | `INFINITY` | Request timeout |√æ    | maximumAge | `ms` | `INFINITY` | How long previous location will be cached |√æ    | enableHighAccuracy | `bool` | `false` | Use high accuracy mode√æ    | distanceFilter | `m` | `0` | Minimum displacement in meters√æ    | showLocationDialog | `bool` | `true` | Whether to ask to enable location in Android (android only)√æ    | forceRequestLocation | `bool` | `false` | Force request location even after denying improve accuracy dialog (android only)√æ√æ#### `watchPosition(successCallback, ?errorCallback, ?options)`√æ - **successCallback**: Invoked with latest location info.√æ - **errorCallback**: Invoked whenever an error is encountered.√æ - **options**:√æ√æ    | Name | Type | Default | Description |√æ    | -- | -- | -- | -- |√æ    | enableHighAccuracy | `bool` | `false` | Use high accuracy mode√æ    | distanceFilter | `m` | `100` | Minimum displacement between location updates in meters√æ    | interval | `ms` | `10000` |  Interval for active location updates (android only)√æ    | fastestInterval | `ms` | `5000` | Fastest rate at which your application will receive location updates, which might be faster than `interval` in some situations (for example, if other applications are triggering location updates) (android only)√æ    | showLocationDialog | `bool` | `true` | whether to ask to enable location in Android (android only)√æ    | forceRequestLocation | `bool` | `false` | Force request location even after denying improve accuracy dialog (android only)√æ    | useSignificantChanges | `bool` | false | Uses the battery-efficient native significant changes APIs to return locations. Locations will only be returned when the device detects a significant distance has been breached (iOS only)√æ√æ#### `clearWatch(watchId)`√æ - watchId (id returned by `watchPosition`)√æ√æ#### `stopObserving()`√æStops observing for device location changes. In addition, it removes all listeners previously registered.√æ√æ# Error Codes√æ| Name | Code | Description |√æ| --- | --- | --- |√æ| PERMISSION_DENIED | 1 | Location permission is not granted |√æ| POSITION_UNAVAILABLE | 2 | Location provider not available |√æ| TIMEOUT | 3 | Location request timed out |√æ| PLAY_SERVICE_NOT_AVAILABLE | 4 | Google play service is not installed or has an older version (android only) |√æ| SETTINGS_NOT_SATISFIED | 5 | Location service is not enabled or location mode is not appropriate for the current request (android only) |√æ| INTERNAL_ERROR | -1 | Library crashed for some reason or the `getCurrentActivity()` returned null (android only) |√æ√æ# FAQ√æ1. **Location timeout still happening ?**√æ√æ    Try the following steps: (Taken from [here](https://support.strava.com/hc/en-us/articles/216918967-Troubleshooting-GPS-Issues))√æ    - Turn phone off/on√æ    - Turn GPS off/on√æ    - Disable any battery saver settings, including Power Saving Mode, Battery Management or any third party apps√æ    - Perform an ""AGPS reset"": Install the App GPS Status & Toolbox, then in that app, go to Menu > Tools > Manage A-GPS State > Reset√æ√æ    Adjusting battery saver settings on different devices:√æ√æ    - HTC: Access your phone settings > battery > power saving mode > battery optimization > select your app > don't optimize > save√æ    - Huawei: Turn Energy Settings to Normal and add your app to ""Protected Apps""√æ    - LG If you're running Android 6 or higher: Settings > battery & power saving > battery usage > ignore optimizations > turn ON for your app√æ    - Motorola If you're running Android 6 or higher: Battery > select the menu in the upper right-hand corner > battery optimization > not optimized > all apps > select your app > don't optimize√æ    - OnePlus (using OxygenOS Settings): Battery > battery optimization > switch to 'all apps' > select your app > don't optimize√æ    - Samsung: Access battery settings > app power saving > details > your app > disabled√æ    - Sony If you're running Android 6 or higher: Battery > from the menu in the upper right-hand corner > battery optimization > apps > your app√æ    - Xiaomi (MIUI OS) If you're running Android 6 or higher: Access your phone settings > additional settings > battery and performance > manage battery usage > apps > your app"
ilopmar/alexa-frases-de-peliculas,101,5,3,6,User,False,,,,8,Java,"{'': 2, 'md': 1, 'gradle': 1, 'bat': 1}",11,1,0,1,0,719,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,126,,328,,# Alexa Frases de pel√≠culas #
OrPolyzos/car-repair-app,1429,2,3,6,User,False,Spring boot (web) application for a car-repair shop,,,4,Java,"{'': 2, 'xml': 1}",174,2,0,4,0,984,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,19,,42,,
sbtqa/tutorials,11056,24,11,12,Organization,False,Tutorials and Courses,,,5,Java,"{'': 1, 'md': 1}",184,9,0,6,0,802,True,0,0,0,0,0,26,0,0,8,0,0,0,0,0,0,0,42,4,,,# Various SberTech Tutorials and Courses √æ√æ[![official SberTech project](https://github.com/sbtqa/tutorials/blob/master/badges/sbt-official.png)](http://sber-tech.com/)√æ[![QA SberTech Team](https://github.com/sbtqa/tutorials/blob/master/badges/sbt-teem.png)](http://sber-tech.com/)
LP-Messaging/Android-Messaging-SDK,267153,21,29,21,Organization,False,LivePerson Android Messaging SDK,http://www.liveperson.com/,,3,Java,{'md': 1},190,33,50,10,0,1631,True,27,11,1,0,3,63,1,8,7,0,2,12,590,857,0,0,2,0,,,"# Android Messaging SDK v4.4.2√æ√æIn-App Messaging SDK v4.4.2 for Android includes the Following:√æ* Fixed unread count not being rest on pusher.√æ√æPlease note, the SDK can be integrated to the app using Gradle dependency. For more information please refer to [the developers community](https://developers.liveperson.com/android-quickstart.html).√æ√æFull release notes can be found [here](https://developers.liveperson.com/mobile-app-messaging-sdk-for-android-all-release-notes.html).√æ√æ# For Android Messaging SDK v5.0.0 or higher(AndroidX support) [here](https://github.com/LP-Messaging/Android-Messaging-SDK/tree/androidX_master)."
telstra/open-kilda,259231,50,29,42,Organization,False,OpenKilda is an open-source OpenFlow controller initially designed for use in a global network with high control-plane latency and a heavy emphasis on latency-centric data path optimisation.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'example': 1, '': 2, 'yml': 1, 'md': 3, 'txt': 1, 'pdf': 1}",6288,164,167,41,0,1328,True,341,919,60,35,32,2265,29,351,100,5,15,397,415827,389979,0,0,50,2,,,"---√æKILDA CONTROLLER√æ---√æ[![Build Status](https://travis-ci.org/telstra/open-kilda.svg?branch=develop)](https://travis-ci.org/telstra/open-kilda)[![Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=org.openkilda%3Akilda-parent&metric=alert_status)](https://sonarcloud.io/dashboard?id=org.openkilda%3Akilda-parent)√æ√æ## Introduction√æ√æNote that the build process will install additional packages. It is recommended that you build on a virtual machine.√æ√æ### Prerequisites√æ√æThe followings are required for building Kilda controller:√æ - Gradle 6.0+√æ - Maven 3.3.9+√æ - JDK8√æ - Python 2.7+√æ - Python 3.5+√æ - Docker Compose 1.20.0+√æ - GNU Make 4.1+√æ - Open vSwitch 2.9+√æ √æFor running virtual environment you additionally need linux kernel 4.18+ for OVS meters support√æ√æOn Ubuntu 18.04, you can install those dependencies like this:√æ√æ```√æapt-get install maven openjdk-8-jdk python python3 docker.io docker-compose virtualenv make openvswitch-switch linux-generic-hwe-18.04 python3-setuptools python3-pip√æ```√æ√æ#### Gradle√æYou can either install Gradle, or use Gradle wrapper:√æ - Option 1 - Install Gradle (ensure that you have gradle 6.0 or later) - https://gradle.org/install/√æ√æ - Option 2 - Use Gradle wrapper. The Kilda repository contains an instance of Gradle Wrapper √æ which can be used straight from here without further installation.√æ√æ#### Docker√æNote that your build user needs to be a member of the docker group for the build to work. √æDo that by adding the user to /etc/groups and logging out and back in again.√æ√æ#### Maven√æYou also need to increase the maven RAM limit at least up to 1G.√æ√æ```export MAVEN_OPTS=""-Xmx1g -XX:MaxPermSize=128m""```√æ√æ#### Python√æEnsure that you have Python2 installed since some of build steps depends on it. √æPossible option for that using virtual environment (`virtualenv`) with python interpreter version provided:√æ√æ```√ævirtualenv --python=python2 .venv√æ. .venv/bin/activate√æ```√æ√æEnsure that you have `tox` installed:√æ```√æpip install -U pip√æpip install tox√æ```√æ#### Confd√æAlso, don't forget to install confd. This tool is used for creating config/properties files from templates. √æTo install it execute the following command:√æ√æ```√æwget https://github.com/kelseyhightower/confd/releases/download/v0.16.0/confd-0.16.0-linux-amd64 -O /usr/local/bin/confd√æchmod +x /usr/local/bin/confd√æ```√æ√æ### How to build Kilda Controller√æ√æFrom the base directory run the following command:√æ√æ```√æmake build-latest√æ```√æ√æNote that additional Ubuntu packages will be installed as part of the build process.√æ√æ### How to clean Kilda Controller√æ√æFrom the base directory run the following command:√æ√æ```√æmake clean√æ```√æ√æ### How to run Kilda Controller√æ√æ__NB: To run Kilda, you should have built it already (ie the previous section).__√æThis is particularly important because docker-compose will expect some of the√æcontainers to already exist.√æ√æFrom the base directory run the following command:√æ√æ```√æmake up-test-mode√æ```√æ√æ### How to debug Kilda Controller components√æ√æAn important aspect of troubleshooting errors and problems in your code is to avoid them in the first place. It's not√æalways easy enough so we should have a reliable mechanism. Adding any diagnostic code may be helpful, but there are more√æconvenient ways. Just a few configuration changes and you'll be able to use a debug toolkit.√æAs a basis, let's take the northbound component. This is a simple REST application providing the interface for interaction√æwith the switch, link, flow, feature, health-check controllers. The first thing that we need to do is to add√æ√æ```""-agentlib:jdwp=transport=dt_socket,address=50505,suspend=n,server=y""```√æ√æto the ```CMD``` block in ```docker/northbound/Dockerfile```, where ```50505``` is the port we‚Äôll use for debugging.√æIt can be any port, it‚Äôs up to us. The final file will be the following:√æ√æ```√æARG base_image=kilda/base-ubuntu√æFROM ${base_image}√æ√æADD BUILD/northbound/libs/northbound.jar /app/√æWORKDIR /app√æCMD [""java"", ""-XX:+PrintFlagsFinal"", ""-XX:+UnlockExperimentalVMOptions"", ""-XX:+UseCGroupMemoryLimitForHeap"", ""-agentlib:jdwp=transport=dt_socket,address=50505,suspend=n,server=y"", ""-jar"", ""northbound.jar""]√æ```√æ√æSince debugging is done over the network, that also means we need to expose that port in Docker. For that purpose we need√æto add  ```""50505:50505""``` to the northbound ```ports``` block in ```docker-compose.yml``` as in example below.  √æ√æ```√ænorthbound:√æ  container_name: openkilda-northbound√æ  build:√æ    context: docker√æ    dockerfile: northbound/Dockerfile√æ  ports:√æ    - '8088:8080'√æ    - '50505:50505'√æ  ...√æ```√æ√æAfter making those changes we need to configure remote debug in IntelliJ IDEA: navigate to ```Edit Configurations -> Remote```√æand set up the debug port as ```50505```. This completes the main part of the configuration.√æ√æNext, we just run ```docker-compose up```. If everything above was done correctly you must see:√æ√æ```""java -agentlib:jdwp=transport=dt_socket,address=50505,suspend=n,server=y -jar northbound.jar""```√æ√æin the command column for the open-kilda_northbound. The command ```docker ps -a --no-trunc | grep northbound``` could√æbe helpful. Also check open-kilda_northbound logs, the log record√æ√æ```Listening for transport dt_socket at address: 50505```√æ√æmust be presented.√æ√æAfter all these steps you just need to run the debugger. Console log should contain the following message:√æ√æ```Connected to the target VM, address: 'localhost:50505', transport: 'socket'```√æ√æTo check how debugging works we need to:√æ- set up a breakpoint;√æ- make a call to execute some functionality;√æ√æIn some cases, we must have an approach for debugging a deploy process for a couple (or more) components that interact with each other. Let's√æsuppose both of them work under docker and some component doesn't belong to us and provided as a library. The typical case:√æWorkflowManager (further WFM) and Storm. The approach that is going to be used is almost the same as for northbound but there are√ænuances.√æFirst of all, we need to check which version of Storm is used in Open Kilda Controller. For that open ```docker/storm/Dockerfile```√æand find the version of Storm. In our case, the Storm version is ```1.1.0```. To be able to debug Storm we have to clone√æthe sources from the GitHub repo ```https://github.com/apache/storm.git``` and switch to the release ```1.1.0```.√æ```git checkout -b 1.1.0 e40d213```. Information about releases can be found here ```https://github.com/apache/storm/releases/```√æ√æThen go to ```docker/wfm/Dockerfile``` and add ```ENV STORM_JAR_JVM_OPTS ""-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=50506""```√æThe final file should be as in example below:√æ√æ```√æARG base_image=kilda/storm:latest√æFROM ${base_image}√æ√æENV STORM_JAR_JVM_OPTS ""-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=50506""√æ...√æ√æ```√æ√æAnd it only remains to add a port ```50506``` for the WFM contaner as in the example below:√æ√æ```√æwfm:√æ  container_name: wfm√æ  build:√æ    context: docker√æ    dockerfile: wfm/Dockerfile√æ  ...√æ  ports:√æ    - ""50506:50506""√æ```√æ√æThen we should configure remote debugging in IntelliJ IDEA and the set up the debug port as ```50506```. After executing√æ```docker-compose up``` you should see the following log record ```Listening for transport dt_socket at address: 50506```√æin the WFM logs. As soon as you see it run the debugger - you'll able to debug both components: WFM and Storm.√æ√æIn order to debug a topology, for example, ```NetworkTopology```: √æcreate (or open if already exists) ```NetworkTopology.main``` application debug configuration and add ```--local``` to Program arguments, √æexecute ```docker-compose up``` and run in the debug mode ```NetworkTopology.main```.√æ√æ### How to run tests√æPlease refer to the [Testing](https://github.com/telstra/open-kilda/wiki/Testing)√æsection on our Wiki.√æ√æ### How to build / test locally without containers√æ√æStart with the following√æ√æ```√æmake unit√æ```√æ√æFrom there, you can go to specific projects to build / develop / unit test.√æJust follow the _make unit_ trail.  Most projects have a gradle ```build``` or maven ```target```.√æ√æ### How to build / test key use cases√æ√æLook in the `docker/hacks/usecase` directory and you'll find several makefiles that will assist√æwith the development and testing of that use case.√æ√æAs an example, you can execute the following command for more information on the __network√ædiscovery__ use case:√æ√æ```√æmake -f docker/hacks/usecase/network.disco.make help√æ```√æor√æ```√æcd docker/hacks/usecase√æmake -f network.disco.make help√æ```√æ√æ√æ### How to use a VM to do development√æ√æVirtualBox and Vagrant are popular options for creating VMs.√æA VM may be your best bet for doing development with Kilda.√æThere are a set of files in the source tree that will facilitate this.√æ√æ* __NB1: Ensure you have VirtualBox and Vagrant installed and on the path__√æ* __NB2: You'll re-clone kilda so that there aren't any write permission issues√æ    between the guest VM and the host.__√æ√æSteps:√æ√æ1. From the root directory, look at the Vagrantfile; feel free to change its parameters.√æ2. `vagrant up` - create the VM; it'll be running after this step.√æ3. `vagrant ssh` - this will log you into the vm.√æ4. `ssh-keygen -t rsa -C ""your_email@example.com""` - you'll use this for GitHub.  Press√æ<return> for each question; three in total.√æ5. Add the ~/.ssh/id-rsa.pub key to your GitHub account so that you can clone kilda√æ```bash√æcat ~/.ssh/id_rsa.pub√æ```√æ6. Clone and Build√æ```√æ# NB: Instead of putting it in vm-dev, you can use /vagrant/vm-dev√æ#     This has the added benefit that the code will appear outside the VM√æ#     i.e. /vagrant is shared with the same directory as the Vagrantfile√ægit clone git@github.com:<your_github_account>/open-kilda.git vm-dev√æcd vm-dev√ægit checkout mvp1rc√æmake build-base√ædocker-compose build√æmake unit√æmake up-test-mode√æ```√æ√æ### How to use confd for config/properties templating√æ√æPre-requirements: you need confd version v0.14.0+ for processing yams/json as backend. √æYou can download it from [official confd site](https://github.com/kelseyhightower/confd/blob/master/docs/installation.md)√æ√æWe have confd for managing config/properties files from templates. Confd configs, templates and variable file stored in confd/ folder.√æ`confd/conf.d/*.toml` - files with desctiption how to process templates (src. path, dst.path.... etc)√æ`confd/templates/*/*.tmpl` - templates in go-template format√æ`confd/vars/main.yaml` - file with all variables substituted in templates√æ√æ#### How should I add new template√æ√æ1. create and place template file to confd/templates/ folder√æ2. create and place template description in confd/conf.d/ filder√æ3. change (if needed) vars in confd/main.yaml√æ4. run: `make update-props-dryrun` for checking that templates can be processed√æ5. run: `make update-props` for applying templates√æ√æ#### Common use cases√æAn example, you already have neo4j server, and want to use it instead of dockerized neo4j. √æYou can add neo4j endpoints to confd/vars/main.yaml and create properties template for services which use neo4j:√æ√æconfd/conf.d/base-storm-topology.topologies.toml:√æ```√æ[template]√æsrc = ""base-storm-topology/topology.properties.tmpl""√ædest = ""src-java/base-topology/base-storm-topology/src/release/resources/topology.properties""√ækeys = [ ""/"" ]√æmode = ""0644""√æ```√æ√æconfd/vars/main.yaml:√æ```√ækilda_neo4j_host: ""neo4j""√ækilda_neo4j_user: ""neo4j""√ækilda_neo4j_password: ""temppass""√æ```√æ√æconfd/templates/base-storm-topology/topology.properties.tmpl√æ```√æ...√æneo4j.uri = bolt://{{ getv ""/kilda_neo4j_host"" }}:{{ getv ""/kilda_neo4j_bolt_port"" }}√æneo4j.user = {{ getv ""/kilda_neo4j_user"" }}√æneo4j.password = {{ getv ""/kilda_neo4j_password"" }}√æ...√æ```√æ√æIn this example we will generate file ```src-java/base-topology/base-storm-topology/src/release/resources/topology.properties```√æfrom template ```confd/templates/base-storm-topology/topology.properties.tmpl```√æ√æ### How enable travis CI√æSomeone with admin rights should log in using github account to https://travis-ci.org and on the page√æhttps://travis-ci.org/profile/telstra activate telstra/open-kilda repository.√æAll configurations for travis are located in .travis.yml. For adding new scripts you should create new line under script parameter.√æ```√æscript:√æ- make run-test√æ- new command√æ```"
USGS-CIDA/aqcu-vdi-report,100,0,13,5,Organization,False,AQCU V-Diagram Report,,,11,Java,"{'': 2, 'yml': 2, 'md': 2, 'xml': 2}",56,3,2,4,1,609,True,0,0,0,0,1,19,1,5,9,0,1,6,103,121,0,0,197,12,,,"# aqcu-vdi-report√æ√æ√æ[![Build Status](https://travis-ci.org/USGS-CIDA/aqcu-vdi-report.svg?branch=master)](https://travis-ci.org/USGS-CIDA/aqcu-vdi-report) [![Coverage Status](https://coveralls.io/repos/github/USGS-CIDA/aqcu-vdi-report/badge.svg?branch=master)](https://coveralls.io/github/USGS-CIDA/aqcu-vdi-report?branch=master)√æ√æ## Aquarius Customization V-Diagram Report√æ√æThis report displays a plot showing relation between field discharge measurements and a stage-discharge relation defined by a rating curve. Information for field discharge measurements, historical measurements, shift curves, min/max gage height (stage) are all displayed on the plot.√æ√æIt is built as a Docker container.√æ√æConfigured functionality includes:√æ√æ- **Swagger API Documentation** https://localhost:7510/swagger-ui.html√æ√æ## Running the Application√æ√æThis application can be run locally using the docker container built during the build process or by directly building and running the application JAR. The included `docker-compose` file has 3 profiles to choose from when running the application locally:√æ√æ1. aqcu-vdi-report: This is the default profile which runs the application as it would be in our cloud environment. This is not recommended for local development as it makes configuring connections to other services running locally on your machine more difficult.√æ2. aqcu-vdi-report-local-dev: This is the profile which runs the application as it would be in the aqcu-local-dev project, and is configured to make it easy to replace the aqcu-vdi-report instance in the local-dev project with this instance. It is run the same as the `aqcu-vdi-report` profile, except it uses the docker host network driver.√æ3. aqcu-vdi-report-debug: This is the profile which runs the application exactly the same as `aqcu-vdi-report-local-dev` but also enables remote debugging for the application and opens up port 8000 into the container for that purpose.√æ√æBefore any of these options are able to be run you must also generate certificates for this application to serve using the `create_certificates` script in the `docker/certificates` directory. Additionally, this service must be able to connect to a running instance of Water Auth when starting, and it is recommended that you use the Water Auth instance from the `aqcu-local-dev` project to accomplish this. In order for this application to communicate with any downstream services that it must call, including Water Auth, you must also place the certificates that are being served by those services into the `docker/certificates/import_certs` directory to be imported into the Java TrustStore of the running container.√æ√æTo build and run the application after completing the above steps you can run: `docker-compose up --build {profile}`, replacing `{profile}` with one of the options listed above."
vector4wang/java-learning-quick,8400,5,1,7,User,False,:books:Ëá™Â∑±Âπ≥Êó∂ÂØπjavaÁöÑÂ≠¶‰π†‰ª£Á†ÅÁ¨îËÆ∞ÂíåÊÄªÁªìÈÉΩÂú®ËøôÈáå‰∫ÜÔºåÂ∑©Âõ∫‰∏éÊèêÂçáËá™Â∑±,,,13,Java,"{'': 1, 'md': 2, 'xml': 1, 'jpg': 1, 'txt': 1}",125,1,0,2,2,776,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,80,,232,,# java learning √æ√æjava ÁöÑÂ≠¶‰π†„ÄÅÁßØÁ¥Ø‰∏éÊÄªÁªì√æ√æ> 2019Âπ¥2Êúà26Êó•10:36:16 ÈáçÊûÑ‰∫ÜÈ°πÁõÆÁªìÊûÑÔºåÊîπ‰∏∫‰ΩøÁî®maven‰Ωú‰∏∫ÁâàÊú¨ÁÆ°ÁêÜÊØïÁ´üÔºå**no maven no project**√æ√æ√æ√æ√æ### feature_learn√æ√æ#### rpc√æ√æ   ‰ΩøÁî®javaÂÆûÁé∞ÁÆÄÂçïÁöÑrpcË∞ÉÁî®ËøáÁ®ãÔºåÊúÄÂü∫Êú¨ÁöÑÊµÅÁ®ãÊêûÊáÇ‰∫ÜÔºåÂÜçÂéª‰∫ÜËß£ÊàêÁÜüÁöÑÊ°ÜÊû∂ÔºåÂ¶ÇdubboÂ∞±‰ºöÂÆπÊòìÁêÜËß£‰∏Ä‰∫õ√æ   √æ#### stack√æJVM ÂÜÖÂ≠òÁªìÊûÑ‰∫ÜËß£‰∏ã√æ√æ√æhttp://www.importnew.com/23746.html√æhttps://blog.csdn.net/sted_zxz/article/details/72476673√æ√æ√æ#### jmh√æJMH ÊòØ‰∏Ä‰∏™Áî± OpenJDK/Oracle ÈáåÈù¢ÈÇ£Áæ§ÂºÄÂèë‰∫Ü Java ÁºñËØëÂô®ÁöÑÂ§ßÁâõ‰ª¨ÊâÄÂºÄÂèëÁöÑ Micro Benchmark Framework√æ√æÂ≠¶‰π†ÂÖ•Èó®: http://blog.dyngr.com/blog/2016/10/29/introduction-of-jmh/√æÂÆòÊñπÁ§∫‰æã: http://hg.openjdk.java.net/code-tools/jmh/file/tip/jmh-samples/src/main/java/org/openjdk/jmh/samples/
dmitrijsbraslis/qa2Cold,16,3,2,1,User,False,,,,2,Java,{'xml': 1},12,1,0,1,0,628,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,14,,10,,
eclipse/kapua,28533,154,40,142,Organization,False,,,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",32,Java,"{'': 2, 'yml': 2, 'md': 4, 'xml': 1, 'sh': 1}",4762,29,30,28,2,1347,True,144,1387,31,27,17,1450,10,134,28,3,11,214,48200,24918,0,0,669,139,,,"<p align=""center"">√æ  <img src=""https://kapua.everyware-cloud.com/img/kapua_logo_vertical.png"" alt=""Eclipse Kapua""/>√æ</p>√æ√æ# Eclipse Kapua&trade;√æ√æTo get started with Eclipse Kapua&trade; please goto the [develop branch](https://github.com/eclipse/kapua/tree/develop). Master will be update soon from it."
bedatadriven/activityinfo,14964,32,10,24,Organization,False,Platform for field-level monitoring and analysis of humanitarian actions,https://www.activityinfo.org,,6,Java,"{'': 1, 'md': 1, 'sql': 1, 'xml': 1}",927,2,68,5,5,3035,False,,,,,0,90,0,1,1,0,1,8,1571,1855,0,0,100,3,,,"ActivityInfo 2.7√æ================√æ√æActivityInfo is an online humanitarian project monitoring tool,√æwhich helps humanitarian organizations to collect, manage, map√æand analyze indicators. ActivityInfo 2.0 was developed to√æsimplify reporting and allow for real time monitoring.√æ√æThis repository is an archive of ActivityInfo 2.7.√æ√æVisit http://www.activityinfo.org to learn more.√æ√æLatest Version√æ--------------√æ√æActivityInfo 4.0 is the latest version.√æ√æVisit https://www.activityinfo.org/signUp to create an account on√æActivityInfo.org and get started.√æ√æ√æ√æBuilding & Running ActivityInfo 2.7√æ-----------------------------------√æ√æ### Prerequisites√æ√æBuilding ActivityInfo requires:√æ* Java JDK 1.8 (may not build on later versions)√æ* Apache Maven 3.3.9√æ* MySQL 5.6√æ√æ### Test Suite√æ√æTo run the test suite, first create an empty test database in a√ælocally-running MySQL database:√æ√æ    mysql -uroot -proot -e ""CREATE DATABASE activityinfo2_test""√æ√æThen run:√æ√æ    mvn -Preset-test-db test√æ√æ√æ### Running Locally√æ√æSet up a local MySQL database:√æ√æ    mysql -uroot -proot -e ""CREATE DATABASE activityinfo2""√æ    mysql -uroot -proot activityinfo2 < activityinfo2.sql√æ√æThen start Jetty:√æ√æ    mvn jetty:run-war -DskipTests√æ√æYou can then navigate to http://localhost:8080/ and login with the√æemail address ""test@example.com"" and password ""notasecret""."
Mantaro/MantaroBot,16415,245,44,146,Organization,False,Multipurpose Discord bot made in Java using JDA.,https://mantaro.site/,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",22,Java,"{'': 6, 'yml': 4, 'md': 3, 'gradle': 2, 'properties': 1, 'bat': 1, 'sh': 1}",3924,5,0,31,6,1383,True,3,170,1,14,1,156,1,25,22,1,10,524,50629,58513,0,0,5,3,,,"<img alt=""Mantaro"" src=""https://i.imgur.com/b00buRW.png""/>√æ√æ**Complete and configurable music, currency and games multipurpose Discord bot**√æ√æ# Using the Official Mantaro Bot√æ√æ**Just one [click](https://add.mantaro.site) and you can add Mantaro to your own server and enjoy its full feature set!**√æ√æYou can see more information about the bot itself by reading the summary on [here](https://github.com/Mantaro/MantaroBot/blob/master/FEATURES.md). This is the file we use to publish our bots on bot lists, too. You're welcome to use it as a guide for your own.√æ√æOur [webpage](https://mantaro.site) is hosted in [Github Pages](https://github.com/Mantaro/mantaro.github.io). If you want to help us make a webpage, you can poke us.√æ√æ# Building your own Mantaro√æ√æ## ‚ö† **Read before attempting**√æThe owners of Mantaro do not recommend compiling Mantaro as it is not documented and most builds here will be extremely unstable and (probably) untested, probably including unfinished features. There's no *stable* branch, all of the features are immediately added to upstream.\√æYou will however sometimes see a legacy branch, a branch we create before publishing larger update containing working code, it is highly recommended to base your building process from the legacy branch, as the master branch will very likely contain broken and non-working code, at least in a case where a legacy branch exist.√æ√æ**We will not provide any support whatsoever in selfhosting or building the bot by yourself.**√æThe reason for this is because not only can the builds in here be highly unstable, but also there are very few people who could actually help with questions regarding this, most of which are busy and not available to answer said questions.√æ√æ## Building the Bot√æ√æ### Prerequisite:√æ√æYou will need the following to utilize all of Mantaro's features (items marked with a star are optional):√æ* RethinkDB√æ* JDK√æ* Redis√æ* Wolke's Weeb API (For most of the action commands)*√æ* Other unmentioned API keys*√æ√æ**We will not provide any support whatsoever in obtaining any of the above.**√æ√æ<sub>Note: The bot does not necessarily need these keys to function, but some functionality might be limited by the lack of them (ex. without Wolke's API keys, you can't use the action commands, and they won't register). Due to the closed nature of that API, we encourage you to submit a patch that would allow custom images to be used on self-hosted instances if you'd like (ex. by pushing your own -local- API server), but keep them in line with the rest of the code.</sub> √æ√æ### Editing Code:√æMantaro isn't a modular bot (sadly), but removing features is fairly easy. You can just remove the respective command or the Module file on the commands directory and everything -should- still work. The exception are some Modules that are required by other Modules.√æMake sure you pay close attention to the [License](https://github.com/Mantaro/MantaroBot/blob/master/LICENSE) as you will be required to disclose your source as well as state any changes made.√æ√æ### Steps for building:√æ<sub>Please do note that you will not receive any help whatsoever while trying to build your own Mantaro.</sub>√æ1.  Make sure you have the prerequisites installed and running.√æ2.  Make sure your Java version is 14 or later.√æ2.  Clone this repository (you can also fork this repo and clone your fork). √æ3.  Open a Terminal in the root folder.√æ4.  Run `gradlew shadowJar`√æ5.  Grab the jar from `build/libs`√æ6.  Install `rethinkdb` and `redis`√æ7.  Create the `mantaro` database with the following tables: mantaro, players, marriages, playerstats, users, guilds, keys, commands, seasonalplayers√æ8.  Run it and prepare yourself to start filling in some config values (open the jar on the command line using java -jar name.jar and wait for it to crash, then it'll generate the config.json file for you to fill).√æ9.  In config.json, set the value needApi to false. (Or clone and run https://github.com/Kodehawa/mantaro-api)√æ√æ### Extra runtime options:√æThis are java arguments that Mantaro parses outside of config.json and that can be dynamically adjusted using a script or similar:√æ*   `-Dmantaro.node-number=x` - Specify the number of this node (important if you use more than once instance)√æ*   `-Dmantaro.shard-count=x` - Specify the amount of shards Mantaro will be starting up. (for all nodes, see below for subsets)√æ*   `-Dmantaro.from-shard=x` - Start Shard Manager from shard X. (inclusive)√æ*   `-Dmantaro.to-shard=y`- Start Shard Manager up to shard Y. (exclusive)√æ*   `-Dmantaro.verbose` - Log all the things.√æ*   `-Dmantaro.verbose_shard_logs` - Show all shard status changes.√æ*   `-Dmantaro.debug` - Start Mantaro with two shards and some extra logging, regardless of the settings above.√æ*   `-Dmantaro.debug_logs` - Use debug logs.√æ*   `-Dmantaro.trace_logs` - Spam your logs.√æ*   `-Dmantaro.log_db_access` - Log all db access. (spams your logs aswell)√æ*   `-Dmantaro.disable-non-allocating-buffer` - Disable LP's non-allocating buffer.√æ√æThe above options can also be used as environment variables by removing `-D`, and replacing `.` with `_`, for example, `-Dmantaro.node-number=x` becomes environment variable `MANTARO_NODE_NUMBER=x`√æ√æ# Tools and Contributors√æ√æ## Tools Mantaro uses√æ*   [JDA by DV8FromTheWorld and MinnDevelopment](https://github.com/DV8FromTheWorld/JDA)√æ*   [Lavaplayer by sedmelluq](https://github.com/sedmelluq/lavaplayer)√æ*   [Lavalink by Frederikam](https://github.com/Frederikam/Lavalink)√æ*   [RethinkDB by the RethinkDB team](http://rethinkdb.com)√æ*   [Redis by the redis team.](https://redis.io)√æ*   [imageboard-api by Kodehawa](https://github.com/Kodehawa/imageboard-api)√æ*   And a lot more!√æ√æ## Important Contributors√æMany thanks to√æ√æ* [@natanbc](https://github.com/natanbc) - A lot of backend improvements and developing. Active.√æ* [@mrlar](https://github.com/mrlar) - Wrote most of the user-facing documentation (no longer maintaining it). Responsible for maintaining/running the Support-Server.√æ* [@haxiz](https://github.com/Haxiz) - Responsible for maintaining user-facing documentation.√æ* [@adriantodt](https://github.com/adriantodt) - Backend development on the early stages of the bot. Was crucial to the development and thanks to him this bot is what it is now. Inactive.√æ√æAnd a lot more people. Check the *[Contributors](https://github.com/Mantaro/MantaroBot/graphs/contributors)* tab!√æ√æWant to contribute? Join our [server](https://support.mantaro.site) and ask in the support channel for what we need help with (you may need to wait with receiving an answer.).\√æAlternatively send us a Pull Request with what you see fit/think we need. However this process may end in a rejected PR more easily.√æ# Legal Stuff√æ√æ## Using our code√æGive credit where credit is due. If you wish to use our code in a project, **please** credit us, and take your time to read our full license. We don't mind you using Mantaro code, **as it is** open-source for a reason, as long as you don't blatantly copy it or refrain from crediting us.√æ√æ### Why is your code of conduct non-existant / stupid / it offends me√æWe shall bring no politics into OSS. Of course I pledge for everyone to treat themselves with respect and I *expect* them to do so. We'll take appropiate action if someone is *actually* being mean, but we don't care about politics and am not bringing them here. Please enjoy the code, contribute if you want and have a nice day.√æ√æ## License√æ√æCopyright (C) 2016-2020 **David Rubio Escares** / **Kodehawa**√æ√æ>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License√æ>as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. √æ>                                                   √æ>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; √æ>without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. √æ>                                                   √æ>See the GNU General Public License for more details. √æ>You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/√æ√æ[The full license can be found here.](https://github.com/Kodehawa/MantaroBot/blob/master/LICENSE)"
swiftype/swiftype-app-search-java,130,1,9,3,Organization,False,Swiftype App Search Java Client,https://swiftype.com/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1, 'png': 1}",50,3,5,8,0,846,True,7,2,0,0,0,21,0,1,10,0,1,3,4,44,0,0,93,7,,,"<p align=""center""><img src=""https://github.com/swiftype/swiftype-app-search-java/blob/master/logo-app-search.png?raw=true"" alt=""Elastic App Search Logo""></p>√æ√æ> **‚ö†Ô∏è This repository is deprecated ‚ö†Ô∏è**√æ>√æ> **Please use our [REST API](https://swiftype.com/documentation/app-search/api/overview) directly. Thank you! - Elastic**√æ√æ√æ> A first-party Java client for building excellent, relevant search experiences with [Elastic App Search](https://www.elastic.co/cloud/app-search-service).√æ√æ## Contents√æ√æ- [Getting started](#getting-started-)√æ- [Usage](#usage)√æ- [Running tests](#running-tests)√æ- [FAQ](#faq-)√æ- [Contribute](#contribute-)√æ- [License](#license-)√æ√æ---√æ√æ## Getting started üê£√æ√æThis project is not currently published to any public repositories. You will need to install the JARs manually.√æ√æThe latest builds can be found here: https://github.com/swiftype/swiftype-app-search-java/releases/latest√æ√æ### Dependencies√æ√æThe Java client depends on:√æ√æ1. [GSON](https://github.com/google/gson)√æ2. [httpclient](https://github.com/apache/httpcomponents-client)√æ√æYou can add the dependices to your Gradle or Maven configuration files.√æ√æ#### Build with Gradle√æ√æAdd the following to your `build.gradle` file:√æ√æ```√ædependencies {√æ  compile 'com.google.code.gson:gson:2.8.2'√æ  compile 'org.apache.httpcomponents:httpclient:4.5.5'√æ}√æ```√æ√æ#### Build with Maven√æ√æAdd the following to your `pom.xml` file:√æ√æ```√æ<dependencies>√æ    <dependency>√æ        <groupId>com.google.code.gson</groupId>√æ        <artifactId>gson</artifactId>√æ        <version>2.8.2</version>√æ    </dependency>√æ√æ    <dependency>√æ        <groupId>org.apache.httpcomponents</groupId>√æ        <artifactId>httpclient</artifactId>√æ        <version>4.5.5</version>√æ    </dependency>√æ</dependencies>√æ```√æ√æ### Build locally√æ√æRun:√æ√æ```bash√æST_APP_SEARCH_HOST_KEY=""YOUR_HOST_KEY"" ST_APP_SEARCH_API_KEY=""YOUR_API_KEY"" gradle build shadowjar√æ```√æ√æThis will generate two jars:√æ√æ1. `swiftype-app-search-<version>-all.jar`: includes all√æ   dependencies.√æ2. `swiftype-app-search-<version>.jar` includes only client code.√æ√æ## Usage√æ√æ### Setup: Configuring the client and authentication√æ√æCreate a new instance of the Swiftype App Search Client. This requires your `HOST_IDENTIFIER`, which√æidentifies the unique hostname of the Swiftype API that is associated with your Swiftype account.√æIt also requires a valid `API_KEY`, which authenticates requests to the API:√æ√æ```java√æimport com.swiftype.appsearch.Client;√æ√æString hostIdentifier = ""host-c5s2mj"";√æString apiKey = ""private-mu75psc5egt9ppzuycnc2mc3"";√æClient client = new Client(hostIdentifier, apiKey);√æ```√æ√æ### Using with App Search Managed Deploys√æ√æThe client can be configured to use a managed deploy by using the√æ`baseUrl` parameter. Since managed deploys do not rely on a `hostIdentifier`.√æ, it can be omitted.√æ√æ```java√æimport com.swiftype.appsearch.Client;√æ√æString apiKey = ""private-mu75psc5egt9ppzuycnc2mc3"";√æString baseUrl = ""http://localhost:3002/api/as/v1/"";√æClient client = new Client(null, apiKey, baseUrl);√æ```√æ√æ### API Methods√æ√æThis client is a thin interface to the Swiftype App Search Api. Additional details for requests and responses can be√æfound in the [documentation](https://swiftype.com/documentation/app-search).√æ√æ#### Indexing: Creating and updating Documents√æ√æ```java√æString engineName = ""favorite-videos"";√æMap<String, Object> doc1 = new HashMap<>();√ædoc1.put(""id"", ""INscMGmhmX4"");√ædoc1.put(""url"", ""https://www.youtube.com/watch?v=INscMGmhmX4"");√ædoc1.put(""title"", ""The Original Grumpy Cat"");√ædoc1.put(""body"", ""A wonderful video of a magnificent cat."");√æ√æMap<String, Object> doc2 = new HashMap<>();√ædoc2.put(""id"", ""JNDFojsd02"");√ædoc2.put(""url"", ""https://www.youtube.com/watch?v=dQw4w9WgXcQ"");√ædoc2.put(""title"", ""Another Grumpy Cat"");√ædoc2.put(""body"", ""A great video of another cool cat."");√æ√æList<Map<String, Object>> documents = Arrays.asList(doc1, doc2);√æ√ætry {√æ  List<Map<String, Object>> response = client.indexDocuments(engineName, documents);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Retrieving Documents√æ√æ```java√æString engineName = ""favorite-videos"";√æList<String> documentIds = Arrays.asList(""INscMGmhmX4"", ""JNDFojsd02"");√æ√ætry {√æ  List<Map<String, Object>> response = client.getDocuments(engineName, documentIds);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ---√æ√æ#### Destroying Documents√æ√æ```java√æString engineName = ""favorite-videos"";√æList<String> documentIds = Arrays.asList(""INscMGmhmX4"", ""JNDFojsd02"");√æ√ætry {√æ  List<Map<String, Object>> response = client.destroyDocuments(engineName, documentIds)√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Listing Engines√æ√æ```java√ætry {√æ  Map<String, Object> response = client.listEngines();√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Retrieving Engines√æ√æ```java√æString engineName = ""favorite-videos"";√æ√ætry {√æ  Map<String, Object> response = client.getEngine(engineName);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Creating Engines√æ√æ```java√æString engineName = ""favorite-videos"";√æ√ætry {√æ  Map<String, Object> response = client.createEngine(engineName);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Destroying Engines√æ√æ```java√æString engineName = ""favorite-videos"";√æ√ætry {√æ  Map<String, Boolean> response = client.destroyEngine(engineName);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Searching√æ√æ```java√æString engineName = ""favorite-videos"";√æString query = ""cat"";√æ√æMap<String, Object> searchFields = new HashMap<>();√æsearchFields.put(""title"", Collections.emptyMap());√æ√æMap<String, Object> idResultField = new HashMap<>();√æidResultField.put(""raw"", Collections.emptyMap());√æMap<String, Object> resultFields = new HashMap<>();√æresultFields.put(""title"", idResultField);√æ√æMap<String, Object> options = new HashMap<>();√æoptions.put(""search_fields"", searchFields);√æoptions.put(""result_fields"", resultFields);√æ√ætry {√æ  Map<String, Object> response = client.search(engineName, query, options);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Multi-Search√æ√æ```java√æString engineName = ""favorite-videos"";√æ√æMap<String, Object> searchFields = new HashMap<>();√æsearchFields.put(""title"", Collections.emptyMap());√æMap<String, Object> idResultField = new HashMap<>();√æidResultField.put(""raw"", Collections.emptyMap());√æMap<String, Object> resultFields = new HashMap<>();√æresultFields.put(""title"", idResultField);√æ√æMap<String, Object> search1 = new HashMap<>();√æsearch1.put(""query"", ""cat"");√æsearch1.put(""search_fields"", searchFields);√æsearch1.put(""result_fields"", resultFields);√æ√æMap<String, Object> search2 = new HashMap<>();√æsearch2.put(""query"", ""grumpy"");√æ√æList<Map> searches = Arrays.asList(search1, search2);√æ√ætry {√æ  List<Map<String, Object>> response = client.multiSearch(engineName, searches);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ#### Query Suggestion√æ√æ```java√æString engineName = ""favorite-videos"";√æString query = ""cat"";√æ√æMap<String, List<String>> documents = new HashMap<>();√ædocuments.put(""fields"", Arrays.asList(""title""));√æ√æMap<String, Object> types = new HashMap<>();√ætypes.put(""documents"", documents);√æ√æMap<String, Object> options = new HashMap<>();√æoptions.put(""size"", 3);√æoptions.put(""types"", types);√æ√ætry {√æ  Map<String, Object> response = client.querySuggestion(engineName, query, options);√æ  System.out.println(response);√æ} catch (ClientException e) {√æ  System.out.println(e);√æ}√æ```√æ√æ## Running tests√æ√æ```bash√æST_APP_SEARCH_HOST_IDENTIFIER=""YOUR_HOST_IDENTIFIER"" ST_APP_SEARCH_API_KEY=""YOUR_API_KEY"" ./gradlew test√æ```√æ√æ## FAQ üîÆ√æ√æ### Where do I report issues with the client?√æ√æIf something is not working as expected, please open an [issue](https://github.com/swiftype/swiftype-app-search-java/issues/new).√æ√æ### Where can I learn more about App Search?√æ√æYour best bet is to read the [documentation](https://swiftype.com/documentation/app-search).√æ√æ### Where else can I go to get help?√æ√æYou can checkout the [Elastic App Search community discuss forums](https://discuss.elastic.co/c/app-search).√æ√æ## Contribute üöÄ√æ√æWe welcome contributors to the project. Before you begin, a couple notes...√æ√æ- Prior to opening a pull request, please create an issue to [discuss the scope of your proposal](https://github.com/swiftype/swiftype-app-search-java/issues).√æ- Please write simple code and concise documentation, when appropriate.√æ√æ## License üìó√æ√æ[MIT](https://github.com/swiftype/swiftype-app-search-java/blob/master/LICENSE) ¬© [Elastic](https://github.com/elastic)√æ√æThank you to all the [contributors](https://github.com/swiftype/swiftype-app-search-java/graphs/contributors)!"
ModernMT/MMT,62469,192,50,51,Organization,False,Neural Adaptive Machine Translation that adapts to context and learns from corrections.,http://www.modernmt.eu/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",16,Java,"{'': 3, 'md': 2, 'txt': 1, 'py': 1}",3296,9,40,12,8,1822,True,27,501,9,9,2,13,2,0,14,8,2,121,7907,6329,0,0,3,3,,modernmt/modernmt,"<div>√æ<img src=""https://user-images.githubusercontent.com/1674891/43786026-f2043344-9a67-11e8-8434-27c324c37214.png"" width=""60%""></img>√æ<h1>Simple. Adaptive. Neural.</h1>√æ<br>√æ<div/>√æ√æWe think that artificial intelligence is going to be the next big thing in our nearby future. It will bring humanity to a new era of access and organization of information.√æLanguage translation is probably the most complex of the human tasks for a machine to learn but it is also the one with the greatest potential to make the world a single family.√æ√æWith this project we want to give our contribution to the evolution of machine translation toward singularity.√æWe want to consolidate the current state of the art into a single easy to use product, evolve it and keeping it an open to integrate the greatest opportunities in machine intelligence like deep learning.√æ√æTo achieve our goals we need a better MT technology that is able to extract more from data, adapt to context and be easy to deploy. We know that the challenge is big, but the reward is potentially so big that we think it is worth trying hard.√æ√æ## About ModernMT√æModernMT is a context-aware, incremental and distributed general purpose Neural Machine Translation technology based on **Fairseq Transformer model**. ModernMT is:√æ- Easy to use and scale with respect to domains, data, and users.√æ- Trained by pooling all available projects/customers data and translation memories in one folder.√æ- Queried by providing the sentence to be translated and optionally some context text.√æ√æModernMT goal is to deliver the quality of multiple custom engines by adapting on the fly to the provided context.√æ√æYou can find more information on: http://www.modernmt.eu/√æ√æ## Your first translation with ModernMT√æ√æ### Installation√æ√æRead [INSTALL.md](INSTALL.md)√æ√æThe distribution includes a small dataset (folder `examples/data/train`) to train and test translations from √æEnglish to Italian. √æ√æ### Create an engine√æ√æWe will now demonstrate how easy it is to train your first engine with ModernMT. *Please notice* however that the provided training set is tiny and exclusively intended for this demo. If you wish to train a proper engine please follow the instructions provided in this guide: [Create an engine from scratch](https://github.com/ModernMT/MMT/wiki/Create-an-engine-from-scratch).√æ√æCreating an engine in ModernMT is this simple:√æ```bash√æ$ ./mmt create en it examples/data/train/ --train-steps 10000√æ```√æ√æThis command will start a fast training process that will last approximately 20 minutes; **not enough to achieve good translation performance**, but enough to demonstrate its functioning. Please consider that a real training will require much more time and parallel data.√æ√æ### Start the engine√æ√æ```bash√æ$ ./mmt start√æ√æStarting engine ""default""...OK√æLoading models...OK√æ√æEngine ""default"" started successfully√æ√æYou can try the API with:√æ curl ""http://localhost:8045/translate?q=world&source=en&target=it&context=computer"" | python -mjson.tool√æ√æ```√æYou can check the status of the engine with the `status` command like this:√æ√æ```bash√æ$ ./mmt status√æ√æ[Engine: ""default""]√æ    REST API:   running - 8045/translate√æ    Cluster:    running - port 5016√æ    Binary log: running - localhost:9092√æ    Database:   running - localhost:9042√æ```√æ√æand finally, you can stop a running engine with the `stop` command.√æ√æ### Start translating√æ√æLet's now use the command-line tool `mmt` to query the engine with the sentence *This is an example*:√æ```√æ$ ./mmt translate ""this is an example""√æad esempio, √® un esempio√æ```√æ√æWhy this translation? An engine trained with so little data, and for so little time is not able to output nothing more than gibberish. Follow these instructions to create a proper engine: [Create an engine from scratch](https://github.com/ModernMT/MMT/wiki/Create-an-engine-from-scratch)√æ√æ*Note:* You can query ModernMT directly via REST API, to learn more on how to do it, visit the [Translate API](https://github.com/modernmt/modernmt/wiki/API-Translate) page in this project Wiki.√æ√æ√æ### How to import a TMX file√æ√æImporting a TMX file is very simple and fast. We will use again the command-line tool `mmt`:√æ```√æ$ ./mmt memory import -x  /path/to/example.tmx√æImporting example... [========================================] 100.0% 00:35√æIMPORT SUCCESS√æ```√æ√æ## Evaluating quality√æ√æHow is your engine performing compared to the commercial state-of-the-art technologies?√æShould I use Google Translate or ModernMT given this data? √æ√æEvaluate helps you answer these questions.√æ√æDuring engine training, ModernMT has automatically removed a subset of sentences corresponding to 1% of the training set (or up to 1200 lines at most).√æWith `evaluate` command, these sentences are used to compute the BLEU Score and Matecat Post-Editing Score against the ModernMT and Google Translate engines.√æ√æWith your engine running, just type:√æ√æ```bash√æ./mmt evaluate√æ```√æ√æThe typical output will be like the following:√æ√æ```√æ============== EVALUATION ==============√æ√æTesting on 980 lines:√æ√æ(1/5) Translating with ModernMT...                               DONE in 1m 27s√æ(2/5) Translating with Google Translate...                       DONE in 1m 3s√æ(3/5) Preparing data for scoring...                              DONE in 0s√æ(4/5) Scoring with Matecat Post-Editing Score...                 DONE in 3s√æ(5/5) Scoring with BLEU Score...                                 DONE in 0s√æ√æ=============== RESULTS ================√æ√æMatecat Post-Editing Score:√æ  ModernMT            : 57.2 (Winner)√æ  Google Translate    : 53.9√æ√æBLEU Score:√æ  ModernMT            : 35.4 (Winner)√æ  Google Translate    : 33.1√æ√æTranslation Speed:√æ  Google Translate    : 0.07s per sentence√æ  ModernMT            : 0.09s per sentence√æ```√æ√æIf you want to test on a different test-set just type:√æ```bash√æ./mmt evaluate --path path/to/your/test-set√æ```√æ√æ*Notes:* To run `evaluate` you need internet connection for Google Translate API and the Matecat Post-Editing Score API.√æModernMT comes with a limited Google Translate API key, Matecat kindly provides unlimited-fair-usage, access to their API to ModernMT users.√æ√æYou can select your own Google Translate API key by typing:√æ```bash√æ./mmt evaluate --gt-key YOUR_GOOGLE_TRANSLATE_API_KEY√æ```√æ√æ## What's next?√æ√æ#### Create an engine from scratch√æFollowing this README you have learned the basic usage of ModernMT. You are now ready to create your engine with your own data; you can find more info in the Wiki [Create an engine from scratch](https://github.com/modernmt/modernmt/wiki/Create-an-engine-from-scratch)√æ√æ#### See API Documentation√æModernMT comes with built-in REST API that allows the user to control every single feature of the tool via a simple and powerful interface. You can find the [API Documentation](https://github.com/modernmt/modernmt/wiki/API-Documentation) in the [ModernMT Wiki](https://github.com/modernmt/modernmt/wiki).√æ√æ#### Run ModernMT cluster√æYou can setup a cluster of ModernMT nodes in order to load balancing translation requests.√æYou can learn more on the Wiki page [ModernMT Cluster](https://github.com/modernmt/modernmt/wiki/MMT-Cluster).√æ√æ#### Use advanced configurations√æIf you need to customize the properties and behaviour of your engines, you can specify advanced settings in their configuration files. √æYou can learn how on the Wiki page [Advanced Configurations](https://github.com/modernmt/modernmt/wiki/Advanced-Configurations)√æ√æ# ModernMT Enterprise Edition√æ√æ**ModernMT is free and Open Source**, and it welcomes contributions and donations. ModernMT is sponsored by its funding members (Translated, FBK, UEDIN and TAUS) and the European Commission.√æ√æ**ModernMT Enterprise Edition** is our cloud solution for professional translators and enterprises. It is proprietary, and it includes an improved adaptation algorithm, ""crafted"" with months of optimization and fine-tuning of the system. Moreover, our Enterprise Edition comes with top-quality baseline models trained on billions of high-quality training data.√æ√æIn a nutshell **ModernMT Enterprise Edition** offers:√æ- Higher quality. A top-notch adaptation algorithm refined with our inner knowledge of the tool.√æ- Designed for intensive datacenter usage. 4x cheaper per MB of text translated.√æ- Pre-trained generic and custom models in 60 language pairs on multiple billion words of premium data.√æ- Support for cluster of servers for higher throughput, load balancing and high availability. √æ- Support for 71 files formats without format loss (Office, Adobe, Localization, etc).√æ- Enterprise Customer Support via Video Conference Call, Phone and Email on business hours (CET) and optionally 24x7.√æ- Custom developments billed per hour of work.√æ√æFor any information please email us at info@modernmt.eu"
chipster/chipster,741437,32,20,15,Organization,False,Chipster is a user-friendly analysis software for high-throughput data.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 4, 'txt': 2, 'xml': 1}",8811,11,246,16,0,4261,True,0,1,0,0,1,45,0,0,7,0,2,3,497,411,0,0,14,1,,,"Chipster Source Package√æ-----------------------√æ√æOut-of-the-box this project can be built with Ant and used with Eclipse.√æSource package structure follows Maven layout, but this is not a Maven project. √æUnlike in Maven, xternal dependencies are located in ""ext"" directory.√æ√æThis is a version of Chipster which is supposed to be running with Chipster Jog Manager component.√æ√æFor license, see LICENSE.TXT.√æ√æ√æBuilding√æ--------√æ√æFor building options, use ""ant -p"" in project root directory.√æ√æFor complete build, use ""ant"". Please note that you need to have keystore √æavailable because client JAR needs to be signed. Any key will do, so √æyou can use ""keytool"" to generate your signing key.√æ√æTo build a freshly checked out project directory, go to command line and√æin the project directory give following command:√æ√ækeytool -genkey -alias chipster -keystore keystore.ks -storepass chipster -validity 1825√æ√æFill in your data to keytool command parameters. You might want to use your organisations name √æalso as your own name as it is shown by Java Web Start. Use the keystore password√æalso as a key password.√æ√æNext, issue command ""ant"", and the project will be built and packages will be available in ""dist""√ædirectory.√æ√æIf you do not want to place your keystore in the project directory, you can create√æa file called alternative-keystore-path.txt and place path to your keystore into it.√æDo not enter a newline after the path! The build script will read that file and√æuse the alternative path into keystore. This is strongly recommended if you do also √æcommits into the public version repository, because placing a private keystore file into √æproject directory creates a risk of publishing it by accident."
lsu-ub-uu/diva-cora-fitnesse,209,0,5,2,Organization,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",6,Java,"{'': 1, 'txt': 1, 'properties': 1, 'xml': 1}",157,22,6,3,0,887,True,0,0,0,0,0,0,0,0,8,0,3,28,583,260,0,0,89,0,,,
michael-simons/biking2,2379,153,23,70,User,False,This is the source code of http://biking.michael-simons.eu,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 2, 'txt': 1, 'md': 1, 'cmd': 1, 'xml': 3}",293,1,4,4,10,2314,True,0,3,0,0,0,4,0,2,7,0,2,11,526,263,0,0,127,,249,,
anweshaiitp/Anwesha-Android-App,120247,4,3,8,Organization,False,Anwesha 2k18 Android App,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 4, 'md': 1, 'gradle': 2, 'png': 1, 'properties': 1, 'bat': 1, 'log': 1}",554,3,0,13,5,1123,True,2,2,0,0,0,34,0,0,8,0,0,0,0,0,0,0,9,15,,,"# Anwesha-Android-App√æAnwesha 2k19 Android App. Anwesha is the annual techno-cultural fest of IIT Patna. √æ√æ## TODO√æ- [ ] Put in a loader for Sign In/Out√æ- [ ] Make a menu in My Profile for Sign Out√æ- [ ] Make 'Sign Out' sign you out of fb too√æ- \[x] Limit Datepicker date range, and change color√æ- [ ] Remove old Celesta posters and arrays√æ- \[x] Remove extra menu entries on home page√æ- \[x] Fix qr code loading before getting saved (like immediately after registration)√æ- [ ] Reset Password feature√æ- [ ] Remove Password option for facebook logged in users, and make everything else uneditable√æ- [ ] Implement with last year's code for loading events info.√æ- [ ] Change FB login as JSON response changed.√æ- \[x] Comment out schedule and sponsors.√æ- [ ] Add section Pronites (Very Important).√æ- \[x] Create `TEAM` Page."
ProtocolSupport/ProtocolSupportBungee,26863,25,11,24,Organization,False,ProtocolSupport addon for bungee,,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",13,Java,"{'': 4, 'md': 1, 'gradle': 3, 'properties': 1, 'bat': 1}",211,1,0,6,0,1828,True,11,57,1,1,2,14,0,0,8,0,1,3,11,8,0,0,11,4,,,"ProtocolSupportBungee√æ================√æ√æ[![Build Status](https://build.true-games.org/buildStatus/icon?job=ProtocolSupportBungee)](https://build.true-games.org/job/ProtocolSupportBungee/)√æ[![Chat](https://img.shields.io/badge/chat-on%20discord-7289da.svg)](https://discord.gg/x935y8p)√æ<span class=""badge-paypal""><a href=""https://www.paypal.com/cgi-bin/webscr?return=&business=true-games.org%40yandex.ru&bn=PP-DonationsBF%3Abtn_donateCC_LG.gif%3ANonHosted&cmd=_donations&rm=1&no_shipping=1&currency_code=USD"" title=""Donate to this project using Paypal""><img src=""https://img.shields.io/badge/paypal-donate-yellow.svg"" alt=""PayPal donate button"" /></a></span>√æ√æSupport for 1.6, 1.5, 1.4.7, pe clients on BungeeCord<br>√æThis plugin is under development√æ√æImportant notes:√æ* Only latest version of this plugin is supported√æ* This plugin can't be reloaded or loaded not at BungeeCord startup√æ√æ---√æ√æProtocolSupportBungee is a passthrough protocol plugin, not a converter, so servers behind BungeeCord should also support those versions√æ√æAlso servers behind Bungeecord should support https://github.com/ProtocolSupport/ProtocolSupport/wiki/Encapsulation-Protocol√æ√æThe preferred setup is to put ProtocolSupport to all servers behind BungeeCord√æ√æ---√æ√æJenkins: http://build.true-games.org/job/ProtocolSupportBungee/√æ√æ---√æ√æLicensed under the terms of GNU AGPLv3"
openforis/collect-mobile,2089,16,11,7,Organization,False,"Fast, intuitive and flexible data collection Android app for field-based surveys",http://www.openforis.org/tools/collect-mobile.html,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 3, 'md': 2, 'txt': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",733,5,0,3,0,2289,True,5,2,0,0,0,2,0,1,6,0,1,41,990,550,0,0,32,2,,,"Collect Mobile√æ==============√æ√æ##Build instruction√æ* Create a local.properties in project root, containing `sdk.dir=[adt-bundle path]/sdk`√æ* Execute `./gradlew clean build`√æ√æ√æ##Release instruction√æ* Get the keystore with the private key to be used for signing the app√æ* Execute `./release`. You can optionally specify the version name as an argument, if you want it to be different then previous release: `./release 1.1`√æ*√æ* Follow the on-screen instructions√æ* Once the release finishes, the signed APK is located at `android/build/outputs/apk/Collect.apk`"
thiago-cury/aulas-android,606,20,4,8,Organization,False,Exemplos das Aulas de Android ministrados por mim.,,,60,Java,{'md': 1},94,1,0,1,0,1205,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,30,0,,,"# aulas-android√æ√æNesse reposit√≥rio voc√™ encontrar√° todos exemplos das Aulas de Android ministrados por mim.√æ√æ## Sobre mim√æ√æCaso queira saber mais sobre mim, acesse o meu site.√æ√æ[Thiago Cury](http://www.thiagocury.eti.br)√æ√æ# Ordem das aulas√æ√æExemplos das Aulas de Android com Java ministrados por mim. √æ√æOrdem de aprendizagem:√æ√æ## 1 - Criar a primeira aplica√ß√£o para entender a estrutura de um projeto Android√æ√æ- ExCriandoPrimeiraAplicacao√æ√æ## 2 - Aprender a internacionalizar a aplica√ß√£o √æ√æ- ExHelloWordInternacionalizado√æ√æ## 3 - Aprender a enviar mensagens√æ√æ- ExToast√æ- ExAlertDialog√æ- ExAlertDialogComViewCustomizada√æ- ExSnackbar√æ- ExMaterialDialog (Lib)√æ√æ## 4 - Entender os principais eventos√æ√æ- ExEventoBotaoOnClickOnLongClick√æ√æ## 5 - Entender como receber os dados do usu√°rio√æ√æ- ExEntradaDeDadosEditText√æ- ExEntradaDeDadosEditTextComParse√æ- ExEntradaDeDadosEditTextComExpressoesRegulares√æ√æ- ExRadioCheck√æ√æ## 6 - Entender ciclo de vida da aplica√ß√£o√æ√æ- ExCicloDeVida√æ√æ## 7 - Entender diferen√ßa entre Intent implicita e explicita√æ√æ## a - Explicita√æ√æ- ExIntentAbrindoSegundaTela√æ- ExIntentSegundaTelaEnviandoString√æ- ExIntentSegundaTelaEnviandoObjeto√æ- ExIntentEnviandoObjetoComRetorno√æ√æ## b - Implicita√æ√æ- ExIntentImplicitaNativa√æ- ExIntentImplicitaEfetuarLigacao (CheckSelfPermissions)√æ√æ## 8 - Entender ListView/GridView e RecyclerView√æ√æ- ExSpinnerStringArray√æ- ExListViewStringArray√æ√æ- ExSpinnerStringArray√æ- ExListViewArrayAdapter√æ√æ- ExListViewArrayAdapterComCabecalhoERodape√æ- ExListViewArrayAdapterCustomCliente√æ√æ- ExListViewBaseAdapterCustomCliente√æ √æ- ExRecyclerViewCustomCliente√æ- ExRecyclerViewCardViewCliente√æ- ExRecyclerViewCardViewPicassoCliente√æ- ExRecyclerViewCustomClienteOnItemClickOnItemLongClick√æ√æ## 9 - Entender como utilizar Menu√æ√æ- ExMenuActionBaNativoAndroid√æ√æ- ExMenuMaterialDrawerBasico√æ- ExMenuMaterialDrawerComAccountHeader√æ- ExMenuMaterialDrawerComFragment√æ- ExMenuMaterialDrawerComIntent√æ√æ## 10 - Entender como utilizar Fragments√æ√æ- ExFragmentAdicionandoDoisEstaticos√æ- ExFragmentAdicionandoDoisDinamicamente√æ- ExFragmentTrocandoInforma√ß√µes√æ√æ## 11 - Entender o que √© e como consumir JSON√æ√æ- ExConsumindoCEP√æ- EXConsumindoJSONEstaticoCliente√æ- EXConsumindoJSONEstaticoClienteComGSON√æ- EXConsumindoJSONNetflixRoulette (AsyncHTTP)√æ- EXConsumindoJSONNetflixRoulette (Retrofit2)√æ√æ- ExPegandoLocalizacaoUsuarioGoogleAPI√æ- ExPegandoLocalizacaoUsuarioViaGPS√æ√æ## 12 - Entendendo WebView√æ√æ- ExWebView√æ- ExWebViewPaginaHTMLLocal√æ√æ## 13 - Entendendo Maps√æ√æ- ExGoogleMaps√æ√æ## 14 - Banco de dados SQLite nativo√æ√æ- ExBancoSQLiteProduto"
jboss-modules/jboss-modules,7735,207,33,189,Organization,False,A Modular Classloading System,http://jboss-modules.github.io/jboss-modules/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",7,Java,"{'': 2, 'txt': 2, 'md': 1, 'xml': 1}",1097,18,124,45,4,3741,False,,,,,3,256,0,10,1,0,3,9,188,215,329,0,3,0,,,"This is the JBoss Modules project.√æ√æJBoss Modules is a standalone implementation of a modular (non-hierarchical) class loading and execution environment for Java. In other words, rather than a single class loader which loads all JARs into a flat class path, each library becomes a module which only links against the exact modules it depends on, and nothing more. It implements a thread-safe, fast, and highly concurrent delegating class loader model, coupled to an extensible module resolution system, which combine to form a unique, simple and powerful system for application execution and distribution.√æ√æJBoss Modules is designed to work with any existing library or application without changes, and its simple naming and resolution strategy is what makes that possible. Unlike OSGi, JBoss Modules does not implement a container; rather, it is a thin bootstrap wrapper for executing an application in a modular environment. The moment your application takes control, the modular environment is ready to load and link modules as needed. Furthermore, modules are never loaded (not even for resolution purposes) until required by a dependency, meaning that the performance of a modular application depends only on the number of modules actually used (and when they are used), rather than the total number of modules in the system. And, they may be unloaded by the user at any time.√æ√æ## Documentation√æ√æAll documentation lives at https://jboss-modules.github.io/jboss-modules/manual/√æ√æ## Issue tracker√æ√æAll issues can be reported at https://issues.jboss.org/browse/MODULES√æ√æ## Code√æ√æAll code can be found at https://github.com/jboss-modules/jboss-modules√æ√æ## License√æ√æAll code distributed under [ASL 2.0](LICENSE.txt) and [XPP3](XPP3-LICENSE.txt)."
thegenuinegourav/VistArrow,3028,26,3,6,User,False,An Android App that will unleash Vistara Airport Experience.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",15,Java,"{'': 2, 'txt': 1, 'markdown': 1, 'gradle': 2, 'iml': 1, 'properties': 1, 'bat': 1, 'png': 1}",8,1,0,3,6,988,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,123,,95,,"![VistArrow Logo](/app/src/main/res/mipmap-hdpi/ic_launcher.png)  √æ# VistArrow  √æ  √æ#### __*An Android App that will unleash Vistara Airport Experience.*__  √æ  √æ  √æ  √æ### Motivation :muscle:    √æIn Airport, experience for passengers is very varied, while frequent fliers may find the Airport experience very monotonous and at times cumbersome due to congestion and lengthy procedures, infrequent passengers are always fascinated with the airline travel. Passengers do experiences different activities within Airport, from Airport entry to counters to security queues shops to restaurants to lounges and terminals.  √æThese distractions may even lead to the passengers missing their flights.  √æWe wanted to improve their airport experience by simplifying the understanding of airport procedure.  √æ  √æ  √æ  √æ### Description :ledger:    √æVistArrow is an android application designed for passengers, which gives directions (via an Augmented Reality Arrow on Camera Interface) for certain checkpoints that user have to go through.  √æIt uses the GPS technology to calculate the angle between current position & destination coordinates.  √æPaasengers may also search for specific shops in that airport, VistArrow will direct them accordindly.  √æ  √æ  √æ  √æ### How it works :question:  √æOpen the app, it will start guiding the user to go through certain checkpoints prior the onboard.  √æ  √æ  √æ  √æ### Development  √æ  √æWant to contribute? **:pencil:**  √æ  √æTo fix a bug or enhance an existing module, follow these steps:  √æ  √æ1. Fork the repo√æ2. Create a new branch (`git checkout -b exciting-stuff`)√æ3. Make the appropriate changes in the files√æ4. Add changes to reflect the changes made√æ5. Commit your changes (`git commit -am 'exciting-stuff!!'`)√æ6. Push to the branch (`git push origin exciting-stuff`)√æ7. Create a Pull Request  √æ  √æ  √æ### Interested?  √æ  √æIf you find a bug (the app couldn't handle the query and / or gave irrelevant results), kindly open an issue [here](https://github.com/thegenuinegourav/Money-Order/issues/new) by including your search query and the expected result.  √æ  √æIf you'd like to request a new functionality, feel free to do so by opening an issue [here](https://github.com/thegenuinegourav/Money-Order/issues/new) including some sample queries and their corresponding results.  √æ  √æ  √æ√æ### How to Build√æ* launch Android Studio√æ* select **Open an existing Android Studio project**√æ* select the project folder√æ* select menu **Run** -> **Run 'app'**  √æ  √æ  √æ### Articles to Learn√æ* http://stackoverflow.com/questions/12800982/accelerometer-with-low-passfilter-in-android√æ* http://developer.android.com/reference/android/hardware/Sensor.html#TYPE_ACCELEROMETER√æ* http://stackoverflow.com/questions/1884699/android-compass-noise-algorithm√æ* http://en.wikipedia.org/wiki/Low-pass_filter√æ  √æ  √æ  √æ### ScreenShots  √æ<img src=""screenshots/one.png"" width=""400""> <img src=""screenshots/two.png"" width=""400"">"
chatnoir-eu/chatnoir2-mapfile-generator,351,2,2,1,Organization,False,ChatNoir HDFS Map File Generator,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 3, 'md': 1, 'gradle': 3, 'bat': 1}",106,1,0,2,0,1673,False,,,,,0,0,0,0,8,0,0,0,0,0,0,0,7,2,,,"# ChatNoir Map File Generator√æ√æHadoop MapReduce tool to map raw WARC files to HDFS map files.√æThis is the very first step when indexing a new corpus. The map files√æwill serve as input to the actual indexer and will later be used√æto retrieve the raw HTML contents of a document through the web frontend.√æ√æ## Compiling the Sources√æTo build the sources, call  √æ√æ    gradle shadowJar√æ√æfrom this source directory to download third-party dependencies and compile the sources.√æ√æThe generated shadow (fat) JAR will be in `build/libs`. The JAR can be submitted to run on√æa Hadoop cluster. For ease of use, there is a helper script `src/scripts/run_on_cluster.sh` for√æstarting the mapping process."
sadra/AwesomeSpinner,695,56,1,9,User,False,With Awesome Spinner you can implement a material spinner with access to define direction layout and hint text.,http://isapanah.com,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",14,Java,"{'': 4, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",74,6,16,1,4,1124,True,8,8,2,0,1,5,0,0,9,0,0,0,0,0,0,0,39,,120,,"# Awesome Android Spinner√æ[![](https://jitpack.io/v/amlashi-sadra/AwesomeSpinner.svg)](https://jitpack.io/#amlashi-sadra/AwesomeSpinner)√æ[![License](https://img.shields.io/badge/licence-MIT-lightgrey.svg?style=flat)](https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/LICENSE)√æ[![Dependencies](https://img.shields.io/badge/dependencies-non-yellow.svg?style=flat)](#)√æ[![Gitter](https://img.shields.io/badge/gitter-join%20chat-%23E91E63.svg?style=flat)](https://gitter.im/AwesomeSpinner)√æ[![Minimum Android SDK Version](https://img.shields.io/badge/Minimum%20Android%20SDK-14-blue.svg)](#)√æ√æWith **Awesome Spinner** you can implement a material spinner with access to define **direction layout** and **hint text**.√æ√æ![](https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/art/awesome_spinner_rtl.gif)√æ![](https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/art/awesome_spinner_ltr.gif)√æ√æ√æ## Including the library√æ√æ**Step 1.** Add it in your root build.gradle at the end of repositories:√æ```groovy√æallprojects {√æ repositories {√æ  ...√æ  maven { url 'https://jitpack.io' }√æ }√æ}√æ```√æ√æ**Step 2.** Add the dependency:√æ```groovy√æimplementation 'com.github.sadra:AwesomeSpinner:1.5.2'√æ```√æ√æ## How To Use√æ√æ**Step 1.** From very firts, you should add the **Awsome Spinner** component inside of your layout:√æ```xml√æ    <com.isapanah.awesomespinner.AwesomeSpinner√æ        android:id=""@+id/my_spinner""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""wrap_content""/>√æ```√æ√æ- If you want to add a default value for hint just add the `spinnerHint` into your component√æ- The default spinner has `RTL` direction, if you want to declare the direction of spinner just add the `spinnerDirection` to **RTL** or **LTR**√æso the complete example with **LTR** direction and hint text to **Select a category** is:√æ```xml√æ    <com.isapanah.awesomespinner.AwesomeSpinner√æ        android:id=""@+id/my_spinner""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""wrap_content""√æ        app:spinnerDirection=""ltr""√æ        app:spinnerHint=""Select a category"" />√æ```√æ√æ**Step 2.** Define the component class into your activity:√æ```java√æAwesomeSpinner my_spinner = (AwesomeSpinner) findViewById(R.id.my_spinner);√æ```√æThen Create your adapter. For now, there is two way to define apadter:√æ- With String List, define a `List<String>` in your activity and the attach that with your adapter:√æ```java√æList<String> categories = new ArrayList<String>();√æcategories.add(""Automobile"");√æcategories.add(""Ariplane"");√æ√æArrayAdapter<String> categoriesAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, categories);√æ√æmy_spinner.setAdapter(categoriesAdapter);√æ```√æ- With String-Array, define a `string-array` in your `strings.xml` file and attach that with your adapter:√æ```java√æArrayAdapter<CharSequence> provincesAdapter = ArrayAdapter.createFromResource(this, R.array.iran_provinces, android.R.layout.simple_spinner_item);√æ√æspinnerRTL.setAdapter(provincesAdapter, 0);√æ```√æ√æ**Step 3.** For final step, you can create a **Listener** for listening on item selection:√æ```java√æmy_spinner.setOnSpinnerItemClickListener(new AwesomeSpinner.onSpinnerItemClickListener<String>() {√æ    @Override√æ    public void onItemSelected(int position, String itemAtPosition) {√æ        //TODO YOUR ACTIONS√æ    }√æ});√æ```√æ√æ### Additional controls√æthere is some controls for your spinner:√æ√æ| Control | Requierement | Info |√æ| :------------- |:-------------:| :-----|√æ| getSelectedItem() | - | Result = `String`: Returns the selected item |√æ| getSelectedItemPosition() | - | Result = `int`: Returns the selected item position. If there were no selected item, it returns `-1`. |√æ| isSelected() | - | Result = `boolean`: Returns **true** if any item selected, and vice versa. |√æ| setSelection(`NUMBER`) | `int` position | You should pass the **position of item** to select the item programatically. |√æ| setSelection(`TEXT`) | `String` value | You should pass the **item value** to select the item programatically. |√æ| setSpinnerHint(`TEXT`) | `String` value | You should pass a `sting` value as the hint text for the spinner. |√æ| setSpinnerEnable(`BOOLEAN`); | `Boolean` value | If you want enable or disable the spinner, you should call this method. |√æ| isSpinnerEnable() | - | Result = `boolean`: Returns **true** if the spinner is enabled, and vice versa. |√æ| setHintTextColor() | `int` Color | If you need to change the **Spinner Hint Text** color, just call the method and pass you color, ex: `Color.BLUE`. |√æ| setSelectedItemHintColor() | `int` Color | If you need to change the **Selected Item Hint** color, just call the method and pass you color, ex: `Color.BLUE`. |√æ| setDownArrowTintColor() | `int` Color | If you need to change the **Down Arrow** hint color, just call the method and pass you color, ex: `Color.BLUE`. |√æ| setDropDownViewResource(`RESOURCE`) | `int` Resource | If you need to change the **Spinner Row stype**, just call the method and pass you resource, ex: `R.layout.my_sipnner_row_item`. |√æ| clearSelection() | - | It clears the spinner selection. |√æ√æYou can see the [EXAMPLE PROJECT](https://github.com/amlashi-sadra/AwesomeSpinner/tree/master/app/src/main) for more infromation.√æ√æ## License√æ√æThe MIT License (MIT): [https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/LICENSE](https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/LICENSE)√æ√æCopyright (c) 2017 Sadra Isapanah Amlashi√æ√æWebsite: [isapanah.com](http://isapanah.com)√æ√æTwitter: [@sadra_amlashi](https://twitter.com/sadra_amlashi)"
magro/kryo-serializers,1029,325,32,112,User,False,More kryo serializers,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 1, 'yml': 1, 'txt': 1, 'markdown': 1, 'xml': 1}",328,9,35,29,0,3732,True,20,45,1,0,5,53,1,0,0,0,0,0,0,0,2404,0,99,,179,,"A project that provides [kryo](https://github.com/EsotericSoftware/kryo) (v2, v3, v4) serializers for some jdk types and some external libs like e.g. joda time.√æ√æ[![Build Status](https://travis-ci.org/magro/kryo-serializers.png?branch=master)](https://travis-ci.org/magro/kryo-serializers)√æ[![Coverage Status](https://coveralls.io/repos/github/magro/kryo-serializers/badge.svg?branch=master)](https://coveralls.io/github/magro/kryo-serializers?branch=master)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/de.javakaffee/kryo-serializers/badge.svg)](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22de.javakaffee%22%20AND%20a%3Akryo-serializers)√æ√æ# Provided serializers / supporting classes:√æ√æ* ArraysAsListSerializer - serializer for lists created via Arrays#asList(Object...)√æ* CollectionsEmptyListSerializer - for Collections#EMPTY_LIST or lists created via Collections#emptyList()√æ* CollectionsEmptyMapSerializer - for Collections#EMPTY_MAP or maps created via Collections#emptyMap()√æ* CollectionsEmptySetSerializer - for Collections#EMPTY_SET or sets created via Collections#emptySet()√æ* CollectionsSingletonListSerializer - for lists created via Collections#singletonList(Object)√æ* CollectionsSingletonMapSerializer - for maps created via Collections#singletonMap(Object, Object)√æ* CollectionsSingletonSetSerializer - for sets created via Collections#singleton(Object)√æ* CopyForIterateCollectionSerializer - creates a copy of the source collection for writing object data.√æ* CopyForIterateMapSerializer - creates a copy of the source map for writing object data.√æ* DateSerializer - serializer for java.util.Date and subclasses (e.g. java.sql.Date, java.sql.Time, java.sql.Timestamp)√æ* BitSetSerializer - serializer for java.util.BitSet√æ* RegexSerializer - serializer for java.util.regex.Pattern√æ* URISerializer - serializer for java.net.URI√æ* UUIDSerializer - serializer for java.util.UUID√æ* EnumMapSerializer - serializer for EnumMap√æ* EnumSetSerializer - serializer for EnumSet√æ* UnicodeBlockSerializer - serializer for Character.UnicodeBlock√æ* FieldAnnotationAwareSerializer - field serializer that either ignores fields with user-specified annotations or exclusively considers such fields (e.g. useful to ignore all fields annotated with Springs `@Autowired` annotation).√æ* GregorianCalendarSerializer - optimized serializer for (Gregorian)Calendar (24 bytes vs. 1323 bytes with FieldSerializer)√æ* JdkProxySerializer - for jdk proxies (proxies created via Proxy.newProxyInstance)√æ* KryoReflectionFactorySupport - kryo specialization that uses sun's ReflectionFactory to create new instances for classes without a default constructor√æ* SubListSerializers - serializer for lists created via List#subList(int, int)√æ* SynchronizedCollectionsSerializer - for synchronized Collections and Maps created via Collections.synchronized*.√æ* UnmodifiableCollectionsSerializer - for unmodifiable Collections and Maps created via Collections.unmodifiable*.√æ√æ* cglib/CGLibProxySerializer - serializer for CGLib proxies√æ* dexx/ListSerializer - serializer for dexx-collections' List√æ* dexx/SetSerializer - serializer for dexx collecttions' Set√æ* dexx/MapSerializer - serializer for dexx collections' Map√æ* guava/ArrayListMultimapSerializer - serializer for guava-libraries' ArrayListMultimap√æ* guava/ArrayTableSerializer - serializer for guava-libraries' ArrayTable√æ* guava/HashBasedTableSerializer - serializer for guava-libraries' HashBasedTable√æ* guava/HashMultimapSerializer -- serializer for guava-libraries' HashMultimap√æ* guava/ImmutableListSerializer - serializer for guava-libraries' ImmutableList√æ* guava/ImmutableSetSerializer - serializer for guava-libraries' ImmutableSet√æ* guava/ImmutableMapSerializer - serializer for guava-libraries' ImmutableMap√æ* guava/ImmutableMultimapSerializer - serializer for guava-libraries' ImmutableMultimap√æ* guava/ImmutableSortedSetSerializer - serializer for guava-libraries' ImmutableSortedSet√æ* guava/ImmutableTableSerializer - serializer for guava-libraries' ImmutableTable√æ* guava/LinkedHashMultimapSerializer - serializer for guava-libraries' LinkedHashMultimap√æ* guava/LinkedListMultimapSerializer - serializer for guava-libraries' LinkedListMultimap√æ* guava/ReverseListSerializer - serializer for guava-libraries' Lists.ReverseList / Lists.reverse√æ* guava/TreeBasedTableSerializer - serializer for guava-libraries' TreeBasedTable√æ* guava/TreeMultimapSerializer - serializer for guava-libraries' TreeMultimap√æ* guava/UnmodifiableNavigableSetSerializer - serializer for guava-libraries' UnmodifiableNavigableSet√æ* jodatime/JodaDateTimeSerializer - serializer for joda's DateTime√æ* jodatime/JodaIntervalSerializer - serializer for joda's Interval√æ* jodatime/JodaLocalDateSerializer - serializer for joda's LocalDate√æ* jodatime/JodaLocalDateTimeSerializer - serializer for joda's LocalDateTime√æ* jodatime/JodaLocalTimeSerializer - serializer for joda's LocalTime√æ* protobuf/ProtobufSerializer - serializer for protobuf GeneratedMessages√æ* wicket/MiniMapSerializer - serializer for wicket's MiniMap√æ√æ# Usage√æTo be able to use the serializers you have to add the jar to your classpath. If your build tool support maven repositories you can use this dependency:√æ√æ```xml√æ<dependency>√æ    <groupId>de.javakaffee</groupId>√æ    <artifactId>kryo-serializers</artifactId>√æ    <version>0.45</version>√æ</dependency>√æ```√æ√æIt's available in maven central, so you don't need an additional repository definition.√æIf you're managing the classpath differently you can get the jar from the downloads section or [download from maven central](http://repo1.maven.org/maven2/de/javakaffee/kryo-serializers/).√æ√æAfter that's done you can register the custom serializers at the kryo instance. The following code snippet shows how this is done for serializers that can be registered statically (directly for a known class).√æ√æ```java√ækryo.register( Arrays.asList( """" ).getClass(), new ArraysAsListSerializer() );√ækryo.register( Collections.EMPTY_LIST.getClass(), new CollectionsEmptyListSerializer() );√ækryo.register( Collections.EMPTY_MAP.getClass(), new CollectionsEmptyMapSerializer() );√ækryo.register( Collections.EMPTY_SET.getClass(), new CollectionsEmptySetSerializer() );√ækryo.register( Collections.singletonList( """" ).getClass(), new CollectionsSingletonListSerializer() );√ækryo.register( Collections.singleton( """" ).getClass(), new CollectionsSingletonSetSerializer() );√ækryo.register( Collections.singletonMap( """", """" ).getClass(), new CollectionsSingletonMapSerializer() );√ækryo.register( GregorianCalendar.class, new GregorianCalendarSerializer() );√ækryo.register( InvocationHandler.class, new JdkProxySerializer() );√æUnmodifiableCollectionsSerializer.registerSerializers( kryo );√æSynchronizedCollectionsSerializer.registerSerializers( kryo );√æ√æ// custom serializers for non-jdk libs√æ√æ// register CGLibProxySerializer, works in combination with the appropriate action in handleUnregisteredClass (see below)√ækryo.register( CGLibProxySerializer.CGLibProxyMarker.class, new CGLibProxySerializer( kryo ) );√æ// dexx√æListSerializer.registerSerializers( kryo );√æMapSerializer.registerSerializers( kryo );√æSetSerializer.registerSerializers( kryo );√æ// joda DateTime, LocalDate, LocalDateTime and LocalTime√ækryo.register( DateTime.class, new JodaDateTimeSerializer() );√ækryo.register( LocalDate.class, new JodaLocalDateSerializer() );√ækryo.register( LocalDateTime.class, new JodaLocalDateTimeSerializer() );√ækryo.register( LocalDateTime.class, new JodaLocalTimeSerializer() );√æ// protobuf√ækryo.register( SampleProtoA.class, new ProtobufSerializer() ); // or override Kryo.getDefaultSerializer as shown below√æ// wicket√ækryo.register( MiniMap.class, new MiniMapSerializer() );√æ// guava ImmutableList, ImmutableSet, ImmutableMap, ImmutableMultimap, ImmutableTable, ReverseList, UnmodifiableNavigableSet√æImmutableListSerializer.registerSerializers( kryo );√æImmutableSetSerializer.registerSerializers( kryo );√æImmutableMapSerializer.registerSerializers( kryo );√æImmutableMultimapSerializer.registerSerializers( kryo );√æImmutableTableSerializer.registerSerializers( kryo );√æReverseListSerializer.registerSerializers( kryo );√æUnmodifiableNavigableSetSerializer.registerSerializers( kryo );√æ// guava ArrayListMultimap, HashMultimap, LinkedHashMultimap, LinkedListMultimap, TreeMultimap, ArrayTable, HashBasedTable, TreeBasedTable√æArrayListMultimapSerializer.registerSerializers( kryo );√æHashMultimapSerializer.registerSerializers( kryo );√æLinkedHashMultimapSerializer.registerSerializers( kryo );√æLinkedListMultimapSerializer.registerSerializers( kryo );√æTreeMultimapSerializer.registerSerializers( kryo );√æArrayTableSerializer.registerSerializers( kryo );√æHashBasedTableSerializer.registerSerializers( kryo );√æTreeBasedTableSerializer.registerSerializers( kryo );√æ```√æ√æThe following code snippet shows how to use the `KryoReflectionFactorySupport` (can only be used with sun/oracle jdk!) and how other serializers are registered via the `getDefaultSerializer` lookup. If you don't want to use the `KryoReflectionFactorySupport` you can override the `getDefaultSerializer` method for your `new Kryo()` instance.√æ√æ```java√æfinal Kryo kryo = new KryoReflectionFactorySupport() {√æ√æ    @Override√æ    public Serializer<?> getDefaultSerializer(final Class clazz) {√æ        if ( EnumSet.class.isAssignableFrom( clazz ) ) {√æ            return new EnumSetSerializer();√æ        }√æ        if ( EnumMap.class.isAssignableFrom( clazz ) ) {√æ            return new EnumMapSerializer();√æ        }√æ        if ( SubListSerializers.canSerialize( clazz ) ) {√æ            return SubListSerializers.createFor( clazz );√æ        }√æ        if ( copyCollectionsForSerialization ) {√æ            if ( Collection.class.isAssignableFrom( clazz ) ) {√æ                return new CopyForIterateCollectionSerializer();√æ            }√æ            if ( Map.class.isAssignableFrom( clazz ) ) {√æ                return new CopyForIterateMapSerializer();√æ            }√æ        }√æ        if ( Date.class.isAssignableFrom( type ) ) {√æ            return new DateSerializer( type );√æ        }√æ        // see if the given class is a cglib proxy√æ        if ( CGLibProxySerializer.canSerialize( type ) ) {√æ            // return the serializer registered for CGLibProxyMarker.class (see above)√æ            return getSerializer( CGLibProxySerializer.CGLibProxyMarker.class );√æ        }√æ        // protobuf√æ        if ( com.google.protobuf.GeneratedMessage.class.isAssignableFrom( type ) ) {√æ            return new ProtobufSerializer();√æ        }√æ        return super.getDefaultSerializer( clazz );√æ    }√æ√æ};√æ```√æ√æ# Where to get help√æYou can [contact me via github](https://github.com/inbox/new/magro) or [submit an issue](https://github.com/magro/kryo-serializers/issues).√æ√æ# How to contribute√æIf you want to contribute to this project you can fork the [sources on github](https://github.com/magro/kryo-serializers), make your changes and submit a pull request. Alternatively you can [submit an issue](https://github.com/magro/kryo-serializers/issues) with a patch attached."
JetBrains/jediterm,97984,370,59,128,Organization,False,Pure Java Terminal Emulator. Works with SSH and PTY.,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",23,Java,"{'': 5, 'yml': 1, 'txt': 2, 'md': 1, 'gradle': 3, 'bat': 2, 'iml': 1, 'sh': 1}",904,3,1,14,0,2720,True,19,38,2,0,2,138,0,3,6,0,2,10,460,138,0,0,474,104,,,"JediTerm√æ========√æ√æ[![official JetBrains project](http://jb.gg/badges/official.svg)](https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub)√æ√æ[![Build Status](https://travis-ci.org/JetBrains/jediterm.png?branch=master)](https://travis-ci.org/JetBrains/jediterm)√æ√æ√æThe main purpose of the project is to provide a pure Java terminal widget that can be easily embedded √æinto an IDE.√æIt supports terminal sessions both for SSH connections and local PTY on Mac OSX, Linux and Windows.√æ√æ√æThe library is used by JetBrains IDEs like PyCharm, IDEA, PhpStorm, WebStorm, AppCode, CLion, and Rider.√æ√æSince version 2.5 there is a standalone version of the JediTerm terminal, provided as Mac OSX distribution.√æ√æ√æThe name JediTerm origins from J(from `Java`) + edi(reversed `IDE`) + Term(obviously from `terminal`).√æAlso the word Jedi itself gives some confidence and hope in the Universe of thousands of different terminal implementations.√æ√æ√æRun√æ-------√æ√æTo run the standalone JediTerm terminal from sources just execute _jediterm.sh_ or _jediterm.bat_.√æOr use the binary distribution from the [Releases](https://github.com/JetBrains/jediterm/releases/) page.√æ√æ√æ√æBuild√æ-----√æ√æGradle is used to build this project. The project consists of 4 sub-projects:√æ* **terminal**√æ√æ    The core library that provides VT100 compatible terminal emulator and Java Swing based implementation of terminal panel UI.√æ√æ* **ssh**√æ√æ    The jediterm-ssh.jar library that provides, using the Jsch library, a terminal for remote SSH terminal sessions.√æ√æ* **pty**√æ√æ    The jediterm-pty.jar library that, by using the [Pty4J](https://github.com/traff/pty4j) library, enables a terminal for local PTY terminal sessions.√æ√æ* **JediTerm**√æ√æ    The standalone version of the JediTerm terminal distributed as a .dmg for Mac OSX.√æ√æ√æFeatures√æ--------√æ* Ssh using JSch from jcraft.org√æ* Local terminal for Unix, Mac and Windows using [Pty4J](https://github.com/traff/pty4j)√æ* Xterm emulation - passes most of tests from vttest√æ* Xterm 256 colours√æ* Scrolling√æ* Copy/Paste√æ* Mouse support√æ* Terminal resizing from client or server side√æ* Terminal tabs√æ√æ√æ√æAuthors√æ-------√æDmitry Trofimov <dmitry.trofimov@jetbrains.com>, Cl√©ment Poulain√æ√æ√æ√æLinks√æ-----√æ * Terminal protocol description: http://invisible-island.net/xterm/ctlseqs/ctlseqs.html√æ * Terminal Character Set Terminology and Mechanics: http://www.columbia.edu/kermit/k95manual/iso2022.html√æ * VT420 Programmer Reference Manual: http://manx.classiccmp.org/collections/mds-199909/cd3/term/vt420rm2.pdf√æ * Pty4J library: https://github.com/traff/pty4j√æ * JSch library: http://www.jcraft.com/jsch√æ * UTF8 Demo: http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt√æ * Control sequences visualization: http://www.gnu.org/software/teseq/√æ * Terminal protocol tests: http://invisible-island.net/vttest/√æ√æ√æ√æOpen Source Origin and History√æ------√æThe initial version of the JediTerm was a reworked terminal emulator Gritty, which was in it's own turn a reworked JCTerm √æterminal implementation. Now there is nothing in the source code left from Gritty and JCTerm. Everything was √ærewritten from scratch. A lot of new features were added.√æ√æCharacter sets designation and mapping implementation is based on√ærespective classes from jVT220 (https://github.com/jawi/jVT220, Apache 2.0 licensed) by J.W. Janssen.√æ√æ√æStandalone distribution relies heavily on customized Swing UI widgets taken from IntelliJ Community platform repository√æ(https://github.com/JetBrains/intellij-community) by JetBrains.√æ√æ√æLicenses√æ-------√æAll sources in the repository are licensed under LGPLv3, except the following roots, which are Apache 2.0 licensed:√æ* JediTerm/*√æ* terminal/src/com/jediterm/terminal/emulator/*"
AniTho/Algorithm,18,1,1,2,User,False,Consist of some basic algorithms implemented,,,8,Java,"{'': 3, 'md': 1, 'java': 4}",17,1,0,2,0,593,True,0,0,0,0,0,4,0,0,8,0,0,0,0,0,0,0,14,,8,,"# Algorithm√æ## Consist of some basic algorithms implemented in Java√æ- Quick Find√æ  (Interpretation:- Let p and q be two elements of array, they are connected iff they have same ID's√æ  √æ  Find:- Check if p and q have same ID√æ         √æ         id[p]==id[q], connected, or√æ         id[p]!=id[q], not connected√æ  √æ  Union:- To merge components containing p and q, change all entries whose ID equals id[p] into id[q])√æ√æ- Quick Union √æ  (Interpretation:- Let p and q be two elements of array, they are connected via link such that q is the root element of p√æ  √æ  Find:- Check if p and q have the same root or not√æ  √æ         root(p)==root(q), connected, or√æ         root(p)!=root(q), not connected√æ         √æ  Union:- To merge components containing p and q, set the id of p's root to the id of q's root)√æ√æ- Weighted Quick Union√æ  (Interpretation:- Same as Quick Union except a size array sz[] is used which holds the number of elements in a tree√æ  √æ  Find:- Same as Qucick Union√æ  √æ  Union:-Modify  Quick Union to:-√æ  √æ       1.)Link Root of a smaller tree to root of larger tree making it a child of larger tree.√æ       2.)Update the sz[] array to total no of elements now in a tree)"
OnePiece-Blue/feiyin-demo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
liflab/beepbeep-3,39642,16,5,12,Organization,False,An event stream processor anyone can use,http://liflab.github.io/beepbeep-3,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",13,Java,"{'': 2, 'yml': 1, 'svg': 1, 'md': 1, 'xml': 2, 'properties': 1, 'csv': 3}",573,4,14,2,6,1921,True,23,26,1,0,0,2,0,0,9,1,1,11,913,87,0,0,58,0,,,"BeepBeep 3: an expressive query processor for event streams√æ===========================================================√æ√æ[![Travis](https://img.shields.io/travis/liflab/beepbeep-3.svg?style=flat-square)](https://travis-ci.org/liflab/beepbeep-3)√æ[![Coverity Scan Build Status](https://img.shields.io/coverity/scan/15149.svg?style=flat-square)](https://scan.coverity.com/projects/liflab-beepbeep-3)√æ[![SonarCloud Coverage](https://sonarcloud.io/api/project_badges/measure?project=liflab%3Abeepbeep-3&metric=coverage)](https://sonarcloud.io/dashboard?id=liflab%3Abeepbeep-3)√æ<img src=""http://leduotang.ca/beepbeep-3.svg"" height=""20"" alt=""Downloads""/>√æ√æBeepBeep is an event stream query engine. It can take as input various√æsources of *events*, pipe them through various *processors*, and produce√ævarious kinds of output streams from them. For more information about√æwhat is BeepBeep (including documentation, examples, etc.), please visit√æ[BeepBeep's website](http://liflab.github.io/beepbeep-3).√æ√æRepository structure                                           {#structure}√æ--------------------√æ√æThe repository is separated across the following folders.√æ√æ- `Core`: main source files√æ- `CoreTest`: test source files. You need to compile these files only√æ  if you want to run BeepBeep's unit tests.√æ√æCompiling the project contained in the present repository generates the√æfile `beepbeep-3.jar`, which is the minimal file you need to run BeepBeep on√æyour system.√æ√æBeepBeep tries to have as few dependencies as possible. However, the√æfollowing companion library needs to be installed for BeepBeep to√æcompile and run:√æ√æ- [Azrael](https://github.com/sylvainhalle/Azrael), a library for√æ  serializing objects in various formats√æ- [Petit Poucet](https://github.com/liflab/petitpoucet), a library for√æ  managing data traceability√æ√æ### Extensions√æ√æBeepBeep's engine contains very few processors. In typical use cases,√æthese basic functionalities are extended by using one or more extra√æ*palettes*, such as those found in the√æ[BeepBeep palette repository](https://github.com/liflab/beepbeep-3-palettes).√æ√æCompiling and Installing BeepBeep 3                              {#install}√æ-----------------------------------√æ√æFirst make sure you have the following installed:√æ√æ- The Java Development Kit (JDK) to compile. BeepBeep is developed to comply√æ  with Java version 6; it is probably safe to use any later version.√æ- [Ant](http://ant.apache.org) to automate the compilation and build process√æ√æDownload the sources for BeepBeep from√æ[GitHub](https://github.com/liflab/beepbeep-3) or clone the√ærepository using Git:√æ√æ    git@github.com:liflab/beepbeep-3.git√æ√æThe repository is separated into multiple *projects*. Each of these√æprojects has the same Ant build script that allows you to compile them√æ(see below).√æ√æIf the project you want to compile has dependencies,√æ you can automatically download any libraries missing from your√æsystem by typing:√æ√æ    ant download-deps√æ√æThis will put the missing JAR files in the `dep` folder in the project's√æroot.√æ√æ### Compiling√æ√æCompile the sources by simply typing:√æ√æ    ant√æ√æThis will produce a file called `beepbeep-3.jar` (or another library,√ædepending on what you are compiling) in the folder. This file√æis runnable and stand-alone, or can be used as a library, so it can be moved√æaround to the location of your choice.√æ√æIn addition, the script generates in the `doc` folder the Javadoc√ædocumentation for using BeepBeep. To show documentation in Eclipse,√æright-click on the jar, click ""Properties"", then fill the Javadoc location.√æ√æ### Testing√æ√æBeepBeep can test itself by running:√æ√æ    ant test√æ√æUnit tests are run with [jUnit](http://junit.org); a detailed report of√æthese tests in HTML format is availble in the folder `tests/junit`, which√æis automatically created. Code coverage is also computed with√æ[JaCoCo](http://www.eclemma.org/jacoco/); a detailed report is available√æin the folder `tests/coverage`.√æ√æ### Coverity Scan√æ√æBeepBeep uses [Coverity Scan](https://scan.coverity.com) for static analysis√æof its source code and defect detection. Instructions for using Coverity Scan√ælocally are detailed [here](https://scan.coverity.com/download?tab=java). In√æa nutshell, if Coverity Scan is installed, type the following:√æ√æ    cov-build --dir cov-int ant compile√æ√æ(Make sure to clean up the directory first by launching `ant clean`, followed√æby `ant download-deps`.)√æ√æDeveloping BeepBeep using Eclipse                                {#eclipse}√æ---------------------------------√æ√æIf you wish to develop BeepBeep in Eclipse, please follow the√æ[detailed instructions](https://liflab.github.io/beepbeep-3/guide/building-eclipse.html)√æ(with screenshots and all) found in the online user guide.√æ√æIn short:√æ√æ- Create a new empty workspace (preferably in a new, empty folder).√æ- Create new projects for each of the folders `Core`,√æ  `CoreTest`, and optionally, any of the palette folders you with to develop.√æ  Note that these projects will not be located in the√æ  default location with respect to the workspace; you need to uncheck√æ  the ""Use default location"" option and fetch them manually.√æ  √æThen, setup the build path for each project:√æ√æ- `Core` requires the Bullwinkle library (see above)√æ- `CoreTest` depends on `Core` and requires the JUnit 4 library√æ- Each of the palette folders depend on `Core` and require the JUnit√æ  4 library√æ- In addition, some of the palette projects may have other√æ  dependencies; please refer to their individual documentation√æ√æWarning                                                          {#warning}√æ-------√æ√æThe BeepBeep project is under heavy development. The repository may be√ærestructured, the API may change, and so on. This is R&D!√æ√æAbout the author                                                   {#about}√æ----------------√æ√æBeepBeep 3 was written by [Sylvain Hall√©](http://leduotang.ca/sylvain),√æfull professor at Universit√© du Qu√©bec √† Chicoutimi, Canada. Part of√æthis work has been funded by the Canada Research Chair in Software√æSpecification, Testing and Verification and the√æ[Natural Sciences and Engineering Research Council√æof Canada](http://nserc-crsng.gc.ca)."
TU-Berlin-DIMA/parallel-ADWIN,752,4,14,5,Organization,False,Scalable Detection of Concept Drifts on Data Streams with Parallel Adaptive Windowing,https://tu-berlin-dima.github.io/parallel-ADWIN/,,5,Java,"{'md': 1, 'yml': 1, 'xml': 1}",9,1,0,3,0,873,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,38,14,,,"# Scalable Detection of Concept Drifts on Data Streams with Parallel Adaptive Windowing√æThis repository contains a description and source code for Scalable Detection of Concept Drifts on Data Streams with Parallel Adaptive Windowing (Parallel Adwin).√æ√æ## Parallel Adwin at EDBT 2017√æParallel Adwin was first published at the [21th International Conference on Extending Database Technology (EDBT)](http://edbticdt2018.at/) in March 2018.  √æ√æ**Abstract:**√æMachine Learning (ML) techniques for data stream analysis suffer from concept drifts such as changed user preferences, varying weather conditions, or economic changes.√æThese concept drifts cause wrong predictions and lead to incorrect business decisions.√æConcept drift detection methods such as adaptive windowing (Adwin) allow for adapting to concept drifts on the fly.√æIn this paper, we examine Adwin in detail and point out its throughput bottlenecks.√æWe then introduce several parallelization alternatives to address these bottlenecks.√æOur optimizations increase the throughput of the original Adwin approach by two orders of magnitude.√æThus, we explore parallel adaptive windowing to provide scalable concept drift detection for high-velocity data streams with millions of tuples per second.√æ√æ**Publication:**√æ- Paper: [Scalable Detection of Concept Drifts on Data Streams with Parallel Adaptive Windowing](https://github.com/TU-Berlin-DIMA/parallel-ADWIN/blob/master/paper/Scalable-Detection-of-Concept-Drifts-on-Data-Streams-with-Parallel-Adaptive-Windowing.pdf)√æ√æ- BibTeX citation:√æ```√æ@inproceedings{traub2018scotty,√æ  title={Scotty: Efficient Window Aggregation for out-of-order Stream Processing},√æ  author={Traub, Jonas and Grulich, Philipp M. and Cuellar, Alejandro Rodriguez and Bre{\ss}, Sebastian and Katsifodimos, Asterios and Rabl, Tilmann and Markl, Volker},√æ  booktitle={2018 IEEE 34th International Conference on Data Engineering (ICDE)},√æ  pages={1300--1303},√æ  year={2018},√æ  organization={IEEE}√æ}√æ```√æ√æ## How to run√æImport the maven project into your favorite IDE, and run the MicroBenchmark.java as an application. You need to provide the following arguments in order to specify a variant of the Adwin algorithm and a type of data stream (see further below for an explanation of the arguments):√æ√æ```adwinType changeType batchSize numConstant numChange adwinDelta ```√æ√æ This will perform a benchmark of the specified Adwin variant with the specified type of data stream. The two-step, JMH-based benchmark works as follows:√æ * Initially, 20 warmup iterations are performed. In each iteration, a fixed number of tuples from the data stream are processed by Adwin. The warmup iterations trigger JIT compilation and improve accuracy and reproducability of the subsequent measurement iterations. **After the warmup iterations, the state of Adwin (and the data stream) are reset.** So, the measurement iterations start with an empty histogram.√æ * 100 measurement iterations are performed. In each iteration, a fixed number of tuples from the data stream are processed by Adwin. **The state of Adwin (and the data stream) are maintained over all 100 measurement iterations.** Specifically this means that the size of the histogram maintained by Adwin may grow over multiple or even all iterations (until a concept drift is detected). This allows to measure the processing time for a fixed number of elements (=one iteration) relative to the size of the histogram at the start of the iteration.√æ√æThe resulting output to the console shows the processing time for every iteration as well as the number of Adwin cut checks performed in every iteration.√æ√æ√æ### adwinType√æThis argument specifies the variant of Adwin to be benchmarked and may be any of `ORIGINAL SERIAL HALFCUT SNAPSHOT`.√æ* `ORIGINAL` is the original Adwin implementation by Albert Bifet.√æ* `SERIAL` is our improved reimplementation of the original Adwin algorithm.√æ* `HALFCUT` is the improved Adwin variant presented in our paper as ""Half-Cut Adwin"".√æ* `SNAPSHOT` is the improved Adwin variant presented in our paper as ""Optimistic Adwin"".√æ√æ### changeType√æThis argument specifies the type of concept drift appearing in the data stream and may be any of `CONSTANT ABRUPT INCREMENTAL GRADUAL OUTLIER`.√æ* `CONSTANT` produces a data stream with constant tuple values (no concept drift).√æ* `ABRUPT` produces a data stream with abrupt concept drift.√æ* `INCREMENTAL` produces a data stream with incremental concept drift.√æ* `GRADUAL` produces a data stream with gradual concept drift.√æ* `OUTLIER` produces a data stream with constant tuple values, but regular outliers (no concept drift).√æ√æFor further details about the different types of concept drift, we refer to [A Survey on Concept Drift Adaptation](http://www.win.tue.nl/~mpechen/publications/pubs/Gama_ACMCS_AdaptationCD_accepted.pdf), pp. 6 by J. Gama et al. All data streams are periodic (see the following arguments).√æ√æ### batchSize√æThis argument specifies the number of tuples processed per iteration.√æ√æ### numConstant√æThis argument specifies the number of constant tuple values that are generated by a data stream between concept drift (or outlier) events. Therefore, it allows to set the rate of concept drifts in the stream. It is ignored if changeType is `CONSTANT`.√æ√æ### numChange√æThis argument specifies the number of tuples that an incremental or gradual concept drift lasts. Therefore it is only used if changeType is `INCREMENTAL` or `GRADUAL`.√æ√æ### adwinDelta√æThis argument specifies the confidence value delta which is an input parameter for the Adwin algorithm and determines the sensitivity of Adwin to (perceived) concept drifts."
GoSimpleLLC/nbvcxz,874,181,8,39,Organization,False,Password strength estimator,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",162,2,12,18,0,1301,True,7,16,1,0,1,31,1,2,7,0,3,6,308,123,11,0,3,0,,,"# Nbvcxz - Password strength estimator - [![Build Status](https://travis-ci.org/GoSimpleLLC/nbvcxz.svg?branch=master)]√æ`nbvcxz` is java library (and standalone console program) which is heavily inspired by the work in [zxcvbn](https://github.com/dropbox/zxcvbn).√æ√æPassword strength estimation is a bit of an art and science.  Strength estimation is accomplished by running √æa password through different algorithms looking for matches in any part of the password on: `word lists` (with fuzzy matching), √æ`common dates`, `common years`, `spacial patterns`, `repeating characters`, `repeating sets of characters`,√æand `alphabetic sequences`.√æ √æEach of these represent ways an attacker may try to crack a password.  To be vigilant, we must adapt to√ænew methods in password cracking and implement new methods to identify passwords susceptible to √æeach new method.√æ√æ# Table of Contents√æ  * [A Rant On Arbitrary Password Policies](#a-rant-on-arbitrary-password-policies)√æ  * [Differentiating Features](#differentiating-features)√æ  * [Maven Central](#maven-central)√æ  * [Compile](#compile)√æ  * [How to use](#how-to-use)√æ    + [Standalone](#standalone)√æ    + [Library](#library)√æ        * [Configure and create object](#configure-and-create-object)√æ          + [All defaults](#all-defaults)√æ          + [Localization](#localization)√æ          + [Custom configuration](#custom-configuration)√æ        * [Estimate password strength](#estimate-password-strength)√æ          + [Simple](#simple)√æ          + [Feedback](#feedback)√æ        * [Generate passphrase/password](#generate-passphrasepassword)√æ          + [Passphrase](#passphrase)√æ          + [Password](#password)√æ  * [Bugs and Feedback](#bugs-and-feedback)√æ  * [License](#license)√æ  * [Requires Java](#requires-java)√æ  * [Application using this library](#application-using-this-library)√æ√æ√æ## A Rant On Arbitrary Password Policies √æLets think up an example scenario which I expect some of you may have run into way too often. √æWe are a company `NewStartup!` and we are creating the next big web application. We √æwant to ensure our users don't choose an easily guessable password, so we implement an arbitrary√æpolicy which says a password must have:√æ  an __eight character minimum__ and contain __upper case__, __lower case__, __numbers__, and __special characters__√æ  √æNow lets see how that policy applies to two passwords which are at opposite ends of the spectrum.√æ√æ  Password #1: `Passw0rd!` - This password was chosen to get around an arbitrary policy √æ  √æ  Password #2: `5fa83b7e1r39xfa8hmiz0` - This was randomly generated using lowercase alphanumeric √æ√æ  Password #1 meets all of the rules in the policy and passes with flying colors.√æ  Password #2 does not contain __upper case__, or __special characters__, and thus the policy fails this password.√æ  √æWas password #1 actually more secure than password #2 by any metric?  That would be a hard argument to make.√æ√æIn fact, password #1 is likely to be cracked quite quickly. `password` is one of the top passwords in all password √ælists an attacker is likely to try using a rule based dictionary attack.  If the attacker knows that our policy requires: √æ__eight character minimum__, __upper case__, __lower case__, __numbers__, and __special characters__ √æthey will then use rules like `toggle case`, `l33t substitution`, and `suffix/prefix special characters` √æto augment their dictionary list for the attack.√æ√æIt's quite likely password #1 would fall to an attacker even in a rate limited online attack.√æ√æPassword #2, while not allowed by our policy, is only susceptible to a brute force attack (if a secure hashing algorithm is used).√æ√æ## Differentiating Features√æ* Internationalization support for all text output by the library (for feedback, console output, etc).√æ    * Currently supported languages√æ        - **English (default)**√æ        - Afrikaans (af)√æ        - Dutch (nl)√æ        - Finnish (fi)√æ        - French (fr)√æ        - German (de)√æ        - Hungarian (hu)√æ        - Italian (it)√æ        - Portuguese (pt)√æ        - Russian (ru)√æ        - Spanish (es)√æ        - Swedish (sv)√æ        - Telugu (te)√æ        - Ukrainian (uk)√æ        - Chinese (zh)√æ* Better match generation algorithm which will find the absolute lowest entropy combination of the matches.√æ* Support for ranked and un-ranked dictionaries.√æ* Dictionary matching has the ability to use Levenshtein Distance (LD) calculations to match passwords which are non-exact matches to a dictionary entry.√æ    * LD calculations happen on full passwords only, and have a `threshold` of 1/4th the length of the password.√æ* Dictionaries can be customized, and custom dictionaries can be added very easily.√æ    * Exclusion dictionaries can also be built and tailored per-user to prevent obvious issues like using their own email or name as their password√æ* Default dictionaries have excluded single character words due to many false positives√æ* Additional PasswordMatchers and Matches can be implemented and configured to run without re-compiling.√æ* Easy to configure how this library works through the ConfigurationBuilder.√æ    * You can set minimum entropy scores, locale, year patterns, custom leet tables, custom adjacency graphs, custom dictionaries, and custom password matchers.√æ* Support for generating passwords and passphrases.√æ    * Available in the console application as well as the library.√æ    * One use case is for generating a ""forgot password"" temporary pass√æ√æ## Maven Central√æ```xml√æ<dependency>√æ    <groupId>me.gosimple</groupId>√æ    <artifactId>nbvcxz</artifactId>√æ    <version>1.4.3</version>√æ</dependency>√æ```√æ√æ## Compile√æ√æ### Debian based√æ```sh√æapt-get install git√æapt-get install openjdk-8-jdk√æapt-get install maven√ægit clone https://github.com/GoSimpleLLC/nbvcxz.git√æcd nbvcxz√æmvn package√æ```√æ√æThe project will be built, and the jar file will be placed in the target sub-directory.√æ√æ## How to use√æ`nbvcxz` can be used as a stand-alone console program, or import it as a library.√æ√æ### Standalone√æTo use as a stand-alone program, just compile, and run it by calling:√æ`java -jar nbvcxz-1.4.3.jar`√æ![alt text](http://i.imgur.com/9c070FX.png)√æ√æ### Library√æ`nbvcxz` can also be used as a library for password validation in java back-ends.√æBelow is a full example of the pieces you'd need to implement within your own application.√æ##### Configure and create object√æ√æ###### All defaults√æ```java√æ// With all defaults...√æNbvcxz nbvcxz = new Nbvcxz();√æ```√æ√æ###### Localization√æHere we're creating a custom configuration which localizes all text to French√æ```java√æ// Create our configuration object and set the locale√æConfiguration configuration = new ConfigurationBuilder()√æ        .setLocale(Locale.forLanguageTag(""fr""))√æ        .createConfiguration();√æ        √æ// Create our Nbvcxz object with the configuration we built√æNbvcxz nbvcxz = new Nbvcxz(configuration);√æ```√æ√æ###### Custom configuration√æHere we're creating a custom configuration with a custom exclusion dictionary and minimum entropy√æ```java√æ// Create a map of excluded words on a per-user basis using a hypothetical ""User"" object that contains this info√æList<Dictionary> dictionaryList = ConfigurationBuilder.getDefaultDictionaries();√ædictionaryList.add(new DictionaryBuilder()√æ        .setDictionaryName(""exclude"")√æ        .setExclusion(true)√æ        .addWord(user.getFirstName(), 0)√æ        .addWord(user.getLastName(), 0)√æ        .addWord(user.getEmail(), 0)√æ        .createDictionary());√æ√æ// Create our configuration object and set our custom minimum√æ// entropy, and custom dictionary list√æConfiguration configuration = new ConfigurationBuilder()√æ        .setMinimumEntropy(40d)√æ        .setDictionaries(dictionaryList)√æ        .createConfiguration();√æ        √æ// Create our Nbvcxz object with the configuration we built√æNbvcxz nbvcxz = new Nbvcxz(configuration);√æ```√æ√æ##### Estimate password strength√æ√æ###### Simple√æ```java√æ// Estimate password √æResult result = nbvcxz.estimate(password);√æ√æreturn result.isMinimumEntropyMet();√æ```√æ√æ###### Feedback√æThis part will need to be integrated into your specific front end, and really depends on your needs. √æHere are some of the possibilities:√æ```java√æ√æ// Get formatted values for time to crack based on the values we √æ// input in our configuration (we used default values in this example)√æString timeToCrackOff = TimeEstimate.getTimeToCrackFormatted(result, ""OFFLINE_BCRYPT_12"");√æString timeToCrackOn = TimeEstimate.getTimeToCrackFormatted(result, ""ONLINE_THROTTLED"");√æ√æ// Check if the password met the minimum set within the configuration√æif(result.isMinimumEntropyMet())√æ{√æ    // Start building success message√æ    StringBuilder successMessage = new StringBuilder();√æ    successMessage.append(""Password has met the minimum strength requirements."");√æ    successMessage.append(""<br>Time to crack - online: "").append(timeToCrackOn);√æ    successMessage.append(""<br>Time to crack - offline: "").append(timeToCrackOff);    √æ    √æ    // Example ""success message"" that would be displayed to the user√æ    // This is obviously just a contrived example and would have to√æ    // be tailored to each front-end√æ    setSuccessMessage(successMessage.toString());√æ    return true;√æ}√æelse√æ{√æ    // Get the feedback for the result√æ    // This contains hints for the user on how to improve their password√æ    // It is localized based on locale set in configuration√æ    Feedback feedback = result.getFeedback();√æ    √æ    // Start building error message√æ    StringBuilder errorMessage = new StringBuilder();√æ    errorMessage.append(""Password does not meet the minimum strength requirements."");√æ    errorMessage.append(""<br>Time to crack - online: "").append(timeToCrackOn);√æ    errorMessage.append(""<br>Time to crack - offline: "").append(timeToCrackOff);√æ    √æ    if(feedback != null)√æ    {√æ        if (feedback.getWarning() != null)√æ            errorMessage.append(""<br>Warning: "").append(feedback.getWarning());√æ        for (String suggestion : feedback.getSuggestion())√æ        {√æ            errorMessage.append(""<br>Suggestion: "").append(suggestion);√æ        }√æ    }√æ    // Example ""error message"" that would be displayed to the user√æ    // This is obviously just a contrived example and would have to√æ    // be tailored to each front-end√æ    setErrorMessage(errorMessage.toString());√æ    return false;√æ}√æ```√æ√æ##### Generate passphrase/password√æWe have a passphrase/password generator as part of `nbvcxz` which very easy to use.√æ√æ###### Passphrase√æ```java√æ// Generate a passphrase from the standard (eff_large) dictionary with 5 words with a ""-"" between the words√æString pass1 = Generator.generatePassphrase(""-"", 5);√æ√æ// Generate a passphrase from a custom dictionary with 5 words with a ""-"" between the words√æString pass2 = Generator.generatePassphrase(new Dictionary(...), ""-"", 5);√æ```√æ√æ###### Password√æ```java√æ// Generate a random password with alphanumeric characters that is 15 characters long√æString pass = Generator.generateRandomPassword(Generator.CharacterTypes.ALPHANUMERIC, 15);√æ```√æ√æ## Bugs and Feedback√æ√æFor bugs, questions and discussions please use the [Github Issues](https://github.com/GoSimpleLLC/nbvcxz/issues).√æ√æ## License√æ√æMIT License√æ√æ* http://www.opensource.org/licenses/mit-license.php√æ√æ## Requires Java√æ√æ* Java 1.7+√æ√æ## Application using this library√æ√æ- [GoSimple](http://gosimple.me/)√æ√æAnyone else using the library in their application, i'd love to hear and put a link up here."
Lauszus/FaceRecognitionApp,12744,353,29,187,User,False,Face Recognition Android App,,"{'key': 'gpl-2.0', 'name': 'GNU General Public License v2.0', 'spdx_id': 'GPL-2.0', 'url': 'https://api.github.com/licenses/gpl-2.0', 'node_id': 'MDc6TGljZW5zZTg='}",16,Java,"{'': 4, 'yml': 1, 'md': 1, 'gradle': 2, 'png': 3, 'properties': 1, 'bat': 1, 'patch': 1}",115,3,7,1,4,1334,True,1,49,0,4,1,4,0,0,7,0,0,0,0,0,0,0,65,,321,,"# Face Recognition Android App√æ√æ<a href=""http://play.google.com/store/apps/details?id=com.lauszus.facerecognitionapp""><img src=""https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png"" alt=""Google Play"" width=""200px""/></a>√æ√æ#### Developed by Kristian Lauszus, 2016√æ√æThe code is released under the GNU General Public License.√æ_________√æ[![Build Status](https://travis-ci.org/Lauszus/FaceRecognitionApp.svg?branch=master)](https://travis-ci.org/Lauszus/FaceRecognitionApp)√æ√æThis project demonstrates how to calculate Eigenfaces and Fisherfaces used for face recognition on an Android device.√æ√æThe library uses my other project [FaceRecognitionLib](https://github.com/Lauszus/FaceRecognitionLib) in order to calculate the Eigenfaces and Fisherfaces.√æ√æA short blog post can be found at the following link: <http://blog.tkjelectronics.dk/2017/07/face-recognition-using-eigenfaces-and-fisherfaces>.√æ√æThe reports I wrote together with Jonathan Wang can be found at the following links: [Eigenfaces\_Report.pdf](https://github.com/Lauszus/FaceRecognitionLib/raw/master/Eigenfaces_Report.pdf) and [Final\_Project\_Report.pdf](https://github.com/Lauszus/FaceRecognitionLib/raw/master/Final_Project_Report.pdf).√æ√æ## Screenshots√æ√æ<img src=""face_detected_kristian.png"" width=250/><img src=""face_detected_jon.png"" width=250/><img src=""navigation_menu.png"" width=250/>√æ√æ## Build instructions√æ√æIn order to built this project you need to download and install [Android Studio](http://developer.android.com/sdk/index.html). You will then need to install the [Android NDK](https://developer.android.com/studio/projects/add-native-code.html#download-ndk).√æ√æThen simply download the latest release: <https://github.com/Lauszus/FaceRecognitionApp/releases/download/1.2.3/FaceRecognitionApp-1.2.3.zip> and open the project in Android Studio.√æ√æ## Advanced build instructions√æ√æThe following instructions are meant for advanced users who wants to clone and modify the source files.√æ√æFirst clone the repository including the submodule:√æ√æ```bash√ægit clone --recursive https://github.com/Lauszus/FaceRecognitionApp.git√æ```√æ√æIf you have already cloned the project, then please run the following command in order to initialize the submodule:√æ√æ```bash√ægit submodule update --init --recursive√æ```√æ√æThe project is relying on the environmental variables ```OPENCV_ANDROID_SDK``` and ```EIGEN3_DIR``` for [settings.gradle](settings.gradle) and [Android.mk](app/src/main/cpp/Android.mk) to be set to the path of the [OpenCV Android SDK](http://opencv.org/platforms/android) and [Eigen3](https://eigen.tuxfamily.org) libraries.√æ√æPlease use [OpenCV 3.4.1](https://github.com/opencv/opencv/releases/download/3.4.1/opencv-3.4.1-android-sdk.zip) and [Eigen3 3.3.5](https://bitbucket.org/eigen/eigen/get/3.3.5.zip). Both can be installed from the command line like so:√æ√æ```bash√æwget https://github.com/opencv/opencv/releases/download/3.4.1/opencv-3.4.1-android-sdk.zip√æunzip opencv-3.4.1-android-sdk.zip√æwget https://bitbucket.org/eigen/eigen/get/3.3.5.zip -O Eigen3.zip√æunzip Eigen3.zip√æ```√æ√æThen apply the [patch](opencv.patch) to OpenCV:√æ√æ```bash√æpatch -p0 < opencv.patch√æ```√æ√æNow simple set the environmental variables:√æ√æLinux:√æ√æ```bash√ænano ~/.bash_profile√æexport OPENCV_ANDROID_SDK=/path/to/OpenCV-android-sdk√æexport EIGEN3_DIR=/path/to/eigen3√æecho $OPENCV_ANDROID_SDK $EIGEN3_DIR√æ```√æ√æMac:√æ√æ```bash√ænano /etc/launchd.conf√æsetenv OPENCV_ANDROID_SDK /path/to/OpenCV-android-sdk√æsetenv EIGEN3_DIR /path/to/eigen3√æecho $OPENCV_ANDROID_SDK $EIGEN3_DIR√æ```√æ√æWindows:√æ√æ```bash√æsetx OPENCV_ANDROID_SDK /path/to/OpenCV-android-sdk√æsetx EIGEN3_DIR /path/to/eigen3√æecho %OPENCV_ANDROID_SDK% %EIGEN3_DIR%√æ```√æ√æ__Please note that ```/path/to/``` should be replaced with the actual path to the Eigen and OpenCV Android SDK directories.__√æ√æIf you have troubles setting the environmental variables, then you can just hardcode the paths in [settings.gradle](settings.gradle) and [Android.mk](app/src/main/cpp/Android.mk)."
MinecraftForge/Scorge,111,19,8,5,Organization,False,Scala Language Adapter for Forge Mods,,"{'key': 'lgpl-2.1', 'name': 'GNU Lesser General Public License v2.1', 'spdx_id': 'LGPL-2.1', 'url': 'https://api.github.com/licenses/lgpl-2.1', 'node_id': 'MDc6TGljZW5zZTEx'}",12,Scala,"{'': 4, 'gradle': 2, 'properties': 1, 'bat': 1, 'md': 1}",39,6,0,4,7,,True,0,5,0,1,0,4,0,2,8,0,1,1,1,1,0,0,40,14,,,
HuanTanSheng/EasyPhotos,64908,1383,38,231,User,False,ÂÖºÂÆπandroid 10ÔºåËá™ÂÆö‰πâÁõ∏Êú∫ÊãçÁÖßÔºåÁõ∏ÂÜåÈÄâÊã©(ÂçïÈÄâ/Â§öÈÄâ)ÔºåÊñá‰ª∂Â§πÂõæÁâáÈÄâÊã©(ÂçïÈÄâ/Â§öÈÄâ)ÔºåËßÜÈ¢ëÈÄâÊã©ÔºåÂêÑÁïåÈù¢Ê†πÊçÆÁä∂ÊÄÅÊ†èÈ¢úËâ≤Êô∫ËÉΩÈÄÇÈÖçÁä∂ÊÄÅÊ†èÂ≠ó‰ΩìÈ¢úËâ≤ÂèòËâ≤‰∏∫Ê∑±Ëâ≤ÊàñÊµÖËâ≤ÔºåÊ†πÊçÆ‰ΩøÁî®Âú∫ÊôØÊô∫ËÉΩÈÄÇÈÖçÊ≤âÊµ∏ÂºèÁä∂ÊÄÅÊ†èÔºåÂÜÖÈÉ®Â§ÑÁêÜËøêË°åÊó∂ÊùÉÈôêÔºåÊîØÊåÅGlide/Picasso/ImageloaderÁ≠âÊâÄÊúâÂõæÁâáÂä†ËΩΩÊ°ÜÊû∂Â∫ìÁöÑÂ∏¶ÈªòËÆ§ÂãæÈÄâÈÄâ‰∏≠ÂõæÁâáÁöÑËÉΩÂ°´ÂÖÖËá™ÂÆö‰πâÂπøÂëäÁöÑËá™ÂÆö‰πâUiÁõ∏Êú∫Áõ∏ÂÜåÂõæÁâáÊµèËßàÈÄâÊã©Âô®ÔºõÊõ¥ÊúâÊãºÂõæ/ÊñáÂ≠óË¥¥Á∫∏/Ë¥¥Âõæ/ÂõæÁâáÁº©Êîæ/BitmapÂõæÁâáÊ∑ªÂä†Ê∞¥Âç∞/Â™í‰ΩìÊñá‰ª∂Êõ¥Êñ∞Âà∞Â™í‰ΩìÂ∫ìÁ≠â‰ºóÂ§öBitmapÂõæÁâáÁºñËæëÂäüËÉΩÁöÑandroid BitmapÂõæÁâáÂ§ÑÁêÜÂ∑•ÂÖ∑Ê°ÜÊû∂Â∫ì„ÄÇ,,,11,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",541,1,78,5,0,977,True,5,98,4,18,0,33,0,4,8,0,2,12,481,119,0,0,7,,28,,"# EasyPhotos    √æ[![](https://jitpack.io/v/HuanTanSheng/EasyPhotos.svg)](https://jitpack.io/#HuanTanSheng/EasyPhotos)    √æ√æQQ‰∫§ÊµÅÁæ§Ôºö[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)    √æ[demo‰∏ãËΩΩ](https://raw.githubusercontent.com/HuanTanSheng/EasyPhotos/master/demo/release/demo-release.apk)    √æ√æ  √æ√æ√æ| Êó†ÈÄâ‰∏≠Áä∂ÊÄÅÔºàÈªòËÆ§UIËâ≤Ë∞ÉÔºâ   | ÈÄâ‰∏≠Áä∂ÊÄÅÔºà [Ëá™ÂÆö‰πâUIËâ≤Ë∞É](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)Ôºâ  | ÂÖ∂‰ªñÂäüËÉΩÔºàÂêÑÂäüËÉΩÂèØËá™ÈÄâÔºâ |√æ|:-----------:|:--------:|:---------:|√æ|![](images/01.png) | ![](images/02.png) | ![](images/03.png)|  √æ√æ| ‰∏ìËæëÂàóË°®ÔºàÈªòËÆ§UIËâ≤Ë∞ÉÔºâ | Áõ∏ÂÜåÂ∏¶ÂπøÂëäÔºà [Ëá™ÂÆö‰πâUIËâ≤Ë∞É](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)Ôºâ | ‰∏ìËæëÂàóË°®Â∏¶ÂπøÂëä |√æ|:-------:|:---------:|:---------:|√æ|![](images/05.png) | ![](images/04.png) | ![](images/06.png)|  √æ√æ| È¢ÑËßàÈ°µ   |  È¢ÑËßàÈ°µÂçïÂáªÂõæÁâáËΩ¨ÂÖ®Â±èÊ®°Âºè | È¢ÑËßàÈ°µÁº©ÊîæÂõæÁâá | √æ|:-------:|:---------:|:---------:|√æ|![](images/07.png) | ![](images/08.png) | ![](images/09.png)|   √æ√æ|È¢ÑËßàÈ°µÂçïÂáªÁº©ÊîæÂõæÁâáÊòæÁ§∫Êìç‰ΩúÊ†è | ÊãºÂõæÈÄâÊã©È°µ| ÊãºÂõæÈÄâÊã©È°µ |√æ|:-------:|:---------:|:---------:|√æ|![](images/10.png) | ![](images/11.png) | ![](images/12.png)|     √æ√æ|ÊãºÂõæÈ°µ | ÊãºÂõæÈ°µÊãºÂõæÂäüËÉΩ| ÊãºÂõæÈ°µÊñáÂ≠óË¥¥Á∫∏ÂäüËÉΩ |√æ|:-------:|:---------:|:---------:|√æ|![](images/13.png) | ![](images/14.png) | ![](images/15.png)|     √æ√æ|ÊñáÂ≠óË¥¥Á∫∏ÁºñËæëÈ°µ | Á§∫‰æãÂäüËÉΩÂàóË°® | Á§∫‰æãÂäüËÉΩÂàóË°® |√æ|:-------:|:---------:|:---------:|√æ|![](images/16.png) | ![](images/17.png) | ![](images/18.png)|    √æ    √æ    √æ## ‰∫ßÂìÅÁâπËâ≤    √æ- ÂÖºÂÆπandroid 10√æ- ÊîØÊåÅÁªëÂÆöGlide„ÄÅPicasso„ÄÅImageloaderÁ≠âÊâÄÊúâÂõæÁâáÂä†ËΩΩÂ∫ìÔºàfrescoÊöÇ‰∏çÊîØÊåÅÔºâÔºåEasyPhotosÂπ∂Ê≤°ÊúâÂØπ‰ªñ‰ª¨ËøõË°å‰æùËµñÔºå‰∏çÂøÖÊãÖÂøÉÂÜ≤Á™ÅÂíå‰ΩìÁßØÈóÆÈ¢ò„ÄÇ     √æ- Áä∂ÊÄÅÊ†èÂ≠ó‰ΩìÈ¢úËâ≤Êô∫ËÉΩÈÄÇÈÖçÔºåÂΩìÁä∂ÊÄÅÊ†èÈ¢úËâ≤Ë∂ãËøë‰∫éÁôΩËâ≤Êó∂ÔºåÂ≠ó‰ΩìÈ¢úËâ≤Êô∫ËÉΩÂ§ÑÁêÜ‰∏∫Ê∑±Ëâ≤     √æ- ÂÜÖÈÉ®Â§ÑÁêÜËøêË°åÊó∂ÊùÉÈôêÔºå‰ΩøÁî®ËÄÖÊó†ÈúÄËÄÉËôëÊùÉÈôêÈóÆÈ¢ò    √æ- Ê∏ÖÊô∞È¢ÑËßàË∂ÖÂ§ßÂõæÂíåÈïøÂõæ  √æ- Êãº‰∏ÄÂº†ÂäüËÉΩÔºàÂèØÈÖçÁΩÆÂºÄÂÖ≥ÔºåÂèØÁã¨Á´ã‰Ωú‰∏∫ÊãºÂõæ‰ΩøÁî®Ôºâ    √æ- ÂéüÂõæÂäüËÉΩÔºàÂèØÈÖçÁΩÆÂºÄÂÖ≥Ôºâ    √æ- ÂπøÂëäÂ°´ÂÖÖÔºàÂèØÈÖçÁΩÆÂºÄÂÖ≥Ôºâ     √æ- ËøáÊª§ÂõæÁâáÔºàÂõæÁâáÂÆΩÂ∫¶„ÄÅÂõæÁâáÈ´òÂ∫¶„ÄÅÊñá‰ª∂Â§ßÂ∞è‰∏â‰∏™Áª¥Â∫¶‰ªªÊÑèÈÄâÊã©ÂíåÊê≠ÈÖçÔºâ√æ- ÈªòËÆ§ÂãæÈÄâÂõæÁâáÔºàÂèØÈÖçÁΩÆÔºâ    √æ- ÂõæÁâáÈ¢ÑËßàÔºàÂèØÂÖ®Â±èÔºåÂèØÁº©ÊîæÔºâ    √æ- ÊîØÊåÅÂä®ÂõægifÊòæÁ§∫ÔºåÂπ∂ÊîØÊåÅÂè™ÊòæÁ§∫Âä®Âõægif√æ- ÊîØÊåÅËßÜÈ¢ëvideoÊòæÁ§∫ÔºåÂπ∂ÊîØÊåÅÂè™ÊòæÁ§∫ËßÜÈ¢ëvideo√æ- UIËâ≤ÂÄºÈ´òÂ∫¶ÊµìÁº©Ôºå‰ªÖ‰∏∫7ÁßçÔºåËá™ÂÆö‰πâË∂ÖÁÆÄÂçï     √æ- ÂØπGifÂä®ÂõæÁöÑÂ§ÑÁêÜÔºàÂèØÈÖçÁΩÆÂºÄÂÖ≥ÊòØÂê¶ÊòæÁ§∫ÔºåÂàóË°®‰∏≠‰ª•ÈùôÊÄÅÂõæ+Âä®ÂõæÊ†áËØÜÊòæÁ§∫ÔºåÈ¢ÑËßàÂ§ßÂõæÊó∂Ëá™Âä®Êí≠ÊîæÔºâ    √æ- Ëá™Â∏¶BitmapÁõ∏ÂÖ≥ÊñπÊ≥ïÔºàÂ¶ÇÊ∑ªÂä†Ê∞¥Âç∞„ÄÅÊääViewÁîªÊàêBitmap„ÄÅ‰øùÂ≠òBitmapÁ≠âÔºâ    √æ- Ëá™Â∏¶Â™í‰ΩìÂ∫ìÁõ∏ÂÖ≥ÊñπÊ≥ïÔºàÂ¶ÇÂ™í‰ΩìÊñá‰ª∂Êõ¥Êñ∞Âà∞Â™í‰ΩìÂ∫ìÔºâ    √æ√æ## ÂÖ≥‰∫éEasyPhotosÁöÑSDKÂèäÁõ∏ÂÖ≥ÁâàÊú¨ÂÖ¨Á§∫ÔºàandroidxÁâàÊú¨Ôºâ √æcompileSdkVersion 29  √æminSdkVersion 15  √ætargetSdkVersion 29      √æQQ‰∫§ÊµÅÁæ§Ôºö[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)      √æ[demo‰∏ãËΩΩ](https://raw.githubusercontent.com/HuanTanSheng/EasyPhotos/master/demo/release/demo-release.apk)     √æ√æ## ÂÖ≥‰∫éEasyPhotosÁöÑSDKÂèäÁõ∏ÂÖ≥ÁâàÊú¨ÂÖ¨Á§∫ÔºàsupportÁâàÊú¨Ôºâ √æcompileSdkVersion 28  √æminSdkVersion 15  √ætargetSdkVersion 28      √æbuildToolsVersion '28.0.3'    √æQQ‰∫§ÊµÅÁæ§Ôºö[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)      √æ√æ√æ√æ## Ëé∑ÂèñEasyPhotosÔºàÈÄöËøáGradleÊñπÂºèÔºâ√æÈ¶ñÂÖàÔºåÂú®È°πÁõÆÁöÑ `build.gradleÔºàprojectÔºâ` Êñá‰ª∂ÈáåÈù¢Ê∑ªÂä†:√æ√æ```gradle√æallprojects {√æ repositories {  √æ√æ        maven { url ""https://jitpack.io"" }√æ  √æ    }√æ}√æ```√æ√æÊúÄÂêéÔºåÂú®‰Ω†ÈúÄË¶ÅÁî®Âà∞EasyPhotosÁöÑmodule‰∏≠ÁöÑ `build.gradleÔºàmoduleÔºâ` Êñá‰ª∂ÈáåÈù¢Ê∑ªÂä†Ôºö√æ```gradle√ædependencies {  √æ√æ        implementation 'com.github.HuanTanSheng:EasyPhotos:3.0.6' //androidxÁâàÊú¨ÔºåÊîØÊåÅandroid 10ÔºåÊ∞∏‰πÖÁª¥Êä§√æ      √æ        //implementation 'com.github.HuanTanSheng:EasyPhotos:2.4.5' //ËøòÊ≤°ÊúâÂçáÁ∫ßÂà∞androidxÁöÑÂêåÂ≠¶ÂèØ‰ª•Áî®Ëøô‰∏™ÁâàÊú¨Ôºå‰ΩÜ‰∏çÊîØÊåÅandroid 10ÔºåÊöÇÂÅúÁª¥Êä§√æ   √æ}√æ```    √æ    √æ    √æ√æ√æ    √æ       √æ**Â¶ÇÊûú‰Ω†ÁöÑ `android studio` ÁâàÊú¨‰Ωé‰∫é3.4.2ÁâàÔºåÊúâÂèØËÉΩ‰ºöÊâì‰∏çÂºÄÊàëÁöÑDemoÔºåÂè™ÈúÄË¶Å‰øÆÊîπDemoÈáåÈù¢ `build.gradleÔºàprojectÔºâ` Êñá‰ª∂‰∏≠ÁöÑÔºö**     √æ√æ```gradle  √æ√ædependencies {√æ        classpath 'com.android.tools.build:gradle:3.4.2'√æ //Êää3.4.2ÊîπÊàê‰Ω†ÂØπÂ∫îÁöÑÁâàÊú¨Âç≥ÂèØÔºåÂ¶ÇÊûú‰∏çÊ∏ÖÊ•öÂØπÂ∫îÁâàÊú¨ÂèØ‰ª•ÁúãÁúã‰Ω†ÂÖ∂‰ªñÊ≠£Â∏∏È°πÁõÆÁöÑËøôÈáåÊòØÊÄé‰πàÂÜôÁöÑ  √æ }√æ√æ```    √æ    √æ## ÂÖ≥‰∫éÊ∑∑Ê∑Ü    √æ  √æ**EasyPhotosÁöÑÊ∑∑Ê∑ÜÔºö**  √æ```pro  √æ√æ-keep class com.huantansheng.easyphotos.models.** { *; }√æ√æ```√æ√æ    √æ    √æ  √æ## EasyPhotosÊñáÊ°£ÊÄªÂΩï    √æ√æ## [EasyPhotosÊñáÊ°£ÊÄªÂΩï](https://github.com/HuanTanSheng/EasyPhotos/wiki)√æ* [01-ÂÖ≥‰∫éÊùÉÈôê](https://github.com/HuanTanSheng/EasyPhotos/wiki/01-%E5%85%B3%E4%BA%8E%E6%9D%83%E9%99%90)√æ* [02-Áõ∏Êú∫‰∏éÁõ∏ÂÜå](https://github.com/HuanTanSheng/EasyPhotos/wiki/02-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E7%9B%B8%E5%86%8C)    √æ* [03-ÊãºÂõæÔºàÂçïÁã¨‰ΩøÁî®Ôºâ](https://github.com/HuanTanSheng/EasyPhotos/wiki/03-%E6%8B%BC%E5%9B%BE%EF%BC%88%E5%8D%95%E7%8B%AC%E4%BD%BF%E7%94%A8%EF%BC%89)      √æ* [04-ÂõæÁâáÊ∑ªÂä†Ê∞¥Âç∞](https://github.com/HuanTanSheng/EasyPhotos/wiki/04-%E5%9B%BE%E7%89%87%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0)     √æ* [05-ÊääViewÁîªÊàêBitmap](https://github.com/HuanTanSheng/EasyPhotos/wiki/05-%E6%8A%8AView%E7%94%BB%E6%88%90Bitmap)    √æ* [06-‰øùÂ≠òBitmapÂà∞ÊåáÂÆöÊñá‰ª∂Â§π](https://github.com/HuanTanSheng/EasyPhotos/wiki/06-%E4%BF%9D%E5%AD%98Bitmap%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9)    √æ* [07-BitmapÂõûÊî∂](https://github.com/HuanTanSheng/EasyPhotos/wiki/07-Bitmap%E5%9B%9E%E6%94%B6)√æ* [08-Êõ¥Êñ∞Â™í‰ΩìÊñá‰ª∂Âà∞Â™í‰ΩìÂ∫ì](https://github.com/HuanTanSheng/EasyPhotos/wiki/08-%E6%9B%B4%E6%96%B0%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E5%88%B0%E5%AA%92%E4%BD%93%E5%BA%93)√æ* [09-Â±èÂπïÊñπÂêëËÆæÁΩÆ](https://github.com/HuanTanSheng/EasyPhotos/wiki/09-%E5%B1%8F%E5%B9%95%E6%96%B9%E5%90%91%E8%AE%BE%E7%BD%AE)√æ* [10-Ëá™ÂÆö‰πâUIÊ†∑Âºè](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)√æ* [11-Â§öËØ≠Ë®Ä](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)      √æ* [12-ÈÖçÁΩÆImageEngineÔºåÊîØÊåÅÊâÄÊúâÂõæÁâáÂä†ËΩΩÂ∫ì](https://github.com/HuanTanSheng/EasyPhotos/wiki/12-%E9%85%8D%E7%BD%AEImageEngine%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93)√æ√æ    √æQQ‰∫§ÊµÅÁæ§Ôºö[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)    √æ    √æ       √æ           √æ    √æ## ÊÑüË∞¢    √æ     √æ[PhotoView](https://github.com/chrisbanes/PhotoView)Ôºö‰∏Ä‰∏™Âº∫Â§ßÁöÑÂõæÁâáÁº©ÊîæÂ∫ìÔºåÁî±[chrisbanes](https://github.com/chrisbanes) Â§ßÁ•ûÁºñÂÜô    √æ    √æ[PuzzleView](https://github.com/wuapnjie/PuzzleView)Ôºö‰∏Ä‰∏™Âº∫Â§ßÁöÑÊãºÂõæÂ∫ìÔºåÊàëÁöÑÊãºÂõæÂäüËÉΩÊòØÂú®Ê≠§Âü∫Á°Ä‰∏äÂÆûÁé∞ÔºåËøô‰∏™Â∫ìÁî±[wuapnjie](https://github.com/wuapnjie) ÁºñÂÜô„ÄÇ    √æ    √æ## ÁºñËÄÖËØ≠    √æ√æEasyPhotosÂ∞ÜÂú®È´òÈ¢úÂÄº„ÄÅÈ´òÂÖºÂÆπ„ÄÅÈ´òÊÄßËÉΩ„ÄÅÂº∫ÂäüËÉΩÁöÑÈÅìË∑Ø‰∏äÊåÅÁª≠Êõ¥Êñ∞ÔºåÊ¨¢ËøéÂêÑÁßçIssuesÔºåÊàëÂ∞ÜÂèäÊó∂ÂèçÈ¶àÔºåË∞¢Ë∞¢ÔºÅ    √æQQ‰∫§ÊµÅÁæ§Ôºö[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)      √æ√æ√æ## Êõ¥Êñ∞Êó•Âøó √æ**3.0.6Ôºö**√æ- ‰ºòÂåñÔºö‰ºòÂåñË∂ÖÂá∫ÈÄâÊã©ÊúÄÂ§ßÊï∞ÁöÑÊèêÁ§∫‰ø°ÊÅØ√æ√æ**3.0.5Ôºö**√æ- ‰øÆÂ§çÔºöfix #112√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[XuQK](https://github.com/XuQK)Ë¥°ÁåÆ √æ√æ**3.0.4Ôºö**√æ- ‰ºòÂåñÔºösaveBitmapToDirÊñπÊ≥ïÂÖºÂÆπandroid10√æ√æ**3.0.3Ôºö**√æ- ‰øÆÂ§çÔºö‰øÆÂ§çÂçé‰∏∫nova 5i pro Âú®Áõ∏Êú∫È°µÈù¢ÁÇπÂáªËøîÂõûÊó∂‰∫ßÁîüÁöÑÂ¥©Ê∫ÉÈóÆÈ¢ò #87√æ√æ**3.0.2Ôºö**√æ- ÈáçË¶ÅÔºöÊãºÂõæÂíåÂä†Ê∞¥Âç∞ÂäüËÉΩÈÄÇÈÖçandroid 10√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[zhangshaobo87](https://github.com/zhangshaobo87)Ë¥°ÁåÆ √æ√æ**3.0.1Ôºö**√æ- ÈáçË¶ÅÔºöÂÖºÂÆπandroid 10√æ- ÈáçË¶ÅÔºöÂõ†‰∏∫android 10 ‰∏çÊîØÊåÅÁî®pathË∑ØÂæÑÊòæÁ§∫ÂõæÁâáÔºåÊâÄ‰ª•ÂõûË∞ÉÂèñÊ∂à‰∫ÜÂçïÁã¨Ëé∑ÂèñpathÈõÜÂêàÁöÑÂõûË∞ÉÔºåÂè™‰øùÁïôËé∑ÂèñPhotoÈõÜÂêàÁöÑÂõûË∞ÉÔºåÂ¶ÇÈúÄ‰ΩøÁî®pathÔºåÂèØ‰ª•Âú®PhotoÂØπË±°‰∏≠Ëé∑Âèñ√æ- ÈáçË¶ÅÔºöImageEngineÊé•Âè£ÔºàÂõ†‰∏∫android 10 ‰∏çÊîØÊåÅÁî®pathË∑ØÂæÑÊòæÁ§∫ÂõæÁâáÔºåÊâÄ‰ª•ÂÖ®ÈÉ®Êîπ‰∏∫UriÁöÑÂΩ¢ÂºèÔºâÔºåÊúõÂçáÁ∫ßÁî®Êà∑Âë®Áü•√æ√æ**2.5.2Ôºö** √æ- ‰ºòÂåñÔºö‰øÆÂ§çArrayListÂú®Â§öÁ∫øÁ®ã‰∏≠addItemÂá∫Áé∞ÁöÑËßíÊ†áË∂äÁïåÈóÆÈ¢ò√æ√æ**2.4.9Ôºö** √æ- ÈáçË¶ÅÔºöÂçáÁ∫ßÂà∞gradle:3.4.2Ôºå‰ΩéÁâàÊú¨studioÂèØËÉΩÂõ†‰∏∫ËØ•È°πÂçáÁ∫ßËÄå‰∫ßÁîüÈîôËØØÔºåÂª∫ËÆÆÂçáÁ∫ßstudioÊàñÊâãÂä®‰øÆÊîπclasspath 'com.android.tools.build:gradle:3.4.2'Âà∞‰Ω†ÁöÑÂèØÁî®ÁâàÊú¨√æ- ‰ºòÂåñÔºö‰øÆÂ§çÈ¢ÑËßàËßÜÈ¢ëÂ∞ÅÈù¢‰∏∫ÈªëËâ≤ÂõæÁâáÈóÆÈ¢ò √æ√æ**2.4.8Ôºö** √æ- ‰ºòÂåñÔºö‰øÆÂ§çÈ¢ÑËßàÈ°µÈ¢ÑËßàÂ§ßÂõæÁâáÂíåÈïøÂõæÁâáÊó∂Ê∏ÖÊô∞Â∫¶Ê®°Á≥äÈóÆÈ¢ò   √æ√æ**2.4.7Ôºö** √æ- ‰ºòÂåñÔºö‰øÆÂ§çÁõ∏ÂÜåÈ°µÂú®ÈÉ®ÂàÜÊú∫Âûã‰ºöÈó™Áé∞ÊùÉÈôêÊèêÈÜíUIÈóÆÈ¢ò   √æ√æ**2.4.6Ôºö** √æ- ‰ºòÂåñÔºöÊîØÊåÅandroidx√æ√æ**2.4.5Ôºö** √æ- ‰øÆÂ§çÔºöÂΩìÁõ∏Êú∫ÊåâÈíÆ‰ΩçÁΩÆÂú®ÂõæÁâáÁ¨¨‰∏ÄÂº†Êó∂ÔºåÁÇπÂáªÁõ∏ÂÜåÈ°µÂ∫ïÈÉ®‰∏≠Èó¥ÁöÑÁºñËæëÊåâÈíÆ‰ºöÂØºËá¥Âè≥‰∏ãËßíÁõ∏Êú∫ÊåâÈíÆ‰πüÊòæÁ§∫Âá∫Êù•√æ- ‰øÆÂ§çÔºö‰ªÖÊòæÁ§∫ËßÜÈ¢ëÊó∂ÔºåÂÖ®ÈÉ®ËßÜÈ¢ëÊñá‰ª∂Â§πËßÜÈ¢ëÈáçÂ§çÊ∑ªÂä†ÈóÆÈ¢ò√æ- ‰øÆÂ§çÔºöÁÇπÂáªËßÜÈ¢ëÊó†Ê≥ïÊí≠ÊîæÈóÆÈ¢ò√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[SMask](https://github.com/SMask)Ë¥°ÁåÆ √æ   √æ**2.4.4Ôºö**     √æ- ‰øÆÂ§çÔºö‰øÆÂ§ç2.4.3ÁâàÊú¨ÂºïÂèëÁöÑÂõæÁâáÊï∞ÊçÆÂä†ËΩΩÁºìÊÖ¢ÈóÆÈ¢ò√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[joker-fu](https://github.com/joker-fu)Ë¥°ÁåÆ√æ   √æ**2.4.3Ôºö**     √æ- Êñ∞Â¢ûÔºöstart(SelectCallback callback)ÂêØÂä®ÊñπÂºèÔºåÈÄöËøáÊé•Âè£ÂõûË∞ÉÊï∞ÊçÆ√æ- Êñ∞Â¢ûÔºöfilter(String... types)ÊñπÂºèÊéßÂà∂Âè™ÊòæÁ§∫ÁöÑÊñá‰ª∂Á±ªÂûãÔºåÊîØÊåÅType.GIFÂíåType.VIDEOÔºåÂâçÊèêÊòØÂ∑≤ÁªèÈÄâÊã©ÊòæÁ§∫‰∫ÜgifÂíåvideo√æ- Êñ∞Â¢ûÔºöÂØπÊòæÁ§∫ËßÜÈ¢ëÁöÑÊó∂ÈïøËøáÊª§api√æ- Êñ∞Â¢ûÔºöÂçïÁã¨ÂØπÂõæÁâáÂíåËßÜÈ¢ëÁöÑÊúÄÂ§ßÈÄâÊã©Êï∞ÊéßÂà∂√æ- Êñ∞Â¢ûÔºöÊîØÊåÅÁõ∏Êú∫ÊåâÈíÆ‰ΩçÁΩÆËÆæÁΩÆÔºåsetCameraLocation(@Setting.Location int cLocation)//ÈªòËÆ§Â∑¶‰∏ãËßíÔºåÈÄöËøáËÆæÁΩÆÂèØËÆæÁΩÆ‰∏∫Áõ∏ÂÜåÁ¨¨‰∏ÄÂº†ÂõæÁâáÁöÑ‰ΩçÁΩÆ    √æ- ‰ºòÂåñÔºöÈ¢ÑËßàÈ°µ√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[joker-fu](https://github.com/joker-fu)„ÄÅ[SMask](https://github.com/SMask)Ë¥°ÁåÆ √æ- ÊèêÁ§∫ÔºöÊñ∞ÁöÑapiËØ¶ËßÅ[wiki](https://github.com/HuanTanSheng/EasyPhotos/wiki/02-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E7%9B%B8%E5%86%8C) √æ   √æ**2.4.1Ôºö**     √æ- ‰ºòÂåñÔºö2.4.0‰∏≠ÁöÑ‰ª£Á†Å√æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[joker-fu](https://github.com/joker-fu)„ÄÅ[SMask](https://github.com/SMask)Ë¥°ÁåÆ√æ        √æ**2.4.0Ôºö**     √æ- ÊÑüË∞¢ÔºöËØ•ÁâàÊú¨Áî±[joker-fu](https://github.com/joker-fu)Ë¥°ÁåÆ√æ- Êñ∞Â¢ûÔºöËßÜÈ¢ëÈÄâÊã©ÂäüËÉΩ    √æ- Êñ∞Â¢ûAPIÔºöÊòØÂê¶ÂêØÂä®ËßÜÈ¢ëÈÄâÊã©ÔºåsetVideoÔºàboolean shouldShowÔºâ    √æ- ‰ºòÂåñÔºöÈªòËÆ§‰∏çÊòæÁ§∫gifÂõæÔºåÂèØÈÄöËøásetGifÔºàboolean shouldShowÔºâÊéßÂà∂ÊòØÂê¶ÊòæÁ§∫    √æ√æ**2.3.6Ôºö**     √æ- ‰øÆÂ§çÔºö2.3.5Âá∫Áé∞ÁöÑÊãºÂõæÈîôËØØ    √æ- ‰ºòÂåñÔºöËß£ÂÜ≥ÈÉ®ÂàÜÊú∫ÂûãÂú®ÂÖ®Â±èÈ¢ÑËßàÂõæÁâáËøîÂõûÂà∞Áõ∏ÂÜåÈÄâÊã©ÁïåÈù¢Êó∂Áä∂ÊÄÅÊ†èÈó™ÁÉÅÁöÑÈóÆÈ¢òÔºàÊÑüË∞¢@wqxcloudÔºâ    √æ- ‰ºòÂåñÔºöÁõ∏ÂÜåUIÔºàÂ∞ÜÂéüÂ∫ïÈÉ®Êìç‰ΩúÊ†è‰∏≠Èó¥ÁöÑËÆæÁΩÆÊåâÈíÆÊ†∑ÂºèÊîπ‰∏∫ÁºñËæëÊ†∑ÂºèÔºâ        √æ- Êñ∞Â¢ûÔºöÁõ∏ÂÜåÈ°µÂ∫ïÈÉ®Êìç‰ΩúÊ†è‰∏≠Èó¥ÁöÑÁºñËæëÊåâÈíÆÔºå‰ºöÊ†πÊçÆÂºÄÂèëËÄÖÈÖçÁΩÆÁöÑÊ∏ÖÁ©∫ÊåâÈíÆ„ÄÅÂéüÂõæÊåâÈíÆ„ÄÅÊãºÂõæÊåâÈíÆ‰ΩøÁî®ÊÉÖÂÜµËøõË°åÊòæÁ§∫ÊàñÈöêËóè„ÄÇÔºàÂΩìÊ∏ÖÁ©∫ÊåâÈíÆ„ÄÅÂéüÂõæÊåâÈíÆ„ÄÅÊãºÂõæÊåâÈíÆÈÉΩ‰∏çÊòæÁ§∫Êó∂ÔºåÁºñËæëÊåâÈíÆÈöêËóè„ÄÇÂÖ∂‰ΩôÊù°‰ª∂ÂùáÊòæÁ§∫„ÄÇÔºâ    √æ- Êñ∞Â¢ûÔºöÂèØÈÖçÁΩÆÁõ∏ÂÜåÈ°µÊ∏ÖÁ©∫ÊåâÈíÆÊòØÂê¶ÊòæÁ§∫ÔºàËØ¶ËßÅwikiÔºâ       √æ    √æ**2.3.5Ôºö**     √æ- ‰øÆÂ§çÔºö‰øÆÂ§çÊñáÂ≠óË¥¥Á∫∏Ëá™Âä®ÁîüÊàêÊó•ÊúüÈîôËØØ    √æ- ‰ºòÂåñÔºöAlbumModelÁ±ªÔºåÊõ¥Âä†ËäÇÁúÅÂÜÖÂ≠ò ÔºàÊÑüË∞¢@ofexeÔºâ   √æ- ÂçáÁ∫ßÔºöcompileSdkVersion ÂçáÁ∫ß‰∏∫28ÔºåbuildToolsVersion ÂçáÁ∫ß‰∏∫ '28.0.3'    √æ    √æ**2.3.4Ôºö**    √æ- ‰øÆÂ§çÔºöÂùöÊûúproÂíåËç£ËÄÄ8Âú®ÁâπÊÆäÊÉÖÂÜµ‰∏ãÊó†Ê≥ïËé∑ÂèñÂ™í‰ΩìÊñá‰ª∂Ë∑ØÂæÑÁöÑÈóÆÈ¢ò        √æ    √æ**2.3.3Ôºö**    √æ- ‰ºòÂåñÔºöËøáÊª§Â™í‰ΩìÂ∫ì‰∏≠Â≠òÂú®‰ΩÜÂÆûÈôÖ‰∏çÂ≠òÂú®ÁöÑÂõæÁâá    √æ    √æ**2.3.2Ôºö**    √æ- ‰ºòÂåñÔºöÁä∂ÊÄÅÊ†èÈ¢úËâ≤Áã¨Á´ã‰∏∫easy_photos_status_bar    √æ    √æ√æ**2.3.1Ôºö**    √æ- Êñ∞Â¢ûÔºöË∞ÉÁî®Áõ∏ÂÜåÊîØÊåÅFragmentÁõ¥Êé•Ë∞ÉÁî®ÔºåËµ∞FragmentÁöÑresultÂõûË∞É    √æ- ‰øÆÂ§çÔºö‰∏âÊòüS3ÊãçÁÖßÈîôËØØ     √æ- ‰øÆÂ§çÔºöÈ≠ÖÊóèÁî®Êà∑Âú®ÊûÅÁ´ØÊìç‰Ωú‰∏ãÁöÑÊùÉÈôêÈîôËØØ     √æ- ‰øÆÂ§çÔºöappÂú®ÂêéÂè∞Êó∂ÔºåÂõ†ËÆæÂ§áÂÜÖÂ≠ò‰∏çË∂≥ËÄåÂõûÊî∂ËµÑÊ∫êÂêéÔºåÂú®‰ªªÂä°ÂàóË°®‰∏≠ÂêØÂä®appÂêéÁöÑÂºÇÂ∏∏    √æ    √æ**2.3.0Ôºö**    √æ- ‰øÆÂ§ç4.4.3YouTaPhoneÊãçÁÖßÊó∂Áõ∏Êú∫ÂÅúÊ≠¢ËøêË°åÈîôËØØ    √æ- ‰øÆÂ§çÁõ∏ÂÜå‰∏≠Ê≤°ÊúâÂõæÁâáÊÉÖÂÜµ‰∏ãÔºåEasyPhotosËá™Âä®ÂâçÂæÄÁõ∏Êú∫ÊãçÁÖßÊó∂ÔºåÂèëÁîüÁöÑÈîôËØØ    √æ√æ**2.2.9Ôºö**        √æ- ÈáçË¶Å‰øÆÊîπÔºöPhotoÁ±ª‰∏≠ÁöÑtimeÂ≠óÊÆµÁöÑÂçï‰ΩçÊîπ‰∏∫ÊØ´Áßí    √æ- ‰ºòÂåñÔºöÂõæÁâáÊéíÂ∫èÁÆóÊ≥ïË∞ÉÊï¥‰∏∫‰∏éÁ≥ªÁªüÁõ∏ÂÜåÊéíÂ∫èÁÆóÊ≥ïÁ±ª‰ºº    √æ- ‰ºòÂåñÔºöÂÜÖÂ≠òÊ≥ÑÈú≤ÊÉÖÂÜµ    √æ- ‰øÆÂ§çÔºöÈÉ®ÂàÜÊú∫ÂûãÂá∫Áé∞Â∞ëËÆ∏ÂõæÁâá‰∏¢Â§±ÊÉÖÂÜµ    √æ- ‰øÆÂ§çÔºöÈÉ®ÂàÜÊú∫Âûã‰∏çËØªÊâ©Â±ïSDÂç°‰∏≠ÁÖßÁâáÁöÑÊÉÖÂÜµ    √æ- ‰øÆÂ§çÔºö‰∏âÊòüÁöÑÈÉ®ÂàÜÊú∫ÂûãclearFilterColorÔºàÔºâÊñπÊ≥ïÊó†ÊïàÁöÑÊÉÖÂÜµ    √æ- ‰øÆÂ§çÔºö‰∏âÊòüÁöÑÈÉ®ÂàÜÊú∫ÂûãÂõ†Âú®xml‰∏≠ÁªëÂÆöÁÇπÂáª‰∫ã‰ª∂ÂØºËá¥ÁöÑÁÇπÂáªÊó†ÊïàÁöÑÊÉÖÂÜµ    √æ- ‰øÆÊîπÔºöÂçïÈÄâÈÄâ‰∏≠ÂõæÊ†áÊîπ‰∏∫Êï∞Â≠ó1    √æ- ÂÖ∂‰ªñÔºödemo‰∏≠Êñ∞Â¢û‰∫ÜÂÜÖÂ≠òÊ≥ÑÈú≤Ê£ÄÊµãÂ∑•ÂÖ∑ÔºåÂ¶Ç‰ΩøÁî®‰∏≠ÂèëÁé∞ÂÜÖÂ≠òÊ≥ÑÈú≤ÔºåÈ∫ªÁÉ¶ÂëäÁü•ÔºåÊàëÂ∞ÜÁ¨¨‰∏ÄÊó∂Èó¥Â§ÑÁêÜÔºåÊÑüË∞¢ÔºÅ√æ√æ√æ**2.2.8Ôºö**    √æ- bug‰øÆÂ§çÔºöÂú®È¢ÑËßàÈ°µÁÇπÂáªÊúÄÂêé‰∏ÄÂº†ÁöÑÈÄâÊã©Êó†ÊïàÔºå‰ª•ÂèäÂõ†Ê≠§‰∫ßÁîüÁöÑÊï∞ÁªÑË∂äÁïåbug    √æ- bug‰øÆÂ§çÔºöÊûÅÂ∞ëÊÉÖÂÜµ‰∏ãÁöÑÈ¢ÑËßàÈ°µÁõ¥Êé•ËøîÂõû‰∫ßÁîüÁöÑÁ©∫ÊåáÈíàÈóÆÈ¢ò    √æ- ÊÑüË∞¢@zijinzhiyun ÂèçÈ¶à‰ª•‰∏äbug√æ    √æ    √æ**2.2.6Ôºö**    √æ- api‰øÆÊîπÔºö‰∏∫Áªü‰∏ÄapiÊ†áÂáÜÔºåÂ∞ÜÊâÄÊúâËøîÂõûKeyÁªü‰∏Ä‰∏∫EasyPhotos.RESULT_PHOTOSÂíåEasyPhotos.RESULT_PATHS„ÄÇÂ∏¶Êù•ÁöÑÊîπÂèòÂ∞±ÊòØÂçïÁã¨‰ΩøÁî®ÊãºÂõæÂäüËÉΩÊó∂ÁöÑÂõæÁâáËøîÂõûKeyÊîπ‰∏∫EasyPhotos.RESULT_PHOTOSÂíåEasyPhotos.RESULT_PATHSÔºåÂéªÈô§ÂéüÊù•ÁöÑEasyPhotos.RESULT_PUZZLE_PHOTOÂíå-√æEasyPhotos.RESULT_PUZZLE_PATHËøô‰∏§‰∏™Key„ÄÇ      √æ- UI‰øÆÊîπÔºöÈ¢ÑËßàÈ°µÁä∂ÊÄÅÊ†èÈ¢úËâ≤‰∏écolorPrimaryDarkËâ≤ÂÄºÂØπÂ∫î„ÄÇËã•ÂÖ∂Ëâ≤ÂÄºË∂ãËøë‰∫éÁôΩËâ≤ÔºåÂú®Êó†ËôöÊãüÊåâÈîÆÁöÑÊâãÊú∫‰∏≠Áä∂ÊÄÅÊ†èÂ≠ó‰ΩìÈ¢úËâ≤Êô∫ËÉΩÈÄÇÈÖç‰∏∫Ê∑±Ëâ≤ÔºåÊúâËôöÊãüÊåâÈîÆÁöÑÊâãÊú∫‰∏≠Áä∂ÊÄÅÊ†èÊô∫ËÉΩ‰ºòÂåñ‰∏∫ÈÄèÊòéËâ≤„ÄÇÔºàÈô§È¢ÑËßàÈ°µÂ§ñÔºåÂÖ∂‰ªñÈ°µÈù¢Ëã•Áä∂ÊÄÅÊ†èÈ¢úËâ≤Ë∂ãËøë‰∫éÁôΩËâ≤ÔºåÊó†ËÆ∫‰ªª‰ΩïÊú∫ÂûãÂùá‰∏∫Êô∫ËÉΩ‰ºòÂåñÂ≠ó‰ΩìÈ¢úËâ≤‰∏∫Ê∑±Ëâ≤Ôºå[Êü•ÁúãËØ¶ÊÉÖ„ÄÇ](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)Ôºâ     √æ- ÈîôËØØ‰øÆÂ§çÔºö‰øÆÂ§çÂä™ÊØî‰∫öÊú∫ÂûãÁöÑÈ¢ÑËßàÈ°µÂç†Áî®ÂØºËà™Ê†èÈóÆÈ¢ò      √æ√æ**2.2.4Ôºö**    √æ- ‰ºòÂåñÔºöÂçïÁã¨ÂêØÂä®Áõ∏Êú∫Êó∂Êó†ÈúÄÈÖçÁΩÆÂõæÁâáÂä†ËΩΩÂºïÊìé       √æ- ‰ºòÂåñÔºöÁ§∫‰æã‰∏≠ÈÖçÁΩÆGlide4.x‰∏∫ÂõæÁâáÂä†ËΩΩÂºïÊìéÁöÑÁ§∫‰æãÊñá‰ª∂Êîπ‰∏∫Âçï‰æãÊ®°Âºè    √æ√æ**2.2.3Ôºö**    √æ- ‰øÆÂ§çÊãº‰∏ÄÂº†Êõ¥Êç¢ÂõæÁâáÊó∂ÂèëÁîüÁöÑÈîôËØØ    √æ- ‰øÆÂ§çÂçïÁã¨ÂêØÂä®Áõ∏Êú∫Êó∂ÁöÑÊùÉÈôêÈîôËØØ    √æ- ‰ºòÂåñÊ∑∑Ê∑ÜËßÑÂàô    √æ√æ**2.2.2Ôºö**    √æ- ÈáçÂ§ßÊõ¥Êñ∞ÔºöEasyPhotosÂéªÈô§‰∫ÜGlideÁöÑ‰æùËµñÔºåÂπ∂ÂØπÂ§ñÊèê‰æõImageEngineÊé•Âè£ÔºåÈÄöËøáÂØπImageEngineÊé•Âè£ÁöÑÂÆûÁé∞Ôºå‰ΩøÁî®ËÄÖÂèØ‰ª•Âø´ÈÄüÁªëÂÆöÂ¶ÇGlide„ÄÅpicasso„ÄÅfresco„ÄÅImageloaderÁ≠â‰Ω†Ê≠£Âú®‰ΩøÁî®ÁöÑ‰ªªÊÑèÂõæÁâáÂä†ËΩΩÂ∫ì„ÄÇ[ÁÇπÂáªÊü•ÁúãËØ¶ÊÉÖ](https://github.com/HuanTanSheng/EasyPhotos/wiki/12-%E9%85%8D%E7%BD%AEImageEngine%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93)    √æ- ÁïåÈù¢‰ºòÂåñÔºö‰ºòÂåñÂçïÈÄâÂõæÊ†á    √æ- ‰øÆÊîπÊñáÂ≠óË¥¥Á∫∏ÁöÑÊñáÂ≠óÁºñËæëÈ°µÈù¢‰∏≠ÔºåÂ∫ïÈÉ®Êìç‰ΩúÊ†èÁöÑËÉåÊôØËâ≤‰∏∫Âõ∫ÂÆöËâ≤ÂÄºÔºàÂÖ∂ÂÆû‰πüÂèØ‰ª•ÊîπÔºåÁúãÁúãEasyPhotosÁöÑcolorÊñá‰ª∂‰Ω†Â∞±Áü•ÈÅìÊÄé‰πàÊîπÔºâ√æ√æ    √æ**2.1.0Ôºö**    √æ- Êñ∞Â¢ûÂäüËÉΩÔºöEasyPhotosÊô∫ËÉΩËØÜÂà´Áä∂ÊÄÅÊ†èÁöÑËÉåÊôØÈ¢úËâ≤ÔºåÂΩìÂÖ∂Ë∂ãËøë‰∫éÁôΩËâ≤Êó∂ÔºåÊô∫ËÉΩÈÄÇÈÖçÊ∑±Ëâ≤Áä∂ÊÄÅÊ†èÂ≠ó‰Ωì„ÄÇÔºàËØ•ÂäüËÉΩ‰ªÖÂØπ6.0‰ª•‰∏äÁ≥ªÁªüÁîüÊïàÔºåÂπ∂Ê≤°ÊúâÈÄÇÈÖç6.0‰ª•‰∏ãÁöÑÂ∞èÁ±≥ÂíåÈ≠ÖÊóèÔºåÂ¶ÇÊúâÈúÄË¶ÅÂèØ‰ª•Âä†Áæ§‰∫§ÊµÅÔºâ    √æ- Êñ∞Â¢ûÂäüËÉΩÔºöÂèØÈÖçÁΩÆÊòØÂê¶ÊòæÁ§∫GifÂä®Âõæ    √æ- ÂäüËÉΩ‰ºòÂåñÔºöGifÂä®ÂõæÁöÑÂ§ÑÁêÜÊñπÂºè„ÄÇ√æ- ÁïåÈù¢‰ºòÂåñÔºöGifÂä®Âõæ„ÄÅÁõ∏Êú∫ÊåâÈíÆÁ≠â„ÄÇ√æ- Êñ∞Â¢ûÂ≠óÊÆµÔºö    √æ````java    √æ<string name=""gif_easy_photos"">Âä®Âõæ</string>    √æ````    √æÂÖ∑‰ΩìÊü•Áúã[11-Â§öËØ≠Ë®Ä](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)    √æ√æ- ÂÜÖÈÉ®ÂçáÁ∫ßÔºöÊúÄÊñ∞ÁâàÁºñËØëÂ∑•ÂÖ∑ÂíåÊúÄÊñ∞Áâàsdk√æ√æ**2.0.2Ôºö**    √æ- ÂçáÁ∫ßÔºöGlideÂà∞4.5.0Ôºà‰∏çÂΩ±Âìç‰ΩéÁâàÊú¨‰ΩøÁî®Ôºâ    √æ- ‰øÆÂ§çÔºöÊãº‰∏ÄÂº†ÂäüËÉΩÂõ†ÂõæÁâáËøáÂ§öËøáÂ§ßÂØºËá¥ÁöÑoomÈóÆÈ¢ò    √æ- ÊÑüË∞¢@[Beiler](https://github.com/beiler) ÊèêÂá∫ÁöÑÂèçÈ¶à      √æ    √æ    √æ**2.0.1Ôºö**    √æ- ‰øÆÂ§çbugÔºöÂçïÁã¨‰ΩøÁî®ÊãºÂõæÂäüËÉΩÊó∂Ôºå‰ª•ÂõæÁâáË∑ØÂæÑ‰∏∫ÂèÇÊï∞Êó∂‰∫ßÁîüÁöÑÊï∞ÁªÑË∂äÁïåbug„ÄÇ   √æ√æ**2.0.0Ôºö**   √æ- Êñ∞Â¢ûÂäüËÉΩÔºöÁõ∏ÂÜåÂÜÖÈÉ®Ëá™Â∏¶Êãº‰∏ÄÂº†ÂäüËÉΩÔºàÂèØÈÄöËøáÈÖçÁΩÆ‰∏ç‰ΩøÁî®ËØ•ÂäüËÉΩÔºåËØ•Ê®°ÂºèÊãºÂõæ‰øùÂ≠òÁöÑÂõæÁâáÂ≠òÂÇ®Âú® sdÂç°Ê†πÁõÆÂΩï/‰Ω†ÁöÑapp_name Êñá‰ª∂Â§π‰∏ãÔºâ   √æ- Êñ∞Â¢ûÂäüËÉΩÔºöÊãºÂõæÈ°µÈù¢Â¢ûÂä†ÊñáÂ≠óË¥¥Á∫∏ÂäüËÉΩ    √æ- ÁïåÈù¢‰ºòÂåñÔºöÊó†ÊùÉÈôêÊó∂ÁöÑÁõ∏ÂÜåÁïåÈù¢‰ºòÂåñÔºå‰Ωø‰πãÊõ¥Âä†ÂèãÂ•Ω    √æ- ÁïåÈù¢‰ºòÂåñÔºöÁõ∏Êú∫ÊåâÈíÆ‰ºòÂåñÔºåËßÜËßâÂíå‰ΩìÈ™å‰∏äÈÉΩÊõ¥Âä†ÂèãÂ•Ω    √æ- ÁïåÈù¢‰ºòÂåñÔºö‰∏ìËæëÂàóË°®ÁªÜËäÇ‰ºòÂåñÔºåÊõ¥Âä†Ëá™ÁÑ∂„ÄÅÂ§ßÊ∞î     √æ- ÂäüËÉΩ‰ºòÂåñÔºöÁõ∏ÂÜåÁïåÈù¢ÊâìÂºÄÁõ∏Êú∫ÔºåÊãçÁÖßÂêé‰∏çÁõ¥Êé•ËøîÂõûÔºåËÄåÊòØÈªòËÆ§ÈÄâ‰∏≠ÊãçÂÆåÁöÑÂõæÁâáÔºåÂÅúÁïôÂú®Áõ∏ÂÜåÁïåÈù¢√æ- Â≠óÊÆµÂ¢ûÂä†ÔºöÂÖ∑‰ΩìÊü•Áúã[11-Â§öËØ≠Ë®Ä](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)      √æ- ÈáçË¶Å‰øÆÊîπÔºöPhotoÂØπË±°ÂéªÈô§isCameraÊàêÂëòÂèòÈáè„ÄÇÊûÑÈÄ†ÂáΩÊï∞‰πüÂõ†Ê≠§Áõ∏Â∫îÊîπÂèòÔºåÂ∞ë‰∫Ü‰∏Ä‰∏™ÂèÇÊï∞„ÄÇ√æ- ÈáçË¶Å‰øÆÊîπÔºösetFileProviderAuthoritiesTextÔºàÔºâÊñπÊ≥ïÊõ¥Êîπ‰∏∫setFileProviderAuthorityÔºàÔºâÊñπÊ≥ï    √æ- ÈáçË¶Å‰øÆÊîπÔºöUIËâ≤ÂÄºÈáçÊñ∞ÂÆö‰πâÔºåÁî±ÂéüÊù•ÁöÑ‰∏âÂçÅÂá†ÁßçËâ≤ÂÄºÁªü‰∏Ä‰øÆÊîπ‰∏∫7‰∏™Ëâ≤ÂÄºÔºåËá™ÂÆö‰πâËµ∑Êù•Êõ¥Âä†Êñπ‰æø„ÄÇÂÖ∑‰ΩìÊü•Áúã[10-Ëá™ÂÆö‰πâUIÊ†∑Âºè](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)√æ√æ√æ√æ**1.3.2Ôºö**   √æ- Êñ∞Â¢ûÂäüËÉΩÔºö    √æ    - ÊãºÂõæÔºàÊúÄÂ§öÂØπ9Âº†ÂõæÁâáËøõË°åÊãºÂõæÔºåÊó†ÈúÄÂÖ≥ÂøÉËøêË°åÊó∂ÊùÉÈôêÔºåÂÜÖÈÉ®Â§ÑÁêÜÂ•Ω‰∫ÜÔºâ    √æ    - ÊääViewÁîªÊàêBitmap    √æ    - ‰øùÂ≠òbitmapÂà∞Êú¨Âú∞ÔºàÂèØËÆæÁΩÆÊòØÂê¶Êõ¥Êñ∞Âà∞Â™í‰ΩìÂ∫ìÔºåÂ¶ÇÊûúË∞ÉÁî®Ê≠§ÊñπÊ≥ïÂâçÊ≤°ÊúâËøõÂÖ•ËøáEasyPhotosÁöÑÁõ∏ÂÜåÊàñÁõ∏Êú∫ÔºåÂàôÈúÄË¶Å‰Ω†Ëá™Â∑±Â§ÑÁêÜËØªÂÜôÊùÉÈôêÔºâ      √æ- Êõ¥Êç¢Áõ∏ÂÜåÂçïÈÄâÁöÑÈÄâ‰∏≠ÂõæÊ†áÊ†∑Âºè    √æ- ‰øÆÂ§çÂõûË∞ÉÈÄâ‰∏≠Âú∞ÂùÄÁöÑkeyÔºöRRESULT_PATHS ‰øÆÂ§ç‰∏∫ RESULT_PATHS„ÄÇÔºàpsÔºöÂØπÂ¶ÇÊ≠§Êô∫ÈöúÁöÑÁñèÂøΩË°®Á§∫Ê≠âÊÑè„ÄÇÔºâ    √æ- ‰øÆÂ§çÊ∞∏‰πÖ‰∏çÁªôÊùÉÈôêÊÉÖÂÜµ‰∏ãÔºåÈÄÄÂá∫Áõ∏ÂÜåÊó∂ÂèëÁîüÁöÑÈîôËØØ    √æ- ‰øÆÂ§çË∞ÉÁî®Á≥ªÁªüÊùÉÈôêËÆæÁΩÆÈ°µËøîÂõûÊó∂ÔºåÁõ∏ÂÜåÈ°µÈù¢ÊàñÊãºÂõæÈ°µÈù¢Ëá™ÈîÄÊØÅÊÉÖÂÜµ√æ- Êñ∞Â¢ûÂ≠óÁ¨¶‰∏≤Ôºö    √æ```java    √æ    <string name=""done_easy_photos"">ÂÆåÊàê</string>√æ    <string name=""cancel_easy_photos"">ÂèñÊ∂à</string>√æ    <string name=""template_easy_photos"">Ê®°Êùø</string>    √æ```   √æ- Êñ∞Â¢ûËâ≤ÂÄºÔºö    √æ```java   √æ    <!--ÂõæÁâáÈ¢ÑËßàÈ°µ-->√æ    <color name=""preview_status_easy_photos"">#d73c3d41</color>//api21‰ª•‰∏äÈ¢ÑËßàÈ°µÁä∂ÊÄÅÊ†èÈ¢úËâ≤‰∏∫ËØ•Ëâ≤ÂÄºÔºõapi19Âíåapi20Áä∂ÊÄÅÊ†è‰∏∫ÈÄèÊòéËâ≤ÔºõÂÖ∂‰ΩôapiÁä∂ÊÄÅÊ†èÊàñÈÄèÊòéÊàñÈªëÊàñÁÅ∞ÔºåÂèñÂÜ≥‰∫éÂêÑÂÆ∂romÂíåÊúâÊó†ÂÆû‰ΩìÊåâÈîÆÁ≠âÂõ†Á¥†„ÄÇÊ≥®ÔºöÂÖ∂‰ΩôÈ°µÈù¢Áä∂ÊÄÅÊ†èÊ†πÊçÆ‰Ω†ÁöÑ‰∏ªÈ¢òËµ∞√æ√æ    <!--ÊãºÂõæÈ°µ-->√æ    <color name=""puzzle_background_easy_photos"">#000000</color>//ÊãºÂõæÈ°µÈù¢ËÉåÊôØËâ≤√æ    <color name=""puzzle_selected_frame_easy_photos"">#57a457</color>//ÊãºÂõæÈ°µÈù¢ÂΩìÂâçÂ§ÑÁêÜitemÁöÑËæπÊ°ÜÈ¢úËâ≤√æ    <color name=""puzzle_selected_controller_easy_photos"">#00AA00</color>//ÊãºÂõæÈ°µÈù¢ÂΩìÂâçÂ§ÑÁêÜitemÁöÑÊìç‰ΩúbarÈ¢úËâ≤ÔºåÂ∞±ÊòØitemËæπÊ°Ü‰∏≠Âá∏Ëµ∑Áü©ÂΩ¢ÁöÑËâ≤ÂÄº√æ    <color name=""puzzle_menu_easy_photos"">#969696</color>//ÊãºÂõæÈ°µÈù¢ÁöÑÊñáÂ≠óÊåâÈíÆÂíåÁ§∫‰æãÂõæÁâáÈ¢úËâ≤√æ    <color name=""puzzle_menu_done_easy_photos"">#009700</color>//ÊãºÂõæÈ°µÈù¢ÁöÑÂÆåÊàêÊåâÈíÆÊñáÂ≠óÈ¢úËâ≤√æ    <color name=""puzzle_bottom_bar_line_easy_photos"">#ee3a3a3e</color>//ÊãºÂõæÁöÑÂ∫ïÈÉ®Ê†èÈó¥ÈöîÈ¢úËâ≤√æ    <color name=""puzzle_photo_background"">#ffffff</color>//ÂõæÁâáÁöÑËÉåÊôØÈ¢úËâ≤    √æ```√æ    √æ**1.2.8Ôºö**    √æ- ‰øÆÂ§ç'ÈÄâ‰∏≠ÂõæÁâáÂàóË°®'ÁÇπÂáªÁä∂ÊÄÅ‰∏ã‰∏é'Â§ßÂõæÂàóË°®ÂíåÈÄâÊã©Âô®'ÁöÑËÅîÂä®ÈîôËØØ    √æ√æ**1.2.7Ôºö**    √æ- Â§ßÂõæÈ¢ÑËßàÈ°µÊñ∞Â¢ûÔºöÂ§ßÂõæÂàóË°®‰∏éÈÄâ‰∏≠ÂõæÁâáÂàóË°®ËÅîÂä®    √æ- ÂçáÁ∫ß classpath 'com.android.tools.build:gradle:3.0.1'    √æ- Êñ∞Â¢ûËâ≤ÂÄºÔºö    √æ```java    √æ<color name=""preview_bottom_bar_easy_photos"">#eb212123</color>//È¢ÑËßàÈ°µÁöÑÂ∫ïÈÉ®Ê†èÂíåÈÄâ‰∏≠ÂõæÁâáÂàóË°®ËÉåÊôØÈ¢úËâ≤    √æ<color name=""preview_bottom_bar_line_easy_photos"">#ee3a3a3e</color>//È¢ÑËßàÈ°µÁöÑÂ∫ïÈÉ®Ê†è‰∏éÈÄâ‰∏≠ÂõæÁâáÂàóË°®ÁöÑÂàÜÂâ≤Á∫øÈ¢úËâ≤    √æ```   √æ√æ**1.2.6Ôºö**    √æ- Ê≠£ÂºèÂºÄÊîæÔºåÊäïÂÖ•‰ΩøÁî®   √æ- ÂπøÂëäviewÂèØ‰ª•‰º†Á©∫ÔºåÈÄÇÁî®‰∫éVIP‰∏çÊòæÁ§∫ÂπøÂëäÂú∫ÊôØ√æ√æ**1.2.3Ôºö**    √æ- ‰ºòÂåñÂõæÁâáÈôêÂà∂ÊñπÂºèÔºöÊúÄÂ∞èÂÆΩÂ∫¶„ÄÅÊúÄÂ∞èÈ´òÂ∫¶„ÄÅÊúÄÂ∞èÊñá‰ª∂Â§ßÂ∞è    √æ- Â¶ÇÊûúÂçï‰∏ÄËÆæÁΩÆÔºåÊª°Ë∂≥Êù°‰ª∂Âç≥ËøáÊª§    √æ- Â¶ÇÊûúÂ§öÈ°πËÆæÁΩÆÔºåÊª°Ë∂≥‰∏ÄÈ°πÂç≥ËøáÊª§    √æ√æ**1.2.2Ôºö**     √æ- Êñ∞Â¢ûËøîÂõûÁªìÊûúÔºöÂõæÁâáÂú∞ÂùÄÈõÜÂêà   √æ- Êñ∞Â¢ûËøîÂõûÁªìÊûúÔºöÁî®Êà∑ÊòØÂê¶ÈÄâ‰∏≠ÂéüÂõæÈÄâÈ°π    √æ- Êñ∞Â¢ûËøîÂõûÁªìÊûúÔºöÂõæÁâá‰ø°ÊÅØÈõÜÂêà    √æ- Êñ∞Â¢ûËÆæÁΩÆÈªòËÆ§ÂãæÈÄâÂõæÁâáÈõÜÂêàÊñπÂºèÔºöÂõæÁâáÂú∞ÂùÄÈõÜÂêà   √æ- Êñ∞Â¢ûËÆæÁΩÆÈªòËÆ§ÂãæÈÄâÂõæÁâáÈõÜÂêàÊñπÂºèÔºöÂõæÁâá‰ø°ÊÅØÈõÜÂêà   √æ√æ**1.2.1Ôºö**   √æ- ‰ºòÂåñÈ¢ÑËßàÁïåÈù¢ÂÖ®Â±èÂä®Êïà√æ- ‰ºòÂåñPhotoÂÆû‰ΩìÂØπË±°  √æ√æ**1.2.0Ôºö**   √æ- ÂçáÁ∫ßÂõæÁâáÈÄâÂèñËøîÂõû‰ø°ÊÅØÔºàÂõæÁâáÂú∞ÂùÄ/ÂÆΩÈ´ò/Êñá‰ª∂Â§ßÂ∞è/Êñá‰ª∂‰øÆÊîπÊó∂Èó¥/Êñá‰ª∂Á±ªÂûã/Áî®Êà∑ÊòØÂê¶ÁÇπÂáªÂéüÂõæÈÄâÈ°π/Êñá‰ª∂ÂêçÔºâ√æ- ÂõæÁâáÈÄâÊã©Êñ∞Â¢ûÂéüÂõæÈÄâÈ°π√æ- È¢ÑËßàÁïåÈù¢ÊîØÊåÅÈÄâÊã©ÂÆåÊàê√æ- È¢ÑËßàÁïåÈù¢ÊîØÊåÅÂΩìÂâçÂõæÁâá‰ΩçÁΩÆÊòæÁ§∫   √æ√æ**1.1.1Ôºö**   √æ- ‰ºòÂåñÁõ∏Êú∫ÂíåÁõ∏ÂÜåÁöÑË∞ÉÁî®APIÔºå‰Ωø‰πãÊõ¥Âä†ÂèãÂ•Ω    √æ√æ**1.1.0Ôºö**   √æ- Â¢ûÂä†ÂõæÁâáÊ∑ªÂä†Ê∞¥Âç∞ÂäüËÉΩ  √æ- Â¢ûÂä†Â™í‰ΩìÊñá‰ª∂Êõ¥Êñ∞Âà∞Â™í‰ΩìÂ∫ìÂäüËÉΩ√æ√æ**1.0.9Ôºö**   √æ- ‰ºòÂåñ‰∏âÊòüÈÉ®ÂàÜÊú∫ÂûãÂõ†ÂõæÁâáÊõ¥Êñ∞Âà∞Â™í‰ΩìÂ∫ìÊó∂Ê≤°ÊúâÊõ¥Êñ∞ÂÆΩÈ´ò‰ø°ÊÅØÊó∂EasyPhotosÁõ∏ÂÜå‰∏çÊòæÁ§∫ËØ•ÂõæÁâáÈóÆÈ¢ò√æ√æ**1.0.8Ôºö**   √æ- ‰ºòÂåñËá™ÂÆö‰πâUIÂíåÂ§öËØ≠Ë®Ä√æ√æ**1.0.7Ôºö**   √æ- ÊÄßËÉΩ‰ºòÂåñ√æ√æ**1.0.6Ôºö**   √æ- ‰øÆÂ§çÂçé‰∏∫VNS-L31Êú∫ÂûãÊãçÁÖßÊó†ËøîÂõûÈóÆÈ¢ò√æ√æ**1.0.5Ôºö**   √æ- ‰øÆÂ§çÊãçÁÖßÂàáÊç¢Ê®™Á´ñÂ±èÂèëÁîüÂÜÖÂ≠òÊ≥ÑÊºè√æ- ‰øÆÂ§çÂàáÊç¢ËØ≠Ë®ÄÊó∂‰∫ßÁîüÈîôËØØ√æ- ÂçáÁ∫ßglide‰∏∫ÊúÄÊñ∞Áâà4.3.0   √æ√æ**1.0.4Ôºö**    √æ- Áõ¥Êé•ÂêØÂä®Áõ∏Êú∫  √æ- Áõ∏ÂÜåÂçïÈÄâ  √æ- Áõ∏ÂÜåÂ§öÈÄâ  √æ- Áõ∏ÂÜå‰∏≠ÊîØÊåÅÊ∑ªÂä†Ëá™ÂÆö‰πâÂπøÂëä  √æ- ÂõæÁâáÈ¢ÑËßàÔºàÁº©Êîæ/ÂÖ®Â±èÔºâ√æ- UIÂèØÂÆöÂà∂  √æ- Ê†πÊçÆÂõæÁâáÂÆΩÈ´òËøõË°åËøáÊª§ √æ- ‰øÆÂ§çÊó†ÂõæÁâáÊòæÁ§∫Êó∂ÁöÑÂºÇÂ∏∏    √æ- ÂÜÖÈÉ®Â§ÑÁêÜÊùÉÈôêÈóÆÈ¢òÔºåÊó†ÈúÄÈÖçÁΩÆÔºåÊó†ÈúÄÂ§ÑÁêÜËøêË°åÊó∂ÊùÉÈôê√æ    √æ    √æ    √æ√æ  "
Servoy/servoy-extensions,307409,0,7,5,Organization,False,Open Source Servoy Plugins,,,4,Java,{'': 2},1329,21,37,13,0,3689,False,,,,,0,1,0,0,7,0,5,35,1186,113,0,0,114,8,,,
antest1/kcanotify,95085,142,23,25,User,False,Viewer Application for KanColle Android,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",15,Java,"{'': 5, 'md': 4, 'gradle': 2, 'bat': 1}",2272,2,203,8,3,1280,True,7,68,0,3,0,6,0,0,8,0,1,122,13771,5581,0,0,17,,26,,"# Kcanotify (ÏãúÏ†ú Íπ°Îì§Î¶¨Ìã∞)√æ<img src=""https://upload.cc/i1/2018/10/27/cieDyM.png"" width=250/>√æViewer Application for KanColle Android√æ√æAbout Project√æ-------√æKcanotify is an open-source viewer tool for Kantai Collection Android, provides various features like expedition/docking notification or see battle prediction.√æ√æThis application does not modify any incoming/outcoming packet when communicate with kancolle/DMM server, and it does not provide any cheat or macro tools. Data not related with kancolle is not processed.√æ√æRequirement√æ-------√æ- Android 4.1(JellyBean) or later√æ- [Kancolle Android](http://kancolle.wikia.com/wiki/KanColle_Android) must be installed√æ- Supporting Android VPN service√æ- Warning: Kcanotify may not work for specific devices(vendor-dependent issue) and old devices(Android 4.x).√æ√æDownload√æ-------√æ<a href='https://play.google.com/store/apps/details?id=com.antest1.kcanotify&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' width=""200px""/></a>√æ- [Direct Download](http://luckyjervis.com/kcanotify/apk/) √æ- [Github Releases](https://github.com/antest1/kcanotify/releases) (All versions)√æ- [kcwiki mirror](https://mirrors.kcwiki.org/kcanotify/) (All versions)√æ- [Google Drive](http://bit.ly/kcanotifydown) (Latest Version)√æ- [MEGA](https://mega.nz/#F!0FtUTBoB!cSUJtRA76C4KBcrnc2-xdw) (All versions)√æ√æDemo√æ-------√æ[![Youtube](https://img.youtube.com/vi/ZEAor_9jsaM/0.jpg)](https://www.youtube.com/watch?v=ZEAor_9jsaM)√æ√æ[6-5 with Kcanotify](https://www.youtube.com/watch?v=ZEAor_9jsaM) / [5-5](https://www.youtube.com/watch?v=QHg9exh9zQ8)√æ√æMain Features√æ-------√æ- Notification for finished expedition and docking, morale recovery√æ- Alert for heavy damaged/not supplied ship before/during sortie√æ- Show fleet information like LoS, fighter power, morale, etc.√æ- Show current node during sortie√æ- BattleView (predicts battle result)√æ- QuestView (quest translation, show quest progress)√æ- Akashi's improvement arsenal√æ- Ship list, Equipment list, EXP calculator, Expedition list, ...√æ- Sending statistics to OpenDB and poi-statistics (optional)√æ√æLanguage√æ-------√æ- Korean (ÌïúÍµ≠Ïñ¥)√æ- English√æ- Simplified/Traditional Chinese (‰∏≠Êñá)√æ- Japanese (Êó•Êú¨Ë™û)√æ√æTranslations to other languages are welcomed. (please contact to developer to email)  √æ√æAttribution√æ-------√æ- This project uses the modified source code of [NetGuard](https://github.com/M66B/NetGuard/) for capturing the traffic of Kancolle application. The license for NetGuard is [GNU General Public License version 3](http://www.gnu.org/licenses/gpl.txt), therefore Kcanotify also has this license.√æ- Icon and banner images are provided by [SPICA](https://www.pixiv.net/member.php?id=9209813).√æ- The fairy and equipment images are from the kancolle resources. I will take action immediately when there is a request from the copyright holder for correction.√æ- Translation data for ships, equipments and quest are mainly from [kc3-translations](https://github.com/KC3Kai/kc3-translations).√æ  - License for kc3-translations: The MIT License [Text](https://github.com/KC3Kai/kc3-translations/blob/master/LICENSE)√æ- The data of the map node data and experience are from [KC3Kai](https://github.com/KC3Kai/KC3Kai)'s resources. √æ  - License for KC3Kai: The MIT License [Text](https://github.com/KC3Kai/KC3Kai/blob/master/LICENSE)√æ- The code for line of seek(Á¥¢Êïµ) & fighter power(Âà∂Á©∫Ê®©) calculation are written with reference to [Ëâ¶Èöä„Ç∑„Éü„É•„É¨„Éº„Çø„ÉºÔºÜ„Éá„ÉÉ„Ç≠„Éì„É´„ÉÄ„Éº](http://kancolle-calc.net/deckbuilder.html)√æ- Akashi's arsenal improvement data is written with reference to [KC3Kai](https://github.com/KC3Kai/KC3Kai) and [ÊòéÁü≥„ÅÆÊîπ‰øÆÂ∑•Âª†Êó©Ë¶ãË°®](http://akashi-list.me).√æ- Reference sites: [Ëâ¶„Åì„Çå ÊîªÁï• Wiki*](http://wikiwiki.jp/kancolle/), [Kancolle Wikia](http://kancolle.wikia.com), [kcwikiËà∞Â®òÁôæÁßë](https://zh.kcwiki.org)√æ√æContact√æ-------√æ**First, read [FAQ](FAQ) before asking.**√æ√æFor suggestion or error report, make an [Issue](https://github.com/antest1/kcanotify/issues) or mail to me.  √æ√æI can speak Korean and English, and I can understand Japanese (but not good at writing).  √æ√æ**‚Äª For non-supported locale, English is the default language.**√æ√æE-mail: kcanotify@gmail.com√æ√æ√æBackers√æ-------√æYou can support the project via [Open Collective](https://opencollective.com/). (one-time/monthly)  √æThank you to all our backers! [[Become a backer](https://opencollective.com/kcanotify)]√æ√æ<a href=""https://opencollective.com/kcanotify"" target=""_blank""><img src=""https://opencollective.com/kcanotify/backers.svg?width=890""></a>√æ√æLicense√æ-------√æ[GNU General Public License version 3](http://www.gnu.org/licenses/gpl.txt)√æ√æCopyright (c) 2016-2018 antest1(IE10)√æ√æAll rights reserved√æ√æ√æPrivacy Policy√æ-------√æYou can check the privacy policy [HERE](private_policy.md). **(Updated: 2019.10.21)**"
lichao890427/personal_script,16400,96,12,51,User,False,,,,10,Python,"{'png': 1, 'md': 1}",47,1,0,1,0,886,True,0,0,0,0,0,1,0,0,8,0,1,7,1100,128,0,0,10,,172,lich4/personal_script,"![](https://github.com/lichao890427/personal_script/blob/master/LOGO.png)√æ√æ***Li-Script*** - Scripts useful for Vulnerability Exploit, Static Analysis, Dynamic Analysis,  File Format Exploit, ...√æ√æThis is a script set, currently based on while not limitied to following tools:√æ√æ* 010Editor => The ***MOST*** powerul tool in the world for `File Format Analysis`, support Windows/Linux/MacOS√æ* BurpSuite => One of most powerful tool for `Http/Https Traffic Analysis`, support all platforms√æ* Frida instrumentation => The ***MOST*** powerful tool in the world for `Dynamic Instrumentation`, support all plarforms√æ* IDA Pro => THe ***MOST*** powerful tool in the world for `Static Binary Analysis`, support all platforms√æ√æ## Requirements:√æ√æ* If you known the meaning above, then you know what you need√æ* Any issues submit here√æ√æ## Contact√æ√æ* QQ Group: 560017652√æ* Blog:     lichao890427.github.io√æ* Email:    lichao.890427@163.com√æ* Company:  Beijing B .Inc"
apache/incubator-atlas,34267,95,39,108,Organization,False,Mirror of Apache Atlas (Incubating),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",28,Java,"{'': 3, 'txt': 3, 'xml': 2}",1739,10,8,43,1,2041,False,,,,,20,22,1,0,8,0,0,0,0,0,6,0,2,869,,,"# Licensed to the Apache Software Foundation (ASF) under one√æ# or more contributor license agreements.  See the NOTICE file√æ# distributed with this work for additional information√æ# regarding copyright ownership.  The ASF licenses this file√æ# to you under the Apache License, Version 2.0 (the√æ# ""License""); you may not use this file except in compliance√æ# with the License.  You may obtain a copy of the License at√æ#√æ#     http://www.apache.org/licenses/LICENSE-2.0√æ#√æ# Unless required by applicable law or agreed to in writing, software√æ# distributed under the License is distributed on an ""AS IS"" BASIS,√æ# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ# See the License for the specific language governing permissions and√æ# limitations under the License.√æ√æApache Atlas (incubating) Overview√æ√æApache Atlas framework is an extensible set of core√æfoundational governance services ‚Äì enabling enterprises to effectively and√æefficiently meet their compliance requirements within Hadoop and allows√æintegration with the whole enterprise data ecosystem.√æ√æThis will provide true visibility in Hadoop by using both a prescriptive√æand forensic model, along with technical and operational audit as well as√ælineage enriched by business taxonomical metadata.  It also enables any√æmetadata consumer to work inter-operably without discrete interfaces to√æeach other -- the metadata store is common.√æ√æThe metadata veracity is maintained by leveraging Apache Ranger to prevent√ænon-authorized access paths to data at runtime.√æSecurity is both role based (RBAC) and attribute based (ABAC).√æ√æ√æApache Atlas is an effort undergoing incubation at the Apache√æSoftware Foundation (ASF), sponsored by the Apache Incubator PMC.√æ√æFor more information about the incubation status of the Apache Atlas√æproject you can go to the following page:√æhttp://incubator.apache.org/projects/atlas.html√æ√æBuild Process√æ=============√æ√æ1. Get Atlas sources to your local directory, for example with following commands√æ   $ cd <your-local-directory>√æ   $ git clone https://github.com/apache/incubator-atlas.git√æ   $ cd incubator-atlas√æ√æ   # Checkout the branch or tag you would like to build√æ   #√æ   # to checkout a branch√æ     $ git checkout <branch>√æ√æ   # to checkout a tag√æ     $ git checkout tags/<tag>√æ√æ2. Execute the following commands to build Apache Atlas√æ√æ   $ export MAVEN_OPTS=""-Xms2g -Xmx2g -XX:MaxPermSize=512M""√æ   $ mvn clean install√æ√æ   # currently few tests might fail in some environments√æ   # (timing issue?), the community is reviewing and updating√æ   # such tests.√æ   #√æ   # if you see test failures, please run the following command:√æ      $ mvn clean -DskipTests install√æ√æ   $ mvn clean package -Pdist√æ√æ3. After above build commands successfully complete, you should see the following files√æ√æ   webapp/target/atlas-webapp-<version>.war√æ   addons/falcon-bridge/target/falcon-bridge-<version>.jar√æ   addons/hive-bridge/target/hive-bridge-<version>.jar√æ   addons/sqoop-bridge/target/sqoop-bridge-<version>.jar√æ   addons/storm-bridge/target/storm-bridge-<version>.jar"
eclipse/dltk.ruby,10824,17,7,6,Organization,False,Dynamic Languages Toolkit project repository (dltk.ruby),,,8,Java,"{'md': 2, '': 1, 'xml': 1}",2215,10,378,6,0,4869,False,,,,,1,1,0,0,6,0,0,0,0,0,0,0,669,139,,,
atxarib99/DataAnalyzer,18496,5,6,4,Organization,False,This is a program that reads in vehicle dynamics data from CSV files and outputs them into useful charts to help analyze data.,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",15,Java,"{'': 5, 'txt': 1, 'md': 1, 'xml': 1, 'mf': 1, 'csv': 1, 'dfr': 1}",338,3,0,9,0,625,True,0,0,0,0,0,47,0,17,8,0,1,37,3857,2423,0,0,5,1,,DallasFormulaRacing/DataAnalyzer,# DataAnalyzer√æThis is an application that displays log files from the car into charts for visual analysis. It is capable of overlaying datasets over each other to find correlations as well as creating its own datasets through equations imported by the user.√æ√æFind the most recent release here: https://github.com/DallasFormulaRacing/DataAnalyzer/raw/master/store/√æ√æLaunch the jar executable. √æUse File>Save to save the files as .dfr√æUse File>Open to open .dfr/.csv/.txt files√æ√æIf multiple files are opened within the same window then File>Save will save a .dfrasm√æ√æMost recent version:√æhttps://github.com/DallasFormulaRacing/DataAnalyzer/raw/master/store/DataAnalyzer3-7.jar
Yuuko-oh/Yuuko,139606,1,1,1,Organization,False,Just another Discord bot that does some things when you say some things.,https://www.yuuko.info,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 2, 'gradle': 2, 'bat': 1}",663,2,8,2,9,781,True,0,1,0,0,0,2,0,0,8,0,1,29,543,839,0,0,3,1,,,"![Status](https://top.gg/api/widget/status/420682957007880223.svg)√æ![Servers](https://top.gg/api/widget/servers/420682957007880223.svg)√æ![Servers](https://top.gg/api/widget/upvotes/420682957007880223.svg)√æ![Library](https://top.gg/api/widget/lib/420682957007880223.svg)√æ[![CodeFactor](https://www.codefactor.io/repository/github/Yuuko-oh/yuuko/badge)](https://www.codefactor.io/repository/github/yuuko-oh/yuuko)√æ[![GitHub release](https://img.shields.io/github/release/Yuuko-oh/Yuuko.svg)](https://github.com/Yuuko-oh/Yuuko)√æ[![GitHub stars](https://img.shields.io/github/stars/Yuuko-oh/Yuuko.svg)](https://github.com/Yuuko-oh/Yuuko/stargazers)√æ[![GitHub issues](https://img.shields.io/github/issues/Yuuko-oh/Yuuko.svg)](https://github.com/Yuuko-oh/Yuuko/issues)√æ[![GitHub license](https://img.shields.io/github/license/Yuuko-oh/Yuuko.svg)](https://github.com/Yuuko-oh/Yuuko/blob/master/LICENSE)√æ√æ# Yuuko 202006r1√æ√æYuuko, programmed in [Java](https://www.oracle.com/uk/java/index.html) using [Gradle](https://gradle.org/) for dependencies, utilising the [JDAv4](https://github.com/DV8FromTheWorld/JDA) wrapper and [Lavalink](https://github.com/sedmelluq/lavaplayer) for audio.√æ√æIf you want Yuuko on your server, follow [this](https://discordapp.com/oauth2/authorize?client_id=420682957007880223&permissions=8&scope=bot) link to invite her... be sure to give all of the appropriate permissions or you will likely run into issues.√æ√æ## Key Features√æ√æ#### Music√æLiven up your Discord server with music from a number of sources including YouTube, Twitch, SoundCloud or any HTTP source of audio such as online radio stations.√æ√æ#### Reaction Role√æWant your users to be able to select roles simply by reacting to a message? With the reaction role feature you can assign server roles to reacts on messages... find out how [here](https://www.yuuko.info/tutorials.php)!√æ√æ#### Interaction√æHave you ever wanted to spice up your chatting experience with interactions. Yuuko has a range of different interaction commands available that allows you to express yourself in more than just words.√æ√æ## Commands√æ√æ* **Core** <br>√æ`help` `shards` `module` `about` `vote` `permissions` `bind`√æ* **Animal** <br>√æ`cat` `fox` `dog` `bird`√æ* **NSFW** <br>√æ`efukt` `neko` `rule34`√æ* **Moderation** <br>√æ`nuke` `kick` `mute` `ban`√æ* **Interaction** <br>√æ`pout` `shrug` `angry` `cry` `kiss` `poke` `sleep` `attack` `bite` `blush` `hug` `laugh` `tickle` `pet` `pat` `kill` `dance`√æ* **Utility** <br>√æ`guild` `ping` `roles` `avatar` `user` `reactrole`√æ* **Developer** <br>√æ`setstatus` `reapi` `redb` `lavalink` `syncguilds`√æ* **Audio** <br>√æ`play` `last` `clear` `skip` `seek` `pause` `search` `current` `stop` `background` `loop` `shuffle` `lyrics` `queue`√æ* **Media** <br>√æ`osu` `github` `kitsu` `natgeo` `underground` `petition` `weather` `tesco` `urban`√æ* **Fun** <br>√æ`8ball` `spoilerify` `roll` `choose` `flip` `advice` `joke` `horoscope`√æ* **Setting** <br>√æ`settings` `prefix` `starboard` `comlog` `modlog` `djmode` `deleteexecuted` `nowplaying` `newmember`√æ√æ---√æ√æ<p align=""center"">√æ  <a href=""https://discord.gg/VsM25fN""><img src=""https://discordapp.com/api/guilds/368094427089993729/widget.png?style=banner3"" alt=""Discord Server""></a>√æ  <br>Support server: <a href=""https://discord.gg/VsM25fN"">https://discord.gg/VsM25fN</a>√æ</p>√æ√æ---"
hwzyyx/web,31295,95,11,94,User,False,"ÂëºÂè´‰∏≠ÂøÉÈ°πÁõÆÔºåÂü∫‰∫é asterisk ÂºÄÂèëÁöÑ‰∏ÄÂ•ó web È°πÁõÆ„ÄÇ‰∏ªË¶ÅÂäüËÉΩÊúâËá™Âä®Â§ñÂëºÔºàÂÇ¨Áº¥Â§ñÂëº„ÄÅË∞ÉÊü•Â§ñÂëº„ÄÅÈÄöÁü•Á±ªÂ§ñÂëºÔºâ,ÂÇ¨Áº¥Â§ñÂëºÊîØÊåÅÂá†Â§ß‰∏ö  Âä°ÁöÑÂ§ñÂëºÔºöÁîµË¥πÂÇ¨Áº¥„ÄÅÊ∞¥Ë¥πÂÇ¨Áº¥„ÄÅÁîµËØùË¥πÂÇ¨Áº¥„ÄÅÁâ©‰∏öË¥πÂÇ¨Áº¥„ÄÅ‰∫§ÈÄöÁßªËΩ¶„ÄÅ‰∫§ÈÄöËøùÊ≥ïÈÄöÁü•Á≠âÂÖ´ÁßçÂÇ¨Áº¥ÔºàÊèêÈÜíÔºâÁ±ªÂûã„ÄÇ ÂêåÊó∂ÊîØÊåÅÊâ©Â±ïÂºÄÂèëÔºå  ÂèØ‰ª•Â∫îÁî®‰∫éÂêÑÁßçÁîµËØùËá™Âä®Â§ñÂëºÈ°πÁõÆÔºåÊØîÂ¶ÇÔºöÂØπ‰∫éÁâ©‰∏öÂÖ¨Âè∏ÔºåÂú®ÊúâÁ¥ßÊÄ•ÊÉÖÂÜµÂèØ‰ª•‰∏ãÂèëÈÄöÁü•ÂëäÁü•‰∏ö‰∏ªÔºåÁ≠âÁ≠â„ÄÇ  ÂêåÊó∂ÔºåÁ≥ªÁªüÂ∑≤ÁªèÊîØÊåÅ‰∫ÜÁü≠‰ø°Êé•Âè£ÔºåÂ¶ÇÊûúÊúâÁü≠‰ø°ÊñπÈù¢ÁöÑÈúÄÊ±ÇÔºåÂú®Ëá™Âä®Â§ñÂëºÁöÑÂêåÊó∂ÔºåÂèØ‰ª•ÊîØÊåÅÂêåÊó∂‰∏ãÂèëÁü≠‰ø°„ÄÇ   È°πÁõÆÁöÑ‰∏äÁ∫øËøêËê•ÊÉÖÂÜµÔºö Ôºà1ÔºâÈ°πÁõÆÂ∑≤ÁªèÂ∫îÁî®Âà∞Ê±üËãèÁöÑÁîµ‰ø°Â±ÄÁöÑÁõ∏ÂÖ≥‰∏öÂä°ÔºåÁî®‰∫éÊ±üËãèÂú∞Âå∫ÁöÑÁîµË¥π„ÄÅÊ∞¥Ë¥π„ÄÅÂæÆ‰ø°‰∫§ÈÄöÁßªËΩ¶Á≠â‰∏öÂä°„ÄÇÁ≥ªÁªüÂØπÊé•ËøêËê•ÂïÜÁöÑIMS‰Ωú‰∏∫ËêΩÂú∞ËµÑÊ∫êÔºå  Á∫øË∑ØÁöÑÂπ∂ÂèëËÉΩÂäõ‰∏∫Ôºö120Á∫ø„ÄÇ  Ôºà2ÔºâË•øÈó®Â≠êÁîµÂô®È°πÁõÆÔºåÁ≥ªÁªüÂØπÊé•Ë•øÈó®Â≠êÁîµÂô®ÁöÑÂá†Â§ßË¥≠Áâ©Âπ≥Âè∞Ôºà‰∫¨‰∏ú„ÄÅÂ§©Áå´„ÄÅÂõΩÁæé„ÄÅËãèÂÆÅÔºâÁöÑÊé•Âè£ÔºåÊé•Êî∂Âπ≥Âè∞Êé®ÈÄÅËøáÊù•ÁöÑËÆ¢ Âçï‰ø°ÊÅØÔºåÁ≥ªÁªüÂ∞Ü  Âú®ÊåáÂÆöÁöÑÊó∂Èó¥ÂÜÖÔºåËá™Âä®Â§ñÂëºÂÆ¢Êà∑ËØ¢ÈóÆÂÆâË£ÖÊó∂Èó¥ÔºåÂÆ¢Êà∑ÂèØ‰ª•ÂõûÂ§çÊåâÈîÆÔºåÁ°ÆËÆ§ÂÆâË£Ö„ÄÅÊöÇ‰∏çÂÆâË£Ö„ÄÅÂª∂Âêé‰∏âÂ§©ÂÆâË£Ö„ÄÅÊèêÂâçÈ¢ÑÁ∫¶Á≠âÊåâÈîÆ„ÄÇËøõË°åÂõûÂ§çÔºåÂ§ñ  ÂëºÁªìÊùüÂêéÔºåÁ≥ªÁªü‰ºöÂ∞ÜÂ§ñÂëºÁªìÊûúÂÜçÊé®ÈÄÅÂõûË¥≠Áâ©Âπ≥Âè∞ÂØπÊé•Á≥ªÁªü„ÄÇÂπ∂Êèê‰æõÊï∞ÊçÆÊä•Ë°®„ÄÅÂÆûÊó∂Êï∞ÊçÆÁ≠âÂäüËÉΩ„ÄÇ   Á≥ªÁªüËêΩÂú∞ËµÑÊ∫êÔºö90Á∫øÂπ∂ÂèëÔºåÂØπÊé•Â±ÄÊñπ Avaya ËÆæÂ§á„ÄÇ    Á≥ªÁªüÂºÄÂèëËÄÖÔºöBen(ÈªÑÊñáÂë®)  ËÅîÁ≥ªÊñπÂºèÔºö 13512771995 (ÂæÆ‰ø°ÂêåÂè∑)  QQÂè∑Á†ÅÔºö 120077407  ÈÇÆÁÆ±Âú∞ÂùÄ: 120077407@qq.com",,,5,Java,{'': 3},290,1,0,1,0,1124,True,5,0,1,0,2,0,0,0,7,0,0,0,0,0,0,0,4,,10,,
pranab/chombo,4978,96,18,65,User,False,"Big Data ETL and Utilities for Hadoop Map Reduce, Spark and Storm",http://pkghosh.wordpress.com/,,10,Java,"{'': 1, 'md': 1, 'sbt': 1, 'sh': 1, 'mf': 1, 'xml': 1}",915,2,0,1,0,3092,True,2,2,0,0,3,1,1,0,0,0,0,0,0,0,0,0,14,,303,,"## Introduction√æHadoop based ETL and various utility classes for Hadoop and Storm√æ√æ## Philosophy√æ* Simple to use√æ* Input output in CSV format√æ* Metadata defined in simple JSON file√æ* Extremely configurable with many configuration knobs√æ√æ## Solution√æ* Various relational algebra operation, including Projection, Join etc√æ* Data extraction ETL to extract structured record from unstructured data√æ* Data extraction ETL to extract structured record from JSON data√æ* Data validation ETL with configurable rules and statistical parameters √æ* Data profiling ETL with various techniques√æ* Data transformation ETL with configurable transformation rules√æ* Various statistical data exploration solutions√æ* Data normalization√æ* Seasonal data analysis√æ* Various statistical parameter  calculation √æ* Various long term statistical parameter calculation with incremental data  √æ* Bulk inset, update and delete of Hadoop data√æ* Bases classes for Storm Spout and Bolt√æ* Utility classes for string, configuration√æ* Utility classes for Storm and Redis√æ√æ## Blogs√æThe following blogs of mine are good source of details. These are the only source√æof detail documentation. Map reduce jobs in this projec are used in other projects√æincluding sifarish, avenir etc. Blogs related to thos projects are also relevant.√æ√æ* http://pkghosh.wordpress.com/2015/04/26/bulk-insert-update-and-delete-in-hadoop-data-lake/√æ* https://pkghosh.wordpress.com/2015/06/08/data-quality-control-with-outlier-detection/√æ* https://pkghosh.wordpress.com/2015/07/28/validating-big-data/√æ* https://pkghosh.wordpress.com/2015/09/22/profiling-big-data/√æ* https://pkghosh.wordpress.com/2015/08/25/anomaly-detection-with-robust-zscore/√æ* https://pkghosh.wordpress.com/2015/10/22/operational-analytics-with-seasonal-data/√æ* https://pkghosh.wordpress.com/2015/11/17/transforming-big-data/√æ* https://pkghosh.wordpress.com/2016/10/04/simple-sanity-checks-for-data-correctness-with-spark/√æ* https://pkghosh.wordpress.com/2016/12/06/json-to-relational-mapping-with-spark/√æ* https://pkghosh.wordpress.com/2017/02/19/mobile-phone-usage-data-analytics-for-effective-marketing-campaign/√æ* https://pkghosh.wordpress.com/2017/05/30/mining-seasonal-products-from-sales-data/√æ* https://pkghosh.wordpress.com/2017/07/26/processing-missing-values-with-hadoop/√æ* https://pkghosh.wordpress.com/2017/08/15/measuring-campaign-effectiveness-for-an-online-service-on-spark/√æ* https://pkghosh.wordpress.com/2017/11/07/removing-duplicates-from-order-data-using-spark/√æ* https://pkghosh.wordpress.com/2017/12/05/data-normalization-with-spark/√æ* https://pkghosh.wordpress.com/2018/01/10/data-type-auto-discovery-with-spark/√æ* https://pkghosh.wordpress.com/2018/08/20/pluggable-rule-driven-data-validation-with-spark/√æ* https://pkghosh.wordpress.com/2018/11/19/bulk-mutation-in-an-integration-data-lake-with-spark/√æ* https://pkghosh.wordpress.com/2019/03/21/plugin-framework-based-data-transformation-on-spark/√æ√æ√æ## Build√æFor Hadoop 1√æ* mvn clean install√æ√æFor Hadoop 2 (non yarn)√æ* git checkout nuovo√æ* mvn clean install√æ√æFor Hadoop 2 (yarn)√æ* git checkout nuovo√æ* mvn clean install -P yarn√æ√æFor spark√æ* Build chombo first in master branch with √æ * mvn clean install  √æ * sbt publishLocal√æ* Build chombo-spark in  chombo/spark directory√æ * sbt clean package√æ√æ## Need help?√æPlease feel free to email me at pkghosh99@gmail.com√æ√æ## Contribution√æContributors are welcome. Please email me at pkghosh99@gmail.com"
deors/deors-demos-microservices,184,8,1,11,User,False,"Demonstration of an exemplar microservices stack based in Spring Boot, Spring Cloud and Netflix OSS",,,9,Java,"{'': 1, 'xml': 1, 'md': 1}",97,1,2,1,0,859,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,61,,66,,"# deors-demos-microservices√æ√æ## Microservices with Spring Boot, Spring Cloud and Netflix OSS√æ√æDemonstration of an exemplar microservices stack based in Spring Boot, Spring Cloud and Netflix OSS. The exemplar configuration also includes containerization with Docker and CI/CD pipelines with Jenkins and Apache Maven lifecycle.√æ√æHISTORY NOTE: This demo project was first featured as a live coding session in OpenSlava 2016 conference, in the beautiful city of Bratislava, and the Jenkins pipelines are based on the `workshop-pipelines` workshop, first featured as a talk in Oracle Code One San Francisco 2018 conference.√æ√æ## Microservice list√æ√æThis project has five microservices working together to deliver the business value:√æ√æ- **`configservice`**: This service is responsible to provide configuration settings to the other microservices in the stack.√æ- **`eurekasercice`**: This service acts as the service registry and service discovery component of the stack.√æ- **`hystrixservice`**: This service provides visibility on the other services health and circuit breaker metrics.√æ- **`bookrecsercice`**: This service provides with book recommendations from a book inventory stored in an in-memory database.√æ- **`bookrecedgeservice`**: This service exposes the business logic to clients, being the 'edge' service the one directly exposed externally.√æ√æ## Building up√æ√æ### Configuration√æ√æMicroservices use Spring Config Server to get configuration at run time. For that to work, configuration is stored in an accessible Git repository in [this project](https://github.com/deors/deors-demos-microservices-configstore).√æ√æ### Run the services locally√æ√æOut of the box, services are ready to be executed locallly using the sensible default configuration settings and the embedded runtimes provided by Spring Boot.√æ√æEach service will be run by executing this command in each folder:√æ√æ    mvnw spring-boot:run√æ√æAlternatively, the Spring Boot fat Jar can be created and executed directly:√æ√æ    mvnw package√æ    java -jar target/<name-of-the-fat.jar>√æ√æFollow the next sequence for running the services in order so they are able to leverage the configuration and registry services during startup:√æ√æ    - configservice√æ    - eurekaservice√æ    - hystrixservice√æ    - bookrecservice√æ    - bookrecedgeservice√æ√æ### Test the services locally√æ√æOnce all the services are started, they will be available at the defined ports in the local host.√æ√æAccess the configuration service through the actuator health endpoint (remember it is currently unsecured), to verify it is up & running and responding to requests normally:√æ√æ    http://localhost:8888/actuator/health√æ√æCheck that the configuration service is capable of returning the configuration for some of the services:√æ√æ    http://localhost:8888/bookrecservice/default√æ    http://localhost:8888/eurekaservice/default√æ√æCheck that Eureka service is up and the book recommendation service and edge service are registered:√æ√æ    http://localhost:7878/√æ√æCheck that Hystrix service is up and running:√æ√æ    http://localhost:7979/hystrix√æ√æAccess the HAL browser on the book recommendation service:√æ√æ    http://localhost:8080/√æ√æAccess the book recommendation service itself:√æ√æ    http://localhost:8080/bookrec√æ√æAccess the book recommendation edge service itself:√æ√æ    http://localhost:8181/bookrecedge√æ√æTo verify that Hystrix fault tolerance mechanism is working as expected, stop the book recommendation service, and access the book recommendation edge service again. The default recommended book should be returned instead and the application keeps working.√æ√æGo back to Hystrix dashboard and start monitoring the book recommendation edge service by registering the bookrec Hystrix stream in the dashboard (and optionally configuring the delay and page title):√æ√æ     http://localhost:8181/actuator/hystrix.stream√æ√æOnce the Hystric stream is registered, try again to access the edge service, with and without the inner service up and running, and experiment how thresholds (number of errors in a short period of time) impact the opening and closing of the circuit between the inner and the edge service.√æ√æ## Running services in Docker Swarm√æ√æ### Set up Swarm√æ√æThe following instructions will show how to create a simple swarm in VirtualBox, in the case that a swarm is not already available. In the case that a Docker Swarm is already available, skip to section 2.2.√æ√æIn this setup, the swarm will be formed by three manager nodes, and three worker nodes, named:√æ√æ    docker-swarm-manager-1√æ    docker-swarm-manager-2√æ    docker-swarm-manager-3√æ    docker-swarm-worker-1√æ    docker-swarm-worker-2√æ    docker-swarm-worker-3√æ√æThe machines will be deployed in its own network:√æ√æ    192.168.66.1/24√æ√æBeing the first IP in the DHCP pool:√æ√æ    192.168.66.100√æ√æTo create each machine in VirtualBox, launch the following command setting the right machine name each time:√æ√æ    docker-machine create --driver virtualbox --virtualbox-cpu-count 1 --virtualbox-memory 1024 --virtualbox-hostonly-cidr ""192.168.66.1/24"" <docker-machine-name>√æ√æBefore beginning to configure the swarm, set the environment to point to the first machine. When in Windows, run this command:√æ√æ    @FOR /f ""tokens=*"" %i IN ('docker-machine env docker-swarm-manager-1') DO @%i√æ√æWhen in Linux, run this command:√æ√æ    eval $(docker-machine env docker-swarm-manager-1)√æ√æNext, to initialise a swarm the following command is used:√æ√æ    docker swarm init --advertise-addr 192.168.66.100√æ√æUpon initialisation, the swarm exposes two tokens: one to add new manager nodes, one to add new worker nodes. The commands needed to get the tokens are:√æ√æ    docker swarm join-token manager -q√æ    docker swarm join-token worker -q√æ√æWith the tokens at hand, change the environment to point to each machine, every manager and worker nodes. When in Windows, run this command:√æ√æ    @FOR /f ""tokens=*"" %i IN ('docker-machine env <docker-machine-name>') DO @%i√æ√æWhen in Linux, run this command:√æ√æ    eval $(docker-machine env <docker-machine-name>)√æ√æAnd use the swarm join command in each node as it corresponds to a manager or a worker:√æ√æ    docker swarm join --token <manager-or-worker-token> 192.168.66.100:2377√æ√æOnce it is ready, the swarm can be stopped with the following command:√æ√æ    docker-machine stop docker-swarm-manager-1 docker-swarm-manager-2 docker-swarm-manager-3 docker-swarm-worker-1 docker-swarm-worker-2 docker-swarm-worker-3√æ√æAnd to start it again, this command:√æ√æ    docker-machine start docker-swarm-manager-1 docker-swarm-manager-2 docker-swarm-manager-3 docker-swarm-worker-1 docker-swarm-worker-2 docker-swarm-worker-3√æ√æ### Create the Docker images√æ√æNOTE: Images are already created and pushed to Docker Hub, so this step can be skipped if no changes have been made to the microservices.√æ√æTo create the images, a Docker host is needed. If using Docker for Windows, Linux or Mac, or boot2docker (VirtualBox), that Docker host is sufficient. It is also possible to use the swarm created before (one machine is enough). Let's start the swarm:√æ√æ    docker-machine start docker-swarm-manager-1 docker-swarm-manager-2 docker-swarm-manager-3 docker-swarm-worker-1 docker-swarm-worker-2 docker-swarm-worker-3√æ√æConfigure Docker client to work with one of the machines. Wwhen in Windows, run this command:√æ√æ    @FOR /f ""tokens=*"" %i IN ('docker-machine env docker-swarm-manager-1') DO @%i√æ√æWhen in Linux, run this command:√æ√æ    eval $(docker-machine env docker-swarm-manager-1)√æ√æBuild and push images by running this command for each microservice:√æ√æ    mvn package docker:build -DpushImage√æ√æImages must be pushed so they are available to all machines in the swarm, and not only in the machine used to build the image.√æ√æ### Run the images as services in Swarm√æ√æThe first step is to create an overlay network for all the services:√æ√æ    docker network create -d overlay microdemonet√æ√æOnce the network is ready, launch configservice and check the status:√æ√æ    docker service create -p 8888:8888 --name configservice --network microdemonet deors/deors-demos-microservices-configservice:latest√æ    docker service ps configservice√æ√æNext, launch eurekaservice and check the status:√æ√æ    docker service create -p 7878:7878 --name eurekaservice --network microdemonet -e ""CONFIG_HOST=configservice"" deors/deors-demos-microservices-eurekaservice:latest√æ    docker service ps eurekaservice√æ√æOnce eurekaservice is ready to accept other service registrations, launch hystrixservice and check the status:√æ√æ    docker service create -p 7979:7979 --name hystrixservice --network microdemonet -e ""CONFIG_HOST=configservice"" -e ""EUREKA_HOST=eurekaservice"" deors/deors-demos-microservices-hystrixservice:latest√æ    docker service ps hystrixservice√æ√æLaunch bookrecservice and check the status:√æ√æ    docker service create -p 8080:8080 --name bookrecservice --network microdemonet -e ""CONFIG_HOST=configservice"" -e ""EUREKA_HOST=eurekaservice"" deors/deors-demos-microservices-bookrecservice:latest√æ    docker service ps bookrecservice√æ√æAnd, finally, launch bookrecedgeservice and check the status:√æ√æ    docker service create -p 8181:8181 --name bookrecedgeservice --network microdemonet -e ""CONFIG_HOST=configservice"" -e ""EUREKA_HOST=eurekaservice"" deors/deors-demos-microservices-bookrecedgeservice:latest√æ    docker service ps bookrecedgeservice√æ√æTo quickly check whether all services are up and their configuration, use this command:√æ√æ    docker service ls√æ√æ### Test services in Swarm√æ√æOnce all the services are started, they will be available at the defined ports in the local host.√æ√æAccess the configuration service through the actuator health endpoint (remember it is currently unsecured), to verify it is up & running and responding to requests normally:√æ√æ    http://192.168.66.100:8888/actuator/health√æ√æCheck that the configuration service is capable of returning the configuration for some of the services:√æ√æ    http://192.168.66.100:8888/bookrecservice/default√æ    http://192.168.66.100:8888/eurekaservice/default√æ√æCheck that Eureka service is up and the book recommendation service and edge service are registered:√æ√æ    http://192.168.66.100:7878/√æ√æCheck that Hystrix service is up and running:√æ√æ    http://192.168.66.100:7979/hystrix√æ√æAccess the HAL browser on the book recommendation service:√æ√æ    http://192.168.66.100:8080/√æ√æAccess the book recommendation service iself:√æ√æ    http://192.168.66.100:8080/bookrec√æ√æAccess the book recommendation edge service itself:√æ√æ    http://192.168.66.100:8181/bookrecedge√æ√æTo verify that Hystrix fault tolerance mechanism is working as expected, stop the book recommendation service, and access the book recommendation edge service again. The default recommended book should be returned instead and the application keeps working.√æ√æGo back to Hystrix dashboard and start monitoring the book recommendation edge service by registering the bookrec Hystrix stream in the dashboard (and optionally configuring the delay and page title):√æ√æ     http://192.168.66.100:8181/actuator/hystrix.stream√æ√æOnce the Hystric stream is registered, try again to access the edge service, with and without the inner service up and running, and experiment how thresholds (number of errors in a short period of time) impact the opening and closing of the circuit between the inner and the edge service.√æ√æNOTE: When Docker Swarm is configured on a single-node setup with Docker for Windows or Docker for Mac, the Swarm manager address is not accessible from the local computer (Docker runs in an Hyper-V or HyperKit VM, transparently to the user) and `localhost` should be used instead.√æ√æ### Scale out the book recommendation service√æ√æAsk Docker to scale out the book recommendation service√æ√æ    docker service scale bookrecservice=3√æ√æ### Make and update and roll out the changes without service downtime√æ√æMake some change and deploy a rolling update. For example change the text string returned by BookController class in file `src/main/java/deors/demos/microservices/BookController.java`.√æ√æRebuild and push the new image to the registry:√æ√æ    mvn package docker:build -DpushImage√æ√æNext, the change is deployed. A label is needed to ensure the new version of 'latest' image is downloaded from registry:√æ√æ    docker service update --container-label-add update_cause=""change"" --update-delay 30s --image deors/deors-demos-microservices-bookrecservice:latest bookrecservice√æ√æTo check how the change is being deployed, issue this command repeatedly:√æ√æ    docker service ps bookrecservice√æ√æ## Cleanning up resources√æ√æ### Stopping services and deleting the swarm√æ√æTo remove running services:√æ√æ    docker service rm configservice eurekaservice hystrixservice bookrecservice bookrecedgeservice√æ√æTo verify they are all removed:√æ√æ    docker service ls√æ√æTo remove all stored images (this must be done in every machine if more than one was used), when in Windows, run these commands:√æ√æ    for /F %f in ('docker ps -a -q') do (docker rm %f)√æ    for /F %f in ('docker images -q') do (docker rmi --force %f)√æ√æWhen in Linux, use these commands:√æ√æ    docker rm $(docker ps -a -q)√æ    docker rmi --force $(docker images -q)√æ√æTo remove the nework inside swarm:√æ√æ    docker network rm microdemonet√æ√æFinally, stop the machines:√æ√æ    docker-machine stop docker-swarm-manager-1 docker-swarm-manager-2 docker-swarm-manager-3 docker-swarm-worker-1 docker-swarm-worker-2 docker-swarm-worker-3√æ√æIf desired, the swarm can be disposed, too, by removing all the machines included in it:√æ√æ    docker-machine rm docker-swarm-manager-1 docker-swarm-manager-2 docker-swarm-manager-3 docker-swarm-worker-1 docker-swarm-worker-2 docker-swarm-worker-3√æ√æ### Troubleshooting√æ√æIf using more than one machine in the swarm, images must be published to Docker Hub or another registry (for example a local registry) so they are accessible to all hosts in the swarm.√æ√æTo troubleshoot connectivity with curl in alpine-based images, install and use it in this way:√æ√æ    docker exec <container-id> apk add --update curl && curl <url>√æ√æTo check wich IP addresses are active in a container:√æ√æ    docker exec <container-id> ifconfig -a√æ√æTo check the environment variables in a container:√æ√æ    docker exec <container-id> env"
jaykay12/KitabGhar,2025,5,2,15,User,False,An online eBook Portal build on Java Servlets and JSP,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",5,Java,"{'': 2, 'sql': 1, 'md': 1}",60,1,0,7,5,1277,True,4,9,0,0,1,16,0,0,11,0,0,0,0,0,0,0,16,,31,,"# KitabGhar√æ[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/jaykay12/KitabGhar/blob/master/LICENSE)√æ√æ## An online eBook Portal build on J2EE Platform using Java Servlets and JSP.√æ√æ## Technolgies Used:√æ - J2EE: Java Servlets & JSP√æ - MySQL Database√æ - Bootstrap4 as UI Framework√æ √æ## Building & Running the Project(Linux):√æ1. Clone the project using `git clone https://github.com/jaykay12/KitabGhar.git`√æ2. Install Tomcat7 on your workspace:√æ    `sudo apt-get install tomcat7 tomcat7-admin tomcat7-docs tomcat7-examples`√æ3. Hit `127.0.0.1:8080/` from your web browser, if Tomcat7 landing page loads, you are good to go.√æ4. Open repository using `cd KitabGhar`√æ5. Open MySQL in your workspace using `mysql -u [username] -p` & then create a DB for KitabGhar using `CREATE DATABASE kitabghar`√æ6. Populate the DB using MySQL dump file using `mysql -u [username] -p kitabghar < KitabGhar.sql`√æ7. Create a soft link of the web-app to the tomcat7 root folder using `sudo ln -s KitabGhar /var/lib/tomcat7/webapps/KitabGhar`√æ8. Start Tomcat7 server using `sudo /etc/init.d/tomcat7 start`√æ9. Hit `127.0.0.1:8080/KitabGhar` from your web browser.√æ10. Explore the project, find bugs, raise issues & make pull requests. Happy Hacking :smile:"
json-snapshot/json-snapshot.github.io,147,22,5,15,Organization,False,Snapshot Testing for Java,https://json-snapshot.github.io,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,Java,"{'': 2, 'md': 1, 'yml': 1, 'xml': 1}",68,3,8,3,4,911,True,9,10,1,0,4,9,1,2,9,0,0,0,0,0,3,0,1,1,,,"#### Purpose of Snapshot Testing√æSnapshots help figuring out whether the output of the modules covered by tests is changed, without doing tons of asserts!√æ√æ#### When is it usefull?√æ√æIt's usefull for deterministic tests. That is, running the same tests multiple times on a component that has not changed √æshould produce the same results every time. You're responsible for making sure your generated snapshots do not include √æplatform specific or other non-deterministic data. √æ√æA Json Snapshot test does not assert Java types. You can continue doing that with any other testing framework.√æ√æ√æBased on [facebook's Jest framework](https://facebook.github.io/jest/docs/en/snapshot-testing.html)√æ√æ#### GitHub Repository√æ<a href=""https://github.com/json-snapshot/json-snapshot.github.io""><img src=""https://assets-cdn.github.com/images/modules/logos_page/GitHub-Mark.png"" width=""80""></a>√æ√æ√æ√æ√æ#### How to install using [Maven](https://mvnrepository.com/artifact/io.github.json-snapshot/json-snapshot/1.0.17)√æ√æ√æ√æAdd to your pom.xml dependencies section:√æ√æ```xml√æ<dependency>√æ    <groupId>io.github.json-snapshot</groupId>√æ    <artifactId>json-snapshot</artifactId>√æ    <version>1.0.17</version>√æ</dependency>√æ```√æ√æ√æ#### Usage√æ√æ```java√æpackage com.example;√æ√æimport org.junit.AfterClass;√æimport org.junit.BeforeClass;√æimport org.junit.Test;√æimport org.junit.runner.RunWith;√æimport org.mockito.Mock;√æimport org.mockito.runners.MockitoJUnitRunner;√æ√æimport java.util.Arrays;√æimport java.util.List;√æ√æimport static io.github.jsonSnapshot.SnapshotMatcher.*;√æimport static io.github.jsonSnapshot.SnapshotUtils.*;√æimport io.github.jsonSnapshot.SnapshotCaptor;√æ√æ@RunWith(MockitoJUnitRunner.class)√æpublic class ExampleTest {√æ√æ    @Mock√æ    private FakeObject fakeObject;√æ√æ√æ    @BeforeClass√æ    public static void beforeAll() {√æ        start();√æ    }√æ    √æ    @AfterClass√æ    public static void afterAll() {√æ        validateSnapshots();√æ    }√æ    √æ    @Test // Snapshot any object√æ    public void shouldShowSnapshotExample() {√æ        expect(""<any type of object>"").toMatchSnapshot();√æ    }√æ√æ    @Test // Snapshot arguments passed to mocked object (from Mockito library)√æ    public void shouldExtractArgsFromMethod() {√æ        fakeObject.fakeMethod(""test1"", 1L, Arrays.asList(""listTest1""));√æ        fakeObject.fakeMethod(""test2"", 2L, Arrays.asList(""listTest1"", ""listTest2""));√æ√æ        expect(extractArgs(fakeObject, ""fakeMethod"", new SnapshotCaptor(String.class), new SnapshotCaptor(Long.class), new SnapshotCaptor(List.class)))√æ                .toMatchSnapshot();√æ    }√æ    √æ    @Test // Snapshot arguments passed to mocked object support ignore of fields√æ    public void shouldExtractArgsFromFakeMethodWithComplexObject() {√æ        FakeObject fake = new FakeObject();√æ        fake.setId(""idMock"");√æ        fake.setName(""nameMock"");√æ√æ        //With Ignore√æ        fakeObject.fakeMethodWithComplexObject(fake);√æ        Object fakeMethodWithComplexObjectWithIgnore = extractArgs(√æ                fakeObject, ""fakeMethodWithComplexObject"", √æ                new SnapshotCaptor(Object.class, FakeObject.class, ""name""));√æ√æ        Mockito.reset(fakeObject);√æ√æ        // Without Ignore of fields√æ        fakeObject.fakeMethodWithComplexObject(fake);√æ        Object fakeMethodWithComplexObjectWithoutIgnore = extractArgs(√æ                fakeObject, ""fakeMethodWithComplexObject"", √æ                new SnapshotCaptor(Object.class, FakeObject.class));√æ√æ        expect(fakeMethodWithComplexObjectWithIgnore, fakeMethodWithComplexObjectWithoutIgnore).toMatchSnapshot();√æ    }√æ    √æ    class FakeObject {√æ        √æ        private String id;√æ√æ        private Integer value;√æ√æ        private String name;√æ√æ        void fakeMethod(String fakeName, Long fakeNumber, List<String> fakeList) {√æ√æ        }√æ        √æ        void fakeMethodWithComplexObject(Object fakeObj) {√æ        √æ        }√æ        √æ        void setId(String id) {√æ            this.id = id;√æ        }√æ        √æ        void setName(String name) {√æ            this.name = name;√æ        }√æ    }√æ}√æ```√æ√æWhen the test runs for the first time, the framework will create a snapshot file named `ExampleTest.snap` alongside with your test class. It should look like this:√æ```text√æcom.example.ExampleTest.shouldShowSnapshotExample=[√æ    ""<any type of object>""√æ]√æ√æ√æcom.example.ExampleTest.shouldExtractArgsFromMethod=[√æ  {√æ    ""FakeObject.fakeMethod"": [√æ      {√æ        ""arg0"": ""test1"",√æ        ""arg1"": 1,√æ        ""arg2"": [√æ          ""listTest1""√æ        ]√æ      },√æ      {√æ        ""arg0"": ""test2"",√æ        ""arg1"": 2,√æ        ""arg2"": [√æ          ""listTest1"",√æ          ""listTest2""√æ        ]√æ      }√æ    ]√æ  }√æ]√æ√æ√æcom.example.ExampleTest.shouldExtractArgsFromFakeMethodWithComplexObject=[√æ  {√æ    ""FakeObject.fakeMethodWithComplexObject"": [√æ      {√æ        ""arg0"": {√æ          ""id"": ""idMock""√æ        }√æ      }√æ    ]√æ  },√æ  {√æ    ""FakeObject.fakeMethodWithComplexObject"": [√æ      {√æ        ""arg0"": {√æ          ""id"": ""idMock"",√æ          ""name"": ""nameMock""√æ        }√æ      }√æ    ]√æ  }√æ]√æ```√æ√æWhenever it runs again, the `expect` method argument will be automatically validated with the `.snap` file. That is why you should commit every `.snap` file created.√æ√æ√æ#### Inheritance√æ√æTest classes inheritance becames usefull with snapshot testing due to the fact that the assertions are variable following snasphots, instead of code. √æTo make usage of this benefit you should be aware of the following:√æ√æStart SnapshotMatcher on child classes only:√æ√æ```java√æpackage com.example;√æ√æimport org.junit.AfterClass;√æimport org.junit.BeforeClass;√æ√æimport static io.github.jsonSnapshot.SnapshotMatcher.start;√æimport static io.github.jsonSnapshot.SnapshotMatcher.validateSnapshots;√æ√æpublic class SnapshotChildClassTest extends SnapshotSuperClassTest {√æ√æ    @BeforeClass√æ    public static void beforeAll() {√æ        start();√æ    }√æ√æ    @AfterClass√æ    public static void afterAll() {√æ        validateSnapshots();√æ    }√æ    √æ    @Override√æ    public String getName() {√æ        return ""anyName"";√æ    }√æ}√æ```√æ√æSuper classes can have @Test defined, but you should make the class abstract.√æ√æ```java√æpackage com.example;√æ√æimport org.junit.Test;√æ√æimport static io.github.jsonSnapshot.SnapshotMatcher.expect;√æ√æpublic abstract class SnapshotSuperClassTest {√æ√æ    public abstract String getName();√æ√æ    @Test√æ    public void shouldMatchSnapshotOne() {√æ        expect(getName()).toMatchSnapshot();√æ    }√æ√æ}√æ```"
sjamesr/jin,61245,2,3,3,User,False,The Jin chess client converted to a git repository,,,10,Java,"{'': 2, 'yml': 1, 'md': 1, 'gradle': 1, 'bat': 1, 'txt': 1}",3188,5,0,1,0,6616,True,4,1,0,0,0,4,0,0,7,0,0,0,0,0,0,0,17,,13,,"Jin√æ===√æ√æJin is a graphical chess client for the [Free Internet Chess√æService](http://freechess.org/) (FICS). It was written by [Alexander√æMaryanovsky](mailto:msasha@gmail.com) and has its [own√æwebsite](http://jinchess.com). The main development trunk for Jin is hosted on√æ[Sourceforge](http://sourceforge.net/projects/jin/). That project has been√ædormant for some years.√æ√æThis GitHub repository is a fork of the Jin project designed to fix bugs and√æadd features that are missing from Jin.√æ√æThe instructions that follow are primarily intended for Java programmers who√æare interested in hacking on Jin.√æ√æGetting Jin√æ===========√æ√æ1. Install `git`. If you need help, you can follow [these√æ   instructions](http://git-scm.com/book/en/Getting-Started-Installing-Git).√æ2. Clone this repository: `git clone https://github.com/sjamesr/jin.git`.√æ√æYou will now have a directory called `jin` in your current working directory.√æ√æBuilding and running Jin√æ========================√æ√æThis fork of Jin uses [Gradle](http://gradle.org/) as its build system. So,√æ√æ1. Build jin using the Gradle bootstrap script: `./gradlew assemble`√æ2. Run Jin: `./gradlew run`√æ√æDeveloping with IntelliJ√æ========================√æ√æIntelliJ supports Gradle natively. You should be able to open the Jin directory√æin IntelliJ and start coding right away."
OnapleRPG/Itemizer,853,3,3,2,Organization,False,Plugin that generate rich items,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'properties': 2, 'yml': 1, 'md': 1, 'gradle': 1}",292,10,23,4,7,1009,True,1,19,0,4,1,9,1,2,8,0,3,15,278,532,0,0,13,5,,,"# Itemizer  [![Build Status](https://travis-ci.org/OnapleRPG/Itemizer.svg?branch=master)](https://travis-ci.org/OnapleRPG/Itemizer)[ ![Download](https://api.bintray.com/packages/onaplerpg/onaple/itemizer/images/download.svg) ](https://bintray.com/onaplerpg/onaple/itemizer/_latestVersion) [![Quality gate](https://sonarcloud.io/api/project_badges/measure?project=com.onaple%3AItemizer&metric=reliability_rating)](https://sonarcloud.io/dashboard?id=com.onaple%3AItemizer) [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0) [![sponge version](https://img.shields.io/badge/sponge-7.2.0-yellow.svg)](https://www.spongepowered.org/)√æ√æ√æItemizer is a Sponge Minecraft plugin that allows custom item creation. Store plenty of custom objects in configurations files.√æ Once item registered, you can also register :√æ * crafts : register crafts (with or without shape) and smelting recipe.√æ * pools : assign items to pools with a probability and fetch them randmly.√æ * affixes : for more customisation item can be modified afterward by affix (also pick in a pool) to slighly modify their characteristics.√æ√æAn examples of each config file is loaded at the first launch of the plugin under the folder `/config/itemizer/`.This way you can see how they're build.√æ>Don't be afraid by item complexity, they can be generated in-game)√æ√æ## Installation√æTo install this plugin, you must have a sponge server 1.12. Download the [latest release](https://github.com/OnapleRPG/Itemizer/releases) and drag and drop it into your server's `mods/` folder. Then restart your server.√æCheck in the `/config/itemizer/` folder if default configuration is well copied and in logs if files is well loaded.√æ√æ## Minecraft Commands√æ√æ* `/register <newId>` : register item into the config. I advise you to use this [generator](http://mapmaking.fr/give1.12/). to give you the item before registering them.√æonce registered, you will see te item in your configuration file and you will be able to edit it.√æPermission : *itemizer.command.register*√æ* `/retrieve <itemId> [quantity] [player]` : Obtain an item specified in the configuration file for the given id.  √æPermission : *itemizer.command.rerieve*√æ* `/fetch <poolId> [quantity] [player]` : Try to obtain an item from a configured pool in the configuration file with its *id*.√æPermission : *itemizer.command.fetch*√æ* `/has-item <player> <itemId> [quantity]` : check if a player has an specific item in his inventory√æPermission : *itemizer.command.hasitem*√æ* `/reload-itemizer` : Reload each configuration file.√æPermission : *itemizer.command.reload*√æ√æ## Configuration files√æ√æAll configuration files use HOCON format. they are loaded at the plugin start. you can force a reload with the command `/reload-itemizer`√æ> I higly recommend you to backup your files to avoid any loss.√æ√æ### Global  configuration√æIn the global configuration file you can change plugin settings :√æ* __RewriteParts__ instead of using default Minecraft notation for _enchantments_, _modifiers_ , _undreakable_ , _canMine_ .√æYou can chose to rewrite them manually. set `False` to let default look or `True` to rewrite It.√æ* __DefaulColor__ if you decide to rewrite a part you can chose the color of each elements.√æ* __EnchantRewrite__ you can change the name of enchantment. if you let an enchantment blank, it will not appear.√æ* __ModifierRewrite__ (AttributeModifier like `generic.attackDamage`) you can rewrite his name.√æ* __CanMineRewrite__ and __UnbreakableRewrite__ set the text of your choice for it.√æ√æYou can chose to edit the config file or use `/configure <Type> <Key> [value]` command.√æ√æ__Be careful the command override the file change__√æ√æ√æ### Item creation√æ√æA file named __*items.conf*__ stores the items that can be retrieved from the plugin.√æ√æThe root element has to be __items__.√æFor each  item you have the following properties :√æFor each item configured, the following data can be provided :√æ* The mandatory `id` field is used as a key identifier√æ* The mandatory `item` who contain all the item data. I advise you to generate the data with a `/give` command and register it. sadly I haven't implemented update yet√æ* __thirdParties__ allows third party plugin to update your item (by now only [Jessie tags](https://github.com/OnapleRPG/Jessie-Tags) is available)√æ* __Affix__ pick in a pool of affix to randomly affect item statistics.√æ√æ#### Example√æAn example of an battle axe indexed as _barbarian_axe_ with some attribute modifiers and an affix in _damage_ pool.√æ```√æ    {√æ        id=""barbarian_axe""√æ        item {√æ            ContentVersion=2√æ            Count=1√æ            Data=[√æ                {√æ                    ContentVersion=2√æ                    ManipulatorData {√æ                        ""."" {√æ                            id=""barbarian_axe""√æ                        }√æ                        ContentVersion=1√æ                    }√æ                    ManipulatorId=""itemizer:item.id""√æ                }√æ            ]√æ            ItemType=""minecraft:iron_axe""√æ            UnsafeDamage=0√æ            UnsafeData {√æ                AttributeModifiers=[√æ                    {√æ                        Amount=5√æ                        AttributeName=""generic.attackDamage""√æ                        Name=""generic.attackDamage""√æ                        Operation=0√æ                        Slot=mainhand√æ                        UUIDLeast=160005√æ                        UUIDMost=13658√æ                    },√æ                    {√æ                        Amount=-0.1√æ                        AttributeName=""generic.attackSpeed""√æ                        Name=""generic.attackSpeed""√æ                        Operation=1√æ                        Slot=mainhand√æ                        UUIDLeast=169991√æ                        UUIDMost=15894√æ                    }√æ                ]√æ                display {√æ                    Lore=[√æ                        ""Nobody have whet this blade yet"",√æ                        ""however it still can sharp your finger""√æ                    ]√æ                    Name=""Barbarian Axe""√æ                }√æ            }√æ        }√æ        thirdParties=[],√æ         affix=damage√æ    }√æ```√ædon't be afraid all data in `item` are generated.√æ√æ### Items pool√æ√æA file named __*pools.conf*__ defines pools to select item randomly from.√æ√æThe root element must be `pools`.√æ* An `id` is used to enable a pool to be referenced.√æ* `items` is an array containing the items obtainable, it contains :√æ    * A `probability` between 0 and 1, giving the actual chances of having a given item. _The last item in a pool can have a probability of 1, it would then be the default drop_√æ    * An `Item` reference, it could be its _name_ , its _ref_ or directly is _type_√æ        * `ref` is used as a reference to a configured item id√æ        * `name` will be used if _ref_ is absent or if no item were returned to generate an item with a given type√æ        * you can use `type` instead of the above both to set a full item configuration (same as item in _item property_ in item.conf) √æ    * Two quantity (optional) `maxQuantity` and `minDauntity`√æ```√æpools = [√æ  {√æ    id: 1,√æ    items: [√æ      {√æ        probability: 0.5,√æ        item : {name: ""minecraft:cooked_porkchop""},√æ        maxQuantity : 3, #default 1√æ        minQuantity : 1  #default 1√æ      },√æ      {√æ        probability: 0.2,√æ        item : {ref: ""training_stick""}√æ      }√æ    ]√æ  }√æ]√æ```√æ_The first pool of item has a 50% chance of getting a porkchop, 20% chance of getting the configured item with id 1, and 30% chance of getting nothing._√æ√æ### Craft configuration√æ√æA file named __*crafts.conf*__ defines new crafts to be implemented in game.√æ√æThe root element must be `crafts`.√æ* An `id` must be defined.√æ* The `__class__` can be of three types : *com.onaple.itemizer.data.beans.recipes.ShapelessCrafting*, *com.onaple.itemizer.data.beans.recipes.Smelting* or *com.onaple.itemizer.data.beans.recipes.ShapedCrafting*.√æ* Used in all crafting recipes the the result must be an object containing one of the following fields:√æ    * Using `name` followed by a string can be used to reference a minecraft item.√æ    * Using `ref` with a number or a string can be used to retrieve an item from Itemizer's items.√æ* The `recipe` is used for ShapelessCrafting and Smelting only and is used to define the item needed for the recipe. It must contain an object containing one of the following fields:√æ    * Using `name` associated with a string to match a minecraft item.√æ    * Using `ref` with a number or a string for the desired Itemizer id of the item.√æ* The `pattern` is used for ShapedCrafting only to define the pattern which will be used to craft an item *(An example is available and explained below)*√æ* The `ingredients` are used to match the characters used in the pattern for a ShapedCrafting.√æ    * Each different character used in the pattern must be used as a key with the following object :√æ        * An object with ""name"" as a key and the item name as a value (e.g: `{name: ""minecraft:stick""}`)√æ        * An object with ""ref"" as a key and the itemizer id as a value (e.g: `{ref: 1}`)√æ√æ```√æ√æcrafts = [√æ  {√æ    __class__ : ""com.onaple.itemizer.data.beans.recipes.ShapelessCrafting""√æ    id : 1√æ    result : {ref : 1},√æ    recipe : {name : ""stone_axe""}√æ  },√æ  {√æ    __class__ : ""com.onaple.itemizer.data.beans.recipes.Smelting""√æ    id : 2√æ    result : {name : ""coal""},√æ    recipe : {name : ""cooked_porkchop""}√æ  },√æ  {√æ    __class__ : ""com.onaple.itemizer.data.beans.recipes.ShapedCrafting""√æ    id : 3√æ    result : {ref : ""king_sword""},√æ    pattern : ["" a "","" a "","" a ""],√æ    ingredients : {√æ      a : {name: ""minecraft:stick""},√æ    }√æ  }√æ]√æ```√æ_The first craft requires a stone axe to craft the item referenced ""1"", the second craft enable us to cook a cooked_porkchop into a coal,√æand the third one is used to craft the item referenced ""2"" with three sticks aligned in a vertical centered line (notice the whitespaces before and after the ""a"")_√æ√æ### Affix√æ√æAffix are modifiers who can be applied to items. They are pre-registered in pools (different from the pools used for items). They are stored√æin the `affix.conf` file as an HOCON file.√æThe root is `affixes`, it contains a list of affix groups.  √æ√æ A group is categorized by its `group` name.√æit's a schematic name only used for configuration like damage, speed, balanced, only_negative, etc... It will be√æused to attach a group to an item.√æ√æ And then the multiples `tiers` of each affix.√æ A tier is like a power level. `__class__` is the implementation of the affix, you can use your own√æ (leave it as is if you don't know what that mean).√æ√æ√æ You can set a `prefix` and `suffix` which modify the name item. Don't leave space before and after,√æ these arguments will be set afterward.  √æ The `probability` is the chance to choose this tiers more than another. the smaller it is, the less chance you have√æ to get this tier. Be careful to stay under the probability of one otherwise the tier which total probability exceeds 1 will never get picked.√æ√æ And then : the **attributes**, `attributes` are the modifiers of the data who change the item statistics.√æ you have 4 properties , `name`, `slot`, `amount` and `operation`. value are the same than vanilla.√æIf you want more details about *AttributeModifiers* check the Minecraft [wiki](https://minecraft.gamepedia.com/Attribute)√æ√æ√æ```√æaffixes = [√æ     {√æ       group:damage√æ       tiers : [√æ         {√æ           __class__ : com.onaple.itemizer.data.beans.affix.AffixTier√æ           suffix : ""of stupidity""√æ           probability : 1√æ           attributes : [√æ             {√æ               name : attackDamage√æ               slot: mainHand√æ               amount : 10√æ               operation :0√æ             }√æ           ]√æ         }√æ       ]√æ     }√æ   ]√æ```√æ## For developer√æIf you are willing to use **Itemizer** in your plugin development, we provide services to ease interactions.  √æyou can also use it with js (like with customNPC).√æ√æyou can check the [javadoc](https://onaplerpg.github.io/Itemizer/javadoc/) for more information.√æ√æ### Services√æ* **IItemService** : Give access to the object getters functions to a plugin.  √æ√æ   | Return |  Method  |√æ   | :--- | :--- |√æ   | `org.spongepowered.api.item.inventory.ItemStack` |  `construct(ItemBean item)` |√æ   | `java.util.Optional<org.spongepowered.api.item.inventory.ItemStack>` | `fetch(java.lang.String id)` |√æ   | `boolean` | `hasItem(org.spongepowered.api.entity.living.player.Player player, java.lang.String id, int quantity)` |√æ   | `void` | `instanciate(org.spongepowered.api.item.inventory.ItemStack itemStack, java.lang.String worldName, double x, double y, double z)` |√æ   | `void` | `instantiate(org.spongepowered.api.item.inventory.ItemStack itemStack, org.spongepowered.api.world.Location<org.spongepowered.api.world.World> location)` |√æ   | `void` | `register(java.lang.String id, org.spongepowered.api.item.inventory.ItemStackSnapshot snapshot)` |√æ   | `void` | `removeItem(org.spongepowered.api.entity.living.player.Player player, java.lang.String id, java.lang.Integer quantity)` |√æ   | `java.util.Optional<org.spongepowered.api.item.inventory.ItemStack>` | `retrieve(java.lang.String id)` |√æ   | `java.util.Optional<org.spongepowered.api.item.inventory.ItemStack>` | `retrieve(java.lang.String id, int qte)` |√æ√æ    ### Installation with Gradle√æ√æ * Add [Jitpack](https://jitpack.io/) into your repositories√æ ```√æ   repositories {√æ     mavenCentral()√æ     maven {√æ         name = 'jitpack'√æ         url = 'https://jitpack.io'√æ     }√æ }  √æ ```√æ * Add **Itemizer** to your dependencies√æ ```√æ dependencies {√æ      compile 'org.spongepowered:spongeapi:7.0.0'√æ      implementation 'com.github.OnapleRPG:Itemizer:V3.2'√æ  }√æ ```√æ * Use services√æ ```java√æOptional<IItemService> optionalIItemService = Sponge.getServiceManager().provide(IItemService.class);√æ            if (optionalIItemService.isPresent()) {√æ                IItemService iItemService = optionalIItemService.get();√æ                optionalItem = iItemService.retrieve(itemId);√æ            }√æ```"
apache/myfaces-scripting,4296,2,14,3,Organization,False,Apache MyFaces Scripting,,,9,Java,"{'': 1, 'xml': 1, 'sh': 2}",863,27,13,4,4,3962,False,,,,,0,0,0,0,0,0,0,0,0,0,0,0,2,869,,,
spectra-cluster/clustering-file-converter,8653,0,2,2,Organization,False,,,,5,Java,"{'': 1, 'pdf': 1, 'md': 1, 'xml': 1}",17,2,0,2,0,1873,True,0,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,10,2,,,"# clustering-file-converter√æ√æ# Introduction√æ√æThis Java tool is used to convert clustering results into a different file format. It's most important feature is that consensus spectra can be converted into the MSP file format. Thereby, a spectral library can quickly be created based on the clustering results."
maddekenn/cora-searchstorage,19,0,1,2,User,False,,,,3,Java,"{'': 1, 'xml': 1}",33,2,0,2,0,1245,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,37,,0,,
rlf/uSkyBlock,43178,76,25,106,User,False,The best skyblock bukkit plugin around...,http://dev.bukkit.org/bukkit-plugins/uskyblock/,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",21,Java,"{'': 5, 'yml': 1, 'md': 3, 'txt': 1, 'sh': 3, 'enc': 1, 'xml': 1}",1414,8,350,30,0,2547,True,110,967,11,2,2,181,0,2,32,7,1,29,876,429,0,0,55,,20,,"# uSkyBlock√æ√æThis is a continually updated and custom version of Talabrek's Ultimate SkyBlock plugin.√æ√æWe are on [Spigot](https://www.spigotmc.org/resources/uskyblock-revived.66795/). Currently [Open Issues](https://github.com/rlf/uSkyBlock/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20-label%3A%22T%20ready%20for%20test%22%20-label%3A%22T%20tested%20awaiting%20reporter%22)√æ√æ# Installation√æ√æThis version depends on the following plugins:√æ√æ* Bukkit/Spigot 1.15.1-R0.1-SNAPSHOT√æ* Vault 1.7.x√æ* WorldEdit 7.1.0-SNAPSHOT√æ* WorldGuard 7.0.2-SNAPSHOT√æ√æ## Releases √æ[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/rlf/uSkyBlock.svg)](http://isitmaintained.com/project/rlf/uSkyBlock ""Average time to resolve an issue"") [![Percentage of issues still open](http://isitmaintained.com/badge/open/rlf/uSkyBlock.svg)](http://isitmaintained.com/project/rlf/uSkyBlock ""Percentage of issues still open"")√æ√æhttps://www.spigotmc.org/resources/uskyblock-revived.66795/history√æ√æPre-releases will end in -SNAPSHOT, and is considered **unsafe** for production servers.√æ√æReleases have a clean version number, has been tested, and should be safe for production servers.√æ√æ### Bukkit/Spigot 1.7.9/10 Releases√æ√æWe provide pre-compiled versions (no support) [here](http://rlf.github.io/uSkyBlock):√æ√æ* [2.4.9 for Bukkit 1.7.10](http://rlf.github.io/uSkyBlock/releases/bukkit-1.7.10/uSkyBlock-2.4.9.jar)√æ√æ## Config-files√æ√æ*Note*: Config files might change quite a bit, and upon activation, the plugin will try to merge the existing ones with the new ones. A backup is kept under the `uSkyBlock/backup` folder.√æ√æPlease make sure, that the config files are as you expect them to be, before using the plugin or releasing it to ""the public"".√æ√æ## Building/Compiling√æ√æSee (https://github.com/rlf/uSkyBlock/wiki/Building)√æ√æ# API√æuSkyBlock has an API (since v2.0.1-RC1.65).√æ√æTo use it, simply drop the api-jar to the classpath of your own plugin, and write some code along these lines:√æ```java√æPlugin plugin = Bukkit.getPluginManager().getPlugin(""uSkyBlock"");√æif (plugin instanceof uSkyBlockAPI && plugin.isEnabled()) {√æ  uSkyBlockAPI usb = (uSkyBlockAPI) plugin;√æ  player.sendMessage(String.format(√æ    ""\u00a79Your island score is \u00a74%5.2f!"", √æ    usb.getIslandLevel(player)√æ  ));√æ}√æ```√æFor further details regarding the API, visit the Wiki page: https://github.com/rlf/uSkyBlock/wiki/uSkyBlock-API√æ√æ## Contributing√æ√æFork-away, and create pull-requests - we review and accept almost any changes.√æ√æBut *please* conform with the (https://github.com/rlf/uSkyBlock/wiki/Coding-Guidelines)√æ√æ## License√æ√æTL;DR - This is licensed under GPLv3√æ√æ### Explanation / History√æOriginally the uSkyBlock was a continuation of the skySMP plugin, which was licensed under GPLv3√æ(see http://dev.bukkit.org/bukkit-plugins/skysmp/).√æ√æTalabrek intended to share the code with the public, but simply didn't have the time available to do so.√æ√æUnfortunately, he had registered the plugin as `All rights reserved` on Bukkit, meaning the bukkit staff put the plugin under moderation - further increasing the work-load required to share the plugin.√æ√æThose trying to get hold on Talabrek, had a hard time, and eventually multiple developers got their hands on different versions of the uSkyBlock plugin, and tried to continue the work in various channels (wesley27 and wolfwork comes to mind).√æ√æOn the very last day of 2014, we received the following e-mail from Talabrek:√æ√æ> Recently, now that a stable 1.8 and the future of spigot is looking hopeful, I have gotten back to work on the plugin. There is much to be done though, and I just don't have the time to do it, so I finally decided to make it available for the public to work on. This is when I noticed the work you and others have done on the plugin.√æ>√æ> I don't have the time and energy to devote to actively developing this plugin anymore, but it is like a pet project to me so I would still like to have a role in it's development. You are making the best effort that I have seen, so I would like for you to continue.√æ>√æ> If you are interested, I can make my current code available to you (it's much different than what you currently have now, but some parts might be useful).√æ>√æ> -Talabrek√æ√æSo, with Talabreks blessing, this repository will try to consolidate the many different ""branches"" out there.√æ√æ## References√æ√æ* [GPLv3](http://www.gnu.org/copyleft/gpl.html) - [tl;dr Legal](https://www.tldrlegal.com/l/gpl-3.0)"
ccj659/PopsTabView,23555,660,14,92,User,False,"PopsTabViewÊòØ‰∏™filterÂÆπÂô®,‰ªñÂèØ‰ª•Âø´ÈÄü,ÊûÑÂª∫‰∏çÂêåÁ≠õÈÄâÊ†∑Âºè,ÊûÑÂª∫Á≠õÈÄâÁªìÊûú,Ëá™Áî±ÁªÑÂêàPopWindowÊàê‰∏ÄÁªÑtab.",,,19,Java,"{'': 2, 'iml': 1, 'md': 3, 'apk': 1, 'gradle': 2, 'properties': 2, 'bat': 1, 'gif': 2}",125,2,4,1,0,1090,True,7,6,1,0,1,0,0,0,7,0,0,0,0,0,0,0,93,,106,,"# PopsTabView√æ√æ[![Download](https://img.shields.io/badge/DownloadApp-1.9M-ff69b4.svg) ](https://github.com/ccj659/PopsTabView/blob/master/app-debug.apk)√æ![](https://img.shields.io/travis/rust-lang/rust/master.svg)√æ [![Download](https://api.bintray.com/packages/ccj659/maven/PopsTabView/images/download.svg) ](https://bintray.com/ccj659/maven/PopsTabView/_latestVersion)√æ[![Author](https://img.shields.io/badge/autor-ccj659-brightgreen.svg)](https://github.com/ccj659)√æ[![License](https://img.shields.io/badge/license-Apache%202-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ√æ√æ**PopsTabViewÊòØ‰∏™filterÂÆπÂô®,‰ªñÂèØ‰ª•Ëá™Âä®,Âø´ÈÄü,ÊûÑÂª∫‰∏çÂêåÁ≠õÈÄâÊ†∑Âºè,Ëá™Áî±ÁªÑÂêàÊàê‰∏ÄÁªÑtab.**√æ√æ----√æ√æ**Êõ¥Êñ∞Êó•Âøó**√æ√æv 1.5.0  ÂçïÈ°πÂàóË°®(‰ªÖÈôê`SingleFilterWindow`,`RowsFilterWindow`)√æ- Â∫î`issues`ÈúÄÊ±Ç,‰øÆÂ§çÂ§öÈÄâ‰ºöÂºπÂõûÈóÆÈ¢ò.√æ- Â∫î`issues`ÈúÄÊ±Ç,Â¢ûÂä†ÂèØÈªòËÆ§ÈÄâÈ°π(ÂèØÈªòËÆ§ÈÄâ‰∏≠Â§ö‰∏™).√æ√æ√æ---√æ√æÁ≠õÈÄâÊ†∑Âºè | Á≠õÈÄâÁßçÁ±ª |ÂèØËá™ÂÆö‰πâÂ±ûÊÄß√æ--------|------|--------------|√æÂçïÂàó | ÂçïÈÄâ,Â§öÈÄâ  | ÂàùÂßãÊï∞ÊçÆbean,Á≠õÈÄâÁªìÊûúbean,tabÊ†∑Âºè,Á≠õÈÄâÊ†∑Âºè|√æÂ§öÊéí | ÂçïÈÄâ,Â§öÈÄâ  | ÂàùÂßãÊï∞ÊçÆbean,Á≠õÈÄâÁªìÊûúbeantabÊ†∑Âºè,Á≠õÈÄâÊ†∑Âºè|√æÂèåÂàó | ÂçïÈ°πÂçïÈÄâ,ÂçïÈ°πÂ§öÈÄâ  | ÂàùÂßãÊï∞ÊçÆbean,Á≠õÈÄâÁªìÊûúbean,tabÊ†∑Âºè,Á≠õÈÄâÊ†∑Âºè|√æÂ§çÊùÇ | ÂçïÈ°πÂçïÈÄâ,ÂçïÈ°πÂ§öÈÄâ  | ÂàùÂßãÊï∞ÊçÆbean,Á≠õÈÄâÁªìÊûúbean,tabÊ†∑Âºè,Á≠õÈÄâÊ†∑Âºè|√æËá™ÂÆö‰πâ | ÂçïÈ°πÂçïÈÄâ,ÂçïÈ°πÂ§öÈÄâ  | ÂàùÂßãÊï∞ÊçÆbean,Á≠õÈÄâÁªìÊûúbean,tabÊ†∑Âºè,Á≠õÈÄâÊ†∑Âºè|√æ√æËØ¶ÊÉÖËØ∑ÂèÇËÄÉ‰ª£Á†Å,‰ª•ÂèäÂÆû‰æã√æÂêéÁª≠Á≠õÈÄâ‰ºö‰∏çÊñ≠ÂÆåÂñÑË°•ÂÖÖ.√æ√æ**`PopTabView.java` API**√æ√æÊñπÊ≥ïÂêç| ÂäüËÉΩ |ÊòØÂê¶ÂøÖÈ°ª√æ--------|------|--------------|√æ`setOnPopTabSetListener()` | Â§ñÈÉ®ÂõûË∞ÉÁöÑÁõëÂê¨  | ÊòØ|√æ`setPopEntityLoader()` | Á≠õÈÄâÊ†∑ÂºèÂä†ËΩΩÁ±ª,Êñ∞Â¢ûÁ±ªÂûãÂèØÂú®Ê≠§Êâ©Â±ï  | Âê¶|√æ`setResultLoader()` | ÁªìÊûúÈõÜÂä†ËΩΩÂô®,ÂèØËá™ÂÆö‰πâËøõË°åÈÖçÁΩÆ  | ÊòØ|√æ`addFilterItem()` | Â¢ûÂä†Á≠õÈÄâÈ°π  | ÊòØ|√æ`setClickedItem()` | ËÆæÁΩÆÈªòËÆ§ÈÄâ‰∏≠ÁöÑÁä∂ÊÄÅ,Âπ∂‰∏ªÂä®ÂõûË∞É `v1.5.0 Êñ∞Â¢û`  | Âê¶|√æ`setDefaultCheckedItems()` | ËÆæÁΩÆÈªòËÆ§ÈÄâ‰∏≠,‰∏ç‰ºöËß¶ÂèëOnPopSet()ÂõûË∞É  | Âê¶|√æ`removeItem()` | Ê∏ÖÁ©∫ÂÆπÂô®  | Âê¶|√æ√æ√æ√æ[È°πÁõÆÂú∞ÂùÄ‰º†ÈÄÅÈó® https://github.com/ccj659/PopsTabView](https://github.com/ccj659/PopsTabView)√æ√æ## ËøõÈò∂√æ√æ- [ÊîØÊåÅËá™ÂÆö‰πâÂèÇÊï∞‰º†ÈÄÅÈó®](https://github.com/ccj659/PopsTabView/blob/master/README_RESULT.md)√æ√æ- [ÊîØÊåÅËá™ÂÆö‰πâÊ†∑Âºè‰º†ÈÄÅÈó®](https://github.com/ccj659/PopsTabView/blob/master/README_STYLE.md)√æ√æ√æ## Show√æ√æ√æ<h1 align=""center"">√æ<img src=""http://upload-images.jianshu.io/upload_images/1848340-88046dae08e39b02.gif?imageMogr2/auto-orient/strip"" width=""280"" height=""498"" alt=""‰∏§‰∏™Á≠õÈÄâËèúÂçï""/>√æ<img src=""http://upload-images.jianshu.io/upload_images/1848340-fabaade294df8d25.gif?imageMogr2/auto-orient/strip"" width=""280"" height=""498"" alt=""Âõõ‰∏™Á≠õÈÄâËèúÂçï""/>√æ<br/>√æ</h1>√æ√æ<h1 align=""center"">√æ<img src=""http://upload-images.jianshu.io/upload_images/1848340-833c54f734a4baab.gif?imageMogr2/auto-orient/strip"" width=""280"" height=""498"" alt=""‰∏§‰∏™Á≠õÈÄâËèúÂçï""/>√æ<img src=""http://upload-images.jianshu.io/upload_images/1848340-ab654092afc2d7ed.gif?imageMogr2/auto-orient/strip"" width=""280"" height=""498"" alt=""Âõõ‰∏™Á≠õÈÄâËèúÂçï""/>√æ<br/>√æ</h1>√æ√æ√æ√æ## Introduction√æ√æÁî®Êà∑Âè™ÈúÄË¶Å,Áü•ÈÅìËá™Â∑±ÈúÄË¶ÅÂì™Áßçfilter,Â∞ÜÊï∞ÊçÆËΩ¨Âåñ`FilterTabBean`,ÁÑ∂Âêé`addFilterItem()`,ÊúÄÂêéËá™Â∑±Âú®`onPopTabSet()`ÂõûË∞É,Âç≥ÂèØ‰ΩøÁî®,ÁÆÄÂçïÁ≤óÊö¥.√æ√æ√æ### ‰ºòÁÇπ:√æ√æ- ÊîØÊåÅÂø´ÈÄü,ÊûÑÂª∫‰∏çÂêåÁ≠õÈÄâÊ†∑Âºè,È°∫Â∫è,Ëá™Áî±ÁªÑÂêàÊàê‰∏ÄÁªÑfilterÁöÑtab.√æ- Áî®Êé•Âè£ÊäΩË±°Âá∫filterÊ†∑ÂºèÈÖçÁΩÆÂô®loader,‰∏éÂäüËÉΩ‰ª£Á†ÅËß£ËÄ¶.√æ- ÊîØÊåÅËá™ÂÆö‰πâÈÖçÁΩÆ Á≠õÈÄâÁªìÊûú`ResultLoader<T>`√æ- ÊîØÊåÅËá™ÂÆö‰πâÊï∞ÊçÆbean.√æ- ÂèØ‰ª•Ëá™Áî±Êâ©Â±ï,ÂÖ∂‰ªñÁ±ªÂûãÁöÑFilterÁ±ªÂûã.√æ√æ### ÂæÖÂÆåÂñÑ:√æ- ÈÄêÊ∏êÂ¢ûÂä†ÂÖ∂‰ªñÁ±ªÂûãÁöÑÁ≠õÈÄâÊ†∑Âºè√æ- viewÁöÑÊ†∑ÂºèÂèØÈÖçÁΩÆ‰∏∫ÂèØËá™ÂÆö‰πâ√æ√æ√æ## TO USE√æ√æ### Ê∑ªÂä†‰æùËµñ√æ√æ**In Gradle**√æ√æ```√æcompile 'me.ccj.PopsTabView:poptabview_lib:1.5.0'√æ√æ```√æ√æ**In Maven**√æ√æ```√æ<dependency>√æ  <groupId>me.ccj.PopsTabView</groupId>√æ  <artifactId>poptabview_lib</artifactId>√æ  <version>1.5.0</version>√æ  <type>pom</type>√æ</dependency>√æ√æ```√æ√æ√æ√æ√æ√æ√æ### ÁÆÄÂçïÊñπÂºè√æ√æÂ¶ÇÊûú‰∏öÂä°ÈúÄÊ±ÇÂæàÁÆÄÂçï,Áî®libËá™Â∏¶ÁöÑÁ≠õÈÄâÂç≥ÂèØ.√æ√æ#### 1.ËÆæÂÆö,Á≠õÈÄâÂô®Á±ªÂûã. Â∞Ü`PopTypeLoader`Êö¥Èú≤,Áî®‰∫éÁî®Êà∑ Á≠õÈÄâÂô®Á±ªÂûã.√æ√æ**ÈúÄË¶ÅËá™Â∑±ÊåâÁÖßËØ•Ê®°ÂºèËøõË°åÊâ©Â±ï.ÂàõÂª∫ ÂÖ∑‰Ωì popwindow ÂÆû‰ΩìÂØπË±°. ÂàõÂª∫ÂØπË±°Âíå ÂäüËÉΩ‰ª£Á†ÅËß£ËÄ¶Âíå,ÁªÜËäÇÂú®`PopTabView.addItem()`‰∏≠.Ëã•ÊúâÈúÄË¶Å,ÈúÄË¶ÅËá™Áî±Êâ©Â±ï,ÈÖçÁΩÆ.**√æ√æ√æ```java√æ√æpublic class PopTypeLoaderImp implements PopTypeLoader {√æ    @Override√æ    public PopupWindow getPopEntity(Context context, List data, OnMultipeFilterSetListener filterSetListener, int tag, int type) {√æ        PopupWindow popupWindow = null;√æ        switch (tag) {√æ            case FilterConfig.TYPE_POPWINDOW_LINKED:√æ                popupWindow = new LinkFilterPopupWindow(context, data, filterSetListener,type);√æ                break;√æ            case FilterConfig.TYPE_POPWINDOW_SORT:√æ                popupWindow = new SortPopupWindow(context, data, filterSetListener, tag,type);√æ                break;√æ            default:√æ                popupWindow = new MSingleFilterWindow(context, data, filterSetListener,type);√æ                break;√æ        }√æ        return popupWindow;√æ    }√æ}√æ√æ```√æ√æ√æ√æ#### 2.‰ΩøÁî®ÊñπÂºè √æ√æ####2.1 BuilderÊ®°Âºè,ÂÆåÊàêÁ≠õÈÄâÂô®ÁöÑÂàõÂª∫.√æ```java√æ√æ√æ    private void addMyMethod() {√æ√æ        FilterGroup filterGroup1 = getMyData(""Á≠õÈÄâ1"", FilterConfig.TYPE_POPWINDOW_ROWS,FilterConfig.FILTER_TYPE_SINGLE);√æ        FilterGroup filterGroup2 = getMyData(""Á≠õÈÄâ2"", FilterConfig.TYPE_POPWINDOW_LINKED,FilterConfig.FILTER_TYPE_MUTIFY);√æ        FilterGroup filterGroup3 = getMyData(""Á≠õÈÄâ3"", FilterConfig.TYPE_POPWINDOW_SINGLE,FilterConfig.FILTER_TYPE_SINGLE);√æ        FilterGroup filterGroup4 = getMyData(""Á≠õÈÄâ4"", FilterConfig.TYPE_POPWINDOW_SORT,FilterConfig.FILTER_TYPE_MUTIFY);√æ√æ√æ        popTabView.setOnPopTabSetListener(this)√æ                .setPopEntityLoader(new PopEntityLoaderImp()).setResultLoader(new ResultLoaderImp()) //ÈÖçÁΩÆ {Á≠õÈÄâÁ±ªÂûã}  ÊñπÂºè√æ                  √æ             /***√æ             * @param title Á≠õÈÄâÊ†áÈ¢ò√æ             * @param data Á≠õÈÄâÊï∞ÊçÆ√æ             * @param tag Á≠õÈÄâÁ±ªÂà´- ‰∏ÄÁ∫ßÁ≠õÈÄâ,‰∫åÁ∫ßÁ≠õÈÄâ,Â§çÊùÇÁ≠õÈÄâ√æ             * @param type Á≠õÈÄâÊñπÂºè-ÂçïÈÄâorÂ§öÈÄâ√æ             * @return√æ             */√æ                .addFilterItem(filterGroup1.getTab_group_name(), filterGroup1.getFilter_tab(), filterGroup1.getTab_group_type(), filterGroup1.getSingle_or_mutiply())√æ                .addFilterItem(filterGroup2.getTab_group_name(), filterGroup2.getFilter_tab(), filterGroup2.getTab_group_type(), filterGroup2.getSingle_or_mutiply())√æ                .addFilterItem(filterGroup3.getTab_group_name(), filterGroup3.getFilter_tab(), filterGroup3.getTab_group_type(), filterGroup3.getSingle_or_mutiply())√æ                .addFilterItem(filterGroup4.getTab_group_name(), filterGroup4.getFilter_tab(), filterGroup4.getTab_group_type(), filterGroup4.getSingle_or_mutiply());√æ√æ    }√æ√æ```√æ√æ√æ#### 3.ÈÖçÁΩÆÁ≠õÈÄâÂêéÁöÑËøîÂõûÂÄºÊ†∑Âºè`ResultLoader<T>`√æ√æ√æ```java√æ√æ√æ/**√æ * Â¶ÇÊûú ÈÅáÂà∞Â§çÊùÇÁöÑ ‰∏öÂä°ÈúÄÊ±Ç, Âè™ÈúÄË¶ÅÂú®ËøôÈáå,ÂØπÁ≠õÈÄâÁªìÊûúËøõË°åÊûÑÂª∫Âç≥ÂèØ.√æ * Created by chenchangjun on 17/7/25.√æ */√æ√æpublic class ResultLoaderImp implements ResultLoader<String> {√æ√æ√æ    @Override√æ    public String getResultParamsIds(List<BaseFilterTabBean> selectedList, int filterType) {√æ        StringBuilder stringValues = new StringBuilder();√æ        for (int i = 0; i < selectedList.size(); i++) {√æ            FilterTabBean filterTabBean= (FilterTabBean) selectedList.get(i);√æ            stringValues.append( filterTabBean.getTab_id()+ "","");√æ        }√æ        return PopsTabUtils.builderToString(stringValues);√æ    }√æ√æ    @Override√æ    public String getResultShowValues(List<BaseFilterTabBean> selectedList, int filterType) {√æ√æ        StringBuilder stringValues = new StringBuilder();√æ        for (int i = 0; i < selectedList.size(); i++) {√æ            stringValues.append(selectedList.get(i).getTab_name() + "","");√æ        }√æ        return PopsTabUtils.builderToString(stringValues);√æ    }√æ√æ```√æ√æ√æ#### 4.ÊàêÂäüÁöÑÂõûË∞É,ÂèØÈÖçÁΩÆ‰∏∫ÂÄüÂè£‰º†ÂèÇ.Ê≠§Â§ÑÂõûË∞É,ÂèØ‰ª•Ëá™‰∏ª‰øÆÊîπ,Êâ©Â±ï.√æ√æ```java√æ /**√æ     * @param index  Êìç‰ΩúÁöÑ filterÁöÑ‰∏ãÊ†áÂè∑ 0.1.2.3√æ     * @param lable  Êìç‰ΩúÁöÑ filterÁöÑÂØπÂ∫îÁöÑÊ†áÁ≠ætitle√æ     * @param params ÈÄâ‰∏≠ÁöÑ ÂèÇÊï∞(ÈúÄË¶Å‰º†ÂèÇ)√æ     * @param value  ÈÄâ‰∏≠ÁöÑ ÂÄº√æ     */√æ    @Override√æ    public void onPopTabSet(int index, String lable, String params, String value) {√æ√æ        Toast.makeText(this, ""lable="" + index + ""\n&value="" + value, Toast.LENGTH_SHORT).show();√æ        tv_content.setText(""&Á≠õÈÄâÈ°π="" + index + ""\n&Á≠õÈÄâ‰º†ÂèÇ="" + params + ""\n&Á≠õÈÄâÂÄº="" + value);√æ√æ    }√æ```√æ√æ√æ## ËøõÈò∂Áî®Ê≥ï√æ√æ- [Ëá™ÂÆö‰πâÂèÇÊï∞‰º†ÈÄÅÈó®](https://github.com/ccj659/PopsTabView/README_RESULT.md)√æ√æ- [Ëá™ÂÆö‰πâÊ†∑Âºè‰º†ÈÄÅÈó®](https://github.com/ccj659/PopsTabView/README_STYLE.md)√æ√æ√æ## Ê∑∑Ê∑ÜËßÑÂàô√æ√æ```√æ-dontwarn com.ccj.poptabview.**√æ-keep class com.ccj.poptabview.**{*;}√æ```√æ√æ√æ√æ√æ## About Me√æ===√æ√æ[CSDNÔºöhttp://blog.csdn.net/ccj659/article/](http://blog.csdn.net/ccj659/article/)√æ√æ[ÁÆÄ‰π¶Ôºöhttp://www.jianshu.com/u/94423b4ef5cf](http://www.jianshu.com/u/94423b4ef5cf)√æ√æ[github:  https//github.com/ccj659/](https//github.com/ccj659/)√æ√æ√æÊàëÁöÑÂæÆ‰ø°√æ√æ![image.png](https://upload-images.jianshu.io/upload_images/1848340-373112cf4079f1c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)"
lsu-ub-uu/diva-cora,116,0,5,2,Organization,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",4,Java,"{'': 1, 'txt': 1, 'xml': 1}",123,31,24,4,0,888,True,0,0,0,0,0,0,0,0,8,0,3,13,17,17,0,0,89,0,,,
apache/incubator-netbeans-tools,6104,5,30,15,Organization,False,Apache NetBeans Tools,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,PHP,"{'': 3, 'md': 1}",139,3,0,10,1,1020,False,,,,,4,28,2,10,9,0,4,16,997,125,0,0,2,869,,apache/netbeans-tools,"# netbeans-tools√æMirror of Apache NetBeans Tools.√æ√æRepository of tools and other utilties created and used by the Apache NetBeans community.√æ√æ### Currently Available Tools√æ√æ   * [convert](https://github.com/apache/incubator-netbeans-tools/tree/master/convert): Tool for automatically converting Sun Microsystems and Oracle licenses to Apache.√æ   √æ   * [html-convert](https://github.com/apache/incubator-netbeans-tools/tree/master/html-convert): Tool that reads tutorials in HTML format from the 3rd Oracle donation and converts these to the AsciiDoc format.√æ   √æ   * [licensereviewsite](https://github.com/apache/incubator-netbeans-tools/tree/master/licensereviewsite): Tool consisting of a Maven plugin to generate report for crosschecking Jenkins / Confluence for external and licence. ([More details](https://github.com/apache/incubator-netbeans-tools/pull/2).)√æ   √æ   * [pp3](https://github.com/apache/incubator-netbeans-tools/tree/master/pp3): Plugin Portal, live at http://netbeans-vm.apache.org/pluginportal/.√æ√æ   * [wiki-export](https://github.com/apache/incubator-netbeans-tools/tree/master/wiki-export): Tool for extracting WikiText data from wiki.netbeans.org. ([More details](https://github.com/apache/incubator-netbeans-tools/pull/4).)√æ√æ   * [wiki-convert](https://github.com/apache/incubator-netbeans-tools/tree/master/wiki-convert): Tool for converting extracted WikiText data to AsciiDoc, suitable for using with the jBake static generator tool."
bcgov/smk,20282,8,13,3,Organization,False,"Simple Map Kit - AKA MapSDK, a versatile and lightweight toolkit for building simple web map",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 4, 'md': 4, 'sh': 2}",779,46,0,3,2,894,True,199,35,4,1,31,59,3,1,12,10,0,0,0,0,0,0,781,44,,,"[![Build Status](https://cis.data.gov.bc.ca/job/smk/job/smk-maven/badge/icon)](https://cis.data.gov.bc.ca/job/smk/job/smk-maven/)√æ# smk√æSimple Map Kit - AKA MapSDK, a versatile and lightweight toolkit for building simple web map√æ√æ# Project Development Status √æ* [![Zenhub Board](https://img.shields.io/badge/SMK-Underconstruction-blue.svg)](https://github.com/bcgov/smk#boards?repos=117017086)√æ* you will need to install [Zenhub Chrome Extention](https://chrome.google.com/webstore/detail/zenhub-for-github/ogcgkffhplmphkaahpmffcafajaocjbd) in chrome to see the board√æ√æ# License√æ```√æCopyright 2018 Province of British Columbia√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ   http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
maning0303/MNProgressHUD,1666,376,9,62,User,False,"‰∏Ä‰∏™Â∏∏Áî®ÁöÑËá™ÂÆö‰πâÂºπÊ°ÜÂ∞ÅË£Ö(ÈÄÇÈÖçAndroidX),Âä†ËΩΩProgressDialog,Áä∂ÊÄÅÊòæÁ§∫ÁöÑStatusDialogÂíåËá™ÂÆö‰πâToast,ÂÖ®ÈÉ®ÊîØÊåÅËÉåÊôØÈ¢úËâ≤,ÂúÜËßí,ËæπÊ°ÜÂíåÊñáÂ≠óÁöÑËá™ÂÆö‰πâ,ÊûÑÂª∫ËÄÖÊ®°Âºè,ÈìæÂºèË∞ÉÁî®„ÄÇ",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",115,2,20,3,0,1046,True,3,20,2,0,0,1,0,0,7,0,1,12,1001,274,0,0,160,,260,,"# MNProgressDialog [![](https://jitpack.io/v/maning0303/MNProgressHUD.svg)](https://jitpack.io/#maning0303/MNProgressHUD)√æ‰∏Ä‰∏™Â∏∏Áî®ÁöÑËá™ÂÆö‰πâÂºπÊ°ÜÂ∞ÅË£Ö(ÈÄÇÈÖçAndroidX),Âä†ËΩΩProgressDialog,Áä∂ÊÄÅÊòæÁ§∫ÁöÑStatusDialogÂíåËá™ÂÆö‰πâToast,ÂÖ®ÈÉ®ÊîØÊåÅËÉåÊôØÈ¢úËâ≤,ÂúÜËßí,ËæπÊ°ÜÂíåÊñáÂ≠óÁöÑËá™ÂÆö‰πâ,ÊûÑÂª∫ËÄÖÊ®°Âºè,ÈìæÂºèË∞ÉÁî®„ÄÇ√æ√æ√æ√æ## Êà™ÂõæÔºö√æ### MProgressDialog√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_001.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_002.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_006.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_003.png)√æ√æ### MProgressBarDialog (Ê∞¥Âπ≥ËøõÂ∫¶Êù°ÂíåÂúÜÂΩ¢ËøõÂ∫¶Êù°)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_progressbar_dialog_003.jpg)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_progressbar_dialog_004.jpg)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_progressbar_dialog_002.jpg)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_progressbar_dialog_001.jpg)√æ√æ### MStatusDialog√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_004.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_dialog_005.png)√æ√æ### MSToast√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_toast_001.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_toast_002.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_toast_003.png)√æ![](https://github.com/maning0303/MNProgressHUD/raw/master/screenshots/mn_toast_004.png)√æ√æ√æ## Â¶Ç‰ΩïÊ∑ªÂä†√æ### 1:GradleÊ∑ªÂä†Ôºö√æ#### 1.Âú®ProjectÁöÑbuild.gradle‰∏≠Ê∑ªÂä†‰ªìÂ∫ìÂú∞ÂùÄ√æ√æ``` gradle√æ    allprojects {√æ     repositories {√æ      ...√æ      maven { url ""https://jitpack.io"" }√æ     }√æ    }√æ```√æ√æ### [Android X ÈÄÇÈÖçÁâàÊú¨Ê∫êÁ†Å](https://github.com/maning0303/MNProgressHUD/releases/tag/V2.0.0X)√æ### [Android Support ÈÄÇÈÖçÁâàÊú¨Ê∫êÁ†Å](https://github.com/maning0303/MNProgressHUD/releases/tag/V2.0.0)√æ√æ#### 2.Âú®appÁõÆÂΩï‰∏ãÁöÑbuild.gradle‰∏≠Ê∑ªÂä†‰æùËµñ√æ``` gradle√æ    //android support library√æ    dependencies {√æ        implementation 'com.android.support:appcompat-v7:28.0.0'√æ        implementation 'com.android.support:support-v4:28.0.0'√æ        implementation 'com.github.maning0303:MNProgressHUD:V2.0.0'√æ    }√æ√æ    //android x ÈÄÇÈÖç√æ    dependencies {√æ        implementation 'androidx.appcompat:appcompat:1.1.0'√æ        implementation 'androidx.legacy:legacy-support-v4:1.0.0'√æ        implementation 'com.github.maning0303:MNProgressHUD:V2.0.0X'√æ    }√æ```√æ√æ### 2:Ê∫êÁ†ÅModuleÊ∑ªÂä†Ôºö√æ#### Áõ¥Êé•ÂÖ≥ËÅîmndialoglibrary(ÈúÄË¶Å android x ÈÄÇÈÖçÔºåÂàáÊç¢Âà∞androidxÂàÜÊîØ„ÄÇ)√æ√æ``` gradle√æ√æ    implementation project(':mndialoglibrary')√æ√æ√æ```√æ√æ√æ## ‰ΩøÁî®ÊñπÊ≥ï(Êü•ÁúãDemoËØ¶ÊÉÖ):√æ√æ### 1:MProgressDialog Âä†ËΩΩDialog‰ª£Á†Å‰ΩøÁî®:√æ``` java√æ        √æ        //ÈªòËÆ§√æ        MProgressDialog.showProgress(this);√æ        //Ëá™ÂÆö‰πâÊñáÂ≠ó√æ        MProgressDialog.showProgress(this,""Ëá™ÂÆö‰πâÊñáÂ≠ó"");√æ        //‰∏çÈúÄË¶ÅÊñáÂ≠ó√æ        MProgressDialog.showProgress(this,"""");√æ        √æ        //Ëá™ÂÆö‰πâËÉåÊôØ√æ        MDialogConfig mDialogConfig = new MDialogConfig.Builder()√æ                 //ËÆæÁΩÆdialogÊúÄÂ∞èÂÆΩÂ∫¶ÂíåÊúÄÂ∞èÈ´òÂ∫¶√æ                 .setMinWidthAndHeight(50,50)√æ                 //ÂÖ®Â±èÊ®°Âºè√æ                 .isWindowFullscreen(true)√æ                 //ProgressÂ§ßÂ∞èÔºàÂÆΩÈ´òÔºâ√æ                 .setProgressSize(60)√æ                 //ÁÇπÂáªÂ§ñÈÉ®ÊòØÂê¶ÂèØ‰ª•ÂèñÊ∂à√æ                 .isCanceledOnTouchOutside(true)√æ                 //Áâ©ÁêÜËøîÂõûÈîÆÂèØ‰ª•ÂèñÊ∂à√æ                 .isCancelable(true)√æ                 //ÂÖ®Â±èËÉåÊôØÁ™ó‰ΩìÁöÑÈ¢úËâ≤√æ                 .setBackgroundWindowColor(getMyColor(R.color.colorDialogWindowBg))√æ                 //ViewËÉåÊôØÁöÑÈ¢úËâ≤√æ                 .setBackgroundViewColor(getMyColor(R.color.colorDialogViewBg))√æ                 //ViewËÉåÊôØÁöÑÂúÜËßí√æ                 .setCornerRadius(20)√æ                 //View ËæπÊ°ÜÁöÑÈ¢úËâ≤√æ                 .setStrokeColor(getMyColor(R.color.colorAccent))√æ                 //View ËæπÊ°ÜÁöÑÂÆΩÂ∫¶√æ                 .setStrokeWidth(2)√æ                 //Progress È¢úËâ≤√æ                 .setProgressColor(getMyColor(R.color.colorDialogProgressBarColor))√æ                 //Progress ÂÆΩÂ∫¶√æ                 .setProgressWidth(3)√æ                 //Progress ÂÜÖÂúàÈ¢úËâ≤√æ                 .setProgressRimColor(Color.YELLOW)√æ                 //Progress ÂÜÖÂúàÂÆΩÂ∫¶√æ                 .setProgressRimWidth(4)√æ                 //ÊñáÂ≠óÁöÑÈ¢úËâ≤√æ                 .setTextColor(getMyColor(R.color.colorDialogTextColor))√æ                 //ProgressBar È¢úËâ≤√æ                 .setProgressColor(Color.GREEN)√æ                 //dialogÂä®Áîª√æ                 .setAnimationID(R.style.animate_dialog_custom)√æ                 //ÊñáÂ≠óÁöÑÂ§ßÂ∞èÔºösp√æ                 .setTextSize(15)√æ                 //padding√æ                 .setPadding(40, 10, 40, 10)√æ                 //ÂÖ≥Èó≠ÁöÑÁõëÂê¨√æ                 .setOnDialogDismissListener(new OnDialogDismissListener() {√æ                     @Override√æ                     public void onDismiss() {√æ                         MToast.makeTextShort(mContext,""ÁõëÂê¨Âà∞‰∫ÜProgressDialogÂÖ≥Èó≠‰∫Ü"");√æ                     }√æ                 })√æ                 .build();√æ        MProgressDialog.showProgress(this,""Êï∞ÊçÆ‰∏ä‰º†‰∏≠..."",mDialogConfig);√æ√æ√æ```√æ√æ√æ### 2:MStatusDialog Áä∂ÊÄÅDialog‰ª£Á†Å‰ΩøÁî®:√æ``` java√æ√æ        //ÈªòËÆ§√æ        MStatusDialog mStatusDialog = new MStatusDialog(this);√æ        //ÊòæÁ§∫√æ        mStatusDialog.show(""‰øùÂ≠òÊàêÂäü"", mContext.getResources().getDrawable(R.drawable.mn_icon_dialog_ok));√æ        //ÊâãÂä®ÂèñÊ∂à√æ        mStatusDialog.dismiss();√æ        √æ        //Ëá™ÂÆö‰πâ√æ        MDialogConfig mDialogConfig = new MDialogConfig.Builder()√æ                        //ÂÖ®Â±èÊ®°Âºè√æ                        .isWindowFullscreen(true)√æ                        //ÂÖ®Â±èËÉåÊôØÁ™ó‰ΩìÁöÑÈ¢úËâ≤√æ                        .setBackgroundWindowColor(getMyColor(R.color.colorDialogWindowBg))√æ                        //ViewËÉåÊôØÁöÑÈ¢úËâ≤√æ                        .setBackgroundViewColor(getMyColor(R.color.colorDialogViewBg2))√æ                        //Â≠ó‰ΩìÁöÑÈ¢úËâ≤√æ                        .setTextColor(getMyColor(R.color.colorAccent))√æ                        //ViewËæπÊ°ÜÁöÑÈ¢úËâ≤√æ                        .setStrokeColor(getMyColor(R.color.white))√æ                        //ViewËæπÊ°ÜÁöÑÂÆΩÂ∫¶√æ                        .setStrokeWidth(2)√æ                        //ViewÂúÜËßíÂ§ßÂ∞è√æ                        .setCornerRadius(10)√æ                        //dialogÂä®Áîª√æ                        .setAnimationID(R.style.animate_dialog_custom)√æ                        //ÊñáÂ≠óÁöÑÂ§ßÂ∞èsp√æ                        .setTextSize(15)√æ                        //paddingdp√æ                        .setPadding(40, 10, 40, 10)√æ                        //ÂõæÁâáÁöÑÂÆΩÈ´òdp√æ                        .setImgWidthAndHeight(60, 60)√æ                        //ÂÖ≥Èó≠ÁöÑÁõëÂê¨√æ                        .setOnDialogDismissListener(new OnDialogDismissListener() {√æ                            @Override√æ                            public void onDismiss() {√æ                                MToast.makeTextShort(mContext,""ÁõëÂê¨Âà∞‰∫ÜMStatusDialogÂÖ≥Èó≠‰∫Ü"");√æ                            }√æ                        })√æ                        .build();√æ        new MStatusDialog(mContext,mDialogConfig).show(""Êèê‰∫§Êï∞ÊçÆÂ§±Ë¥•,ËØ∑ÈáçÊñ∞Â∞ùËØï!"", mContext.getResources().getDrawable(R.mipmap.ic_launcher), 1000);√æ√æ```√æ√æ### 3:MToast ‰ª£Á†Å‰ΩøÁî®:√æ``` java√æ√æ        MToastConfig config = new MToastConfig.Builder()√æ                //ËÆæÁΩÆÊòæÁ§∫ÁöÑ‰ΩçÁΩÆ√æ                .setGravity(MToastConfig.MToastGravity.CENTRE)√æ                //ÊñáÂ≠óÁöÑÈ¢úËâ≤√æ                .setTextColor(getMyColor(R.color.colorAccent))√æ                //ËÉåÊôØËâ≤√æ                .setBackgroundColor(getMyColor(R.color.colorDialogTest))√æ                //ËÉåÊôØÂúÜËßí√æ                .setBackgroundCornerRadius(10)√æ                //ËÉåÊôØËæπÊ°ÜÁöÑÈ¢úËâ≤√æ                .setBackgroundStrokeColor(Color.WHITE)√æ                //ËÉåÊôØËæπÊ°ÜÁöÑÂÆΩÂ∫¶√æ                .setBackgroundStrokeWidth(1)√æ                //ÊñáÂ≠óÁöÑÂ§ßÂ∞èÔºösp√æ                .setTextSize(15)√æ                //padding√æ                .setPadding(40, 10, 40, 10)√æ                //ÂõæÁâáÁöÑÂÆΩÈ´òdp√æ                .setImgWidthAndHeight(60, 60)√æ                .build();√æ√æ        //Â§öÁßçÊñπÊ≥ï√æ        MToast.makeTextShort(mContext, ""Toast"", config);√æ        MToast.makeTextShort(mContext, ""Toast"");√æ        √æ        //ÂèñÊ∂àToast√æ        MToast.cancleToast();√æ√æ```√æ√æ### 4:MProgressBarDialog ËøõÂ∫¶Êù°Dialog‰ª£Á†Å‰ΩøÁî®:√æ``` java√æ√æ        //Êñ∞Âª∫‰∏Ä‰∏™Dialog√æ        mProgressBarDialog = new MProgressBarDialog.Builder(mContext)√æ               //ÂÖ®Â±èÊ®°Âºè√æ               .isWindowFullscreen(true)√æ               .setStyle(MProgressBarDialog.MProgressBarDialogStyle_Circle)√æ               //ÂÖ®Â±èËÉåÊôØÁ™ó‰ΩìÁöÑÈ¢úËâ≤√æ               .setBackgroundWindowColor(getMyColor(R.color.colorDialogWindowBg))√æ               //ViewËÉåÊôØÁöÑÈ¢úËâ≤√æ               .setBackgroundViewColor(getMyColor(R.color.colorDialogViewBg2))√æ               //Â≠ó‰ΩìÁöÑÈ¢úËâ≤√æ               .setTextColor(getMyColor(R.color.colorAccent))√æ               //ViewËæπÊ°ÜÁöÑÈ¢úËâ≤√æ               .setStrokeColor(getMyColor(R.color.white))√æ               //ViewËæπÊ°ÜÁöÑÂÆΩÂ∫¶√æ               .setStrokeWidth(2)√æ               //ViewÂúÜËßíÂ§ßÂ∞è√æ               .setCornerRadius(10)√æ               //ProgressBarËÉåÊôØËâ≤√æ               .setProgressbarBackgroundColor(Color.BLUE)√æ               //ProgressBar È¢úËâ≤√æ               .setProgressColor(Color.GREEN)√æ               //ÂúÜÂΩ¢ÂÜÖÂúàÁöÑÂÆΩÂ∫¶√æ               .setCircleProgressBarWidth(4)√æ               //ÂúÜÂΩ¢Â§ñÂúàÁöÑÂÆΩÂ∫¶√æ               .setCircleProgressBarBackgroundWidth(4)√æ               //Ê∞¥Âπ≥ËøõÂ∫¶Êù°ProgressÂúÜËßí√æ               .setProgressCornerRadius(0)√æ               //Ê∞¥Âπ≥ËøõÂ∫¶Êù°ÁöÑÈ´òÂ∫¶√æ               .setHorizontalProgressBarHeight(10)√æ               //dialogÂä®Áîª√æ               .setAnimationID(R.style.animate_dialog_custom)√æ               .build();√æ       /**√æ        * ÊòæÁ§∫dialog√æ        *√æ        * @param progress       ÂΩìÂâçËøõÂ∫¶√æ        * @param secondProgress ‰∫åÁ∫ßËøõÂ∫¶√æ        * @param message        Ê∂àÊÅØ‰Ωì√æ        * @param animate        ÊòØÂê¶Âπ≥ÊªëËøáÂ∫¶Âä®Áîª√æ        */√æ        mMProgressDialog.showProgress(int progress,int secondProgress, String message, boolean animate);√æ√æ√æ```√æ√æ## ÁâàÊú¨ËÆ∞ÂΩïÔºö√æ    V2.0.0:√æ        1.‰øÆÂ§çÂä®Áîª‰∏çÂ±Ö‰∏≠ÈóÆÈ¢ò√æ        2.ÁõëÂê¨dialogÊ∂àÂ§±ÊñπÊ≥ï‰ºòÂåñ√æ        3.MProgressDialogÊ∑ªÂä†ÊúÄÂ∞èÂÆΩÂ∫¶ÂíåÊúÄÂ∞èÈ´òÂ∫¶ÁöÑËÆæÁΩÆ√æ        4.MProgressDialogÈªòËÆ§‰∏çÊòæÁ§∫ÊñáÂ≠ó√æ√æ    V1.1.9:√æ        1.ÂΩìËÆæÁΩÆÂ∫îÁî®ÁöÑthemeËÉåÊôØ‰∏∫ÈªëËâ≤ÂêéÔºåÂä†ËΩΩÊ°Ü‰ºöË¶ÜÁõñË¶ÜÁõñÂÖ®Â±è,ÊòØÂÖ®Â±èÂèòÈªë ÈóÆÈ¢ò‰ºòÂåñ√æ        2.MToastÊîØÊåÅÂºÇÊ≠•Á∫øÁ®ã√æ        3.ÂéªÊéâFragmentDialog√æ√æ√æ## ÊÑüË∞¢Ôºö√æ#### Ê∫êÁ†ÅÈáåÈù¢‰ΩøÁî®‰∫Ü‰∏ãÈù¢Â∫ì,Êîπ‰∫Ü‰∏™ÂêçÂ≠ó,‰ª•ÂÖçÂÜ≤Á™ÅÔºåÈùûÂ∏∏ÊÑüË∞¢!√æ#### [materialish-progress](https://github.com/pnikosis/materialish-progress)√æ#### [CircularProgressBar](https://github.com/lopspower/CircularProgressBar)√æ√æ√æ## Êé®Ëçê:√æName | Describe |√æ--- | --- |√æ[GankMM](https://github.com/maning0303/GankMM) | ÔºàMaterial Design & MVP & Retrofit + OKHttp & RecyclerView ...ÔºâGank.io AndroidÂÆ¢Êà∑Á´ØÔºöÊØèÂ§©‰∏ÄÂº†ÁæéÂ•≥ÂõæÁâáÔºå‰∏Ä‰∏™ËßÜÈ¢ëÁü≠ÁâáÔºåËã•Âπ≤AndroidÔºåiOSÁ≠âÁ®ãÂ∫èÂπ≤Ë¥ßÔºåÂë®‰∏ÄÂà∞Âë®‰∫îÊØèÂ§©Êõ¥Êñ∞ÔºåÊï∞ÊçÆÂÖ®ÈÉ®Áî± Âπ≤Ë¥ßÈõÜ‰∏≠Ëê• Êèê‰æõ,ÊåÅÁª≠Êõ¥Êñ∞„ÄÇ |√æ[MNUpdateAPK](https://github.com/maning0303/MNUpdateAPK) | Android APK ÁâàÊú¨Êõ¥Êñ∞ÁöÑ‰∏ãËΩΩÂíåÂÆâË£Ö,ÈÄÇÈÖç7.0Ôºå8.0,ÁÆÄÂçïÊñπ‰æø„ÄÇ |√æ[MNImageBrowser](https://github.com/maning0303/MNImageBrowser) | ‰∫§‰∫íÁâπÊïàÁöÑÂõæÁâáÊµèËßàÊ°ÜÊû∂,ÂæÆ‰ø°Âêë‰∏ãÊªëÂä®Âä®ÊÄÅÂÖ≥Èó≠ |√æ[MNCalendar](https://github.com/maning0303/MNCalendar) | ÁÆÄÂçïÁöÑÊó•ÂéÜÊéß‰ª∂ÁªÉ‰π†ÔºåÊ∞¥Âπ≥ÊñπÂêëÊó•ÂéÜÊîØÊåÅÊâãÂäøÊªëÂä®ÂàáÊç¢ÔºåË∑≥ËΩ¨Êúà‰ªΩÔºõÂûÇÁõ¥ÊñπÂêëÊó•ÂéÜÈÄâÂèñÂå∫Èó¥ËåÉÂõ¥„ÄÇ |√æ[MClearEditText](https://github.com/maning0303/MClearEditText) | Â∏¶ÊúâÂà†Èô§ÂäüËÉΩÁöÑEditText |√æ[MNCrashMonitor](https://github.com/maning0303/MNCrashMonitor) | DebugÁõëÂê¨Á®ãÂ∫èÂ¥©Ê∫ÉÊó•Âøó,Â±ïÁ§∫Â¥©Ê∫ÉÊó•ÂøóÂàóË°®ÔºåÊñπ‰æøËá™Â∑±Âπ≥Êó∂Ë∞ÉËØï„ÄÇ |√æ[MNProgressHUD](https://github.com/maning0303/MNProgressHUD) | MNProgressHUDÊòØÂØπÂ∏∏Áî®ÁöÑËá™ÂÆö‰πâÂºπÊ°ÜÂ∞ÅË£Ö,Âä†ËΩΩProgressDialog,Áä∂ÊÄÅÊòæÁ§∫ÁöÑStatusDialogÂíåËá™ÂÆö‰πâToast,ÊîØÊåÅËÉåÊôØÈ¢úËâ≤,ÂúÜËßí,ËæπÊ°ÜÂíåÊñáÂ≠óÁöÑËá™ÂÆö‰πâ„ÄÇ |√æ[MNXUtilsDB](https://github.com/maning0303/MNXUtilsDB) | xUtils3 Êï∞ÊçÆÂ∫ìÊ®°ÂùóÂçïÁã¨ÊäΩÂèñÂá∫Êù•ÔºåÊñπ‰æø‰ΩøÁî®„ÄÇ |√æ[MNVideoPlayer](https://github.com/maning0303/MNVideoPlayer) | SurfaceView + MediaPlayer ÂÆûÁé∞ÁöÑËßÜÈ¢ëÊí≠ÊîæÂô®ÔºåÊîØÊåÅÊ®™Á´ñÂ±èÂàáÊç¢ÔºåÊâãÂäøÂø´ËøõÂø´ÈÄÄ„ÄÅË∞ÉËäÇÈü≥ÈáèÔºå‰∫ÆÂ∫¶Á≠â„ÄÇ------‰ª£Á†ÅÁÆÄÂçïÔºåÊñ∞ÊâãÂèØ‰ª•Áúã‰∏ÄÁúã„ÄÇ |√æ[MNZXingCode](https://github.com/maning0303/MNZXingCode) | Âø´ÈÄüÈõÜÊàê‰∫åÁª¥Á†ÅÊâ´ÊèèÂíåÁîüÊàê‰∫åÁª¥Á†Å |√æ[MNChangeSkin](https://github.com/maning0303/MNChangeSkin) | AndroidÂ§úÈó¥Ê®°ÂºèÔºåÈÄöËøáThemeÂÆûÁé∞ |√æ[SwitcherView](https://github.com/maning0303/SwitcherView) | ÂûÇÁõ¥ÊªöÂä®ÁöÑÂπøÂëäÊ†èÊñáÂ≠óÂ±ïÁ§∫„ÄÇ |√æ[MNPasswordEditText](https://github.com/maning0303/MNPasswordEditText) | Á±ª‰ººÂæÆ‰ø°ÊîØ‰ªòÂÆùÁöÑÂØÜÁ†ÅËæìÂÖ•Ê°Ü„ÄÇ |√æ[MNSwipeToLoadDemo](https://github.com/maning0303/MNSwipeToLoadDemo) | Âà©Áî®SwipeToLoadLayoutÂÆûÁé∞ÁöÑÂêÑÁßç‰∏ãÊãâÂà∑Êñ∞ÊïàÊûúÔºàÈ•ø‰∫ÜÂêóÔºå‰∫¨‰∏úÔºåÁôæÂ∫¶Â§ñÂçñÔºåÁæéÂõ¢Â§ñÂçñÔºåÂ§©Áå´‰∏ãÊãâÂà∑Êñ∞Á≠âÔºâ„ÄÇ |"
realtim/mmb,80893,19,13,11,User,False,–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ú–∞—Ä—à-–±—Ä–æ—Å–∫–∞,,,9,Java,"{'': 1, 'md': 1}",1781,3,7,9,0,3056,True,41,260,0,0,1,23,0,0,14,1,2,9,546,3606,0,0,5,,7,,"–ü—Ä–æ–µ–∫—Ç –ø–æ—Å–≤—è—â–µ–Ω —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ú–∞—Ä—à-–ë—Ä–æ—Å–∫–∞ (–ú–ú–ë).  √æ–°—é–¥–∞ –≤—Ö–æ–¥—è—Ç —Å–∞–π—Ç –ú–ú–ë –∏ –≤—Å—ë, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å–±–æ—Ä–∞ –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.  √æ–°—é–¥–∞ –Ω–µ –≤—Ö–æ–¥—è—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –∏ –ø—Ä–æ—á–∏—Ö –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç—ã—Ö –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–≤–µ–¥–µ–Ω–∏–π.√æ√æ–û–ø–∏—Å–∞–Ω–∏–µ, –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–æ—á–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ [Wiki](https://github.com/realtim/mmb/wiki)."
cyhbyw/springBoot_atguigu,12866,209,13,199,User,False,Â∞öÁ°ÖË∞∑ SpringBoot ËßÜÈ¢ëÊïôÂ≠¶Ê∫êÁ†ÅÂ≠¶‰π†,,,31,Java,"{'': 1, 'pdf': 6, 'md': 2, 'pptx': 1, 'txt': 1}",29,2,0,1,0,815,True,0,0,0,0,1,2,1,2,9,0,1,2,246,0,0,0,39,,54,,# springBoot_atguigu√æÂ∞öÁ°ÖË∞∑ SpringBoot ËßÜÈ¢ëÊïôÂ≠¶Ê∫êÁ†ÅÂ≠¶‰π†
asksven/BetterBatteryStats,54586,421,42,141,User,False,An attempt to provide advanced battery stats for Android,,,15,Java,"{'': 3, 'md': 1, 'keystore-cipher': 2, 'gradle': 2, 'yml': 1, 'properties': 1, 'bat': 1}",245,15,142,8,0,1285,True,74,651,2,0,1,147,0,0,6,1,0,0,0,0,0,0,70,,87,,"*Build* [![CircleCI](https://circleci.com/gh/asksven/BetterBatteryStats/tree/master.svg?style=svg)](https://circleci.com/gh/asksven/BetterBatteryStats/tree/master)√æ√æ#License√æBetterBatteryStats is an open source project unter the terms of the Apache 2.0 License. The license does not apply to the use of the names ""BetterBatteryStats"" and ""Better Battery Stats"", nor to the icon / artwork created for BetterBatteryStats. √æ√æ# Build√æIn order to build (with gradle / Android Studio) following changes to the local project are required√æ√æ## HockeyApp√æThe environment variable `HOCKEYAPP_APP_ID` must be set to a valid value√æ√æ## Signing√æ√æThe signing config uses environment variables:√æ```√æ    signingConfigs {√æ        release {√æ            storeFile file(System.getenv(""KEYSTORE_RELEASE""))√æ            storePassword System.getenv(""KEYSTORE_PASSWORD"")√æ            keyAlias System.getenv(""KEY_ALIAS"")√æ            keyPassword System.getenv(""KEY_PASSWORD"")√æ        }√æ        debug {√æ            storeFile file(System.getenv(""KEYSTORE_DEBUG""))√æ        }√æ    }√æ```√æ√æ- `KEYSTORE_RELEASE` points to the release `.keystore` file√æ- `KEYSTORE_DEBUG` points to the debug `.keystore` file√æ- `KEY_ALIAS`  defines the alias name√æ- `KEY_PASSWORD` is the keystore password√æ√æ√æ √æ# Continuous Integration√æ√æThe continuous integration (in this example CircleCI) needs to have access to some private settings.√æ√æ## Google play publishing√æ√æ### Publishing profile√æThe encrypted file (`sa-google-play.json-cipher`) is located in `/app`, and referenced by the gradle build.√æ√æ See also https://github.com/Triple-T/gradle-play-publisher.√æ√æ### Deploy task√æ√æIn `circle.yml` we define that all the google play publishing (to beta) is triggered on tag `release-*`√æ√æ## Encrypt√æ√æ`openssl aes-256-cbc -e -in secret-env-plain -out secret-env-cipher -k $KEY`√æ√æSee also https://github.com/circleci/encrypted-files√æ√æ## Decrypt (on CircleCI, as defined in `circle.yml` and using an env-variable `KEY`)√æ√æ`openssl aes-256-cbc -d -in secret-file-cipher -out secret-file-plain -k $KEY`√æ√æ## The signing keys√æ√æThe environment variables `$KEYSTORE_RELEASE`, `$KEYSTORE_DEBUG`, `$KEY_ALIAS`, `$KEY_PASSWORD` and `$KEYSTORE_PASSWORD`must be set.√æ√æThere variables are set in `secret-env-plain` (not part of the project for obvious reasons).√æ√æIn order to run your own build create a file `secret-env-plain` and set the variables:√æ```√æexport KEYSTORE_PASSWORD=<your-keystore-pwd>√æexport KEY_PASSWORD=<your-key-pwd>√æexport KEY_ALIAS=<your-key-alias>√æexport KEYSTORE_DEBUG=<name-of-debug-keystore>√æexport KEYSTORE_RELEASE=<name-of-release-keystore>√æ```√æand then encrypt this file using `openssl aes-256-cbc -e -in secret-env-plain -out secret-env-cipher -k $KEY`√æ√æIn the piepline the decyption is done using the script `circleciscripts/decrypt_env_vars.sh` with the `$KEY` stored in circle-ci's env vars.√æ√æAs the signing keys are not in the github repo a script `circleciscripts/download_keystore.sh` does the job of downloading and decrypting the keys at build-time.√æFor that to happen following addition environment variables must be set:√æ- `$KEYSTORE_URI` a public URI from where the files can be downloaded using http√æ- `$KEY` the key to decrypt the keystores (same env var as for `google-services.json`)"
Flames13/filmbot,330,0,0,2,User,False,Filmbot,,,11,Java,"{'': 3, 'txt': 4, 'md': 1, 'xml': 1, 'csv': 1}",77,12,0,2,0,649,True,0,0,0,0,1,14,0,0,8,0,0,0,0,0,0,0,11,,0,wictory13/filmbot,# filmbot√æTelegram Film Database Bot
fanhua1994/FastVideoPlayer,14593,95,2,43,User,False,Âü∫‰∫éijkplayerÂºÄÂèë‰∏áËÉΩÊí≠ÊîæÂô®ÔºåÊîØÊåÅÁÇπÊí≠„ÄÅRTMPÁõ¥Êí≠Êí≠Êîæ„ÄÇ,,,13,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",31,1,7,0,0,895,True,3,1,0,0,0,0,0,0,8,0,0,0,0,0,0,0,18,,26,,"# FastVideoPlayer√æÂü∫‰∫éijkplayerÂºÄÂèë‰∏áËÉΩÊí≠ÊîæÂô®ÔºåÊîØÊåÅÁÇπÊí≠„ÄÅÁõ¥Êí≠Êí≠Êîæ„ÄÇ√æ√æ![](https://github.com/fanhua1994/FastVideoPlayer/blob/master/image/16CDF9C1CDBD0E54F934E532C8351A5B.jpg?raw=true)√æ![](https://github.com/fanhua1994/FastVideoPlayer/blob/master/image/B43F89B4D9B5AE374BB9AE8A966D2006.png?raw=true)√æ√æ√æ# Â¶Ç‰ΩïÂºïÁî®√æ```√æallprojects {√æ    repositories {√æ        ...√æ        maven { url 'https://jitpack.io' }√æ    }√æ}√æ```√æ```√ædependencies {√æ        compile 'com.github.fanhua1994:FastVideoPlayer:1.0.6'√æ}√æ```√æ√æ# demoÊºîÁ§∫√æAndroidMainist.xml√æ```√æ <activity android:name="".MainActivity""√æ    android:configChanges=""orientation|screenSize|keyboardHidden"">√æ</activity>√æ```√æ√æ```√æ<com.hengyi.fastvideoplayer.library.FastVideoPlayer√æ    android:id=""@+id/fastvideo_player""√æ    android:layout_width=""match_parent""√æ    android:layout_height=""200dp""></com.hengyi.fastvideoplayer.library.FastVideoPlayer>√æ```√æ√æ```√ævideoPlayer = findViewById(R.id.fastvideo_player);√ævideoPlayer.setLive(false);//ÊòØÁõ¥Êí≠ËøòÊòØÁÇπÊí≠  false‰∏∫ÁÇπÊí≠√ævideoPlayer.setScaleType(FastVideoPlayer.SCALETYPE_FITXY);√ævideoPlayer.setTitle(""TiDBÂÆ£‰º†ËßÜÈ¢ë"");//ËÆæÁΩÆÊ†áÈ¢ò√ævideoPlayer.setUrl(""https://download.pingcap.com/videos/pingcap-intro-converted.mp4"");√ævideoPlayer.play();//Ëá™Âä®Êí≠Êîæ√æ//Â∞ÅÈù¢ÂõæÂä†ËΩΩ√æGlide.with(this).load(""https://download.pingcap.com/images/video-poster.jpg"").into(videoPlayer.getCoverImage());√æ```√æÂ±èÂπïÁõëÂê¨√æ```√ævideoPlayer.setScreenListener(new FastVideoPlayerScreenListener() {√æ    @Override√æ    public void onFullScreen() {√æ        Toast.makeText(MainActivity.this,""ËøõÂÖ•ÂÖ®Â±è"",Toast.LENGTH_SHORT).show();√æ    }√æ√æ    @Override√æ    public void onSmallScreen() {√æ        Toast.makeText(MainActivity.this,""ËøõÂÖ•Â∞èÂ±è"",Toast.LENGTH_SHORT).show();√æ    }√æ});√æ```√æ```√æ/**√æ * ‰∏ãÈù¢ÁöÑËøôÂá†‰∏™ActivityÁöÑÁîüÂëΩÁä∂ÊÄÅÂæàÈáçË¶Å√æ */√æ@Override√æprotected void onPause() {√æ    super.onPause();√æ    if (videoPlayer != null) {√æ        videoPlayer.onPause();√æ    }√æ}√æ√æ@Override√æprotected void onResume() {√æ    super.onResume();√æ    if (videoPlayer != null) {√æ        videoPlayer.onResume();√æ    }√æ}√æ√æ@Override√æprotected void onDestroy() {√æ    super.onDestroy();√æ    if (videoPlayer != null) {√æ        videoPlayer.onDestroy();√æ    }√æ}√æ√æ@Override√æpublic void onConfigurationChanged(Configuration newConfig) {√æ    super.onConfigurationChanged(newConfig);√æ    if (videoPlayer != null) {√æ        videoPlayer.onConfigurationChanged(newConfig);√æ    }√æ}√æ√æ@Override√æpublic void onBackPressed() {√æ    if (videoPlayer != null && videoPlayer.onBackPressed()) {√æ        return;√æ    }√æ    super.onBackPressed();√æ}√æ```"
czm1290433700/fileManagement,17806,1,0,3,User,False,Âü∫‰∫éspringmvcÂíåHibernateÁöÑÂ≠¶ÁîüÊñá‰ª∂ÁÆ°ÁêÜÁ≥ªÁªü,,,5,Java,"{'iml': 1, 'xml': 1}",9,1,0,1,0,462,True,13,0,0,0,0,5,0,0,8,0,0,0,0,0,0,0,10,,1,,
AOSiP/platform_packages_apps_Contacts,95303,1,1,5,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",13,Java,"{'mk': 2, 'xml': 1, '': 3, 'flags': 1}",21939,6,0,75,0,4262,True,0,0,0,0,0,0,0,0,7,0,3,4,101,1124,0,0,204,2,,,
ceaseless-prayer/CeaselessAndroid,18538,8,12,2,Organization,False,This is the Android application code for Ceaseless. ,http://ceaselessprayer.com/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",13,Java,"{'': 3, 'yml': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",596,20,0,11,0,1729,True,29,48,0,0,1,64,0,0,10,3,1,1,1,1,0,0,11,1,,,"# Ceaseless for Android [![Build Status](https://travis-ci.org/ceaseless-prayer/CeaselessAndroid.svg?branch=master)](https://travis-ci.org/ceaseless-prayer/CeaselessAndroid)√æThe Ceaseless Prayer app for Android will be built natively using material design.√æ√æ# Download on the Play Store√æ√æYou can download the app on the [Play Store](https://play.google.com/store/apps/details?id=org.theotech.ceaselessandroid)√æ√æ# Translating the app√æ√æIn order to translate the app it's not necessary to install anything on your computer - you can just use the translation platform [lokalise](https://app.lokalise.com/project/338603745bd8cae0042d51.84066670/) and we'll take care of the rest.√æ√æ# Android Setup√æ√æYou may want to install [Android Studio](http://developer.android.com/tools/studio/index.html).√æ√æ# Working on the app√æ√æComing soon.√æ√æ# Running in the emulator√æ√æMake sure you have the tools directory for the Android SDK in your path, e.g. `/Users/your-user-name/Library/Android/sdk/tools`.√æ√æ* Run the Android Virutal Device Manager: `android avd`√æ* Run your Android virtual device (you should have created one via Android Setup directions linked above)√æ√æ# Releasing√æ√æTo build a release APK, you'll need the release.keystore from https://bitbucket.org/chrislim/ceaseless-keys. From there, using Android Studio go to: Build -> Generate Signed APK... to start the process. The keystore is protected by a password so you'll need that too."
lujiang-wed/wed-job,5331,163,12,41,User,False,wed-jobÊòØÂü∫‰∫éTBScheduleÂÆòÊñπ3.2.18ÁâàÊú¨ÁöÑÈáçÁΩÆÁâà„ÄÇ‰∏Ä‰∏™ËΩªÈáèÁ∫ßÂàÜÂ∏ÉÂºè‰ªªÂä°Ë∞ÉÂ∫¶Ê°ÜÊû∂ÔºåÁõÆÂâçÊåÅÁª≠Êõ¥Êñ∞‰∏≠ÔºåÂñúÊ¨¢ÁöÑÂêåÂ≠¶Ê¨¢ËøéÂÖ≥Ê≥®^_^,http://www.lujiang.io/wed-job,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",5,Java,"{'': 2, 'md': 1, 'xml': 1}",47,8,2,1,3,928,True,1,9,0,0,0,13,0,0,8,0,0,0,0,0,0,0,17,,5,,"# wed-job√æ√æ## tbschedule-wedÊ≠£ÂºèÊõ¥Âêç‰∏∫wed-jobÂπ∂ÂèëÂ∏ÉÁ¨¨‰∏Ä‰∏™Ê≠£ÂºèÁâà ##√æ√æ[![Gitter](https://badges.gitter.im/wednesday-lj/wed-job.svg)](https://gitter.im/wednesday-lj/wed-job?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)   [![LICENSE](https://img.shields.io/badge/License-GPLv3-blue)](http://www.gnu.org/licenses/gpl-3.0-standalone.html)  [![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://github.com/996icu/996.ICU/blob/master/LICENSE)√æ√æ√æÂü∫‰∫éTBScheduleÂÆòÊñπ3.2.18ÁöÑÈáçÁΩÆÁâà„ÄÇTBScheduleÂÖ∑ÊúâÊ°ÜÊû∂ËΩª„ÄÅ0ÂÖ•‰æµ„ÄÅÊïàÁéáÈ´òÔºàÈ´òËøáelastic-jobÂíåxxl-jobÔºâÁ≠âËØ∏Â§öÁâπÁÇπÔºåÊó†Â•àÂÆòÊñπ‰∫é3.3.3.2ÁâàÊú¨ÂêéÂÅúÊ≠¢‰∫ÜÂçáÁ∫ß‰∏éBUG‰øÆÂ§ç„ÄÇÂ¶ÇÊ≠§Â•ΩÁöÑÂàÜÂ∏ÉÂºè‰ªªÂä°Ë∞ÉÂ∫¶Ê°ÜÊû∂ÂºÉ‰πãÂèØÊÉúÔºåÊâÄ‰ª•Â∞±ËÆ©‰ΩúËÄÖÊù•Êç°‰∏™‰æøÂÆúÂêßÔºàÂÆòÊñπÁâàÊâÄÊúâÂú∞ÂùÄÂùáÂ∑≤‰∏ãÁ∫øÔºå‰ΩúËÄÖÊâæ‰∏çÂà∞ÂéüÂßãÂºÄÊ∫êÂçèËÆÆÊïÖ‰ΩøÁî®Apache 2.0‰ª•Á§∫Â∞äÈáçÔºâ„ÄÇ√æ√æÈáçÁΩÆÁâà‰∏ªË¶ÅÂú®ÂÆòÊñπÂéüÁâàÁöÑÂü∫Á°Ä‰∏ä‰ºòÂåñ‰∫Ü‰ª•‰∏ãÂá†ÁÇπÔºö √æ>√æ1. ‰ªªÂä°È°πÁä∂ÊÄÅÁÆ°ÁêÜÂÖ®ÈÉ®Êîπ‰∏∫È°∫Â∫èÊìç‰ΩúÔºåÁâ∫Áâ≤‰∏ÄÂÆöÁöÑÂπ∂ÂèëÊïàËÉΩÊèêÂçáÁ®≥ÂÆöÊÄß √æ2. Ëß£ÂÜ≥Âú®‰ª•ÂæÄÁöÑÂÆûË∑µ‰ΩøÁî®‰∏≠ÔºàÂ§ßÈáèjobÂÖ±Áî®‰∏Ä‰∏™Ë∞ÉÂ∫¶‰∏≠ÂøÉÂàájobÊâßË°åÈ¢ëÁπÅÂú∫ÊôØÔºâÂÆòÊñπÁâàÂÅ∂Â∞îÂá∫Áé∞‰ªªÂä°‰∏çËÉΩÊ≠£Á°ÆÂÅúÊ≠¢‰∏éÊ≥®ÈîÄÔºåÈÄ†Êàê‰ªªÂä°È°πÊ≠ªÂæ™ÁéØÊâßË°åÔºåCPUÊª°Ë¥üËΩΩ‰∏î‰∫ßÁîüÂ§ßÈáèËÑèÊó•ÂøóÁöÑÈóÆÈ¢òÔºõ√æ3. ‰ºòÂåñÂú®ZooKeeperÈõÜÁæ§‰∏çÁ®≥ÂÆöÊó∂ÔºåÁ≠ñÁï•‰∏é‰ªªÂä°ÁöÑÊ≥®ÂÜå‰∏éÂèçÊ≥®ÂÜå√æ√æ√æ√æ### Áî®Êà∑ÊâãÂÜå√æÂü∫Á°ÄÁî®Ê≥ï‰∏éÂÆòÊñπÁâà‰∏ÄËá¥ÔºåÊñ∞ÊâãÂèØ‰ª•ÂèÇËÄÉÔºöhttps://my.oschina.net/wednesday/√æ√æ### ÊûÑÂª∫√æ    git clone https://github.com/hungki/wed-job√æ mvn clean package√æ√æ**RELEASE NOTE**√æ√æ√æJul 17 2019-1.0.1_RELEASE√æ√æ1. mavenÂùêÊ†áÂèòÊõ¥√æ```√æ<dependency>√æ    <groupId>com.wednesday</groupId>√æ    <artifactId>wed-job</artifactId>√æ    <version>1.0.1</version>√æ</dependency>√æ```√æ2. ‰øÆÂ§çÂõ†‰ΩøÁî®TimerÁ±ªËá™Ë∫´ËØØÂ∑ÆBUGÂú®È´òÈ¢ëSLEEPÊ®°Âºè‰∏ãË∞ÉÁî®‰ªªÂä°ÔºåÂΩìËØØÂ∑ÆÊó∂Èó¥Á¥ØÁßØË∂ÖËøáSLEEPÊó∂Èó¥Êó∂‰ªªÂä°ÂèòÊàêÊó†ÈôêÊâßË°åÁöÑÈóÆÈ¢òÔºà‰ΩøÁî®ÁöÑScheduledThreadPoolExecutord‰ª£ÊõøÔºâÔºõ√æ3. Â∞ÜÂéüÁîüZooKeeper api ÊõøÊç¢‰∏∫CuratorFramework‰ª•‰øÆÂ§çÂõ†ÂÆòÊñπÊúÄÂêéÁâàÊú¨zkÈáçËøûÊú∫Âà∂‰∏çÂÅ•ÂÖ®ÂºïËµ∑ÁöÑ‰ªªÂä°ÊâßË°åserverÂÅáÊ≠ªÊó†‰ªª‰ΩïÊó•ÂøóËæìÂá∫ÁöÑÈóÆÈ¢òÔºõ√æ√æ---√æ√æFeb 28 2019-1.0.1_GAÔºö√æ√æ1. ‰øÆÂ§çSleepÊó∂Èó¥Áü≠(ex:500ms)‰∏ãÔºå‰ΩøÁî®TimerÁ±ªBUGÂØºËá¥TaskÂÅúÊëÜÁöÑÈóÆÈ¢ò√æ2. ‰ΩøÁî®CuratorFramework‰ª£ÊõøÂÆòÊñπZooKeeper APIÂ∑≤Ëé∑ÂæóÊõ¥Â•ΩÁöÑÈìæÊé•Á®≥ÂÆöÊÄßÂ∑≤ÁªèÈáçËøûÊú∫Âà∂√æ3. Êõ¥Êñ∞JavaÊîØÊåÅÂà∞[1.7,1.8)√æ4. Êï¥ÁêÜÈ°πÁõÆÁªìÊûÑ√æ√æ---√æ√æNov 5 2018-1.0.0Ôºö√æ√æ1. jobÂÆûÁé∞Âô®ËøΩÂä†pageNumÂèÇÊï∞ÔºàÊ†πÊçÆeachFetchDataNumÂíåFetchCountËÆ°ÁÆóÂæóÂá∫Ôºâ√æ2. ‰øÆËÆ¢ÊñáÊ°£√æ3. ÂèòÊõ¥ËΩØ‰ª∂ÂêçÂèäÁâàÊú¨Âè∑√æ√æ**TODO**√æ√æ1. modify:ËÆ°ÂàíÊñ∞Â¢ûÂçïÊ¨°ÊâßË°åÊìç‰Ωú‰ª•Êõø‰ª£startrunÊ†áËÆ∞ÔºåÈÅøÂÖçÊüê‰∫õÊÉÖÂÜµ‰∏ãËÆ§‰∏∫ÁñèÂøΩÂØºËá¥‰ªªÂä°Â§öÊâßË°åÊï∞Ê¨°ÔºàÊØè‰∏ÄÊ¨°ÊöÇÂÅúÊÅ¢Â§çstartrunÈÉΩÁîüÊïàÔºâÔºõ√æ2. add:ËÆ°ÂàíÈáçÊûÑwed-job-adminÔºåÂõ†ËÉΩÂäõÊúâÈôêÊãüÈááÁî®mvcÊõøÊç¢jsp‰∏∫È°πÁõÆÊèê‰æõÊõ¥Áõ¥ËßÇ‰æøÊç∑ÁöÑË∞ÉÂºèËÉΩÂäõÔºõ√æ3. feature:Êèê‰æõÊï∞ÊçÆÂ∫ìÊ≥®ÂÜå‰∏≠ÂøÉÁöÑÂπ∂Ë°åÁâàÊú¨ÔºåÂèØËßÜÂåñÊõ¥Âº∫ÔºåÊïàÁéá‰ºöÊØîÁõÆÂâçÁâàÊú¨‰Ωé‰∏Ä‰∫õ‰ΩÜÊòØËÉΩÈÅøÂÖçZooKeeperÂØπÁΩëÁªúÁöÑÈ´ò‰æùËµñÔºåÊÄßËÉΩ‰∏éÁ®≥ÂÆöÁöÑÂπ≥Ë°°‰∫§ÁªôÁî®Êà∑ÈÄâÊã©„ÄÇ√æ4. feature:Êèê‰æõ‰æøÊç∑ÁöÑÂ≠ê‰ªªÂä°ÂäüËÉΩÔºåÁõÆÂâçÁâàÊú¨Â≠ê‰ªªÂä°ÈúÄË¶ÅÂ§ßÈáè‰ª£Á†ÅÂÆûÁé∞‰∏î‰∏çÂÖ∑Â§áÂèØËßÜÂåñËÉΩÂäõÔºå‰ΩÜÊòØÊ≤°Êúâ‰ªªÂä°ÁºñÊéíÊÄé‰πàÂèàÂ•ΩÊÑèÊÄùÊàê‰∏∫‰∏Ä‰∏™ÂÆåÊï¥ÁöÑ‰ªªÂä°Ë∞ÉÂ∫¶‰∏≠ÂøÉÂë¢Ôºü"
JavaMoney/jsr354-ri-bp,2058,8,9,13,Organization,False,Backport of the JSR 354 RI compatible with Java prior to SE8.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 1, 'yml': 1, 'txt': 1, 'md': 1, 'bnd': 1, 'xml': 4, 'sh': 1}",223,5,5,7,6,1930,True,1,26,0,0,0,30,0,0,12,2,1,11,6502,6516,18,0,21,16,,,JavaMoney Moneta Reference Implementation for Java 7√æ====================================================√æ[![Build Status](https://api.travis-ci.org/JavaMoney/jsr354-ri-bp.png?branch=master)](https://travis-ci.org/JavaMoney/jsr354-ri-bp) [![License](http://img.shields.io/badge/license-Apache2-red.svg)](http://opensource.org/licenses/apache-2.0)√æ[![Stability: Maintenance](https://masterminds.github.io/stability/maintenance.svg)](https://masterminds.github.io/stability/maintenance.html)√æ√æThis repository contains the Java 7 compatible Moneta reference implementation.√æ√æThis module is licenced under the the [Apache 2 Licence](https://www.apache.org/licenses/LICENSE-2.0.html).√æ√æRelease Notes√æ-------------√æ√æ* **[1.0](https://github.com/JavaMoney/jsr354-ri-bp/releases/tag/1.0)** Initial revision along the API.√æ* **[1.1](https://github.com/JavaMoney/jsr354-ri-bp/releases/tag/1.1)** First Patch release.√æ* **[1.2](https://github.com/JavaMoney/jsr354-ri-bp/releases/tag/1.2)** Minor Patch release.√æ* **[1.3](https://github.com/JavaMoney/jsr354-ri-bp/releases/tag/1.3)** Patch release.√æ* **[1.4](https://github.com/JavaMoney/jsr354-ri-bp/releases/tag/1.4)** Backport of Maintenance Release 1.√æ√æ[![Built with Maven](http://maven.apache.org/images/logos/maven-feather.png)](http://maven.org/)
martinpaljak/GlobalPlatformPro,20182,370,54,137,User,False,Manage applets and keys on JavaCard-s like a pro (via command line or from your Java project),https://javacard.pro/globalplatform/,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",15,Java,"{'': 4, 'md': 2, 'pro': 1, 'cmd': 1, 'xml': 2}",652,1,40,18,6,3960,True,7,137,1,9,0,81,0,29,10,1,5,60,2854,3212,4,0,32,,298,,"[![Build status](https://github.com/martinpaljak/globalplatformpro/workflows/Continuous%20Integration/badge.svg?branch=master)](https://github.com/martinpaljak/globalplatformpro/actions)√æ[![LGPL-3.0 licensed](https://img.shields.io/badge/license-LGPL-blue.svg)](https://github.com/martinpaljak/GlobalPlatformPro/blob/master/LICENSE) √æ[![LGTM grade](https://img.shields.io/lgtm/grade/java/github/martinpaljak/GlobalPlatformPro)](https://lgtm.com/projects/g/martinpaljak/GlobalPlatformPro/context:java)√æ√æ[![Latest release](https://img.shields.io/github/release/martinpaljak/GlobalPlatformPro.svg)](https://github.com/martinpaljak/GlobalPlatformPro/releases/latest)√æ[![Maven version](https://img.shields.io/maven-metadata/v?label=javacard.pro%20version&metadataUrl=https%3A%2F%2Fjavacard.pro%2Fmaven%2Fcom%2Fgithub%2Fmartinpaljak%2Fglobalplatformpro%2Fmaven-metadata.xml)](https://gist.github.com/martinpaljak/c77d11d671260e24eef6c39123345cae)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.martinpaljak/globalplatformpro/badge.svg)](https://mvnrepository.com/artifact/com.github.martinpaljak/globalplatformpro)√æ√æ# GlobalPlatformPro√æ_&nbsp;&nbsp; from [JavaCard.pro](https://javacard.pro)_√æ√æLoad and manage applets on compatible JavaCards from command line or from your Java project with a [Do What I Mean](http://en.wikipedia.org/wiki/DWIM) approach ([testimonials](./docs/Testimonials.md)).√æ√æ> Provides an **easy to use** and **high level** interface that most of the time **JustWorks<sup>(TM)</sup>**, is **flexible** and **[100% open source](#license)**!√æ√æBuilding JavaCard applets is equally pleasing with [ant-javacard](https://github.com/martinpaljak/ant-javacard)√æ#### Jump to ...√æ* [Download](#get-it-now)√æ* [Usage](#usage)√æ* [Supported cards](#supported-cards)√æ* [Contact & support](#contact)√æ* [Similar projects](#similar-projects)√æ* [About & legal](#about)√æ√æ√æ### Get it now!√æ* Download latest pre-built .JAR or .EXE from [release area](https://github.com/martinpaljak/GlobalPlatformPro/releases)√æ* Or [build it yourself](https://github.com/martinpaljak/GlobalPlatformPro/wiki/Building), it is really easy:√æ√æ```shell√ægit clone https://github.com/martinpaljak/GlobalPlatformPro√æcd GlobalPlatformPro√æ./mvnw package√æ```√æ√æ## NEWS√æ * SCP03 support in [latest version](https://github.com/martinpaljak/GlobalPlatformPro/releases)√æ * [JavaCard Buyer's Guide of 2018](https://github.com/martinpaljak/GlobalPlatformPro/tree/master/docs/JavaCardBuyersGuide)√æ√æ### Usage√æ√æ*Beware: both command line and Java API are subject to change without notice. Check back often.*√æ√æ#### Warning about correct keying√æ√æCommand line samples assume default test keys of `40..4F`. If you need a custom key, specify it with `-key` (you can give separate keyset components with `-key-mac`, `-key-enc` and `-key-kek`. You need to know the details or ask your card provider. Some cards require key diversification with `-emv` or `-visa2` (ask your vendor if unsure). A Key Check Value can be given with `-kcv` option.√æ√æ#### Generic information√æ√æ * Show some basic information about a card (failsafe):√æ√æ       java -jar gp.jar -info√æ√æ   * On Windows just replace `java -jar gp.jar` with `gp.exe` like this:√æ√æ         gp.exe -info√æ√æ   * On Linux it is easier to add an alias to the shell like this:√æ√æ         alias gp=""java -jar $PWD/gp.jar""√æ         # Now you can avoid typing `java -jar` and `gp` works from any folder√æ         gp -h√æ√æ#### List / install / delete applets√æ> Please consult the help output for options that are not described here√æ√æ * List applets (this and following commands open the secure channel and thus can brick your card with wrong keys!):√æ√æ       gp -list # or gp -l√æ√æ   How to interpret the output:√æ    * All AID-s of on-card objects are listed, starting with Issuer Security Domain (`ISD`)√æ    * Object's type, lifecycle state and privileges are listed below the `AID` line√æ    * Applications have type `App` and a state (like `SELECTABLE`) and privileges (like `Default selected`)√æ    * Executable Modules (type `ExM`, representing Java packages) are listed together with applets in them (which can be initiated with `--create`)√æ    * Security Domains have type `SeD`√æ√æ * Delete current default applet's package and all instances:√æ√æ       gp -delete -default√æ√æ * Delete package `D27600012401` and all applets from it:√æ√æ       gp -delete D27600012401√æ√æ * Install `applet.cap` as default applet (with AID information from the CAP):√æ√æ       gp -install applet.cap -default√æ√æ * Install `applet.cap` (with AID information from the CAP):√æ√æ       gp -install applet.cap√æ√æ * Unistall `applet.cap` (with AID information from the CAP):√æ√æ       gp -uninstall applet.cap√æ√æ * Force installation of `applet.cap`, deleting anything that's necessary, with AID information from the CAP:√æ√æ       gp -f -install applet.cap√æ√æ * Create new instance of applet `D2760001240102000000000000000000` from package `D27600012401` with AID `D2760001240102000000000272950000`:√æ√æ       gp -package D27600012401 -applet D2760001240102000000000000000000 -create D2760001240102000000000272950000√æ√æ * Same as previous, but takes the package/applet AID-s from CAP file and makes the new instance default selected:√æ√æ       gp -cap OpenPGPApplet.cap -create D2760001240102000000000272950000 -default√æ√æ##### Installation options√æ * `-default` - makes the applet default selected√æ * `-terminate` - gives card lock and card terminate privileges to the applet√æ * `-params <hex>` - installation parameters for applet√æ√æ#### Lock / unlock usage√æ√æ * Set `010B0371D78377B801F2D62AFC671D95` key to a card with default `40..4F` keys:√æ√æ       gp -lock 010B0371D78377B801F2D62AFC671D95√æ√æ * Set default `40..4F` keys to card that was previously locked with key `010B0371D78377B801F2D62AFC671D95`:√æ√æ       gp -key 010B0371D78377B801F2D62AFC671D95 -unlock√æ√æ * Set the default `40..4F` keys to a card that uses EMV diversification (like G&D):√æ√æ       gp -emv -unlock√æ√æ    \* note that you will have to use `--relax` option after this operation to get rid of the warning about probably needed diversification, which is not true any more.√æ√æ * Set the default `40..4F` keys to a card that uses VISA2 diversification with the well-known mother key on a Gemalto card:√æ√æ       gp -visa2 -key 47454D5850524553534F53414D504C45 -unlock -mode clr√æ√æ√æ#### Debugging options√æ√æ * Show APDU-s sent to the card:√æ√æ   add `-debug` or `-d` to your command√æ√æ * Be more verbose about decisions and conditions:√æ√æ   add `-verbose` or `-v` to your command√æ√æ * Don't use MAC on commands (plain GlobalPlatform syntax):√æ√æ   add `-mode clr` to your command (not supported on all cards)√æ√æ * Show all options recognized by `gp` utility:√æ√æ   add `-help` or `-h` or `--help` to your `gp` command√æ√æ### Usage from Java &nbsp; [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.martinpaljak/globalplatformpro/badge.svg)](https://mvnrepository.com/artifact/com.github.martinpaljak/globalplatformpro)√æ√æInclude the dependency:√æ√æ```xml√æ<!-- https://mvnrepository.com/artifact/com.github.martinpaljak/globalplatformpro -->√æ<dependency>√æ    <groupId>com.github.martinpaljak</groupId>√æ    <artifactId>globalplatformpro</artifactId>√æ    <version>0.3.10-rc6</version>√æ</dependency>√æ```√æ√æ * For now consult the [command line utility source code](https://github.com/martinpaljak/GlobalPlatformPro/blob/master/src/pro/javacard/gp/GPTool.java)√æ * Rudimentary [Javadoc](http://martinpaljak.github.io/GlobalPlatformPro/)√æ * General rules:√æ   * Expect `RuntimeException`-s when things go unexpectedly wrong√æ   * `CardException`-s when link layer fails√æ   * `GPException`-s when protocol layer fails√æ√æ### Supported cards√æ * **NEW!** [JavaCard Buyer's Guide of 2018](https://github.com/martinpaljak/GlobalPlatformPro/tree/master/docs/JavaCardBuyersGuide)√æ * See [TestedCards](https://github.com/martinpaljak/GlobalPlatformPro/tree/master/docs/TestedCards)√æ * Generally speaking any modern JavaCard that speaks GlobalPlatform 2.1.1+√æ * Available cards from all major vendors have been tested for basic compatibility: [Athena](http://www.athena-scs.com/), [Gemalto](http://www.gemalto.com/), [Giesecke & Devrient](http://www.gi-de.com/), [Infineon](http://www.infineon.com/), [NXP (JCOP)](http://www.nxp.com/), [Morpho](http://www.morpho.com/), [Oberthur](http://www.oberthur.com/)√æ   * If you are a smart card vendor please do *[get in touch](#contact)* for clarification and better support!√æ√æ### History√æ√æThe ancestor of this code is GPJ (Global Platform for SmartCardIO) which is (still) available from http://gpj.sourceforge.net. I started the project because I felt that messing with cryptic script files was not nice and I wanted to have a simple, open source, usable and native-to-the-rest-of-development-environment (Java) toolchain.√æ√æ√æ### Credits (from GPJ):√æ*  Wojciech Mostowski <woj@cs.ru.nl>,√æ*  Francois Kooman <F.Kooman@student.science.ru.nl>√æ*  Martijn Oostdijk <martijn.oostdijk@gmail.com>√æ*  Martin Paljak <martin@martinpaljak.net>√æ*  Hendrik Tews√æ*  Dusan Kovacevic√æ√æ### Similar projects√æ * gpj (the grandparent) - http://gpj.sf.net (LGPL)√æ   * written in Java√æ   * continued as GlobalPlatformPro√æ   * harder to use from the command line√æ   * no new features or standards√æ * GPShell + globalplatform library - http://sourceforge.net/projects/globalplatform/ (LGPL)√æ   * written in C√æ   * often referred to as the de facto open source GlobalPlatform implementation√æ   * several components need to be compiled and installed before usage√æ   * requires more complex ""script files"" and does not provide a direct command line utility√æ * jcManager - http://www.brokenmill.com/2010/03/java-secure-card-manager/ (LGPL)√æ   * written in Java√æ   * has a basic GUI√æ   * old and not maintained√æ * gpjNG - https://github.com/SimplyTapp/gpjNG (LGPL)√æ   * fork of gpj with minor additions, mostly a ""script mode"" that makes it similar to GPShell√æ * Ruby smartcard module - http://smartcard.rubyforge.org/classes/Smartcard/Gp/GpCardMixin.html (MIT)√æ   * written in Ruby√æ   * does not seem to expose all functionality (key diversification, key change etc)√æ   * no command line utility√æ * JGPShell - https://sourceforge.net/projects/jgpshell/ (GPL2)√æ   * written in Java√æ   * GPShell-style scripting goal√æ   * not really usable and also abandoned√æ * OPAL - https://bitbucket.org/ssd/opal (CeCILL, GPLv2 compatible)√æ   * written in Java√æ   * claims to have SCP03 support (but no tested cards)√æ   * looks ""heavy"" and over-engineered√æ   * smoke tests give exceptions and doesn't work on OSX nor Debian.√æ * gpcomm - https://code.google.com/p/gpcomm/√æ   * written in Java√æ   * incomplete and abandoned√æ * globalplatform.net - https://github.com/sepulo/globalplatform.net√æ   * written in c#√æ   * unclear license (missing)√æ   * only supports SCP01 and SCP02√æ * GlobalPlatform.NET - https://github.com/jamesharling/GlobalPlatform.NET (GPLv3)√æ   * wirtten in c#√æ   * only supports SCP02√æ   * fluent interface√æ * asterix - https://github.com/suma12/asterix (LGPL 2.1)√æ   * written in Python√æ   * SCP02, SCP03√æ * LuaGP - https://github.com/bondhan/LuaGP√æ   * written in Lua√æ   * unclear license (missing)√æ * JCOP tools, RADIII, JCardManager4, JLoad, PyApduTool etc√æ   * not publicly available cross-platform open source projects and thus not suitable for this comparision√æ√æ## Design principles√æ * focus on real life and practical daily use cases√æ * KISS, YAGNI, DWIM, no-NIH√æ * APDU-chat over anything that extends `CardChannel` to (most probably real) tokens√æ * thin and self-contained, re-usable, easy to integrate√æ * easily readable, auditable and secure codebase (less is more)√æ√æ## About√æThe promise of GlobalPlatformPro is similar to OpenSSL:√æ√æ> Why buy a smart card **software kit as a black box** when you can get an **open one for free**?√æ√æIn regard to GlobalPlatform, the goal is to make simple operations like installing and removing applets and locking the card with new keys as easy as next-next-done - you don't have to know the whole Global Platform specification by heart for that or buy a piece of proprietary software for a few hundred euros! For all those features that are not described in the GlobalPlatform specification that actually make your card work... you still have to use those proprietary commands, but OpenKMS GlobalPlatformPro toolkit's flexibility (and its license) should allow you to do that as well.√æ√æ### License√æ√æ * [LGPL-3.0](https://github.com/martinpaljak/GlobalPlatformPro/blob/master/LICENSE) for derived code and MIT/LGPL3 for original code.√æ√æ#### Included/used open source projects√æ√æ * [BouncyCastle](http://pholser.github.io/jopt-simple/) for OID parsing and NIST SP 800-108/NIST SP 800-38B (MIT)√æ * [JOpt Simple](http://pholser.github.io/jopt-simple/) for parsing command line (MIT)√æ * [Launch4j](http://launch4j.sourceforge.net/) for generating the .exe (BSD/MIT)√æ * [apdu4j](https://github.com/martinpaljak/apdu4j) for APDU level PC/SC access/logging/replaying (MIT)√æ * [ber-tlv](https://github.com/evsinev/ber-tlv) for tag parsing (Apache)√æ√æ## Contact√æ√æ* Generic enquiries: martin@martinpaljak.net√æ* **For technical support:**√æ  * re-run your failing command with `-d -v -i` switches and send the output, information about your card and applet/CAP√æ  * **Only plaintext** logs. **NO** screenshots, pictures, word documents. **NO** generic questions about java/linux/windows/globalplatform. Questions about jcshell/gpshell/gpj/something else **shall be ignored**.√æ  * If unsure, first read about [asking questions](http://www.catb.org/esr/faqs/smart-questions.html)√æ  * If you want to have a chat-like experience, try to [![Gitter](https://badges.gitter.im/martinpaljak/GlobalPlatformPro.svg)](https://gitter.im/martinpaljak/GlobalPlatformPro)√æ* [File an issue on Github](https://github.com/martinpaljak/GlobalPlatformPro/issues/new). Better yet - a pull request!√æ* Want to **donate**? E-mail or paypal to martin@martinpaljak.net√æ√æ#### Legal disclaimer√æ The casual: trademarks to their owners, copyrights to authors, software patents to hell, legal letters to ~~/dev/null~~ PGP key 0x1d86f74c7b9dd593. Everything is provided AS-IS AND THERE IS A CONSTANT RISK OF DEATH FROM SUDDEN LIGHTNING. Writing in all caps made it look like serious, didn't it?√æ√æ----√æ[JavaCard.pro](http://javacard.pro)"
meniga/mobile-sdk-android,1387,3,8,1,Organization,False,SDK For Android devices,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",13,Java,"{'': 3, 'yml': 1, 'txt': 1, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",443,7,68,8,0,1067,True,0,0,0,0,0,161,0,4,7,0,1,4,212,267,0,0,9,2,,,"![Meniga](https://github.com/meniga/mobile-sdk-ios/raw/master/logo.png)√æ√æmobile-sdk-android√æ====√æ[![Download](https://api.bintray.com/packages/meniga/android/com.meniga.sdk:sdk-android/images/download.svg) ](https://bintray.com/meniga/android/com.meniga.sdk:sdk-android/_latestVersion)√æ[![Build Status](https://travis-ci.org/meniga/mobile-sdk-android.svg?branch=master)](https://travis-ci.org/meniga/mobile-sdk-android)√æ[![codecov](https://codecov.io/gh/meniga/mobile-sdk-android/branch/master/graph/badge.svg)](https://codecov.io/gh/meniga/mobile-sdk-android)√æ√æMeniga helps banks use data to accelerate innovation and meaningful engagement by providing RESTful APIs on top of Meniga software products to improve and personalize the online banking experience for both individuals and corporate customers.√æ√æ## Getting started√æDevelopers for institutions implementing the Meniga REST API can use this sdk to communicate easily with the SDK and perform API operations. Please follow the setup guide in the documentation for further detail. Individuals making personalized implementations can point the SDK to their bank or financial institution's API URL to use their own data. You must however obtain some authentication information and pass it along to the SDK. See the documentation for further detail.√æ√æ## Basic usage√æ√æ```√ærepositories {√æ  jcenter()√æ  // or: mavenCentral()√æ  // or: maven { url ""https://dl.bintray.com/meniga/android"" }√æ}√æ√ædependencies {√æ  compile 'com.meniga.sdk:sdk-android:x.y.z'√æ}√æ```√æ√æFor the latest release version code, check out https://github.com/meniga/mobile-sdk-android/releases√æ√æ## Snapshot usage√æ√æ```√ærepositories {√æ  maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }√æ  // or: maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }√æ}√æ√ædependencies {√æ  compile 'com.meniga.sdk:sdk-android:x.y.z-SNAPSHOT'√æ}√æ```√æ√æFor more information please refer to [list of snapshots](https://oss.jfrog.org/webapp/#/artifacts/browse/tree/General/oss-snapshot-local/com/meniga/sdk/sdk-android).√æ√æ## Local development√æ√æIn order to use an SDK that contains local changes you may start by checking the version as shown below.√æ√æ```√æ$ ./gradlew currentVersion√æ√æ> Task :currentVersion √æ√æProject version: x.y.z-SNAPSHOT√æ```√æ√æThe next step is to publish the artifact to the local Maven repository.√æ√æ```√æ$ ./gradlew publishToMavenLocal√æ```√æ√æIn the Android Application project add the missing local Maven repository and adjust the version of the artifact.√æ√æ```√ærepositories {√æ  mavenLocal()√æ  √æ  ...√æ}√æ√ædependencies {√æ  compile 'com.meniga.sdk:sdk-android:x.y.z-SNAPSHOT'√æ}√æ```√æ√æ## Changelog√æThe changelog can be found in the [release section](https://github.com/meniga/mobile-sdk-android/releases)√æ√æ## License√æThe Meniga SDK for Android is published under the [MIT license](LICENSE.txt)."
fpetitjean/HDP,11727,7,2,4,User,False,Accurate estimation of conditional categorical probability distributions using Hierarchical Dirichlet Processes,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",8,Java,"{'': 4, 'md': 1, 'xml': 1}",42,1,2,2,5,1036,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,14,,61,,"# HDP√æAccurate estimation of conditional categorical probability distributions using Hierarchical Dirichlet Processes √æ√æThis package offers an accurate parameter estimation technique for Bayesian Network classifiers. It uses a Hierarchical Dirichlet Process to estimate the parameters (using a collapsed Gibbs sampler). Note that the package is built in a generic way such that it can estimate any conditional probability distributions over categorical variables.√æ√æMore information available at http://www.francois-petitjean.com/Research/√æ√æ## Underlying research and scientific paper√æ√æThis code is supporting [our paper in Machine Learning](https://doi.org/10.1007/s10994-018-5718-0) entitled ""Accurate parameter estimation for Bayesian Network Classifiers using Hierarchical Dirichlet Processes"". √æ√æThe paper is also available on [arXiv](https://arxiv.org/pdf/1708.07581).√æ√æWhen using this repository, please cite:√æ√æ```√æ@ARTICLE{Petitjean2018-HDP,√æ  author = {Petitjean, Francois and Buntine, Wray and Webb, Geoffrey I. and Zaidi, Nayyar},√æ  title = {Accurate parameter estimation for Bayesian Network Classifiers using Hierarchical Dirichlet Processes},√æ  journal={Machine Learning},√æ  year={2018},√æ  volume={107},√æ  number={8},√æ  pages={1303--1331},√æ  year = 2018√æ  url = {https://doi.org/10.1007/s10994-018-5718-0}√æ}√æ```√æ√æ## Compiling and launching√æAfter cloning the repo, launch the following commands.√æ```√æant√æjava -Xmx1g -cp ""bin:lib/*:lib/commons-math3-3.6.1/*""  hdp.testing.Test2LevelsExampleHeartAttack√æ```√æThis will run a simple example with a small toy dataset and then learning the probability distribution.√æ√æ### Dependencies√æ* [Apache Common Maths 3 - 3.6.1](https://commons.apache.org/proper/commons-math/)√æ* [MLTools](https://github.com/HerrmannM/MLTools)√æ√æ### Getting a cross-platform jar√æSimply entering `ant` creates a jar file that you can execute in most environments in dist/HDP.jar.√æ√æ### Memory Consumption√æYou may want to allow the JVM to use more memory if you are working with large models.√æUse the `Xmx` flag to increase the JVM memory. For example, `java -Xmx4g`.√æ√æ√æ## Using it for your own library√æThe code available at `src/monash/ml/hdp/testing/Test2LevelsExampleHeartAttack.java`√ægives a good idea on how to plug your own code with this library. √æBasically, you have to create a dataset in the form of a matrix of integers (`int[N][M+1]`) where `N` is the number of samples, and `M` the number of covariates (or features). `+1` is because the first column gives the values of the target variable you want to get a conditional estimate over. A cell `data[i][j]` represents the value taken by sample `i` for feature `x_{j-1}`. `data[i][0]` represents the value taken for the target variable. Things are coded over integers because this code is for categorical distributions. √æ√æ```java√æString [][]data = {√æ    {""yes"",""heavy"",""tall""},√æ    {""no"",""light"",""short""},√æ    ...√æ    {""yes"",""heavy"",""med""}√æ};√æ√æProbabilityTree hdp = new ProbabilityTree();√æ//learns p(target|x)√æhdp.addDataset(data);√æ//print the tree√æSystem.out.println(hdp.printProbabilities());√æ```√æ√æ## Contributors√æOriginal research and code by:√æ* [Dr Fran√ßois Petitjean](https://github.com/fpetitjean)√æ* [Pr. Wray Buntime](https://research.monash.edu/en/persons/wray-buntine)√æ* [Pr. Geoffrey I. Webb](https://research.monash.edu/en/persons/geoff-webb)√æ* [Dr Nayyar Zaidi](https://github.com/nayyarzaidi)√æ√æWork on the Stirling Number Generator:√æ * [Dr Matthieu Herrmann](https://github.com/HerrmannM)√æ√æ## Support√æYourKit is supporting this open-source project with its full-featured Java Profiler.√æYourKit is the creator of innovative and intelligent tools for profiling Java and .NET applications. http://www.yourkit.com "
particle-iot/photon-tinker-android,47517,35,51,29,Organization,False,Particle Open Source for Android,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",29,Java,"{'': 3, 'yml': 1, 'md': 4, 'gradle': 4, 'properties': 1, 'bat': 1, 'png': 2}",902,12,20,5,0,1885,True,25,35,6,0,0,40,0,2,11,0,1,6,1026,133,0,0,259,12,,particle-iot/particle-android,"<p align=""center"">√æ<img src=""particle-mark.png"" alt=""Particle"" title=""Particle"">√æ</p>√æ√æ# Particle Android libraries and apps√æ√æ[Install the Tinker app on your Android device from the Google Play Store](https://play.google.com/store/apps/details?id=io.particle.android.app)√æ√æ√æThis repository is a convenient single location for all Android-related code released by Particle.  Currently, this includes:√æ- the Particle [Cloud SDK](https://github.com/particle-iot/particle-android/tree/master/cloudsdk)√æ- the Particle [Device Setup Library](https://github.com/particle-iot/particle-android/tree/master/devicesetup) (for Particle Gen 2 devices)√æ- the [Tinker app](https://github.com/particle-iot/particle-android/tree/master/app)√æ√æ√æ## Getting started with the libraries, getting help, and everything else√æ√æFull documentation, including a getting started guide, lots of API examples, support & feedback links, and more are all available from our documentation page: https://docs.particle.io/reference/android/√æ√æ√æ### Additional resources√æ* Read the getting started guide at https://particle.io/start√æ* Join the most active and helpful IoT community out there at https://community.particle.io√æ* Learn more about Particle syntax and hardware at https://docs.particle.io√æ* Start building your own code at https://particle.io/build√æ* Find answers to common questions at https://support.particle.io√æ√æ√æ### Requirements for building the Tinker app√æ√æ1. Get [the latest stable version of Android Studio](https://d.android.com/studio/)√æ2. Once you have Android Studio installed, launch it, and from the ""Welcome to Android Studio"" screen, pick ""Open an existing Android Studio project"".  When it prompts you for the project location, point it at the top-level 'build.gradle' file in the repo.√æ3. Once AS has finished its initial cogitating on the project, hit the ""play"" button on the toolbar to build and run the app on a device.√æ√æ√æ## Maintainers√æ√æ- Jens Knutson [Github](https://github.com/jensck/) | [Twitter](https://twitter.com/jensknutson)√æ√æ### Maintainer docs√æ[`RELEASING.md`](RELEASING.md)√æ√æ√æ## License√æ√æAll code in this repository is available under the Apache License 2.0.  See the `LICENSE` file for the complete text of the license."
flylai/WaterCard_RW_forAndroid,66,1,1,1,User,False,M1Âç°‰øÆÊîπ‰æãÂ≠êÔºå‰ªÖ‰æõÂ≠¶‰π†,,,5,Java,"{'': 1, 'md': 1, 'gradle': 2}",20,1,0,1,0,1730,True,4,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,10,,10,,# WaterCard_RW_forAndroid√æ<br/><del>Áõ¥Êé•ÊääÂç°ÊîæÂêéÈù¢Âî§ÈÜíÁ®ãÂ∫èÔºåÂÜôÂç°‰ºöÂ§±Ë¥•ÔºåÊú™Áü•ÂéüÂõ†..</del>//Â∑≤‰øÆÂæ©√æ√æ<br/>M1Âç°‰øÆÊîπ‰æãÂ≠êÔºå‰ªÖ‰æõÂ≠¶‰π†ÔºåÂãøÁî®‰∫éÈùûÊ≥ïÁî®ÈÄî√æ<br/>ÈáëÈ¢ù‰∏∫Âçï‰Ωç‰∏∫ÂàÜÔºå1000=1RMB√æ<br/>Â∞öÊú™ÊúâÊ≥®Èáä√æ<br/>ÂÆâÂçìNFC Mifare Classic OneËØªÂÜô‰æãÂ≠ê...
doanduyhai/KillrVideoIT,41,1,1,4,User,False,Integration Tests for KillrVideo server,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 1, 'txt': 1, 'markdown': 1, 'sh': 1, 'xml': 1}",3,1,0,1,0,1100,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,60,,134,,"# KillrVideo Integration Tests #√æ√æThis application will run **integration tests** for the **[KillrVideo]** server (whatever the chosen language of implementation)√æ√æ## Setting Docker env variables√æ√æIf you're running on Linux with Docker, just execute the file _getenvirongment.sh_ as explained below.√æ√æIf you're running Docker4Mac (and not Docker Toolbox with VirtualBox), you need to find manually the current host IP and the HyperKit VM IP:√æ√æ- type `ifconfig | grep inet`. The HyperKit VM IP is on this list as well as your host IP√æ- don't use `127.0.0.1` as your host IP since it's a loopback address√æ- type `export KILLRVIDEO_DOCKER_IP=<HyperKit_VM_IP>`√æ- type `export KILLRVIDEO_HOST_IP=<Host_IP>`√æ√æ## Running Locally√æ√æThis application is not MEANT to be run in a stand-alone mode but inside a Docker compose config. However it is still possible to run it as a separated application by following the below steps: √æ√æ* First clone the project with `git clone https://github.com/doanduyhai/KillrVideoIT.git`√æ* Ensure that you have already run the Docker images for KillrVideo (with a `docker-compose ...`) √æ* Ensure that you have already run your own implementation of KillrVideo server√æ* Execute the script _getenvirongment.sh_ to set environment variables with `. ./getenvironment.sh`√æ√æ> **warning: the first dot (.) is important! It will execute the script in the context of the calling shell**√æ<br/>√æ√æ* Create the following folder `/tmp/cucumber-report` so that test HTML report can be generated √æ* Run the tests suite with `mvn clean test`√æ√æ√æ## Running as a Docker image√æ√æYou can integrate the Docker image of this application inside a `docker-compose.yaml` as follow:√æ√æ```yaml√æ√æ it_test_suite:√æ    image: doanduyhai/killrvideo_it:latest√æ    ports:√æ    # Zeppelin WEB UI port√æ    - 8080:8080√æ    # Python HTTP Web Server port√æ    - 8123:8123√æ    depends_on:√æ    - etcd√æ    - cassandra√æ    environment:√æ      KILLRVIDEO_DOCKER_IP: $KILLRVIDEO_DOCKER_IP√æ      SERVICE_8080_NAME: zeppelin√æ      SERVICE_8123_NAME: python_web_server√æ```√æ√æ√æ## License√æCopyright 2016-2017 Duy Hai DOAN√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æhttp://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ√æ[Killrvideo]: https://killrvideo.github.io√æ[cassandra]: http://cassandra.apache.org/√æ[dse]: http://www.datastax.com/products/datastax-enterprise√æ[getting-started]: https://killrvideo.github.io/getting-started/√æ[getting-started-csharp]: https://killrvideo.github.io/docs/languages/c-sharp/√æ[twitter]: https://twitter.com/doanduyhai√æ[Achilles Object Mapper]: http://achilles.io"
jenkinsci/crowd2-plugin,238,23,127,44,Organization,False,A plugin for Jenkins to use Atlassian Crowd or JIRA as an identity manager,https://plugins.jenkins.io/crowd2,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,Java,"{'': 3, 'md': 1, 'xml': 1, 'properties': 1}",156,7,17,16,7,3197,False,,,,,4,35,0,0,0,2,0,0,0,0,0,0,2,681,,,"# Crowd 2 Plugin for Jenkins (crowd2-plugin)√æ√æThis plugin allows using [Atlassian Crowd](https://www.atlassian.com/software/crowd) or [JIRA](https://www.atlassian.com/software/jira) as an authentication and authorization provider for Jenkins (Crowd version 2 and later). √æ√æ[![Build Status](https://ci.jenkins.io/buildStatus/icon?job=Plugins/crowd2-plugin/master)](https://ci.jenkins.io/job/Plugins/job/crowd2-plugin/job/master/)√æ[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=jenkins-crowd2-plugin&metric=coverage)](https://sonarcloud.io/dashboard?id=jenkins-crowd2-plugin)√æ[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=jenkins-crowd2-plugin&metric=security_rating)](https://sonarcloud.io/dashboard?id=jenkins-crowd2-plugin)√æ√æ[![Quality Gate](https://sonarcloud.io/api/project_badges/quality_gate?project=jenkins-crowd2-plugin)](https://sonarcloud.io/dashboard?id=jenkins-crowd2-plugin)√æ√æ## Usage√æ√æ1. Add a new generic application in Crowd like described in the [official docs](https://confluence.atlassian.com/crowd/adding-an-application-18579591.html#AddinganApplication-UsingCrowd's'AddApplication'Wizard).√æ2. In Jenkins navigate to *Manage Jenkins* -> *Manage Plugins* -> *Available*, and search for ""*Crowd 2 Integration*"". Install this plugin.√æ3. In Jenkins navigate to *Manage Jenkins* -> *Configure Global Security*. Tick *Enable Security* and select *Crowd 2* as your Security Realm.√æ4. Insert your Crowd URL and the application credentials you created in step 1.√æ√æThis plugin works well with [Matrix Authorization Strategy Plugin](https://plugins.jenkins.io/matrix-auth):√æYou can use Crowd users and groups to define permissions on folder/pipeline/job level.√æ√æ## Development√æ√æThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.√æ√æ```√ægit clone https://github.com/pingunaut/crowd2-plugin/√æcd crowd2-plugin√æmvn install√æ√æ# to start the plugin in a local embedded test environment, run√æmvn hpi:run√æ```√æ√æ## Deployment√æ√æ### Local embedded test environment√æ√æTo start the plugin in a local test environment, run√æ```√æmvn hpi:run√æ```√æ√æ### Standalone test environment√æ√æTo start a local build of the plugin in a standalone test environment, run√æ```√æmvn install√æ```√æthen upload the resulting .hpi file (target/crowd2-VERSION.hpi) like described in the [official documentation](https://jenkins.io/doc/book/managing/plugins/#advanced-installation).√æ√æ## Built With√æ√æ* [Jenkins](https://jenkins.io/) - Automation server√æ* [Maven](https://maven.apache.org/) - Dependency Management√æ√æ## Versioning√æ√æWe use [SemVer](http://semver.org/) for versioning (starting from version 2.0.0). For the versions available, see the [tags on this repository](https://github.com/pingunaut/crowd2-plugin/tags). √æ√æ## Authors√æ√æSee the list of [contributors](https://github.com/jenkinsci/crowd2-plugin/contributors) who participated in this project.√æ√æ## Roadmap√æ√æThe following changes and improvements are planned for the following releases√æ√æ### 2.0.0√æ√æ* add Jenkinsfile to run an automated build√æ* Merge open pull requests to fix caching and httpclient to solve performance and compatibility issues√æ* Update to latest libs√æ* Add some unit tests√æ√æ### 3.0.0√æ√æ* Improve test coverage√æ* Pickup changes from the refactoring branch√æ* Make RememberMe work√æ* Make SSO work√æ√æ### 3.x√æ√æ* Work on the open JIRA issues√æ √æ## License√æ√æThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details"
artur-tamazian/avro-schema-generator,71,28,2,16,User,False,Library for generating avro schema files (.avsc) based on DB tables structure,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 1}",33,2,0,3,5,1226,True,1,6,1,0,0,14,0,0,7,0,0,0,0,0,1,0,5,,4,,"[![Build Status](https://img.shields.io/travis/artur-tamazian/avro-schema-generator/master?logo=travis&style=flat-square)](https://travis-ci.org/artur-tamazian/avro-schema-generator)√æ[![Maven Central](https://img.shields.io/maven-central/v/com.github.artur-tamazian/avro-schema-generator?style=flat-square)](https://mvnrepository.com/artifact/com.github.artur-tamazian/avro-schema-generator)√æ[![Codecov](https://img.shields.io/codecov/c/github/artur-tamazian/avro-schema-generator?style=flat-square)](https://codecov.io/gh/artur-tamazian/avro-schema-generator)√æ[![Chat in Gitter](https://img.shields.io/gitter/room/artur-tamazian/avro-schema-generator?logo=gitter&style=flat-square)](https://gitter.im/avro-schema-generator/Lobby)√æ[![MIT License](https://img.shields.io/github/license/artur-tamazian/avro-schema-generator?style=flat-square)](https://opensource.org/licenses/MIT)√æ√æ# avro-schema-generator√æLibrary for generating avro schema files (.avsc) based on DB tables structure.√æ√æ## How it works:√æ√æ1. Prepare a db connection URL, username and a password. Use these to create a DbSchemaExtractor√æ2. If you're fancy, configure FormatterConfig and AvroConfig.√æ3. Tell schema extractor to give you avro models for tables that you're interested in.√æ4. Pass those to SchemaGenerator which will give you perfect avro schemas.√æ√æ## Here's basic example:√æ√æ```java√æ// Initialize db crawler that will create avro model objects√æDbSchemaExtractor schemaExtractor = new DbSchemaExtractor(""jdbc:mysql://localhost:3306"", ""root"", ""pass"");√æ√æAvroConfig avroConfig = new AvroConfig(""some.namespace"");√æ// Get avro models for a few tables√æList<AvroSchema> schemas = schemaExtractor.getForTables(avroConfig, ""mydb"", ""users"", ""payments"");√æ√æfor (AvroSchema schema : schemas) {√æ    // Pass avro model to SchemaGenerator, get schema and print it out.√æ    String schemaJson = SchemaGenerator.generate(schema);√æ    System.out.println(schemaJson);√æ}√æ```√æ√æ## More complex example:√æ√æ```java√æDbSchemaExtractor schemaExtractor = new DbSchemaExtractor(""jdbc:mysql://localhost:3306"", ""root"", ""pass"");√æ√æ// Some of available configuration options√æAvroConfig avroConfig = new AvroConfig(""some.namespace"")√æ    .setRepresentEnumsAsStrings(true) // use 'string' avro type instead of 'enum' for enums√æ    .setAllFieldsDefaultNull(true)    // adds default: 'null' to fields definition√æ    .setNullableTrueByDefault(true)   // makes all fields nullable√æ    .setSchemaNameMapper(new ToCamelCase().andThen(new RemovePlural())) // specify table name transformation to be used for schema name√æ    .setUnknownTypeResolver(type -> ""string"") // specify what to do with custom and unsupported db types√æ    .setDateTypeClass(Date.class) // add hint for avro compiler about which class to use for dates√æ    .setAvroSchemaPostProcessor((schema, table) -> {√æ        // adding some custom properties to avro schema√æ        schema.addCustomProperty(""db-schema-name"", ""mydb"");√æ        schema.addCustomProperty(""db-table-name"", table.getName());√æ});√æ√æ// Get avro models for a few tables√æList<AvroSchema> schemas = schemaExtractor.getAll(avroConfig);√æ√æ// You can specify some formatting options by creating a FormatterConfig and passing it to SchemaGenerator.√æFormatterConfig formatterConfig = FormatterConfig.builder()√æ            .setPrettyPrintSchema(true)√æ            .setPrettyPrintFields(false)√æ            .setIndent(""    "")√æ            .build();√æ√æfor (AvroSchema schema : schemas) {√æ    String schemaJson = SchemaGenerator.generate(schema, formatterConfig);√æ    System.out.println(schemaJson);√æ}√æ```√æ√æ## Maven dependency√æ√æ```√æ<dependency>√æ  <groupId>com.github.artur-tamazian</groupId>√æ  <artifactId>avro-schema-generator</artifactId>√æ  <version>1.0.5</version>√æ</dependency>√æ```√æ√æ## Supported databases√æ√æDB crawling is done using the SchemaCrawler http://www.schemacrawler.com/. So it should work fine with RDBMS mentioned here: http://www.schemacrawler.com/database-support.html.√æ√æavro-schema-generator itself was successfully used with MySQL and PostgreSQL.√æ√æ## TODO / Suggested contributions√æ√æ- Refactor using [Project Lombok](https://projectlombok.org/features/Data)√æ- Add missing or db-specific types support√æ- Migrate to Gradle"
database-rider/database-rider,9104,302,17,67,Organization,False,Database testing made easy!,https://database-rider.github.io/database-rider,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 2, 'yml': 1, 'adoc': 2, 'py': 1, 'xml': 2, 'txt': 1}",649,9,42,21,11,1375,True,18,132,4,17,1,60,1,12,9,2,0,0,0,0,33,0,3,1,,,"= Database Rider√æ:page-layout: base√æ:source-language: java√æ:icons: font√æ:linkattrs:√æ:sectanchors:√æ:sectlink:√æ:numbered:√æ:doctype: book√æ:toc: preamble√æ:tip-caption: :bulb:√æ:note-caption: :information_source:√æ:important-caption: :heavy_exclamation_mark:√æ:caution-caption: :fire:√æ:warning-caption: :warning:√æ√æ++++√æ<a href=""https://s22.postimg.org/t6k9n4mmp/rider_logo.png"">√æ<img align=""right"" height=""400"" width=""300"" src=""https://github.com/database-rider/database-rider/raw/gh-pages/images/rider_orochi.png"" style=""max-width:100%;"">√æ</a>√æ++++√æ√æ[quote]√æ____√æSo you can ride the database in your JUnit tests!√æ____√æ√æ√æ√æimage:https://travis-ci.org/database-rider/database-rider.svg[Build Status (Travis CI), link=https://travis-ci.org/database-rider/database-rider]√æimage:https://coveralls.io/repos/database-rider/database-rider/badge.png[Coverage, link=https://coveralls.io/r/database-rider/database-rider]√æimage:https://img.shields.io/maven-central/v/com.github.database-rider/rider-core.svg?label=Maven%20Central[""Maven Central"",link=""https://search.maven.org/search?q=g:com.github.database-rider""]√æimage:https://sonarcloud.io/api/project_badges/measure?project=com.github.database-rider:rider-parent&metric=alert_status[""Sonar"", link=""https://sonarcloud.io/dashboard?id=com.github.database-rider%3Arider-parent""]√æimage:https://badges.gitter.im/database-rider/community.svg[""Gitter"", link=""https://gitter.im/database-rider/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge""]√æ√æThis project aims for bringing http://dbunit.sourceforge.net/[DBUnit] closer to your JUnit tests *so database testing will feel like a breeze!*√æ√æWatch https://www.youtube.com/watch?v=A5ryED3a8FY[1.0 promo video^] to get an idea.√æ√æA lot of this work is based on https://github.com/arquillian/arquillian-extension-persistence/[Arquillian persistence extension] and focus on simplicity (one dependency - dbunit).√æ√æ√æ== Introduction√æ√æConsider the following (jpa) entities:√æ√æ[source, java]√æ----√æ@Entity√æpublic class User {√æ√æ    @Id√æ    @GeneratedValue√æ    private long id;√æ√æ    private String name;√æ√æ    @OneToMany(mappedBy = ""user"")√æ    private List<Tweet> tweets;√æ√æ    @OneToMany(mappedBy = ""followedUser"")√æ    private List<Follower> followers;√æ√æ    //getters/setters√æ√æ }√æ√æ@Entity√æpublic class Tweet {√æ√æ    @Id√æ    @GeneratedValue√æ    private String id;√æ√æ    @Size(min = 1, max = 140)√æ    private String content;√æ√æ    private Integer likes;√æ√æ    @Temporal(TemporalType.TIMESTAMP)√æ    private Date date;√æ√æ    @ManyToOne√æ    private User user;√æ}√æ√æ@Entity√æpublic class Follower {√æ√æ    @Id√æ    @GeneratedValue√æ    private long id;√æ√æ    @JoinColumn(name = ""follower_id"")√æ    private User followerUser;√æ√æ√æ    @ManyToOne√æ    @JoinColumn(name = ""user_id"")√æ    private User followedUser;√æ√æ}√æ√æ----√æ√æand the following dbunit yaml dataset:√æ√æ.src/test/resources/datasets/users.yml√æ----√æuser:√æ  - id: 1√æ    name: ""@realpestano""√æ  - id: 2√æ    name: ""@dbunit""√ætweet:√æ  - id: abcdef12345√æ    content: ""dbunit rules!""√æ    user_id: 1√æfollower:√æ  - id: 1√æ    user_id: 1√æ    follower_id: 2√æ----√æ√æYou should be able to prepare your database before test execution, like below:√æ√æ[source,java]√æ----√æ@RunWith(JUnit4.class)√æpublic class UserIt {√æ√æ   @Rule√æ   public EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it"");√æ√æ   @Rule√æ   public DBUnitRule dbUnitRule = DBUnitRule.instance(emProvider.getConnection());√æ√æ   @Test√æ   @DataSet(value = ""datasets/yml/users.yml"")√æ   public void shouldLoadUserFollowers() {√æ        User user = (User) emProvider.em().createQuery(""select u from User u left join fetch u.followers where u.id = 1"").getSingleResult();√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(1);√æ        assertThat(user.getTweets()).hasSize(1);√æ        assertEquals(user.getTweets().get(0).getContent(), ""dbunit rules!"");√æ        assertThat(user.getFollowers()).isNotNull().hasSize(1);√æ        Follower expectedFollower = new Follower(2,1);√æ        assertThat(user.getFollowers()).contains(expectedFollower);√æ   }√æ----√æ√æNOTE: <<EntityManagerProvider>> is a simple JUnit rule that creates a JPA entityManager (and caches it) for each test. DBunit rule don't depend on EntityManagerProvider, it only needs a *JDBC connection*;√æ√æ√æ== Documentation√æ√æA getting started guide can be found here http://database-rider.github.io/getting-started/.√æ√æFor main features overview see http://database-rider.github.io/database-rider/latest/documentation.html[project living documentation^].√æ√æOlder documentation versions can be found here: https://database-rider.github.io/database-rider/#documentation.√æ√æ√æ== Rider Core√æ√æThis module is the basis for subsequent modules. It contains a JUnit rule (shown above), the api for dataset, DBunit configuration and *DataSetExecutor* which is responsible for dataset creation.√æ√æ=== Adding Database Rider core to your project√æ√æ√æ[source, xml]√æ----√æ<dependency>√æ      <groupId>com.github.database-rider</groupId>√æ      <artifactId>rider-core</artifactId>√æ      <version>1.14.0</version>√æ      <scope>test</scope>√æ</dependency>√æ----√æ√æ[NOTE]√æ====√æIt will bring the following (transitive) dependencies to your test classpath:√æ√æ[source,xml]√æ----√æ<dependency>√æ      <groupId>org.dbunit</groupId>√æ      <artifactId>dbunit</artifactId>√æ</dependency>√æ<dependency>√æ      <groupId>org.yaml</groupId>√æ      <artifactId>snakeyaml</artifactId>√æ</dependency>√æ<dependency>√æ      <groupId>org.codehaus.jackson</groupId>√æ      <artifactId>jackson-mapper-lgpl</artifactId>√æ</dependency>√æ----√æ====√æ√æ=== DataSet executor√æA DataSet executor is a component which creates DBUnit datasets. Datasets are ""sets"" of data (tables and rows) that represent the *state of the database*. DataSets are defined as textual files in *YAML*, *XML*, *JSON*, *CSV* or *XLS* format, https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/resources/datasets/[see examples here^].√æ√æAs in DBUnit Rule, `dataset executor` just needs a JDBC connection to be instantiated:√æ√æ√æ[source,java]√æ----√æimport static com.github.database.rider.util.EntityManagerProvider.em;√æimport static com.github.database.rider.util.EntityManagerProvider.instance;√æ√æ@RunWith(JUnit4.class)√æpublic class DataSetExecutorIt {√æ√æ    public EntityManagerProvider emProvider = instance(""executor-it"");√æ√æ    private static DataSetExecutorImpl executor;√æ√æ    @BeforeClass√æ    public static void setup() {√æ        executor = DataSetExecutorImpl.instance(new ConnectionHolderImpl(emProvider.getConnection()));√æ    }√æ√æ    @Test√æ    public void shouldSeedUserDataSetUsingExecutor() {√æ         DataSetConfig dataSetConfig = new DataSetConfig(""datasets/yml/users.yml"");<1>√æ         executor.createDataSet(dataSetConfig);<2>√æ         User user = (User) em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ         assertThat(user).isNotNull();√æ         assertThat(user.getId()).isEqualTo(1);√æ      }√æ}√æ----√æ<1> As we are not using @Rule, which is responsible for reading @DataSet annotation, we have to provide *DataSetConfig* so executor can create the dataset.√æ<2> this is done implicitly by *@Rule DBUnitRule*.√æ√æDataSet executor setup and logic is `hidden` by DBUnit @Rule and @DataSet annotation.√æ√æ[IMPORTANT]√æ====√æSince `v1.13.0` you can use <<RiderDSL>> which provides a fluent api as an alternative to DataSetExecutor (and `@DataSet`):√æ√æ[source,java]√æ----√æimport static com.github.database.rider.util.EntityManagerProvider.em;√æimport static com.github.database.rider.util.EntityManagerProvider.instance;√æ√æ@RunWith(JUnit4.class)√æpublic class DataSetExecutorIt {√æ√æ    public EntityManagerProvider emProvider = instance(""executor-it"");√æ√æ    @Test√æ    public void shouldSeedUserDataSetUsingRiderDSL() {√æ         RiderDSL.withConnection(emProvider.getConnection())√æ                 .withDataSetConfig(new DataSetConfig(""datasets/yml/users.yml"")√æ                                   .cleanBefore(true))√æ                 .withDBUnitConfig(new DBUnitConfig()√æ                                   .addDBUnitProperty(""caseSensitiveTableNames"", false))√æ                 .createDataSet();√æ         User user = (User) em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ         assertThat(user).isNotNull();√æ         assertThat(user.getId()).isEqualTo(1);√æ      }√æ}√æ----√æ√æ====√æ√æ=== Configuration√æ√æThere are two types of configuration in Database Rider: `DataSet` and `DBUnit`.√æ√æ==== DataSet Configuration√æ√æThis basically setup the `dataset` which will be used. The only way to configure a dataset is using *@DataSet* annotation.√æ√æIt can be used at *class* or *method* level:√æ√æ[source,java]√æ----√æ     @Test√æ     @DataSet(value =""users.yml"", strategy = SeedStrategy.UPDATE,√æ            disableConstraints = true,cleanAfter = true,transactional = true)√æ     public void shouldLoadDataSetConfigFromAnnotation(){√æ√æ      }√æ----√æ√æHere are possible values:√æ√æ[cols=""3*"", options=""header""]√æ|===√æ|Name | Description | Default√æ|value| Dataset file name using test resources folder as root directory. Multiple, comma separated, dataset file names can be provided.| """"√æ|executorId| Name of dataset executor for the given dataset.| DataSetExecutorImpl.DEFAULT_EXECUTOR_ID√æ|strategy| DataSet seed strategy. Possible values are: CLEAN_INSERT, INSERT, REFRESH and UPDATE.| CLEAN_INSERT, meaning that DBUnit will clean and then insert data in tables present on provided dataset.√æ|useSequenceFiltering| If true dbunit will look at constraints and dataset to try to determine the correct ordering for the SQL statements.| true√æ|tableOrdering| A list of table names used to reorder DELETE operations to prevent failures due to circular dependencies.| """"√æ|disableConstraints| Disable database constraints.| false√æ|cleanBefore| If true Database Rider will try to delete database before test in a smart way by using table ordering and brute force.| false√æ|cleanAfter| If true Database Rider will try to delete database after test in a smart way by using table ordering and brute force.| false√æ|transactional| If true a transaction will be started before test and committed after test execution. | false√æ|executeStatementsBefore| A list of jdbc statements to execute before test.| {}√æ|executeStatementsAfter| A list of jdbc statements to execute after test.| {}√æ|executeScriptsBefore| A list of sql script files to execute before test. Note that commands inside sql file must be separated by `;`.| {}√æ|executeScriptsAfter| A list of sql script files to execute after test. Note that commands inside sql file must be separated by `;`.| {}√æ|===√æ√æ==== DBUnit Configuration√æ√æThis basically setup `DBUnit` itself. It can be configured by *@DBUnit* annotation (class or method level) and *dbunit.yml* file present in test resources folder.√æ√æ[source,java]√æ----√æ    @Test√æ    @DBUnit(cacheConnection = true, cacheTableNames = false, allowEmptyFields = true,batchSize = 50)√æ    public void shouldLoadDBUnitConfigViaAnnotation() {√æ√æ    }√æ----√æ√æHere is a dbunit.yml example, also the default values:√æ√æ.src/test/resources/dbunit.yml√æ----√æcacheConnection: true√æcacheTableNames: true√æleakHunter: false√æmergeDataSets: false√æcaseInsensitiveStrategy: !!com.github.database.rider.core.api.configuration.Orthography 'UPPERCASE' <1>√æproperties:√æ  batchedStatements:  false√æ  qualifiedTableNames: false√æ  schema: null√æ  caseSensitiveTableNames: false√æ  batchSize: 100√æ  fetchSize: 100√æ  allowEmptyFields: false√æ  escapePattern:√æ  schema:√æ  datatypeFactory: !!com.github.database.rider.core.configuration.DBUnitConfigTest$MockDataTypeFactory {} <2>√æconnectionConfig:√æ  driver: """"√æ  url: """"√æ  user: """"√æ  password: """"√æ----√æ<1> Only applied when `caseSensitiveTableNames` is `false`. Valid values are `UPPERCASE` and `LOWERCASE`.√æ<2> Make it possible to define a datatype factory, https://github.com/database-rider/database-rider/issues/30[see issue #30^] for details.√æ√æIMPORTANT: `@DBUnit` annotation takes precedence over `dbunit.yml` global configuration which will be used only if the annotation is not present.√æ√æ√æ√æ=== JDBC Connection√æ√æAs seen in examples above `DBUnit` needs a JDBC connection to be instantiated. To avoid creating connection for each test you can define it in *dbunit.yml* for all tests or define in *@DBUnit* on each test.√æ√æNOTE: `@DBUnit` annotation takes precedence over dbunit.yml global configuration.√æ√æ==== Example√æ√æ[source, java, linenums]√æ----√æ@RunWith(JUnit4.class)√æ@DBUnit(url = ""jdbc:hsqldb:mem:test;DB_CLOSE_DELAY=-1"", driver = ""org.hsqldb.jdbcDriver"", user = ""sa"") <1>√æpublic class ConnectionConfigIt {√æ√æ    @Rule√æ    public DBUnitRule dbUnitRule = DBUnitRule.instance(); <2>√æ√æ√æ√æ    @BeforeClass√æ    public static void initDB(){√æ        //trigger db creation√æ        EntityManagerProvider.instance(""rules-it"");√æ    }√æ√æ    @Test√æ    @DataSet(value = ""datasets/yml/user.yml"")√æ    public void shouldSeedFromDeclaredConnection() {√æ        User user = (User) em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(1);√æ    }√æ}√æ----√æ<1> driver class can be ommited in new JDBC drivers since version 4.√æ<2> Note that the rule instantiation doesn't need a connection anymore.√æ√æIMPORTANT: As CDI module depends on a produced entity manager, connection configuration will be ignored.√æ√æ=== Rule chaining√æ√æDBUnit Rule can be https://github.com/junit-team/junit4/wiki/rules#rulechain[chained with other rules^] so you can define execution order among rules.√æ√æIn example below <<EntityManagerProvider rule>> executes *before* `DBUnit rule`:√æ√æ[source,java,linenums]√æ----√æ EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it"");√æ√æ   @Rule√æ   public TestRule theRule = RuleChain.outerRule(emProvider).√æ            around(DBUnitRule.instance(emProvider.connection()));√æ----√æ√æ=== Multiple Databases√æEach executor has a JDBC connection so multiple databases can be handled by using multiple dataset executors:√æ√æ[source, java]√æ----√æimport static com.github.database.rider.util.EntityManagerProvider.instance;√æ√æ@RunWith(JUnit4.class)√æpublic class MultipleExecutorsIt {√æ√æ√æ    private static List<DataSetExecutorImpl> executors = new ArrayList<>;√æ√æ    @BeforeClass√æ    public static void setup() { <1>√æ        executors.add(DataSetExecutorImpl.instance(""executor1"", new ConnectionHolderImpl(instance(""executor1-pu"").getConnection())));√æ        executors.add(DataSetExecutorImpl.instance(""executor2"", new ConnectionHolderImpl(instance(""executor2-pu"").getConnection())));√æ    }√æ√æ    @Test√æ    public void shouldSeedUserDataSet() {√æ         for (DataSetExecutorImpl executor : executors) {√æ             DataSetConfig dataSetConfig = new DataSetConfig(""datasets/yml/users.yml"");√æ             executor.createDataSet(dataSetConfig);√æ                User user = (User) EntityManagerProvider.instance(executor.getId() + ""-pu"").em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ                assertThat(user).isNotNull();√æ                assertThat(user.getId()).isEqualTo(1);√æ            }√æ        }√æ√æ}√æ√æ----√æ<1> As you can see each executor is responsible for a database, in case a JPA persistence unit√æ√æ√æAlso note that the same can be done using @Rule but pay attention that you must provide executor id in *@DataSet annotation*.√æ√æ[source, java]√æ----√æ    @Rule√æ    public EntityManagerProvider emProvider1 = EntityManagerProvider.instance(""dataset1-pu"");√æ√æ    @Rule√æ    public EntityManagerProvider emProvider2 = EntityManagerProvider.instance(""dataset2-pu"");√æ√æ    @Rule√æ    public DBUnitRule exec1Rule = DBUnitRule.instance(""exec1"",emProvider1.getConnection());<1>√æ√æ    @Rule√æ    public DBUnitRule exec2Rule = DBUnitRule.instance(""exec2"",emProvider2.getConnection());√æ√æ    @Test√æ    @DataSet(value = ""datasets/yml/users.yml"",disableConstraints = true, executorId = ""exec1"") <2>√æ    public void shouldSeedDataSetDisablingContraints() {√æ        User user = (User) emProvider1.em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(1);√æ     }√æ√æ    @Test√æ    @DataSet(value = ""datasets/yml/users.yml"",disableConstraints = true, executorId = ""exec2"")√æ    public void shouldSeedDataSetDisablingContraints2() {√æ        User user = (User) emProvider2.em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(1);√æ     }√æ----√æ√æ<1> *exec1* is the id of executor responsible for dataset1-pu√æ<2> executorId must match id provided in @Rule annotation√æ√æ==== Multiple databases in Spring tests√æ√æSince `v1.9.0` both `Rider Spring` and `Rider JUnit 5` with `SpringBoot` support multiple datasources. You just need to specify the *dataSourceBeanName* property in `@DBRider` annotation:√æ√æ[source, java]√æ----√æ@DBRider //default datasource is used√æ@SpringBootTest√æpublic class MultipleDataSourcesTest {√æ√æ    @Autowired√æ    private UserRepository userRepository; //from user datasource√æ√æ    @Autowired√æ    private CompanyRepository companyRepository; //from company datasource√æ√æ√æ    @Test√æ    @DataSet(""users.yml"")√æ    public void shouldListUsers() {√æ        assertThat(userRepository.count()).isEqualTo(3);√æ        assertThat(userRepository.findByEmail(""springboot@gmail.com"")).isEqualTo(new User(3));√æ    }√æ√æ    @Test√æ    @DBRider(dataSourceBeanName = ""companyDataSource"") //secondary (company) datasource will be used√æ    @DataSet(""companies.yml"")√æ    public void shouldListCompanies() {√æ        assertThat(companyRepository.count()).isEqualTo(2);√æ        assertThat(companyRepository.findByNameLike(""Umbrella%"")).isEqualTo(new Company(2));√æ√æ    }√æ----√æ√æTIP: Full `rider-junit5` example can be found https://github.com/database-rider/database-rider/blob/master/rider-examples/spring-boot-dbunit-sample/src/test/java/com/github/database/rider/springboot/MultipleDataSourcesTest.java#L17[here^] and https://github.com/database-rider/database-rider/blob/master/rider-junit5/src/test/java/com/github/database/rider/junit5/DBRiderSpringDataSourceIT.java#L25[here^].√æ√æTIP: Full `rider-spring` example can be found https://github.com/database-rider/database-rider/blob/master/rider-spring/src/test/java/com/github/database/rider/spring/dataset/MultipleDataSourcesIT.java#L33[here^].√æ√æ√æ==== Multiple databases in CDI tests√æ√æFor `rider-cdi` you must use `entityManagerName` property of `@DBRider` from CDI module:√æ√æ[source, java]√æ----√æ@RunWith(CdiTestRunner.class)√æ@DBRider√æpublic class MultipleEntityManagerIt {√æ√æ√æ    @Inject√æ    EntityManager em;√æ√æ    @Inject√æ    @RiderPU(""cdipu2"")√æ    EntityManager em2;√æ√æ√æ    @Test√æ    @DataSet(""yml/users.yml"")√æ    public void shouldListUsersFromDefaultEntityManager() {√æ        List<User> users = em.createQuery(""select u from User u"").getResultList();√æ        assertThat(users).isNotNull().isNotEmpty().hasSize(2);√æ    }√æ√æ    @Test√æ    @DBRider(entityManagerName = ""cdipu2"")√æ    @DataSet(""yml/users.yml"")√æ    public void shouldListUsersFromEntityManager2() {√æ        List<User> users = em2.createQuery(""select u from User u"").getResultList();√æ        assertThat(users).isNotNull().isNotEmpty().hasSize(2);√æ    }√æ----√æ√æTIP: Full CDI example can be found https://github.com/database-rider/database-rider/blob/master/rider-cdi/src/test/java/com/github/database/rider/cdi/MultipleEntityManagerIt.java#L27[here^].√æ√æ=== Expected DataSet√æUsing `@ExpectedDataSet` annotation you can specify the database state you expect after test execution, example:√æ√æ.expectedUsers.yml√æ----√æuser:√æ  - id: 1√æ    name: ""expected user1""√æ  - id: 2√æ    name: ""expected user2""√æ----√æ√æ[source, java]√æ----√æ    @Test√æ    @ExpectedDataSet(value = ""yml/expectedUsers.yml"",ignoreCols = ""id"")√æ    public void shouldMatchExpectedDataSet() {√æ        User u = new User();√æ        u.setName(""expected user1"");√æ        User u2 = new User();√æ        u2.setName(""expected user2"");√æ        emProvider.tx().begin();√æ        emProvider.em().persist(u);√æ        emProvider.em().persist(u2);√æ        emProvider.tx().commit();√æ    }√æ----√æ√æNOTE: As you probably noticed, there is no need for assertions in the test itself.√æ√æNow with an assertion error:√æ√æ[source, java]√æ----√æ    @Test√æ    @ExpectedDataSet(value = ""yml/expectedUsers.yml"",ignoreCols = ""id"")√æ    public void shouldMatchExpectedDataSet() {√æ        User u = new User();√æ        u.setName(""non expected user1"");√æ        User u2 = new User();√æ        u2.setName(""non expected user2"");√æ        emProvider.tx().begin();√æ        emProvider.em().persist(u);√æ        emProvider.em().persist(u2);√æ        emProvider.tx().commit();√æ    }√æ----√æAnd here is how the error is shown in JUnit console:√æ√æ----√æExpected :expected user1√æActual   :non expected user1√æ <Click to see difference>√æ at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)√æ at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)√æ at org.dbunit.assertion.DefaultFailureHandler.handle(DefaultFailureHandler.java:223)√æ at com.github.database.rider.assertion.DataSetAssert.compareData(DataSetAssert.java:94)√æ----√æ√æNOTE: Since `v1.4.0` you can use <<DataSet Replacers>> in expected dataset.√æ√æ==== Expected DataSet with regular expressions√æ√æYou can also use `regular expressions` in expected DataSet, for that just prepend column value with `regex:`:√æ√æ----√æuser:√æ  - id: ""regex:\\d+"" #any number√æ    name: regex:^expected user.*  #'starts with' regex√æ  - id: ""regex:\\d+""√æ    name: regex:.*user2$   #'ends with' regex√æ----√æ√æNow we don't need to `ignore id column` in the above example:√æ√æ[source,java]√æ----√æ    @Test√æ    @ExpectedDataSet(value = ""yml/expectedUsers.yml"")√æ    public void shouldMatchExpectedDataSetUsingRegex() {√æ        User u = new User();√æ        u.setName(""expected user1"");√æ        User u2 = new User();√æ        u2.setName(""expected user2"");√æ        emProvider.tx().begin();√æ        emProvider.em().persist(u);√æ        emProvider.em().persist(u2);√æ        emProvider.tx().commit();√æ    }√æ----√æ√æ==== Expected Dataset with order by column√æ√æTo ignore row ordering in expected dataset one can use **orderBy** attribute in expected dataset.√æ√æThis way both actual and expected datasets will be ordered by same column:√æ√æ.expectedUsersIgnoreOrder.yml√æ----√æUSER:√æ  - NAME: ""@realpestano""√æ  - NAME: ""@arhohuttunen""√æ  - NAME: ""@dbunit""√æ√æ----√æ√æ[source, java]√æ----√æ    @Test√æ    @DataSet(value = ""yml/empty.yml"", disableConstraints = true)√æ    @ExpectedDataSet(value = ""yml/expectedUsersIgnoreOrder.yml"", orderBy = ""name"")√æ    public void shouldMatchExpectedDataSetIgnoringRowOrder() {√æ        User u1 = new User();√æ        u1.setName(""@arhohuttunen"");√æ        User u2 = new User();√æ        u2.setName(""@realpestano"");√æ        User u3 = new User();√æ        u3.setName(""@dbunit"");√æ        tx().begin();√æ        em().persist(u1);√æ        em().persist(u2);√æ        em().persist(u3);√æ        tx().commit();√æ    }√æ----√æ√æNote on the example above that the order of insertion is different from declared on the dataset but the test passes because of `orderBy` will make both expected dataset and database table ordered by the same column.√æ√æ==== Using `CONTAINS` in expected datatset√æ√æBy default the dataset you use in `@ExpectedDataSet` must be *EQUAL* to the state of the database after test execution which means same rows. √æ√æSince `v1.5.2` expected dataset can be configured to use a *CONTAINS* operation and in this case its rows must be present in actual database after test.√æ√æ√æConsider following datasets:√æ√æ.users.yml√æ----√æUSER:√æ  - ID: 1√æ    NAME: ""@realpestano""√æ  - ID: 2√æ    NAME: ""@dbunit""√æ----√æ√æ.expectedUsersContains.yml√æ----√æUSER:√æ  - ID: 3√æ    NAME: ""@dbrider""√æ----√æ√æAnd the integration test below:√æ√æ[source,java]√æ----√æ    @Test√æ    @DataSet(value = ""user.yml"", transactional = true)√æ    @ExpectedDataSet(value = ""expectedUsersContains.yml"", compareOperation = CompareOperation.CONTAINS)√æ    public void shouldMatchExpectedDataSetContains() {√æ        User u = new User();√æ        u.setId(3);√æ        u.setName(""@dbrider"");√æ        em().persist(u);√æ    }√æ----√æ√æNOTE: This test will pass if database state after test contains a row in `user table` with `id=3` and `name = @dbrider`. Other rows doesn't matter.√æ√æ=== Meta DataSets√æ√æWith meta datasets you can create annotations which holds `@DataSet` configuration and (re)use this custom annotation in any test:√æ√æ.Custom annotation holding dataset configuration√æ----√æ@Retention(RetentionPolicy.RUNTIME)√æ@Target({ElementType.TYPE, ElementType.METHOD})√æ@DataSet(value = ""yml/users.yml"", disableConstraints = true)√æpublic @interface MetaDataSet {√æ√æ}√æ---- √æ√æ.Test using metadataset, @DataSet config is extracted from custom annotation √æ----√æ@RunWith(JUnit4.class)√æ@MetaDataSet√æpublic class MetaDataSetIt {√æ√æ @Rule√æ public EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it""); √æ√æ @Rule√æ public DBUnitRule dbUnitRule = DBUnitRule.instance(emProvider.connection()); √æ√æ @Test√æ public void testMetaAnnotationOnClass() {√æ  List<User> users = em().createQuery(""select u from User u"").getResultList();√æ  assertThat(users).isNotNull().isNotEmpty().hasSize(2);√æ }√æ√æ}√æ√æ----√æ√æYou can use another metadataset at method level which will take precedence:√æ√æ----√æ@Retention(RetentionPolicy.RUNTIME)√æ@Target({ElementType.TYPE, ElementType.METHOD})√æ@DataSet(value = ""yml/expectedUser.yml"", disableConstraints = true)√æpublic @interface AnotherMetaDataSet {√æ√æ}√æ---- √æ √æ√æ----√æ@RunWith(JUnit4.class)√æ@MetaDataSet√æpublic class MetaDataSetIt {√æ√æ    //rules omitted for brevity√æ√æ @Test√æ @AnotherMetaDataSet√æ public void testMetaAnnotationOnMethod() {√æ  List<User> users = em().createQuery(""select u from User u"").getResultList();√æ  assertThat(users).isNotNull().isNotEmpty().hasSize(1);√æ }√æ----√æ√æNOTE: This works with all Database Rider modules like `Spring`, `CDI` and `JUnit5`.√æ√æTIP: See https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/MetaDataSetIt.java[MetaDatasetIt code^] for details. √æ√æ√æ=== Merge DataSets√æ√æSince `v1.3.0` it is possible to merge @DataSet configuration by declaring the annotation at `class` and `method` level.√æ√æTo enable the merging use `mergeDataSets=true` in `@DBunit` annotation or in `dbunit.yml` configuration.√æ√æIMPORTANT: Only *array properties* such as `value` and  `executeScriptsAfter` from @DataSet will be merged. √æ√æFollowing is an example of merging:√æ√æ----√æ@RunWith(JUnit4.class)√æ@DBUnit(mergeDataSets = true) <1>√æ@DataSet(value=""yml/tweet.yml"", executeScriptsAfter = ""addUser.sql"", executeStatementsBefore = ""INSERT INTO USER VALUES (8,'user8')"")√æpublic class MergeDataSetsIt {√æ√æ    @Rule√æ    public EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it""); √æ√æ    @Rule√æ    public DBUnitRule dbUnitRule = DBUnitRule.instance(emProvider.connection()); √æ    √æ √æ    @Test√æ    @DataSet(value=""yml/user.yml"", executeScriptsAfter = ""tweets.sql"", executeStatementsBefore = ""INSERT INTO USER VALUES (9,'user9')"", strategy = SeedStrategy.INSERT)√æ public void shouldMergeDataSetsFromClassAndMethod() {√æ  List<User> users = em().createQuery(""select u from User u"").getResultList(); //2 users from user.yml plus 1 from  class level 'executeStatementsBefore' and 1 user from method level 'executeStatementsBefore'√æ  assertThat(users).isNotNull().isNotEmpty().hasSize(4);√æ        √æ        User user = (User) em().createQuery(""select u from User u where u.id = 9"").getSingleResult(); <2>√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(9);√æ        user = (User) em().createQuery(""select u from User u where u.id = 1"").getSingleResult();√æ        √æ        assertThat(user.getTweets()).isNotEmpty(); <3>√æ        assertThat(user.getTweets().get(0).getContent()).isEqualTo(""dbunit rules again!""); √æ }√æ √æ    @AfterClass√æ    public static void afterTest() {√æ        User user = (User) em().createQuery(""select u from User u where u.id = 10"").getSingleResult();<4>√æ        assertThat(user).isNotNull();√æ        assertThat(user.getId()).isEqualTo(10); √æ        √æ        Tweet tweet = (Tweet) em().createQuery(""select t from Tweet t where t.id = 10"").getSingleResult();//scripts after√æ        assertThat(tweet).isNotNull();√æ        assertThat(tweet.getId()).isEqualTo(""10""); √æ    }√æ    √æ}√æ----√æ<1> Activates the merging of datasets√æ<2> User with id = 8  was inserted by `executeStatementsBefore` from class level dataset.√æ<3> tweets comes from `tweet.yml` declared on class level dataset.√æ<4> User with id = 10 was inserted by `addUser.sql` from class level dataset.√æ√æTIP: Source code of example above can be https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/MergeDataSetsIt.java[found here^].√æ√æTIP: Junit5 example can be https://github.com/database-rider/database-rider/blob/master/rider-junit5/src/test/java/com/github/database/rider/junit5/MergeDataSetsJUnit5It.java[found here^] and CDI https://github.com/database-rider/database-rider/blob/master/rider-cdi/src/test/java/com/github/database/rider/cdi/MergeDataSetsCDIIt.java[example here^].√æ√æ=== DataSet Replacers√æ√æA DataSet replacer is a `placeholder` used in a dataset file which will be replaced during test execution. √æ√æDBRider comes with a `Date Replacer`, `Null replacer` and a `Custom replacer`.√æ√æTIP: For complete source code of replacers examples https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/replacers/[Look here^].√æ√æ==== Date replacer√æ√æFollowing is an example test using a date replacer:√æ√æ.date-replacements.yml √æ----√æTWEET:√æ  - ID: ""1""√æ    CONTENT: ""dbunit rules!""√æ    DATE: ""[DAY,NOW]""√æ    USER_ID: 1√æ----√æ√æ√æ.DateReplacementsIt.java√æ√æ[source,java]√æ----√æ    @Before√æ    public void setup(){√æ        now = Calendar.getInstance();√æ    }√æ√æ    @Test√æ    @DataSet(value = ""date-replacements.yml"",disableConstraints = true) //disabled constraints so we can have a TWEET with inexistent USER_ID√æ    public void shouldReplaceDateWithNowPlaceHolder() {√æ        Tweet tweet = (Tweet) EntityManagerProvider.em().createQuery(""select t from Tweet t where t.id = '1'"").getSingleResult();√æ        assertThat(tweet).isNotNull();√æ        assertThat(tweet.getDate().get(Calendar.DAY_OF_MONTH)).isEqualTo(now.get(Calendar.DAY_OF_MONTH));√æ        assertThat(tweet.getDate().get(Calendar.HOUR_OF_DAY)).isEqualTo(now.get(Calendar.HOUR_OF_DAY));√æ    }√æ----√æ√æ==== Null replacer√æ√æ.null-replacements.yml√æ----√æTWEET:√æ- ID: ""1""√æ  CONTENT: ""[null]""√æ  USER_ID: 1√æ- ID: ""2""√æ  CONTENT: ""null""√æ  USER_ID: 1√æ----√æ√æ.NullReplacementsIt.java√æ[source,java]√æ----√æ    @Test√æ    @DataSet(value = ""null-replacements.yml"", disableConstraints = true)√æ    public void shouldReplaceNullPlaceholder() {√æ        Tweet tweet = (Tweet) EntityManagerProvider.em().createQuery(""select t from Tweet t where t.id = '1'"").getSingleResult();√æ        assertThat(tweet).isNotNull();√æ        assertThat(tweet.getContent()).isNull();√æ√æ        Tweet tweet2 = (Tweet) EntityManagerProvider.em().createQuery(""select t from Tweet t where t.id = '2'"").getSingleResult();√æ        assertThat(tweet2).isNotNull();√æ        assertThat(tweet2.getContent()).isNotNull().isEqualTo(""null"");√æ    }√æ----√æ√æ==== Custom replacer√æ√æThe custom replacer makes it possible to create your own replacers. √æ√æFirst we need to implement the `Replacer` interface:√æ√æ.CustomReplacer.java√æ[source,java]√æ----√æ/**√æ * Example implementation of Replacer which replaces string 'FOO' for 'BAR'√æ *√æ */√æpublic class CustomReplacer implements Replacer {√æ√æ    @Override√æ    public void addReplacements(ReplacementDataSet dataSet) {√æ        dataSet.addReplacementSubstring(""FOO"", ""BAR"");√æ    }√æ√æ    @Override√æ    public boolean equals(Object o) {√æ        if (this == o) return true;√æ        return o != null && getClass() == o.getClass();√æ    }√æ√æ    @Override√æ    public int hashCode() {√æ        return Objects.hash(getClass());√æ    }√æ}√æ----√æ√æ.custom-replacements.yml√æ----√æTWEET:√æ- ID: ""1""√æ  CONTENT: ""FOO""√æ  USER_ID: 1√æ----√æ√æ√æ.CustomReplacementIt.java√æ[source,java]√æ----√æ@DBUnit(replacers = CustomReplacer.class) <1>√æpublic class CustomReplacementIt {√æ√æ    @Rule√æ    public EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it"");√æ√æ    @Rule√æ    public DBUnitRule dbUnitRule = DBUnitRule.instance(""rules-it"", emProvider.connection());√æ√æ    @Test√æ    @DataSet(value = ""datasets/yml/custom-replacements.yml"", disableConstraints = true, executorId = ""rules-it"")√æ    public void shouldReplaceFoo() {√æ        Tweet tweet = (Tweet) EntityManagerProvider.em().createQuery(""select t from Tweet t where t.id = '1'"").getSingleResult();√æ        assertThat(tweet).isNotNull();√æ        assertThat(tweet.getContent()).isNotNull().isEqualTo(""BAR"");√æ    }√æ}√æ----√æ<1> Custom replacer is enabled via `@DBUnit` annotation `replacers` attribute.√æ√æ√æ[TIP]√æ====√æYou can also register a custom replacer in `dbunit-config.yml`:√æ√æ.src/test/resources/config/sample-dbunit.yml:√æ----√æcacheConnection: false√æcacheTableNames: false√æleakHunter: true√æproperties:√æ  batchedStatements:  true√æ  qualifiedTableNames: true√æ  schema: public√æ  batchSize: 200√æ  fetchSize: 200√æ  allowEmptyFields: true√æ  escapePattern: ""[?]""√æ  datatypeFactory: !!com.github.database.rider.core.configuration.DBUnitConfigTest$MockDataTypeFactory {}√æ  replacers: [!!com.github.database.rider.core.replacers.CustomReplacer {}]√æ----√æ√æ====√æ√æ=== DataSet providers√æ√æA dataset provider is a *Java class responsible for defining a dataset* instead of having `yml`, `json`, `xml` files representing your datasets. Following are the steps for creating and using a dataset provider:√æ√æ. First create a class which implements `DataSetProvider` interface:√æ+ √æ[source, java]√æ----√æpublic class UserDataSetProvider implements DataSetProvider {√æ√æ        @Override√æ        public IDataSet provide() throws DataSetException {√æ            DataSetBuilder builder = new DataSetBuilder();√æ            IDataSet dataSet = builder√æ                    .defaultValue(""id"", -1) //default value for all tables that don't provide a value for 'id' column√æ                    .table(""USER"") //start adding rows to 'USER' table√æ                        .column(""ID"",1)√æ                        .column(name,""@realpestano"")√æ                    .row() //keeps adding rows to the current table√æ                        .column(id,2)√æ                        .column(""NAME"",""@dbunit"")√æ                    .table(""TWEET"") //starts adding rows to 'TWEET' table√æ                        .defaultValue(""LIKES"", 99) //default value only for table tweet, the value will be used if column is not specified√æ                        .column(""ID"",""abcdef12345"")√æ                        .column(""CONTENT"",""dbunit rules!"")√æ                        .column(""DATE"",""[DAY,NOW]"")√æ                    .table(""FOLLOWER"").column(id,1)√æ                        .column(""USER_ID"",1)√æ                        .column(""FOLLOWER_ID"",2)√æ                    .table(""USER"")// we still can add rows to table already added√æ                        .column(name,""@new row"")√æ                    .build();√æ            return dataSet;√æ        }√æ    }√æ----√æ+√æThe above DataSet provider will generate a dataset like below:√æ+√æ----√æFOLLOWER:√æ  - ID: 1√æ    USER_ID: 1√æ    FOLLOWER_ID: 2√æ√æTWEET:√æ  - ID: ""abcdef12345""√æ    CONTENT: ""dbunit rules!""√æ    DATE: ""2019-05-14 19:26:56.0""√æ    LIKES: 99√æ√æUSER:√æ  - ID: 1√æ    NAME: ""@dbunit""√æ  - ID: 2√æ    NAME: ""@dbrider""√æ  - ID: -1√æ    NAME: ""@new row""√æ----√æ+√æTIP: For more complex dataset examples see https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/dataset/builder/DataSetBuilderTest.java[DataSetBuilder tests here^].√æ+√æ√æ[NOTE]√æ====√æThe above dataset can be declared using `columns`...`values` syntax:√æ√æ----√æbuilder.defaultValue(""id"", -1)√æ       .table(""user"")√æ            .columns(""id"", ""name"")√æ            .values(1,  ""@dbrider"")√æ            .values(2,  ""@dbunit"")√æ            .values(null,  ""@dbunit3"")//will use default value√æ       .table(""tweet"")√æ            .defaultValue(""likes"", 99)√æ            .columns(""id"", ""content"", ""date"")√æ            .values(""abcdef12345"", ""dbunit rules!"", ""[DAY,NOW]"")√æ       .table(""follower"")√æ            .columns(""id"", ""user_id"", ""follower_id"")√æ            .values(1,  1, 2)√æ       .build();√æ----√æ√æTIP: For datasets with lots of rows and few columns this approach can fit better.√æ√æ====√æ√æ√æ. Now use the DataSet provider in `@DataSet` annotation:√æ+√æ[source, java]√æ----√æ    @Test√æ    @DataSet(provider = UserDataSetProvider.class, cleanBefore = true)√æ    public void shouldSeedDatabaseProgrammatically() {√æ        List<User> users = EntityManagerProvider.em().createQuery(""select u from User u "").getResultList();√æ        assertThat(users).√æ                isNotNull().√æ                isNotEmpty().hasSize(3).√æ                extracting(""name"").√æ                contains(""@dbunit"", ""@dbrider"", ""@new row"");√æ    }√æ---- √æ+√æTIP: For more examples, see dataset provider https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/DataSetProviderIt.java[tests here^].√æ√æNOTE: You can also use DataSetProvider in `@ExpectedDataset` annotation.√æ√æ==== DataSet providers DBUnit config√æ√æBy default DataSetProviders will use <<DBUnit Configuration, global DBUnit configuration>> configured in `dbunit.yml` file so you *will not be able* to use `@DBUnit` to configure providers.√æ√æHowever, you can pass a DBUnit configuration when creating your dataset provider:√æ√æ```√æ   DBUnitConfig config = new DBUnitConfig().cacheTableNames(true)√æ                    .addDBUnitProperty(""caseSensitiveTableNames"", true);√æ            DataSetBuilder builder = new DataSetBuilder(config);√æ            builder.table(""USER"")√æ                    .row()√æ                    .column(""ID"", 1)√æ                    .column(""NAME"", ""@dbunit"")√æ                    .row()√æ                    .column(""ID"", 2)√æ                    .column(""NAME"", ""@dbrider"");√æ            return builder.build();√æ```√æ√æNOTE: Configuration from `@DataSet` is used the same way as in file based datasets.√æ√æ=== RiderDSL√æ√æIf you cannot rely on `@DataSet` annotation because your test runner will not read it (e.g cucumber test runner, spock, kotlin test etc...) or because you don't like annotations, you can use *RiderDSL* to create datasets:√æ√æ[source, java]√æ----√æ    @Test√æ     /*same as: @DataSet(value = ""yml/user.yml"", cleanBefore=true)√æ                @DBUnit(caseSensitiveTableNames = false) */√æ    public void shouldSeedDatabaseUsingRiderDSL() {√æ        RiderDSL.withConnection(emProvider.connection())√æ                .withDataSetConfig(new DataSetConfig(""datasets/yml/user.yml"")√æ                        .cleanBefore(true))√æ                .withDBUnitConfig(new DBUnitConfig().addDBUnitProperty(""caseSensitiveTableNames"", false))√æ                .createDataSet();√æ        List<User> users = EntityManagerProvider.em().createQuery(""select u from User u "").getResultList();√æ        assertThat(users).√æ                isNotNull().√æ                isNotEmpty().√æ                hasSize(2);√æ    }√æ----√æ√æTIP: See more https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/dsl/RiderDSLIt.java#L24[examples here^].√æ√æ=== Dynamic connection config√æ√æIn order to have dynamic JDBC connection on your tests one can use system properties, see example below:√æ√æ[source,java]√æ----√æ@RunWith(JUnit4.class)√æpublic class EntityManagerSystemConfigOverrideTestIt {√æ    private static final String PROP_KEY_URL = ""javax.persistence.jdbc.url"";√æ    private static final String PROP_VALUE_URL = ""jdbc:hsqldb:mem:susi;DB_CLOSE_DELAY=-1"";√æ    private static final String PROP_KEY_DRIVER = ""javax.persistence.jdbc.driver"";√æ    private static final String PROP_KEY_USER = ""javax.persistence.jdbc.user"";√æ    private static final String PROP_KEY_PASSWORD = ""javax.persistence.jdbc.password"";√æ√æ    @Rule√æ    public EntityManagerProvider emProvider = EntityManagerProvider.instance(""rules-it"");√æ√æ    @Rule√æ    public DBUnitRule dbUnitRule = DBUnitRule.instance(emProvider.connection());√æ√æ    @BeforeClass√æ    public static void setup() {√æ        System.clearProperty(PROP_KEY_URL);√æ        System.clearProperty(PROP_KEY_DRIVER);√æ        System.clearProperty(PROP_KEY_USER);√æ        System.clearProperty(PROP_KEY_PASSWORD);√æ        System.setProperty(PROP_KEY_URL, ""jdbc:hsqldb:mem:susi;DB_CLOSE_DELAY=-1"");√æ        System.setProperty(PROP_KEY_DRIVER, ""org.hsqldb.jdbc.JDBCDriver"");√æ        System.setProperty(PROP_KEY_USER, ""sa"");√æ        System.setProperty(PROP_KEY_PASSWORD, """");√æ    }√æ√æ    @AfterClass√æ    public static void tearDown() {√æ        System.clearProperty(PROP_KEY_URL);√æ        System.clearProperty(PROP_KEY_DRIVER);√æ        System.clearProperty(PROP_KEY_USER);√æ        System.clearProperty(PROP_KEY_PASSWORD);√æ    }√æ√æ    //tests using new connection√æ----√æ√æThis way the https://github.com/database-rider/database-rider/blob/78b0ae11eeed17354f8adc6c35640a160a1447ee/rider-core/src/test/resources/META-INF/persistence.xml#L4-L20[original persistence.xml^] configuration was replaced dynamically before test execution.√æ√æTIP: see source code of example above https://github.com/database-rider/database-rider/blob/78b0ae11eeed17354f8adc6c35640a160a1447ee/rider-core/src/test/java/com/github/database/rider/core/EntityManagerDynamicOverrideTestIt.java[here].√æ√æ=== Transactional Tests√æ√æIn case of `ExpectedDataSet` you'll usually need a transaction to modify database in order to match expected dataset. In such case you can use a *transactional* test:√æ√æ[source, java, subs=""quotes""]√æ----√æ    @Test√æ    @DataSet(*transactional=true*)√æ    @ExpectedDataSet(value = ""yml/expectedUsers.yml"",ignoreCols = ""id"")√æ    public void shouldMatchExpectedDataSet() {√æ        User u = new User();√æ        u.setName(""non expected user1"");√æ        User u2 = new User();√æ        u2.setName(""non expected user2"");√æ        emProvider.em().persist(u);√æ        emProvider.em().persist(u2);√æ    }√æ----√æ√æNote that Database Rider will start a transaction before test and commit the transaction *after* test execution but *before* expected dataset comparison.√æ√æBelow is a pure JDBC example where commented code is not needed because the test is transactional:√æ√æ[source, java, linenums]√æ----√æ    @Test√æ    @DataSet(cleanBefore = true, transactional = true)√æ    @ExpectedDataSet(value = ""usersInserted.yml"")√æ    public void shouldInserUsers() throws SQLException {√æ        Connection connection = flyway.getDataSource().getConnection();√æ        //connection.setAutoCommit(false); //transactional=true√æ        java.sql.Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,√æ                ResultSet.CONCUR_UPDATABLE);√æ√æ        statement.addBatch(""INSERT INTO User VALUES (1, 'user1')"");√æ        statement.addBatch(""INSERT INTO User VALUES (2, 'user2')"");√æ        statement.addBatch(""INSERT INTO User VALUES (3, 'user3')"");√æ        statement.executeBatch();√æ        //connection.commit();√æ        //connection.setAutoCommit(false);√æ    }√æ----√æTIP: Above example code (which uses JUnit5 and Flyway) can be https://github.com/database-rider/database-rider/blob/master/rider-junit5/src/test/java/com/github/database/rider/junit5/FlywayIt.java#L26[found here^].√æ√æ=== EntityManagerProvider√æ√æIt is a component which holds JPA entity managers for your tests. To activate it just use the EntityManagerProvider rule in your test use:√æ√æ[source,java]√æ----√æ@RunWith(JUnit4.class)√æpublic class DatabaseRiderIt {√æ√æ    @Rule√æ    public EntityManagerProvider emProvider = EntityManagerProvider.instance(""PU-NAME"");<1>√æ√æ}√æ----√æ<1> It will retrieve the entity manager based on a test persistence.xml and store in into EntityManagerProvider which can hold multiple entity managers.√æ√æNOTE: You can use @BeforeClass instead of junit rule to instantiate the provider.√æ√æIMPORTANT: EntityManagerProvider will cache entity manager instance to avoid creating database multiple times, you just need to be careful with JPA first level cache between tests (EntityManagerProvider Rule and <<DBUnit Interceptor,CDI interceptor>> clears first level cache before each test).√æ√æNow you can use emProvider.getConnection() to retrieve jdbc connection and emProvider.em() to retrieve underlying entityManager.√æ√æ*PU-NAME* refers to test persistence.xml unit name:√æ√æ.src/test/resources/META-INF/persistence.xml√æ[source,java]√æ----√æ<?xml version=""1.0"" encoding=""UTF-8""?>√æ<persistence version=""2.0"" xmlns=""http://java.sun.com/xml/ns/persistence"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"">√æ√æ    <persistence-unit name=""PU-NAME"" transaction-type=""RESOURCE_LOCAL"">√æ√æ    <class>com.github.database.rider.model.User</class>√æ    <class>com.github.database.rider.model.Tweet</class>√æ    <class>com.github.database.rider.model.Follower</class>√æ√æ    <properties>√æ        <property name=""javax.persistence.jdbc.url"" value=""jdbc:hsqldb:mem:test;DB_CLOSE_DELAY=-1""/>√æ        <property name=""javax.persistence.jdbc.driver"" value=""org.hsqldb.jdbcDriver""/>√æ        <property name=""javax.persistence.schema-generation.database.action"" value=""drop-and-create""/>√æ        <property name=""javax.persistence.jdbc.user"" value=""sa""/>√æ        <property name=""javax.persistence.jdbc.password"" value=""""/>√æ        <property name=""eclipselink.logging.level"" value=""INFO""/>√æ        <property name=""eclipselink.logging.level.sql"" value=""FINE""/>√æ        <property name=""eclipselink.logging.parameters"" value=""false""/>√æ    </properties>√æ√æ    </persistence-unit>√æ√æ</persistence>√æ----√æNOTE: It will only work with *transaction-type=""RESOURCE_LOCAL""* because internally it uses Persistence.createEntityManagerFactory(unitName) to get entityManager instance.√æ√æAbove JPA configuration depends on hsqldb (an in memory database) and eclipse link (JPA provider):√æ√æ[source,xml]√æ----√æ<dependency>√æ    <groupId>org.eclipse.persistence</groupId>√æ    <artifactId>eclipselink</artifactId>√æ    <version>2.5.2</version>√æ    <scope>test</scope>√æ</dependency>√æ<dependency>√æ    <groupId>org.hsqldb</groupId>√æ    <artifactId>hsqldb</artifactId>√æ    <version>2.3.3</version>√æ    <scope>test</scope>√æ</dependency>√æ----√æ√æNOTE: A hibernate entity manager config sample can be https://github.com/database-rider/database-rider/blob/master/rider-examples/src/test/resources/META-INF/persistence.xml[found here^].√æ√æ√æTIP: EntityManager provider utility also can be used in other contexts like a CDI producer, https://github.com/database-rider/database-rider/blob/master/rider-cdi/src/test/java/com/github/database/rider/cdi/EntityManagerProducer.java#L21[see here].√æ√æ√æ== CDI module√æ√æIf you use CDI in your tests then you should give a try in Database Rider https://github.com/database-rider/database-rider/tree/master/rider-cdi[CDI module^]:√æ√æ[source,xml]√æ----√æ<dependency>√æ    <groupId>com.github.database-rider</groupId>√æ    <artifactId>rider-cdi</artifactId>√æ    <version>1.14.0</version>√æ    <scope>test</scope>√æ</dependency>√æ----√æ√æ=== DBUnit Interceptor√æ√æCDI module main component is a CDI interceptor which configures datasets before your tests. To enable DBUnit interceptor you'll need√æconfigure it in you test beans.xml:√æ√æ.src/test/resources/META-INF/beans.xml√æ[source,xml]√æ----√æ<?xml version=""1.0"" encoding=""UTF-8""?>√æ<beans xmlns=""http://java.sun.com/xml/ns/javaee""√æ       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""√æ       xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/beans_1_0.xsd"">√æ√æ       <interceptors>√æ              <class>com.github.database.rider.cdi.DBUnitInterceptorImpl</class>√æ       </interceptors>√æ</beans>√æ√æ----√æ√æand then enable it in your tests by using *@DBUnitInterceptor* annotation (class or method level):√æ√æ[source,java]√æ----√æ@RunWith(CdiTestRunner.class)√æ@DBUnitInterceptor√æpublic class DeltaspikeUsingInterceptorIt {√æ√æ    @Inject√æ    DeltaSpikeContactService contactService;√æ√æ√æ    @Test√æ    @DataSet(""datasets/contacts.yml"")√æ    public void shouldQueryAllCompanies() {√æ        assertNotNull(contactService);√æ        assertThat(contactService.findCompanies()).hasSize(4);√æ    }√æ}√æ----√æ√æ[IMPORTANT]√æ====√æMake sure the test class itself is a CDI bean so it can be intercepted by `DBUnitInterceptor`. If you're using https://deltaspike.apache.org/documentation/test-control.html[Deltaspike test control^] just enable the following√æproperty in test/resources/META-INF/apache-deltaspike.properties:√æ----√æ   deltaspike.testcontrol.use_test_class_as_cdi_bean=true√æ----√æ====√æ√æ== Cucumber module√æ√æthis module brings a Cucumber runner which is CDI aware.√æ√æNOTE: If you don't use CDI you'll need to https://github.com/database-rider/database-rider#programmatic-creating-datasets[create datasets programmatically] because Cucumber `official` runner https://github.com/cucumber/cucumber-jvm/issues/393[doesn't support JUnit rules^].√æ√æ√æ[source,xml]√æ----√æ<dependency>√æ    <groupId>com.github.database-rider</groupId>√æ    <artifactId>rider-cucumber</artifactId>√æ    <version>1.14.0</version>√æ    <scope>test</scope>√æ</dependency>√æ----√æ√æNow you just need to use *CdiCucumberTestRunner*.√æ√æ=== Examples√æ√æ.feature file (src/test/resources/features/contacts.feature)√æ----√æFeature: Contacts test√æ  As a user of contacts repository√æ  I want to crud contacts√æ  So that I can expose contacts service√æ√æ√æ  Scenario Outline: search contacts√æ    Given we have a list of constacts√æ    When we search contacts by name ""<name>""√æ    Then we should find <result> contacts√æ√æ  Examples: examples1√æ  | name     | result |√æ  | delta    | 1      |√æ  | sp       | 2      |√æ  | querydsl | 1      |√æ  | abcd     | 0      |√æ√æ√æ  Scenario: delete a contact√æ√æ    Given we have a list of contacts√æ    When we delete contact by id 1√æ    Then we should not find contact 1√æ----√æ√æ.Cucumber cdi runner√æ[source,java]√æ----√æpackage com.github.database.rider.examples.cucumber;√æ√æimport com.github.database.rider.cucumber.CdiCucumberTestRunner;√æimport cucumber.api.CucumberOptions;√æimport org.junit.runner.RunWith;√æ√æ√æ@RunWith(CdiCucumberTestRunner.class)√æ@CucumberOptions(√æ        features = {""src/test/resources/features/contacts.feature""},√æ        plugin = {""json:target/cucumber.json""}√æ        //glue = ""com.github.database.rider.examples.glues"" <1>√æ)√æpublic class ContactFeature {√æ}√æ----√æ√æ<1> You can use glues so step definitions and the runner can be in different packages for reuse between features.√æ√æ.Step definitions√æ[source,java]√æ----√æpackage com.github.database.rider.examples.cucumber; //<1>√æ√æimport com.github.database.rider.api.dataset.DataSet;√æimport cucumber.api.java.en.Given;√æimport cucumber.api.java.en.Then;√æimport cucumber.api.java.en.When;√æimport org.example.jpadomain.Contact;√æimport org.example.jpadomain.Contact_;√æimport org.example.service.deltaspike.ContactRepository;√æ√æimport javax.inject.Inject;√æ√æimport static org.junit.Assert.assertEquals;√æimport static org.junit.Assert.assertNull;√æ√æ@DBUnitInterceptor <2>√æpublic class ContactSteps {√æ√æ    @Inject√æ    ContactRepository contactRepository;√æ√æ    Long count;√æ√æ    @Given(""^we have a list of contacts"")√æ    @DataSet(""datasets/contacts.yml"") //<2>√æ    public void given() {√æ        assertEquals(contactRepository.count(), new Long(3));√æ    }√æ√æ    @When(""^^we search contacts by name \""([^\""]*)\""$"")√æ    public void we_search_contacts_by_name_(String name) throws Throwable {√æ        Contact contact = new Contact();√æ        contact.setName(name);√æ        count = contactRepository.countLike(contact, Contact_.name);√æ    }√æ√æ√æ    @Then(""^we should find (\\d+) contacts$"")√æ    public void we_should_find_result_contacts(Long result) throws Throwable {√æ        assertEquals(result,count);√æ    }√æ√æ√æ    @When(""^we delete contact by id (\\d+)$"")√æ    public void we_delete_contact_by_id(long id) throws Throwable {√æ        contactRepository.remove(contactRepository.findBy(id));√æ    }√æ√æ    @Then(""^we should not find contact (\\d+)$"")√æ    public void we_should_not_find_contacts_in_database(long id) throws Throwable {√æ        assertNull(contactRepository.findBy(id));√æ    }√æ}√æ----√æ√æ<1> Step definitions must be in the same package of the runner. To use different package you can use *glues* as commented above.√æ<2> Activates DBUnit CDI interceptor which will read @DataSet annotation in cucumber steps to prepare the database.√æ√æ== Programmatic creating datasets√æ√æYou can create datasets without JUnit Rule or CDI as we saw above, here is a pure cucumber example (for the same https://github.com/database-rider/database-rider#51-examples[feature above]):√æ√æNOTE: If you are looking for a way to *define datasets programmatically* look into <<DataSet providers>>.√æ√æ[source,java,linenums]√æ----√æ@RunWith(Cucumber.class)√æ@CucumberOptions(√æ        features = {""src/test/resources/features/contacts-without-cdi.feature""},√æ        plugin = {""json:target/cucumber.json""}√æ        //glue = ""com.github.database.rider.examples.glues""√æ)√æpublic class ContactFeatureWithoutCDI {√æ}√æ----√æ√æAnd here are the step definitions:√æ√æ[source,java,linenums]√æ----√æpublic class ContactStepsWithoutCDI {√æ√æ√æ    EntityManagerProvider entityManagerProvider = EntityManagerProvider.newInstance(""customerDB"");√æ√æ    DataSetExecutor dbunitExecutor;√æ√æ    Long count;√æ√æ√æ    @Before√æ    public void setUp(){√æ        dbunitExecutor = DataSetExecutorImpl.instance(new ConnectionHolderImpl(entityManagerProvider.connection()));√æ        em().clear();//important to clear JPA first level cache between scenarios√æ    }√æ√æ√æ    @Given(""^we have a list of contacts2$"")√æ    public void given() {√æ        dbunitExecutor.createDataSet(new DataSetConfig(""contacts.yml""));√æ        assertEquals(em().createQuery(""select count(c.id) from Contact c"").getSingleResult(), new Long(3));√æ    }√æ√æ    @When(""^^we search contacts by name \""([^\""]*)\""2$"")√æ    public void we_search_contacts_by_name_(String name) throws Throwable {√æ        Contact contact = new Contact();√æ        contact.setName(name);√æ        Query query =  em().createQuery(""select count(c.id) from Contact c where UPPER(c.name) like :name"");√æ        query.setParameter(""name"",""%""+name.toUpperCase()+""%"");√æ        count = (Long) query.getSingleResult();√æ    }√æ√æ√æ    @Then(""^we should find (\\d+) contacts2$"")√æ    public void we_should_find_result_contacts(Long result) throws Throwable {√æ        assertEquals(result,count);√æ    }√æ√æ√æ√æ    @When(""^we delete contact by id (\\d+) 2$"")√æ    public void we_delete_contact_by_id(long id) throws Throwable {√æ        tx().begin();√æ        em().remove(em().find(Contact.class,id));√æ        tx().commit();√æ    }√æ√æ    @Then(""^we should not find contact (\\d+) 2$"")√æ    public void we_should_not_find_contacts_in_database(long id) throws Throwable {√æ        assertNull(em().find(Contact.class,id));√æ    }√æ}√æ----√æ√æTIP: For a fluent API to create datasets, you can use <<RiderDSL>> instead of DataSetExecutor.√æ√æ== JUnit 5√æ√æhttp://junit.org/junit5/[JUnit 5] is the new version of JUnit and comes with a new extension model, so instead of *rules* you will use extensions in your tests. See example below:√æ√æ[source,xml]√æ----√æ<dependency>√æ    <groupId>com.github.database-rider</groupId>√æ    <artifactId>rider-junit5</artifactId>√æ    <version>1.14.0</version>√æ    <scope>test</scope>√æ</dependency>√æ----√æ√æ√æ[source,java,linenums]√æ----√æ@ExtendWith(DBUnitExtension.class)√æ@RunWith(JUnitPlatform.class)√æpublic class DBUnitJUnit5Test {√æ√æ    private ConnectionHolder connectionHolder = () -> instance(""junit5-pu"").connection(); <1>√æ√æ    @BeforeAll√æ    @DataSet(""empty.yml"")√æ    public static void setUp() {√æ    }√æ√æ    @BeforeEach√æ    @DataSet(""users.yml"")√æ    public static void setUp() {√æ    }√æ√æ    @Test√æ    @DataSet(value = ""usersWithTweet.yml"")√æ    public void shouldListUsers() {√æ        List<User> users = em().createQuery(""select u from User u"").getResultList();√æ        assertThat(users).isNotNull().isNotEmpty().hasSize(2);√æ    }√æ----√æ<1> DBUnit extension will get JDBC connection by reflection so you need to declare a *field* or *method* with `ConnectionHolder` as return type.√æ√æ[IMPORTANT]√æ====√æ√æIf you use SpringBoot extension for JUnit5 you don't need to declare the field or method, see an https://github.com/database-rider/database-rider/blob/master/rider-examples/spring-boot-dbunit-sample/src/test/java/com/github/database/rider/springboot/SpringBootDBUnitTest.java#L19[example here^].√æ√æTIP: If you're using JUnit4 and SpringTestRunner, see <<Spring, Rider Spring module>>√æ====√æ√æTIP: You can configure JDBC connection using @DBUnit annotation or dbunit.yml, see <<JDBC Connection>>.√æ√æ[NOTE]√æ====√æYou can use `@DBRider` (at test or method level) to enable the extension: √æ√æ[source,java]√æ----√æ@RunWith(JUnitPlatform.class)√æpublic class DBRiderAnnotationIt {√æ√æ    private ConnectionHolder connectionHolder = () ->√æ            EntityManagerProvider.instance(""junit5-pu"").connection();√æ√æ    @DBRider //shortcut for @ExtendWith(DBUnitExtension.class) and @Test√æ    @DataSet(value = ""usersWithTweet.yml"")√æ    public void shouldListUsers() {√æ        List users = EntityManagerProvider.em().√æ                createQuery(""select u from User u"").getResultList();√æ        assertThat(users).isNotNull().isNotEmpty().hasSize(2);√æ        assertThat(users.get(0)).isEqualTo(new User(1));√æ    }√æ}√æ----√æ====√æ√æ== Spring√æ√æAdd Database Rider Spring extension to your project√æ√æ[source,xml]√æ----√æ<dependency>√æ    <groupId>com.github.database-rider</groupId>√æ    <artifactId>rider-spring</artifactId>√æ    <version>1.14.0</version>√æ    <scope>test</scope>√æ</dependency>√æ----√æ√æTo enable Database Rider tests use `@DBRider` annotation (from `rider-spring` module), example:√æ√æ[source, java, linenums]√æ----√æ@RunWith(SpringRunner.class)√æ@SpringBootTest√æ@DBRider√æpublic class SpringBootDBUnitTest {√æ√æ    @Autowired√æ    private UserRepository userRepository;√æ√æ    @Test√æ    @DataSet(""users.yml"")√æ    @ExpectedDataSet(""expectedUsers.yml"")√æ    public void shouldDeleteUser() throws Exception {√æ        assertThat(userRepository).isNotNull();√æ        assertThat(userRepository.count()).isEqualTo(3);√æ        userRepository.delete(userRepository.findOne(2L));√æ    }√æ}√æ----√æ√æDatabase Rider will access to database via dataSource registered in application context.√æ√æIMPORTANT: This module is designed to work with *JUnit4* and *SpringRunner*, for JUnit5 please use `@DBRider` annotation from `JUnit5` module, see an https://github.com/database-rider/database-rider/blob/master/rider-examples/spring-boot-dbunit-sample/src/test/java/com/github/database/rider/springboot/SpringBootDBUnitTest.java#L19[example here^].√æ√æ√æ== Quarkus√æ√æAs Quarkus tests are CDI beans you can just use `@DBRider` from <<CDI module, CDI module>>:√æ√æ```√æ@QuarkusTest√æ@DBRider√æpublic class QuarkusDBUnitTest {√æ√æ    @Inject√æ    BookRepository repository;√æ√æ    @Test√æ    @DataSet(value = ""books.yml"")√æ    public void shouldFindAllBooks() {√æ        List<Book> books = repository.findAll();√æ        assertThat(books)√æ                .isNotNull()√æ                .hasSize(4)√æ                .extracting(""title"")√æ                .contains(""H2G2"",""Dune"", ""Nineteen Eighty-Four"", ""The Silmarillion"");√æ    }√æ√æ    @Test√æ    @DataSet(value = ""books.yml"")√æ    public void shouldFindAllBooksViaRestApi() {√æ        given()√æ             .when().get(""/api/books"")√æ             .then()√æ             .statusCode(OK.getStatusCode())√æ             .body("""", hasSize(4))√æ             .body(""title"", hasItem(""The Silmarillion""));√æ    }√æ}√æ√æ```√æ√æTIP: See full https://github.com/database-rider/database-rider/blob/master/rider-examples/quarkus-dbunit-sample/src/test/java/com/github/quarkus/sample/QuarkusDBUnitTest.java[example here^].√æ√æ== Micronaut√æ√æYou can use DBRider in Micronaut JUnit5 tests:√æ√æ```√æ@MicronautTest√æ@com.github.database.rider.junit5.api.DBRider√æpublic class PetRepositoryTest {√æ√æ    @Inject√æ    PetRepository petRepository;√æ√æ    @Test√æ    @DataSet(""pets.yml"")√æ    void testRetrievePetAndOwner() {√æ        Pet lassie = petRepository.findByName(""Lassie"").orElse(null);√æ        assertNotNull(lassie);√æ        assertEquals(""Lassie"", lassie.getName());√æ        assertEquals(""Fred"", lassie.getOwner().getName());√æ    }√æ}√æ```√æ√æTIP: See full https://github.com/database-rider/database-rider/blob/master/rider-examples/rider-micronaut/src/test/java/example/repositories/PetRepositoryTest.java[example here^].√æ√æ== Leak Hunter√æ√æLeak hunter is a component based on https://vladmihalcea.com/2016/07/12/the-best-way-to-detect-database-connection-leaks/[this blog post^] which counts open jdbc connections before and after test execution.√æ√æTo enable it just use *leakHunter = true* in `@DBUnit` annotation, example:√æ√æ[source, java, linenums]√æ----√æ@RunWith(JUnit4.class)√æ@DBUnit(leakHunter = true)√æpublic class LeakHunterIt {√æ√æ    @Rule√æ    public DBUnitRule dbUnitRule = DBUnitRule.instance(new ConnectionHolderImpl(getConnection()));√æ√æ    @Rule√æ    public ExpectedException exception = ExpectedException.none();√æ√æ    @Test√æ    @DataSet(""yml/user.yml"")√æ    public void shouldFindConnectionLeak() {√æ         exception.expect(LeakHunterException.class); <1>√æ         exception.expectMessage(""Execution of method shouldFindConnectionLeak left 1 open connection(s)."");√æ         createLeak();√æ     }√æ√æ     @Test√æ     @DataSet(""yml/user.yml"")√æ     public void shouldFindTwoConnectionLeaks()  {√æ         exception.expect(LeakHunterException.class);√æ         exception.expectMessage(""Execution of method shouldFindTwoConnectionLeaks left 2 open connection(s)."");√æ         createLeak();√æ         createLeak();√æ     }√æ√æ     @Test√æ     @DataSet(""yml/user.yml"")√æ     @DBUnit(leakHunter = false)√æ     public void shouldNotFindConnectionLeakWhenHunterIsDisabled() {√æ           createLeak();√æ     }√æ√æ}√æ----√æ<1> If number of connections after test execution are greater than before then a *LeakHunterException* will be raised.√æ√æTIP: Complete source code of example above can be https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/LeakHunterIt.java[found here^].√æ√æ== Export DataSets√æ√æManual creation of datasets is a very error prone task. In order to export database state *after test* execution into datasets files or <<DataSet providers, DataSetBuilder>> one can use *@ExportDataSet* Annotation or use DataSetExporter component.√æ√æ=== Example√æ√æ[source, java, linenums]√æ----√æ    @Test√æ    @DataSet(""datasets/yml/users.yml"")√æ    @ExportDataSet(format = DataSetFormat.XML,outputName=""target/exported/xml/allTables.xml"")√æ    public void shouldExportAllTablesInXMLFormat() {√æ       //data inserted inside method can be exported√æ    }√æ----√æ√æAfter above test execution all tables will be exported to a xml dataset.√æ√æ√æNOTE: *XML*, *YML*, *JSON*, *XLS* and *CSV* formats are supported.√æ√æFor generating `DataSetBuilder` code you just need to specify *builderType* attribute in `@ExportDataSet`:√æ√æ[source, java]√æ----√æ    @Test√æ    @DataSet(""datasets/yml/users.yml"") //<1>√æ    @ExportDataSet(format = DataSetFormat.XML, outputName = ""target/exported/xml/AllTables.xml"", builderType = BuilderType.DEFAULT)√æ    public void shouldExportDataSetAsBuilderInDefaultSyntax() {√æ        //AllTables.java file containing DataSetBuilder code will be generated along with AllTables.xml file.√æ    }√æ√æ    @Test√æ    @DataSet(""datasets/yml/users.yml"") //<1>√æ    @ExportDataSet(format = DataSetFormat.XML, outputName = ""target/exported/xml/AllTables2.xml"", builderType = BuilderType.COLUMNS_VALUES)√æ    public void shouldExportDataSetAsBuilderInColumnValuesSyntax() {√æ        //AllTables.java file containing DataSetBuilder code will be generated along with AllTables2.xml file.√æ    }√æ----√æ√æTIP: Full example above (and other related tests) can be https://github.com/database-rider/database-rider/blob/master/rider-core/src/test/java/com/github/database/rider/core/exporter/ExportDataSetIt.java#L32[found here^].√æ√æ=== Configuration√æ√æFollowing table shows all exporter configuration options:√æ√æ[cols=""3*"", options=""header""]√æ|===√æ|Name | Description | Default√æ|format| Exported dataset file format.| YML√æ|includeTables| A list of table names to include in exported dataset.| Default is empty which means *ALL tables*.√æ|queryList| A list of select statements which the result will used in exported dataset.| {}√æ|dependentTables| If true will bring dependent tables of declared includeTables.| false√æ|outputName| Name (and path) of output file.| """"√æ|===√æ√æ√æ=== Programatic export√æ√æYou can also export DataSets without `@ExportDataSet` by using DataSetExporter component programmatically:√æ√æ[source,java,linenums]√æ----√æ    @Test√æ    @DataSet(cleanBefore=true)√æ    public void shouldExportYMLDataSetWithoutAnnotations() throws SQLException, DatabaseUnitException{√æ     tx().begin();√æ     User u1 = new User();√æ     u1.setName(""u1"");√æ     em().persist(u1);//just insert a user and assert it is present in exported dataset√æ     tx().commit();√æ     DataSetExporter.getInstance().export(emProvider.connection(),√æ     new DataSetExportConfig().outputFileName(""target/user.yml""));√æ     File ymlDataSet = new File(""target/user.yml"");√æ        assertThat(ymlDataSet).exists();√æ        assertThat(contentOf(ymlDataSet)).√æ               contains(""USER:""+NEW_LINE +√æ                  ""  - ID: 1""+NEW_LINE +√æ                  ""    NAME: \""u1\""""+NEW_LINE);√æ√æ    }√æ----√æ√æ=== DBUnit addon√æ√æYou can export datasets using https://forge.jboss.org/[JBoss forge^], see https://github.com/database-rider/dbunit-addon/[DBUnit Addon^].√æ√æ√æ== Examples√æ√æThere are a lot of examples that can also be used as documentation.√æ√æThe examples module which contains:√æ√æ* https://github.com/database-rider/database-rider/tree/master/rider-examples/jpa-productivity-boosters[JPA productivity boosters^]√æ* https://github.com/database-rider/database-rider/tree/master/rider-examples/dbunit-tomee-appcomposer-sample[DBUnit Application Composer^]√æ* https://github.com/database-rider/database-rider/tree/master/rider-examples/jOOQ-DBUnit-flyway-example/[jOOQ Flyway DBUnit^]√æ* https://github.com/database-rider/database-rider/tree/master/rider-examples/spring-boot-dbunit-sample/[SpringBoot Data DBUnit^]√æ* https://github.com/rmpestano/spring-events/blob/master/src/test/java/com/sambrannen/spring/events/repository/EventRepositoryTests.java#L47[Gradle, SpringBoot and JUnit5 example^]√æ* https://github.com/database-rider/database-rider/tree/master/rider-examples/quarkus-dbunit-sample/[Quarkus DBUnit^]√æ√æAnd also each module contain a lot of tests that you can use as example.√æ√æ== Changelog√æ√æSee project release https://github.com/database-rider/database-rider/blob/master/CHANGELOG.adoc[changelog here^].√æ√æ== Snapshots√æ√æSnapshots are available in maven central, to use it just add the following snippet in your pom.xml:√æ√æ[source,xml]√æ----√æ<repositories>√æ    <repository>√æ        <snapshots/>√æ        <id>snapshots</id>√æ        <name>libs-snapshot</name>√æ        <url>https://oss.sonatype.org/content/repositories/snapshots</url>√æ    </repository>√æ</repositories>√æ----"
RockyQu/MVPFrames,1307,100,5,15,User,False,Êï¥ÂêàÂ§ßÈáè‰∏ªÊµÅÂºÄÊ∫êÈ°πÁõÆÂπ∂‰∏îÂèØÈ´òÂ∫¶ÈÖçÁΩÆÂåñÁöÑ Android MVP Âø´ÈÄüÈõÜÊàêÊ°ÜÊû∂ÔºåÊîØÊåÅ AndroidX,https://github.com/RockyQu/MVPFrames,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 2, 'md': 2, 'gradle': 3, 'properties': 1, 'bat': 1}",530,5,19,2,20,1377,True,2,9,0,0,0,6,0,0,7,0,0,0,0,0,0,0,11,,24,,"# MVPFrames√æËøôÊòØ‰∏Ä‰∏™Âü∫‰∫é [MVPArms](https://github.com/JessYanCoding/MVPArms) Âíå [MVPArt](https://github.com/JessYanCoding/MVPArt) Âπ∂Êï¥Âêà‰∫ÜÂ§ßÈáè‰∏ªÊµÅÂºÄÊ∫êÈ°πÁõÆÂèØÈ´òÂ∫¶ÈÖçÁΩÆÂåñÁöÑ Android MVP Âø´ÈÄüÈõÜÊàêÊ°ÜÊû∂√æ√æ## Usage√æ* ÈÖçÁΩÆËá™ÂÆö‰πâApplicationÂøÖÈ°ªÁªßÊâøBaseApplicationÔºåBaseApplicationÂÆåÊàêHttp„ÄÅÂõæÁâá„ÄÅDB„ÄÅÊó•ÂøóÁÆ°ÁêÜÁ≠âÊ°ÜÊû∂ÁöÑÂàùÂßãÂåñÂ∑•‰Ωú  √æ* ‰ΩøÁî®Activity„ÄÅFragment„ÄÅViewHolder„ÄÅService„ÄÅAdapterÈúÄÁªßÊâøCommonActivity„ÄÅCommonFragment„ÄÅBaseViewHolder„ÄÅBaseService„ÄÅBaseAdapterÊù•ÂàùÂßãÂåñMVPÊû∂ÊûÑ  √æ* ÈÄöËøáApplicationËé∑ÂèñAppComponentÈáåÈù¢ÁöÑÂØπË±°ÂèØÁõ¥Êé•‰ΩøÁî®  √æ* ÁÆÄÂçïÂäüËÉΩÂèäÈ°µÈù¢Êó†ÈúÄÂºïÂÖ•MVP√æ√æ## Download√æGradle:√æ```√æcompile 'android.frame:MVPFrames:1.4.2'√æ```√æ√æ## Libraries√æ* [Dagger2](https://google.github.io/dagger)  √æ* [RxJava2](https://github.com/ReactiveX/RxJava)  √æ* [RxLifecycle](https://github.com/trello/RxLifecycle)  √æ* [ButterKnife](http://jakewharton.github.io/butterknife)  √æ* [Retrofit2](https://github.com/square/retrofit)  √æ* [Okhttp](https://github.com/square/okhttp)  √æ* [Glide](https://github.com/bumptech/glide)  √æ* [Gson](https://github.com/google/gson)  √æ* [RxPermissions](https://github.com/tbruyelle/RxPermissions)  √æ* [LeakCanary](https://github.com/square/leakcanary)  √æ* [Logg](https://github.com/DesignQu/Logg)  √æ√æ## History√æ[UpdateLog](https://github.com/DesignQu/MVPFrames/releases)   √æ√æ## Feedback√æ* Project  [Submit Bug or Idea](https://github.com/DesignQu/MVPFrames/issues)   √æ√æ## Thanks√æ[MVPArms](https://github.com/JessYanCoding/MVPArms)  √æ[MVPArt](https://github.com/JessYanCoding/MVPArt)  √æ√æ## About Me√æ* Email [250533855@qq.com](250533855@qq.com)  √æ* Home [http://rockycoder.cn](http://rockycoder.cn)  √æ* GitHub [https://github.com/RockyQu](https://github.com/RockyQu)  √æ√æ## License√æ```√æCopyright 2018 RockyQu√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ   http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
zond/android-diplicity,3105,8,4,8,User,False,Android client for the diplicity service.,https://diplicity-engine.appspot.com/,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",517,7,256,2,0,1304,True,23,63,2,3,0,15,0,1,9,0,2,78,880,849,0,0,94,,144,,![Build release](https://github.com/zond/android-diplicity/workflows/Build%20release/badge.svg)√æ√æ# android-diplicity√æ√æAn Android client for the [diplicity](https://github.com/zond/diplicity) dippy service.√æ√æ## Forum√æ√æDiscussions about this game happen at [https://groups.google.com/forum/#!forum/diplicity-talk](https://groups.google.com/forum/#!forum/diplicity-talk).√æ√æ## Install√æ√æGo to the [Play Store](https://play.google.com/store/apps/details?id=se.oort.diplicity) or to the [release page](https://github.com/zond/android-diplicity/releases) to download the release you want.√æ√æ### Automatic builds√æ√æAutomatic builds are generated by GitHub Actions.
Sanchit43/BOMBitUP,3766,74,19,40,User,False,An sms bomber app to ruin your buddies day,http://www.bombitup.net,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",12,Java,"{'': 4, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",6,1,51,1,0,519,True,2,10,0,0,0,2,0,0,8,0,0,0,0,0,0,0,21,,65,romreviewer/BOMBitUP,# I WON'T BE RESPONSIBLE FOR ANY DAMAGE CAUSED. USE IT ONLY TO PRANK YOUR BUDDIES.√æ√æ# BOMBitUP (SMS BOMBER) (PROJECT FIXED)√æ* OPEN SOURCED ANDROID SMS BOMBER.√æ* Please give credit if this project helped you in your project development.√æ* Simply open the project in Android Studio.√æ* To Contibute Simply git commit && git push.√æ√æ# Liked My Work ? √æ## Consider Donating :√æ* Bitcoin - 1HcWNJH8HpoXUWxXDLsaNyHFYyCUnzAs9j
mvysny/failover-vaadin,81,1,2,5,User,False,"A Vaadin Add-on which automatically performs browser-side fail-over. If the connection to the primary server is lost, the browser will automatically redirect itself to a fallback/spare server of your choosing.",,,6,Java,"{'': 1, 'yml': 1, 'md': 1, 'xml': 1}",62,2,6,3,0,1250,True,1,0,0,0,1,2,0,0,7,0,0,0,0,0,0,0,65,,51,,"[![Build Status](https://travis-ci.org/mvysny/failover-vaadin.svg?branch=master)](https://travis-ci.org/mvysny/failover-vaadin)√æ[![Published on Vaadin  Directory](https://img.shields.io/badge/Vaadin%20Directory-published-00b4f0.svg)](https://vaadin.com/directory/component/failover-vaadin)√æ[![Stars on Vaadin Directory](https://img.shields.io/vaadin-directory/star/failover-vaadin.svg)](https://vaadin.com/directory/component/failover-vaadin)√æ√æ# FailOver Vaadin Add-On√æ√æA Vaadin Add-on which automatically performs browser-side fail-over. If the connection to the primary server is lost,√æthe browser will automatically redirect itself to a fallback/spare server of your choosing.√æ√æTo demonstrate, check out this [FailOver Vaadin Add-On Video](https://www.youtube.com/watch?v=hWkMIDWM-E8) on Youtube.√æThe video shows launching of four independent Jetty instances in Docker on four different ports, 8080-8083.√æ√æThe main idea behind this add-on is explained in the [Client-side Fail-over](https://vaadin.com/blog/-/blogs/client-side-fail-over) blogpost.√æ√æAdvantages:√æ√æ* No single point of failure. Well, the browser is the single-point-of-failure, but that's user's responsibility ;)√æ* Incredibly easy setup - just add Maven dependency on this add-on and recompile your widgetset.√æ* No server-side clustering needed√æ* Servers are totally independent one from another, and may even use a mixture of server kinds,√æ  different versions of application, ...√æ√æDisadvantages:√æ√æ* Session is lost√æ* If the main server dies, new clients cannot connect.√æ* If the main server dies and user presses F5 in the browser, she will just get ""Connection Refused"".√æ  This could be remedied by offline mode√æ√æFeatures:√æ√æ* Supports multiple fallback servers to reconnect to, either in round-robin or random-robin.√æ* Prior reconnecting the URL is pinged first, whether the spare server is actually alive.√æ* A simple load-balancer, by selecting a random server from the list instead of always choosing the primary one.√æ* The user must initiate the failover process manually. This way she will understand that the server has crashed and that she may lose some data (that is, the session).√æ√æFuture improvements:√æ√æ* Offline mode of the bootstrap page, which will connect to the spare server even √æ  in case when the primary server is down.√æ√æ## Quickly Test It Out√æ√æ1. Clone this project and open it on your IDE√æ2. Run `mvn -C clean install` to compile the widgetset.√æ3. Find the `Server` class and run its main method. It will start first server on [localhost:9991](http://localhost:9991/com.vaadin.failover.BasicFailoverUsageUI)√æ4. Find the `Server2` class and run its main method. It will start second server on [localhost:9992](http://localhost:9992/com.vaadin.failover.BasicFailoverUsageUI)√æ5. Browse the first server at [localhost:9991](http://localhost:9991/com.vaadin.failover.BasicFailoverUsageUI).√æ6. Kill the `Server` class.√æ7. Press the ""Click Me"" button. Then, press the ""Try Spare Servers"" button. The browser should automatically find and√æ   open the second server.√æ√æ## Integrating With Your App√æ√æAdd the following to your pom.xml:√æ```xml√æ<dependency>√æ    <groupId>org.vaadin.addons.failover</groupId>√æ    <artifactId>failover-vaadin</artifactId>√æ    <version>0.1.2</version>√æ</dependency>√æ```√æYou'll need to add a Vaadin Add-on repository as well, please see [FailOver AddOn on Vaadin Directory](https://vaadin.com/directory#!addon/failover-vaadin) on how to do that.√æ√æThen, add the following code to your UI's `init()` method:√æ√æ```java√æ@Widgetset(""AppWidgetset"")√æpublic class MyUI extends UI {√æ√æ    @Override√æ    protected void init(VaadinRequest vaadinRequest) {√æ        final List<String> urls = Arrays.asList(""http://localhost:8080"", ""http://localhost:8081"", ""http://localhost:8082"", ""http://localhost:8083"");√æ        final FailoverReconnectExtension failoverExtension = FailoverReconnectExtension.addTo(this);√æ        failoverExtension.setUrls(urls);√æ        failoverExtension.setPingImagePath(""/VAADIN/themes/valo/img/app-icon.png"");√æ        getReconnectDialogConfiguration().setDialogText(""Can't connect to the server. The network may be down, or the server has crashed. Press the 'Try Spare Servers' button to try to connect to fallback server."");√æ        ...√æ    }√æ}√æ```√æ√æYou will now have to configure your app to allow to ping it properly from JavaScript. Please read on.√æ√æ### Important - Ping in JavaScript√æ√æPrior failing over to a server, we actually need to know whether the server is actually alive. Thus, JavaScript needs to ping the server.√æHowever, that's not easy to do. There are two viable workaround solutions, both with drawbacks:√æ√æ#### The `image` ping√æ√æThe easiest way is to use the `image` element to load arbitrary image from the server. If that succeeds, the server is online. √æIf that fails, the server is down. The problem is that if the target image is 404 not found or√æit is not an image (but, say, a CSS), the image loading will fail.√æ√æWhen employing this solution, just drop any png image e.g. to your theme, then make sure that:√æ√æ1. the image exists, and√æ2. it is actually an image√æ√æTo activate this ping type, just call√æ```java√æfailoverExtension.setPingImagePath(""/VAADIN/themes/valo/img/app-icon.png"");√æ```√æ√æThis example code expects that you're using the Valo theme and you have the `app-icon.png` image√ælocated in your `src/main/resources/VAADIN/themes/valo/img` folder. If not, please place an image√æinto your theme folder and update the ping image path accordingly.√æ√æFor example, when you launch the `Server` example class, the ping image is located at√æ[http://localhost:9991/VAADIN/themes/valo/img/app-icon.png](http://localhost:9991/VAADIN/themes/valo/img/app-icon.png)√æand is loaded from the [src/test/resources/VAADIN/themes/valo/img/app-icon.png](src/test/resources/VAADIN/themes/valo/img).√æ√æ#### The Ajax/`XMLHttpRequest` ping√æ√æThe idea is to open a http request to the target server. If the server responds in any way, it is alive.√æ√æThe problem is that browser disallows to connect to another site because of [Cross-Origin resource sharing](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing). √æ√æWhen employing this type of ping, don't call the `setPingImagePath` method to activate the Ajax ping. Then, make sure that:√æ √æ* you have CORS configured correctly in your webapp. If the CORS is misconfigured, the ping will incorrectly report the server being down.√æ√æYou can follow the following tutorial to set up CORS in your webapp: https://vaadin.com/blog/-/blogs/using-cors-with-vaadin√æ√æ## Add-on Development instructions √æ√æThis is a Vaadin add-on project created with in.virit:vaadin-gwt-addon archetype.√æThe project supports GWT based extensions for Vaadin.√æ√æ1. Import to your favourite IDE√æ2. Run main method of the Server class to launch embedded web server that lists all your test UIs at http://localhost:9991√æ3. Code and test√æ  * create UI's for various use cases for your add-ons, see examples. These can also work as usage examples for your add-on users.√æ  * create browser level and integration tests under src/test/java/√æ  * Browser level tests are executed manually from IDE (JUnit case) or with Maven profile ""browsertests"" (mvn verify -Pbrowsertests). If you have a setup for solidly working Selenium driver(s), consider enabling that profile by default.√æ4. Test also in real world projects, on good real integration test is to *create a separate demo project* using vaadin-archetype-application, build a snapshot release (""mvn install"") of the add-on and use the snapshot build in it. Note, that you can save this demo project next to your add-on project and save it to same GIT(or some else SCM) repository, just keep them separated for perfect testing.√æ√æ√æ## GWT related stuff√æ√æ* To recompile test widgetset, issue *mvn vaadin:compile*, if you think the widgetset changes are not picked up by Vaadin plugin, do a *mvn clean package* or try with parameter *mvn vaadin:compile -Dgwt.compiler.force=true*√æ* To use superdevmode, issue ""mvn vaadin:run-codeserver"" and then just open superdevmode like with any other project√æ√æ## Creating releases√æ√æ1. Push your changes to e.g. Github √æ2. Update pom.xml to contain proper SCM coordinates (first time only)√æ3. Use Maven release plugin (mvn release:prepare; mvn release:perform)√æ4. Upload the ZIP file generated to target/checkout/target directory to https://vaadin.com/directory service (and/or optionally publish your add-on to Maven central)"
Rfinazzo4/TicketToRideGame,3469,0,1,3,User,False,,,,11,Java,"{'jpeg': 1, '': 2, 'md': 1, 'xml': 1, 'jpg': 1, 'mf': 1, 'java': 1}",186,4,0,3,0,614,True,0,0,0,0,0,28,0,0,8,0,0,0,0,0,0,0,13,,3,,# TicketToRideGame√æThis game is a desktop application version of the popular board game Ticket To Ride. √æ√æThe complex options and cases made it tricky to handle.  Implemented and CPU with a low level expert system to make decision on. 
R3fleXi0n/BungeeOnlineTime,6618,6,4,12,User,False,,https://www.spigotmc.org/resources/bungeeonlinetime.795/,,3,Java,"{'': 1, 'xml': 1}",24,1,0,1,0,1235,True,4,1,0,0,1,0,0,0,7,0,0,0,0,0,0,0,5,,0,,
mikepenz/Materialize,1443,303,18,54,User,False,"A easy helper library for Android to manage your applications StatusBarShadow, FullScreen behavior and much more over API Levels down to 10",http://mikepenz.github.io/Materialize,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",14,Java,"{'': 3, 'md': 1, 'gradle': 3, 'properties': 1, 'bat': 1}",207,3,37,7,0,1812,False,,,,,0,7,0,0,7,0,0,0,0,0,0,0,69,,4,,"# Materialize  [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.mikepenz/materialize/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.mikepenz/materialize)[![Join the chat at https://gitter.im/mikepenz/Materialize](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mikepenz/Materialize?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)√æ√æ√æ**Materialize** comes with useful helper classes, the complete material color palette, and many additional utils. Use its theme as base. Let it manage your StatusBar, NavigationBar, Fullscreen behavior...√æ√æ# What's in?√æ* Never worry about API specific differences again (**minSdk 14**)√æ√æ* MaterializeBuilder -> Materialize√æ * Let the library handle if you want√æ  * your activity as fullscreen√æ  * your activity with a transparent navigationBar√æ * Let it handle the statusBarBackground color√æ  * It uses a ScrimInsetsFrameLayout√æ√æ* Complete Material Color palette√æ * As resource√æ * As class√æ√æ* A feature complete BaseTheme√æ * AppCompat base√æ * Defines all colors√æ * Comes with many variations√æ * All compatible down to **minSdk 14**√æ√æ* A huge collection of helper methods via the UIUtils, safe down to API 10√æ * getThemeColor√æ * setBackground√æ * getThemeColorFromAttrOrRes√æ * getActionBarHeight√æ√æ* KeyboardUtil√æ * Handle the Layout (adjust_resize) if you use the FULL_SCREEN flag√æ√æ# Preview√æ## Demo√æTo follow√æ√æ## Screenshots√æ![Image](https://raw.githubusercontent.com/mikepenz/Materialize/develop/DEV/screenshots/screenshot1_small.png)√æ![Image](https://raw.githubusercontent.com/mikepenz/Materialize/develop/DEV/screenshots/screenshot2_small.png)√æ√æ![Image](https://raw.githubusercontent.com/mikepenz/Materialize/develop/DEV/screenshots/screenshot3_small.png)√æ√æ√æ# Include in your project√æ## Using Maven√æThe Materialize Library is pushed to [Maven Central](http://search.maven.org/#search|ga|1|g%3A%22com.mikepenz%22), so you just need to add the following dependency to your `build.gradle`.√æ√æ```javascript√æ// the following uses the new androidx dependencies√æimplementation ""com.mikepenz:materialize:1.2.1""√æimplementation ""com.google.android.material:material:${materialVersion}""√æimplementation ""androidx.appcompat:appcompat:${androidXVersion}""√æ```√æ√æTo use appcompat please use a version smaller than 1.2.0. (See the releases on GitHub)√æ√æ## How to use√æ### MaterializeBuilder√æ√æ```java√æ    //minimal configuration√æ√æ    new MaterializeBuilder().withActivity(this).build();√æ```√æ√æ```java√æ    //fullscreen activity with small modifications√æ√æ    new MaterializeBuilder()√æ        .withActivity(this)√æ        .withFullscreen(true)√æ        .withTranslucentStatusBarProgrammatically(true)√æ        .withTintedStatusBar(true).build();√æ```√æ√æ### Materialize Theme√æ√æTo use one of the provided themes just use a `MaterialTheme`, `MaterialTheme.*` theme as parent√æ√æ# Developed By√æ√æ* Mike Penz √æ * [mikepenz.com](http://mikepenz.com) - <mikepenz@gmail.com>√æ * [paypal.me/mikepenz](http://paypal.me/mikepenz)√æ√æ# License√æ√æ    Copyright 2017 Mike Penz√æ√æ    Licensed under the Apache License, Version 2.0 (the ""License"");√æ    you may not use this file except in compliance with the License.√æ    You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ    Unless required by applicable law or agreed to in writing, software√æ    distributed under the License is distributed on an ""AS IS"" BASIS,√æ    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ    See the License for the specific language governing permissions and√æ    limitations under the License."
afrl-rq/LmcpGen,2078,6,4,12,Organization,False,Project to auto-create libraries adhering to the LMCP specification,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",6,Java,"{'': 1, 'md': 2, 'xml': 1}",99,3,9,8,0,1142,True,4,2,0,0,2,20,0,0,8,0,0,0,0,0,0,0,7,0,,,"# License√æ√æ*LmcpGen* is developed by the Air Force Research Laboratory, Aerospace System Directorate, Power and Control Division. √æThe LMCP specification and all source code for *LmcpGen* is publicaly released under the Air Force Open Source Agreement√æVersion 1.0. See LICENSE.md for complete details. The Air Force Open Source Agreement closely follows the NASA Open Source√æAgreement Verion 1.3. **NOTE the terms of the license include registering use of the software by emailing <a href=""mailto:afrl.rq.opensource@us.af.mil?subject=LmcpGen Registration&body=Please register me for use of LmcpGen. Name: ____________"">afrl.rq.opensource@us.af.mil</a>.**√æ√æ# Introduction√æ√æThe Lightweight Message Construction Protocol (LMCP) is a standard that serves two purposes. First, it√ædefines a structure for common structured data and a process for serializing objects based on those√ætypes. Secondly, it defines a method for encapsulating objects for transmission between applications.√æThis specification describes the structure of data, without specifying how applications implement the√æhandling instantiations of those data types. Applications that implement this specification can send√æand receive objects regardless of the operating system, platform, or programming language used. LMCP√æis a simple and extensible specification, so it can be implemented without central runtime, proprietary√ælibraries, or the complexity of other protocols such as HLA and DIS. This system offers several√æadvantages to the end-user, including:√æ√æ- A design independent of language, platform, and transport protocol.√æ- Object-oriented approach through structured data types, including support for null objects.√æ- A high level of customizability through user-defined data models.√æ- Support for variable length arrays and nested objects.√æ- Simple and open design, free of proprietary code and requiring no runtime infrastructure or special libraries.√æ√æLMCP also defines the structure of a message. A message is an LMCP object that is encapsulated with header√æand footer items to enable communication of LMCP objects between applications. LMCP allows developers to√æcreate custom data types (structs) easily through a message data model (MDM). Custom classes can be created√æfor a given MDM through automatic code generation or other means to recognize and handle messages.√æ√æLMCP was created at the Air Force Research Library as a way to ease communications between applications written√æin a variety of computing languages and running on different computing platforms. For more information on√æLMCP and its precise specification, see the *doc* directory in the *LmcpGen* git repository.√æ√æ# Using *LmcpGen*√æ√æThe *LmcpGen* tool autogenerates source-code libraries in several languages that conform to the serialization√æspecification of LMCP. Currently, *LmcpGen* creates libraries for the following languages:√æ√æ- Java√æ- C++√æ- C#√æ- Python√æ√æAdditionally, *LmcpGen* can create HTML documentation in the form of an easy-to-navigate webpage for viewing the√æmessages described in source MDMs.√æ√æ## Requirements√æ√æTo use *LmcpGen*, a Java JRE version 1.8 or higher is required. To modify *LmcpGen*, the Java JDK 1.8 or higher√æis required. *LmcpGen* does not rely on any external libraries and is completely stand-alone. For convenience,√æNetbeans project files are included to allow developers a quick way to change and re-build *LmcpGen*.√æ√æ## Installation√æ√æ*LmcpGen* is a simple Java program that will run on any system with [Java][java download] installed.√æ√æ[java download]: https://java.com/en/download/√æ√æ## Running *LmcpGen*√æ√æ*LmcpGen* can be run both in a user-interactive mode or silently as a command line tool. To run in user-interactive√æmode, double-click *LmcpGen.jar* or use the command√æ√æ``` java -jar LmcpGen.jar ```√æ√æIf *LmcpGen* is run with any additional command-line arguments, then it will run silently until completion. The√æcommand line options are as follows:√æ - `-mdm <filename>` path to the MDM XML file.  Multiple MDMs can be specified by repeating the -mdm tag.√æ - `-mdmdir <directory path>` to directory containing multiple MDM XML files. Can be used multiple times to specify multiple directories.√æ - `-java` Adds proper template and method name for Java output.√æ - `-cpp` Adds proper template and method name for C++ output. Note: creates c++11 compatible code.√æ - `-cs` Adds proper template and method name for C# output.√æ - `-py` Adds proper template and method name for Python output.√æ - `-xsd` Adds proper template and method name for XML schema output.√æ - `-doc` Adds proper template and method name for documentation output.√æ - `-dir <directory path>` path to the directory where files are to be written.√æ - `-checkMDM <mdm file>` Checks the MDM file for errors and exits.√æ√æFor example, with a set of proper LMCP MDMs in the directory `mdms`, the command to create documentation would be:√æ√æ``` java -jar LmcpGen.jar -mdmdir ""mdms"" -doc -dir ""doc/LMCP"" ```"
scubajorgen/TomTomWatch,26651,8,4,2,User,False,Tool for exporting GPS files from TomTom Sports Watches,,,6,Java,"{'': 1, 'md': 1, 'properties': 1, 'xml': 1}",231,6,6,3,0,1086,True,4,11,2,0,0,2,0,0,7,0,1,6,2258,434,0,0,10,,1,,"# TomTomWatch√æ√æ## Introduction√æTool for exporting GPS files from TomTom Sports Watches√æ√æHomepage: http://blog.studioblueplanet.net/?page_id=566√æ√æTomTomWatch is a tool for downloading GPS tracks from the TomTom Sports watches. It downloads the ttbin files and extracts the raw GPS data.√æI also offers track smoothing, when enabled.√æ√æIt contains a lot of features for maintaining the watch, like √æFor the more technical users it contains a Debugging menu that offers functions for file manipulation, resetting, rebooting, etc.√æ√æ## Building√æIt uses Maven for building. Use a development environment like Netbeans or Eclipse. √æ√æ## Configuring√æAfter building the target directory contains tomtomwatch.properties. In Netbeans you can use this file in the TomTomWatch root directory √æduring development and debugging.√æThe file is self-explanatory√æ√æ## Disclaimer√æUse the software at own risk. If not used properly, especially the debugging features, I guess it might brick your watch √æ(though it never happened to me so far...). "
reaktivity/nukleus-tls.spec,398,0,1,6,Organization,False,TLS Nukleus Specification,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 5, 'yml': 1, 'md': 1, 'cmd': 1, 'xml': 1}",449,3,53,5,0,1299,True,0,1,0,0,0,22,0,3,8,0,0,0,0,0,2,0,47,0,,,# TLS Nukleus Specification√æ√æ[![Build Status][build-status-image]][build-status]√æ[![Code Coverage][code-coverage-image]][code-coverage]√æ√æ#### Build√æ```bash√æ./mvnw clean install√æ```√æ#### Build on Windows√æ```bash√æmvnw.cmd clean install√æ```√æ√æ[build-status-image]: https://travis-ci.com/reaktivity/nukleus-tls.spec.svg?branch=develop√æ[build-status]: https://travis-ci.com/reaktivity/nukleus-tls.spec√æ[code-coverage-image]: https://codecov.io/gh/reaktivity/nukleus-tls.spec/branch/develop/graph/badge.svg√æ[code-coverage]: https://codecov.io/gh/reaktivity/nukleus-tls.spec
isa-group/ideas-base-module,42,0,11,1,Organization,False,,,,2,Java,{'xml': 1},9,29,0,2,0,1698,True,4,1,0,0,26,4,10,1,8,1,0,0,0,0,0,0,86,1,,,
curioswitch/curiostack,11636,40,3,10,Organization,False,Full stack to help satisfy curiosity,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",29,Java,"{'': 4, 'md': 1, 'gradle': 1, 'yaml': 3, 'properties': 1, 'bat': 1, 'json': 1, 'kts': 2, 'lock': 1}",811,17,48,6,0,1213,True,6,42,1,3,1,505,1,50,8,0,2,52,10332,7798,1,6,2,0,,,"# curiostack√æVery full stack to help satisfy curiosity√æ√æ√æCuriostack enforces best practices without the headaches. All users√æ- Have a CI that only builds affected projects. Let the monorepo grow as needed.√æ- Deploy alpha servers on every commit. All changes can be checked right away.√æ- Are secure by default. Servers only accept TLS connections, even on localhost. Services√ærequire TLS mutual authentication.√æ- Always have the latest tools. The build automatically downloads tools and versions are √ætied to the repo, not the developer's machine.√æ- Can write an API focusing on the business logic, without restrictions of serverless tools.√æ- Have fast, modern web clients that have code to render pages, not boilerplate.√æ√æand more!√æ√æ## Developer resources√æ√æDevelopers should start at our developer portal, [https://developers.curioswitch.org](https://developers.curioswitch.org).√æThe content is still light, but the codelabs should help get started with concepts quickly.√æ√æAlso until the coverage of the codelabs goes up, it is also important to go through this `README` and√æmaybe even some of the code to understand what's available. √æ√æ## Company Resources√æ√æLooking for guidelines and documents outlining best practices for designing a company, not just the√æengineering codebase? Check out our resources [here](./docs/company) which can hopefully help.√æ√æ## Have a question?√æ√æFeel free to open an [issue](https://github.com/curioswitch/curiostack/issues/new) if you have any questions. √æYou are also welcome to join our [Slack workspace](https://join.slack.com/t/curiostack/shared_invite/enQtODMxODkzMDg4NDM1LTllMmZiNzU3MTUxZjYzYTA2YjdlYWNkYTM1YjBlMTY1ODMxN2YxYTI2ZjFhOWZiYmVjZGY4ZTZkZWViNDRlZWU) √æand ask there.√æ√æ## Set up√æ√æSee gradle-curiostack-plugin [README](tools/gradle-plugins/gradle-curiostack-plugin/README.md) for setting up the gradle plugins.√æ√æ## Developing√æ√æCuriostack only requires `bash`.√æ√æFirst run√æ√æ```bash√æ$ ./gradlew :setup√æ```√æ√æto set up all required tools, by downloading openjdk, python, gcloud, node, golang, etc, and inserting a PATH setting into zshrc and bashrc. There won't be any version conflicts between e.g., system-installed nodejs and gradle-installed nodejs as gradle-installed nodejs will be the one on the path when running Gradle invocations. In addition, any `bash` invocations of commands when inside the repository will use the managed tool. Outside the repository, system tools will be used as normal.√æ√æ### IDE√æCuriostack only has a dependency on Java. However, IntelliJ is highly recommended for development.√æThe free community edition is sufficient for Java development, while the pro edition may provide a√æmore integrated IDE for both server and client development. Many users will choose to use IntelliJ√æcommunity edition for server side development and Atom or Visual Studio Code for client side.√æ√æTo work on IntelliJ, clone the repository and in a command line, run√æ√æ```√æ$ ./gradlew idea√æ```√æ√æto generate initial IntelliJ configuration. Then open up the folder in IntelliJ and say yes when it√æasks you to link the project.√æ√æAll code-style, license, etc setup will be done automatically, and you're ready to code."
cytoscape/cyBrowser,106,0,3,2,Organization,False,,,,6,Java,"{'': 2, 'md': 1, 'html': 1, 'xml': 1}",55,3,1,5,0,1307,True,2,2,0,0,0,1,0,1,7,0,2,10,283,196,0,0,126,24,,,# cyBrowser√æ√æCyBrowser is an HTML/Javascript app for Cytoscape. It can provide a quick way to access web pages from within Cytoscape and execute Cytoscape commands from web pages.√æ√æSee app store page: http://apps.cytoscape.org/apps/cybrowser
gemoc/MODELS2017Tutorial,226376,2,9,3,Organization,False,"Tutorial ""Language Engineering with The GEMOC Studio"" at MODELS 2017",,,5,Java,"{'': 1, 'md': 1}",113,1,0,3,0,1019,True,2,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,41,1,,,"# Tutorial ""Language Engineering with The GEMOC Studio"", MODELS, 2017√æ√æ* [Scope](#scope)√æ* [Program](#program)√æ* [Materials](#materials)√æ√æThis tutorial provides a practical approach for developing and integrating various Domain-Specific (modeling) Languages (DSLs) used in the development of modern complex software-intensive systems, with the main objective to support abstraction and separation of concerns. The tutorial leverages on the tooling provided by the GEMOC studio to present the various facilities offered by the Eclipse platform (incl., EMF/Ecore, Xtext, Sirius) and introduces the advanced features to extend a DSL with a well-defined execution semantics, possibly including formal concurrency constraints and coordination patterns. From such a specification, we demonstrate the ability of the studio to automatically support model execution, graphical animation, omniscient debugging, concurrency analysis and concurrent execution of heterogeneous models. The tutorial is composed of both lectures and hands-on sessions. Lectures introduce the foundations of language engineering, and give the basics of the GEMOC studio and the underlying concepts. Hands-on sessions allow participants to experiment on representative concrete use cases.√æ√æ## Scope√æ√æDuring this tutorial, the participants will extend a given finite state machine DSL in terms of syntax and semantics using the language workbench of the GEMOC Studio.√æ√æ## Legend√æ√æ* :warning: Read carefully, tricky details follow.√æ* :no_entry: Breaking changes. You should download a new version of the language under development for temporal reasons. You may proceed with you local changes, but we might not be able to support its evolution due to the short time frame of the tutorial. √æ* :bulb: some tips to make your live easier :)√æ√æ## Program√æ√æ- [Part 1. General introduction](#part-1-general-introduction)√æ- [Part 2. Breathe Life Into Your Designer!](#part-2-breathe-life-into-your-designer)√æ  - [2.1 Overview the language example provided for the tutorial](#21-overview-the-language-example-provided-for-the-tutorial)√æ  - [2.2 Playing with the modeling workbench](#22-playing-with-the-modeling-workbench)√æ  - [2.3 Complementing the execution semantics](#23-complementing-the-execution-semantics)√æ  - [2.4 Deploying the modeling workbench and playing with the example model](#24-deploying-the-modeling-workbench-and-playing-with-the-example-model)√æ- [Part 3. Weave Concurrency Constraints Into Your DSL!](#part-3-weave-concurrency-constraints-into-your-dsl)√æ- [Part 4. Wrap-up and discussion](#part-4-wrap-up-and-discussion)√æ√æ## Materials√æ√æ+ Use the latest [GEMOC Studio](http://gemoc.org/studio.html) and install the concurrent engine extension, together with a [Java 1.8 JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html), the studio with preinstalled concurrent engine can be found [HERE](https://ci.inria.fr/gemoc/job/gemoc-studio-eclipsefork/job/concurrency-coordination/lastSuccessfulBuild/artifact/gemoc-studio/gemoc_studio/releng/org.eclipse.gemoc.gemoc_studio.product/target/products/).√æ+ clone the [tutorial's repository](https://github.com/gemoc/MODELS2017Tutorial.git).√æ+ The slides for the tutorials are available [here](https://github.com/gemoc/MODELS2017Tutorial/blob/master/slides/tutorial-slides.pptx).√æ+ Most of the documentation on the GEMOC approch is available [here](http://gemoc.org/gemoc-studio/publish/guide/html_single/Guide.html).√æ√æYou can refer to the documentation about the GEMOC studio at any time. Note also that we will rely on various tools from the EMF ecosystem (e.g., EcoreTools, Sirius...), and we will refer to their respective documentations accordingly. √æ√æ√æ## Part 1. General introduction√æ√æThis part introduces the structure and goals of the tutorial. Moverover it covers an introduction to software language engineering, and GEMOC (incl. the initiative and the studio). The slides are available [here](https://github.com/gemoc/MODELS2017Tutorial/blob/master/slides/tutorial-slides.pptx).√æ√æ## Part 2. Breathe Life Into Your Designer!√æ√æIn this part, you will implement from-scratch a new modeling language that support the behavioral definition of a system in terms of a set of simplified Finite State Machines (FSM), communicating each others through buffers. In the first step, you will use the language workbench to define the abstract and concrete syntaxes, as well as the behavioral semantics. Then you will launch the modeling workbench to use your new modeling language to edit models, and then execute, animate and debug them.√æ√æ### 2.1 Overview the language example provided for the tutorial√æ√æ- Open your GEMOC Studio√æ- Go to a new workspace.√æ- Go to File -> import -> Git -> Projects from Git (import **all projects from /code/languagewb/**)√æ√æThis produces the general structure of a xDSML workspace, which comprises the projects for all the different parts of an executable DSML (projects org.gemoc.models17.fsm.*):√æ√æ- *org.gemoc.models17.fsm* contains the description for the FSM language into the DSL file (this project can be created from New -> Project -> GEMOC Sequential xDSML project). The DSL file is used for assembling the abstract syntax and the execution semantics in order to automatically provide the structural interface (in the form of an Ecore model combining the abstract syntax and the structural information from the execution semantics) required to use the EMF ecosystem (see org.gemoc.models17.fsm). √æ- *org.gemoc.models17.fsm.model* contains the description of the abstract syntax for the FSM language. The abstract syntax is descriptbed using Ecore (this project can be created from New -> Project -> Ecore Modeling Project, or from a right clic on the DSL project and through the GEMOc menu)√æ- *org.gemoc.models17.fsm.k3dsa* contains the Kermeta description of the execution semantics for the FSM language. The execution semantics is describes using Xtend and additional annotations provided by Kermeta to weave the semantics to the abstract syntax (note that the GEMOC studio also provide other solutions for the description of the execution semantics such as ALE, Xmof, Java...)√æ- *org.gemoc.models17.fsm.design* contains the graphical representation of both the editor and the animator. The graphical representation is defined using Sirius. √æ√æ<!--At this step, you must generate the following artefact: √æ- from the DSL file you must generate the structural interface of the language (right clic on the Melange file -> Melange -> Generate All). This will create the *org.gemoc.models17.fsm.xfsm* that contains the structural interface of your executable language, used for defining the animation layer with Sirius (contains in the .design project), and later in this tutorial the concurrency model. √æ- from the Melange file, you can generate the domain-specific trace backend in a project named *org.gemoc.models17.fsm.xfsm.trace* (right clic on the Melange file -> GEMOC Language -> Generate Multidimensional Trace Addon project for language) in order to support omniscient facilities in the debugger of the modeling workbench (i.e., step backward, in addition to step forward).√æ- from the genmodel file of the org.gemoc.models17.fsm.xfsm project, you must generate the edition layer that will use Sirius for the editor (open the genmodel, right clic on the root -> Generate All).-->√æ√æ### 2.2 Playing with the modeling workbench√æ√æFrom your first instance of Eclipse (i.e. the language workbench), you must lunch a new Eclipse instance (i.e. the modeling workbench) where the plugins developped in the workspace of the language workbench will be deployed: Run -> Run Configurations -> Eclipse Application (a launch configuration is provided to you in the project of the Github repository)√æ√æIn the modeling workbench, you must import the example model provided for the tutorial, from [MODELS2017Example](https://github.com/gemoc/MODELS2017Tutorial/blob/master/code/modelingwb/exampleModels) (**/code/modelingwb/exampleModels/**). In the project, open the file */models/testModels.aird*, and in the project explorer, open the corresping diagram. See below:√æ√æ![](figs/24-modeling-workbench.png)√æ√æFrom here, you can **right click** on the launch configuration *sequentialTestModel.launch*, **debug as** sequentialTestModel and start debugging your model. Note that for this purpose the debug view proposes to open, click yes. You have a typical eclipse debug environment with access to dynamic variables, step into, etc. Additionnaly, you have the multidimensional trace (if not open, choose _windows_ -> _show view_ -> _others_ -> multidimensional...). This last view is dedicated to your model and allows you to navigate in the trace in a multidimensional way (do not hesitate to pleasantly yell at us if you want more information).√æ√æ### 2.3 Complementing the execution semantics√æ√æThe execution semantics of FSM (in the form of an operational semantics, i.e., an interpreter) are defined in the file tfsmAspects.xtend of project org.gemoc.models17.fsm.k3dsa. This file which employs [Kermeta 3 (K3)](http://www.kermeta.org) and the [Interpreter Design Pattern](https://en.wikipedia.org/wiki/Interpreter_pattern) to describe the execution semantics of FSM models and its contents is woven into the metamodel of your executable DSL (i.e., XSFSM, not FSM!). √æ√æIn tfsmAspects.xtend, you have aspects for all classes of your metamodel. Some of these aspects use annotations to define specific execution functions and entry points (_e.g._, @InitializeModel). √æ√æ**Execution Functions**√æ√æThe execution functions define how the execution data evolve during the execution of the model. Execution functions can be implemented by defining the body of a method. These methods can be annotated with the **@Step** annotation in order to be considered as observable execution steps, especially in the step-by-step execution mode of the debugger.√æ√æ**Entry Points**√æ√æAn additional annotation **@Main** must be used to annotate the entry point of the interpreter. Several methods can have the same annotation and will be proposed as possible entry points in the launch configuration at debug time. √æ√æ√æ:warning: We left two methods unimplemented with ""TODO"". Try to implement these two methods to complete the behavior of the model to your taste.√æ√æ_SOLUTION WILL APPEAR HERE_√æ√æ```java√æ    @Aspect(className=State)√æ    class StateAspect {√æ @Step√æ def public void step(String inputString) {√æ  // Get the valid transitions √æ  val validTransitions =  _self.outgoing.filter[t | inputString.compareTo(t.trigger) == 0]√æ  √æ  if(validTransitions.empty) {√æ   //just copy the token to the output buffer√æ   _self.fsm.outputBuffer.enqueue(inputString)√æ  }√æ  √æ  if(validTransitions.size > 1) {√æ   throw new Exception(""Non Determinism"")√æ  }√æ  √æ  // Fire transition first transition (could be random%VT.size)√æ  if(validTransitions.size > 0){√æ   validTransitions.get(0).fire√æ   return√æ  }√æ  return√æ  √æ }√æ    }√æ```√æ√æ```java√æ    @Aspect(className=Transition)√æ    class TransitionAspect {√æ     @Step√æ def public void fire() {√æ  println(""Firing "" + _self.name + "" and entering "" + _self.tgt.name)√æ  val fsm = _self.src.fsm√æ  fsm.currentState = _self.tgt√æ  fsm.outputBuffer.enqueue(_self.action)√æ  fsm.consummedString = fsm.consummedString + fsm.underProcessTrigger√æ }√æ    }√æ```√æ√æ√æAfter finishing or to see the effect of your code, just relaunch the modeling workbench (the runtime eclipse application).√æ√æ### 2.4 Deploying the modeling workbench and playing with the example model√æ√ægoto 2.2 and see the differences ;)  √æ:bulb: you can launch the modeling workbench in debug mode. If so, you do not need to restart the modeling workbench after each change in the semantics. Even better you can dynamically provide the new semantics during a debug of your model (at your own risks ;) )√æ√æ√æNow, you should be able to run and debug your language according to your desired semantics. Here is a screenshot of a classical debugging session.√æ√æ![](figs/23-classicalDebugView.png)√æ√æ:bulb: you can also add breakpoints on State (right click on a State -> gemoc -> toggle breakpoint). Then you can run until an execution function is called on the state !√æ√æ:no_entry: The solution of the previous step is available from the [solution folder](https://github.com/gemoc/MODELS2017Tutorial/tree/master/code/incrementalSolutions/languageWB_DSAOK), if you had any problems with recreating the new semantics or experimented too much, please download it, clear your language workbench workspace and import the projects in the archive. Then run the modeling workbench on top of these projects.√æ√æ<!--If you have time, you can experiment how the language designer or a debugger can augment the animation of the model with new information. For instance, something easy to do is to add a new representation in the _Animation_ layer of the provided odesign file (project org.gemoc.models17.fsm.xfsm.design/description/xfsm.odesign) to show the string which has been consummed by each fsm. If you are too impatient and are looking for the resulting file, we provide it [here](https://github.com/gemoc/MODELS2017Tutorial/tree/master/code/incrementalSolutions/newAnimationRepresentation/xfsm.odesign)   -->√æ√æ## Part 3. Weave Domain-Specific Concurrency Constraints Into Your DSL!√æ### Introduction√æ√æIn the previous parts you defined an operational semantics for our little communicating FSM language. Based on that you were able to simulate and debug the models that conform this language.√æIf you have a careful look at the given semantics, you can see that the call to the *run()* of each FSM depends on the order the FSMs are stored in the *ownedFsms* collection. This mean that we restricted the semantics to be sequential and in this specific order. However, as soon as a FSM has data in its input buffer, it can be ran; possibly concurrently with other FSMs (_e.g._, pipelined). In this section we will replace the *main()* method of our operational semantics to specify the concurrency model of our language.√æ√æ### Changing the language specification from sequential to concurrent√æ:warning: take care to make these actions in the correct order to avoid having both natures and that can corrupt the plugin configuration.√æ√æThe first step consists in adding the concurrent nature to the language project:√æ- right click on the *org.gemoc.models17.fsm* project, go to 'Configure' and choose 'Add Concurrent xDSML Project Nature'√æ√æBehind the scene, the GEMOC studio is creating new artifacts and dependencies to deal with the concurrent execution engine. √æ√æ### Creation of the DSE and MoCCML mapping project√æThe second step consists in using the wizards to create a project dedicated to the specification of Domain Specific Events (DSE) and the way they are constrained each other.√æ√æ- right click on any project, choose new -> Project -> GEMOC language -> GEMOC Specific Language Frangments -> DSE project √æ√æA pop-up will open and ask you to configure the project:√æ- Choose the language to be equipped by a concurrent specification (you should have only one, XFSM)√æ- Choose the project name, default proposition is fine.√æ- in the three fields:√æ - Choose the FSM.ecore file by browsing in the first field.√æ - Choose the root of the language (i.e., Model::System') in the second field by browsing.√æ - Choose the name of the file in which DSE and MoCCML mapping will be specified in the third field (e.g., xFSM)√æ√æAt this point it creates the new project, you should complete the *.dsl* file and add ` ecl = *the location of the so called ECL file*' (For Event Constraint Language) √æ(e.g., ecl = /org.gemoc.model17.fsm.dse/ecl/xFSM.ecl). This last file is the one we will modify now. It is based on OCL and borrow most of the syntax from it.√æ√æ√æ:no_entry: if you experimented problems with the previous steps, you can import the projects in [this archive](https://github.com/gemoc/MODELS2017Tutorial/tree/master/code/incrementalSolutions/languageWB_concurrentNoDSE/languageWB_concurrentNoDSE.zip) into your workspace.√æ√æ### Modification of the ECL file√æ√æthe ECL file follows the same format and syntax than OCL files.√æIt starts with the import of the metamodel on with the concurrency semantics must be given.√æ√æThen 2 specific imports are added (*ECLImport*). They are used to import MoCC specific constraint to be used in the ECL mapping. As we will see later, new constraints can be defined to fit the DSML concurrency semantics. For now, we will use the ones predefined in the CCSL librairies. The description of some of the available constraints will be given later.√æ√æOnce imports are done, you can define new DSE in the context of your metaclasses and new constraint between these DSE to represent the desired partial ordering between the events.√æ√æ#### DSE definition√æ√æIt is now time to wonder what are the actions (DSA) we want to control with the concurrency model. There is no single solution here, it depends on the behavioral semantics you want to give to your language. For each action that will be controlled by the concurrency model, we define a *Domain Specific Event* (DSE). A DSE is defined in the context of a MetaClass of the language. Then, when applied on a specific model, for each instance of this metaclass, an instance of the DSE will be generated. Then, each occurrence of this event will result in a call to the action.√æ√æThe syntax is the following:√æ√æ> **context** _YourMetaClass_  √æ>&nbsp;&nbsp;&nbsp;&nbsp; **def** : _theDSEName_ : **Event** = self._theFuntionToCall()_√æ√ænote that the function to call is optional (if no action must be called when the event occurs). √æ√æ√æ**TODO:** According to the remark considering the previously defined *main* function, try to define the appropriate DSE for the tutorial√æ√æ_SOLUTION WILL APPEAR HERE_√æ√æ> **context** FSM  √æ>&nbsp;&nbsp;&nbsp;&nbsp; **def** : runIt : **Event**  = self.run()  √æ√æ√æNow that the DSEs are defined, because no constraints between them have been defined, they are independent and can occurs opportunistically at any time. If you want to test such behavior, start the modeling workbench and before to start the debug of your executable model, you must create a concurrent Debug Configuration like the following one:√æ√æ![](figs/concurrency_DebugConf1.png)√æ![](figs/concurrency_DebugConf2.png)√æ√æThen click on debug. It opens the model with the animation layer and you have a view named _Concurrent Logical Steps_ where all the acceptable actions (according to the concurrency model) are proposed. In this case, since no constraints are defined between the DSEs, the 2^4 interleavings are proposed:√æ√æ![](figs/concurrency_screenshotNoConstraints.png)√æ√æNote on the screenshot the multibranch trace with its 16 yellow bullets. EAch of them represents a possible step in the concurrent logical step view.√æ√æIn order to constrain the DSE to make the concurrency model appropriate, we need first to spec a bit about the constraints provided in the libraries imported at the begin of the ecl file. These librairies contains, amongst some others, the following constraints:√æ√æ- relation Precedes: e1 precedes e2 means that the ith occurrence of e1 arrives before the ith of e2  √æ√æ![](figs/concurrency_Precedes.jpeg)√æ√æ  relation Coincides: e1 coincides with e2 means that the ith occurrence of e1 arrives synchronously with the ith of e2  √æ √æ![](figs/concurrency_Coincides.jpeg)√æ√æ  relation Excludes: e1 excludes with e2 means that none of the occurrences of e1 arrives synchronously with one of e2  √æ √æ![](figs/concurrency_Excludes.png)√æ√æ  expression DelayedFor: res = e1 DelayedFor N on e2 means that for each occurrences of e1 between two occurrences of e2, there is an occurrence of res after N occurrences of e2. A special case is res = e1 delayedFor N on e1. In this case the N first occurrences of e1 are removed in res.  √æ√æ![](figs/concurrency_DelayedFor.png)√æ√æ**TODO:** According to this, try to specify the constraints between the DSEs so that a FSM can run only when a data have been written first in its inputBuffer (or if some initial data were already there).√æ√æThe syntax is making use of OCL invariants and the syntax is the following:√æ√æ> **context** _YourMetaClass_  √æ>&nbsp;&nbsp; **inv** _InvariantName_ :  √æ>&nbsp;&nbsp;&nbsp;&nbsp; -- any guards (i.e., boolExpr implies..) and internal definitons (i.e.,  let..in)  √æ>&nbsp;&nbsp;&nbsp;&nbsp; -- note that this is a place where Event Expressions can be used  √æ>&nbsp;&nbsp;&nbsp;&nbsp; -- e.g., **let** eventName : **Event** = **Expression** _expressionName_(param1, param2, ...) **in**  √æ>&nbsp;&nbsp;&nbsp;&nbsp; **Relation** _relationName_(param1, param2, ...)  √æ√æ:bulb: At any time, after saving your ECL file, you can relaunch you model debug to test the new concurrency model (without the need to restart the modeling workbench√æ√æ_SOLUTION WILL APPEAR HERE_√æ√æ> **context** Buffer  √æ>&nbsp;&nbsp; **inv**  WriteBufferReadNoInitialValue:   √æ>&nbsp;&nbsp; (self.initialValue = null **or** self.initialValue.size() = 0) **implies**  √æ>&nbsp;&nbsp;&nbsp;&nbsp; **Relation** Precedes(self.incomingFSM.runIt, self.outgoingFSM.runIt)  √æ√æ>&nbsp;&nbsp; **inv** WriteBufferReadWithInitialValue:  √æ>&nbsp;&nbsp; (self.initialValue.size() > 0) **implies**  √æ>&nbsp;&nbsp;&nbsp;&nbsp;**let** initialSize : **Integer** = self.initialValue.tokenize(',')->size().oclAsType(Integer) **in**  √æ>&nbsp;&nbsp;&nbsp;&nbsp;**let** allReadsButInitialOnes : **Event** = **Expression** DelayFor(self.outgoingFSM.runIt, self.outgoingFSM.runIt, initialSize) **in**  √æ>&nbsp;&nbsp;&nbsp;&nbsp; **Relation** Precedes(self.incomingFSM.runIt, allReadsButInitialOnes)  √æ√æ√æ:no_entry: if you do not want to copy/paste the previous solutions, you can import the projects in [this archive](https://github.com/gemoc/MODELS2017Tutorial/blob/master/code/incrementalSolutions/languageWB_concurrentDSEOK/languageWB_concurrentDSEOK.zip) into your workspace.√æ√æYou can also try to add a constraint to allow the execution of only one FSM at a time but without forcing the order like in the sequential semantics.√æ√æ:bulb: you can use the multi branch time to jump in the past and explore a new future by choosing new scheduling orders√æ√æ![](figs/concurrency_multibranchTime.png)√æ√æ:bulb: You can also explore the whole scheduling state space. For that, right click on the .timemodel -> TimeSquare -> Compute State Space√æ√æ![](figs/concurrency_stateSpaceConcurrent.png)√æ√æ√æ### Defining a Domain Specific Concurrent Constraint√æ√æAs you can see from the second invariants we defined, it can be tricky, if you do not master logical time constraints, to define a constraint from the low level primtives that are offered. Fortunately, in this case you can define a Domain Specific constraint that encodes the concurrency constraints as a MoCCML automata.√æ√æFor instance, you can download [this project](https://github.com/gemoc/MODELS2017Tutorial/tree/master/code/incrementalSolutions/MoCCMLDomainSpecificConstraint) from the repo and import it into your language workbench. In this project, we defined the follogin automata√æ √æ![](figs/concurrency_MoCCMLautomatapng.png)√æ √æ**TODO:** try to use this automata in the ECL file and test it in the modeling workbench. If you wish, you can also try to add a maximum size to the buffers :)√æ√æ_SOLUTION WILL APPEAR HERE_√æ√æ![](figs/concurrency_solutionwithMoCCMLAutomata.png)√æ√æ√æ## Part 4. Wrap-up and discussion√æ√æSee slides."
wso2-extensions/siddhi-io-kafka,4385,11,30,44,Organization,False,Extension that can be used to receive events from a Kafka cluster and to publish events to a Kafka cluster,https://siddhi-io.github.io/siddhi-io-kafka/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 3, 'xml': 2, 'yml': 1}",1232,9,50,47,5,2252,True,3,15,2,0,1,111,1,1,30,0,2,4,506,37,7,0,59,6,,siddhi-io/siddhi-io-kafka,"Siddhi IO Kafka√æ======================================√æ√æ  [![Jenkins Build Status](https://wso2.org/jenkins/job/siddhi/job/siddhi-io-kafka/badge/icon)](https://wso2.org/jenkins/job/siddhi/job/siddhi-io-kafka/)√æ  [![GitHub Release](https://img.shields.io/github/release/siddhi-io/siddhi-io-kafka.svg)](https://github.com/siddhi-io/siddhi-io-kafka/releases)√æ  [![GitHub Release Date](https://img.shields.io/github/release-date/siddhi-io/siddhi-io-kafka.svg)](https://github.com/siddhi-io/siddhi-io-kafka/releases)√æ  [![GitHub Open Issues](https://img.shields.io/github/issues-raw/siddhi-io/siddhi-io-kafka.svg)](https://github.com/siddhi-io/siddhi-io-kafka/issues)√æ  [![GitHub Last Commit](https://img.shields.io/github/last-commit/siddhi-io/siddhi-io-kafka.svg)](https://github.com/siddhi-io/siddhi-io-kafka/commits/master)√æ  [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)√æ√æThe **siddhi-io-kafka extension** is an extension to <a target=""_blank"" href=""https://wso2.github.io/siddhi"">Siddhi</a> that receives and publishes events from and to Kafka.√æ√æFor information on <a target=""_blank"" href=""https://siddhi.io/"">Siddhi</a> and it's features refer <a target=""_blank"" href=""https://siddhi.io/redirect/docs.html"">Siddhi Documentation</a>. √æ√æ## Download√æ√æ* Versions 5.x and above with group id `io.siddhi.extension.*` from <a target=""_blank"" href=""https://mvnrepository.com/artifact/io.siddhi.extension.io.kafka/siddhi-io-kafka/"">here</a>.√æ* Versions 4.x and lower with group id `org.wso2.extension.siddhi.*` from <a target=""_blank"" href=""https://mvnrepository.com/artifact/org.wso2.extension.siddhi.io.kafka/siddhi-io-kafka"">here</a>.√æ√æ## Latest API Docs √æ√æLatest API Docs is <a target=""_blank"" href=""https://siddhi-io.github.io/siddhi-io-kafka/api/5.0.8"">5.0.8</a>.√æ√æ## Features√æ√æ* <a target=""_blank"" href=""https://siddhi-io.github.io/siddhi-io-kafka/api/5.0.8/#kafka-sink"">kafka</a> *(<a target=""_blank"" href=""http://siddhi.io/en/v5.1/docs/query-guide/#sink"">Sink</a>)*<br> <div style=""padding-left: 1em;""><p><p style=""word-wrap: break-word;margin: 0;"">A Kafka sink publishes events processed by WSO2 SP to a topic with a partition for a Kafka cluster. The events can be published in the <code>TEXT</code> <code>XML</code> <code>JSON</code> or <code>Binary</code> format.<br>If the topic is not already created in the Kafka cluster, the Kafka sink creates the default partition for the given topic. The publishing topic and partition can be a dynamic value taken from the Siddhi event.<br>To configure a sink to use the Kafka transport, the <code>type</code> parameter should have <code>kafka</code> as its value.</p></p></div>√æ* <a target=""_blank"" href=""https://siddhi-io.github.io/siddhi-io-kafka/api/5.0.8/#kafkamultidc-sink"">kafkaMultiDC</a> *(<a target=""_blank"" href=""http://siddhi.io/en/v5.1/docs/query-guide/#sink"">Sink</a>)*<br> <div style=""padding-left: 1em;""><p><p style=""word-wrap: break-word;margin: 0;"">A Kafka sink publishes events processed by WSO2 SP to a topic with a partition for a Kafka cluster. The events can be published in the <code>TEXT</code> <code>XML</code> <code>JSON</code> or <code>Binary</code> format.<br>If the topic is not already created in the Kafka cluster, the Kafka sink creates the default partition for the given topic. The publishing topic and partition can be a dynamic value taken from the Siddhi event.<br>To configure a sink to publish events via the Kafka transport, and using two Kafka brokers to publish events to the same topic, the <code>type</code> parameter must have <code>kafkaMultiDC</code> as its value.</p></p></div>√æ* <a target=""_blank"" href=""https://siddhi-io.github.io/siddhi-io-kafka/api/5.0.8/#kafka-source"">kafka</a> *(<a target=""_blank"" href=""http://siddhi.io/en/v5.1/docs/query-guide/#source"">Source</a>)*<br> <div style=""padding-left: 1em;""><p><p style=""word-wrap: break-word;margin: 0;"">A Kafka source receives events to be processed by WSO2 SP from a topic with a partition for a Kafka cluster. The events received can be in the <code>TEXT</code> <code>XML</code> <code>JSON</code> or <code>Binary</code> format.<br>If the topic is not already created in the Kafka cluster, the Kafka sink creates the default partition for the given topic.</p></p></div>√æ* <a target=""_blank"" href=""https://siddhi-io.github.io/siddhi-io-kafka/api/5.0.8/#kafkamultidc-source"">kafkaMultiDC</a> *(<a target=""_blank"" href=""http://siddhi.io/en/v5.1/docs/query-guide/#source"">Source</a>)*<br> <div style=""padding-left: 1em;""><p><p style=""word-wrap: break-word;margin: 0;"">The Kafka Multi-Datacenter(DC) source receives records from the same topic in brokers deployed in two different kafka clusters. It filters out all the duplicate messages and ensuresthat the events are received in the correct order using sequential numbering. It receives events in formats such as <code>TEXT</code>, <code>XML</code> JSON<code> and </code>Binary`.The Kafka Source creates the default partition '0' for a given topic, if the topic has not yet been created in the Kafka cluster.</p></p></div>√æ√æ## Dependencies √æ√æFollowing JARs are needed from `<KAFKA_HOME>/libs` directory.√æ√æ - kafka_2.11-*.jar√æ - kafka-clients-*.jar√æ - metrics-core-*.jar√æ - scala-library-2.11.*.jar√æ - scala-parser-combinators_2.11.*.jar (if exists)√æ - zkclient-*.jar√æ - zookeeper-*.jar √æ√æ## Installation√æ√æFor installing this extension and to add the dependent jars on various siddhi execution environments refer Siddhi documentation section on <a target=""_blank"" href=""https://siddhi.io/redirect/add-extensions.html"">adding extensions and jars</a>.√æ√æ#### Setup Kafka√æ√æAs a prerequisite, you have to start the Kafka message broker. Please follow better steps.√æ1. Download the Kafka [distribution](https://kafka.apache.org/downloads)√æ2. Unzip the above distribution and go to the ‚Äòbin‚Äô directory√æ3. Start the zookeeper by executing below command,√æ    ```bash√æ    zookeeper-server-start.sh config/zookeeper.properties√æ    ```√æ4. Start the Kafka broker by executing below command,√æ    ```bash√æ    kafka-server-start.sh config/server.properties√æ    ```√æ√æRefer the Kafka documentation for more details, https://kafka.apache.org/quickstart √æ√æThen, you have to add necessary client jars (from <KAFKA_HOME>/libs directory) to Siddhi distribution as given below.√æ√æ* Copy below client libs to <SIDDHI_HOME>/bundles directory√æ    * scala-library-2.12.8.jar √æ    * zkclient-0.11.jar  √æ    * zookeeper-3.4.14.jar√æ√æ* Copy below client libs to <SIDDHI_HOME>jars directory√æ    * kafka-clients-2.3.0.jar √æ    * kafka_2.12-2.3.0.jar √æ    * metrics-core-2.2.0.jar√æ√æ!!! info ""`bundles` directory to add OSGI bundles and `jars` directory to add non-OSGI jars.""√æ√æ## Support and Contribution√æ√æ* We encourage users to ask questions and get support via <a target=""_blank"" href=""https://stackoverflow.com/questions/tagged/siddhi"">StackOverflow</a>, make sure to add the `siddhi` tag to the issue for better response.√æ√æ* If you find any issues related to the extension please report them on <a target=""_blank"" href=""https://github.com/siddhi-io/siddhi-io-kafka/issues"">the issue tracker</a>.√æ√æ* For production support and other contribution related information refer <a target=""_blank"" href=""https://siddhi.io/community/"">Siddhi Community</a> documentation."
RobertHilbrich/assist-public,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
joekoolade/JOE,128061,70,9,5,User,False,Run a Java program without an operating system by building the OS into the Java program,,"{'key': 'epl-2.0', 'name': 'Eclipse Public License 2.0', 'spdx_id': 'EPL-2.0', 'url': 'https://api.github.com/licenses/epl-2.0', 'node_id': 'MDc6TGljZW5zZTMy'}",20,Java,"{'': 2, 'md': 4, 'xml': 2, 'out': 1}",767,12,12,2,10,3646,True,7,1,1,0,0,5,0,1,0,0,2,9,289,168,0,0,2,,4,,"# JOE√æ√æ## Java On Everything√æ√æJOE can run a Java program without an operating system by building the operating system into the program. This makes the program easier to configure and deploy. JOE can make any Java programmer an embedded developer.√æ√æJOE is a process virtual machine that can run a Java application without an operating system. It builds the OS into the program by virtualizing the OS and hardware. This removes the boundaries between the OS, hardware, user code, and virtual machine. The overhead and complexities in the user/supervisor crossing, program security, memory protection, virtual addressing, and the JNI library interface are replaced with simpler and more efficient mechanisms found in the Java language. JOE seamlessly blends those layers together by implementing them all in Java. This virtualized Java environment provides a secure, safe, cohesive, and consistent object oriented operation from application to hardware.√æ√æHow can one virtualize an OS and hardware with Java since Java is not considered a system programming language? JikesRVM provides an extensible framework, known as vmmagic, that allows for the low-level programming required for an OS and hardware. The JikesRVM object model creator, and the bootimage writer, will substitute the correct operation for the vmmagic based on the object model being generated. Because the vmmagic is implemented in Java, the OS and hardware can be tested independent of the computer platform they are intended to operate in.√æ√æEven though Java is used, any language running on a process virtual machine like C#, Smalltalk, or Self can be be used. The recipe for this is a meta-circular VM, a vmmagic like framework for low-level programming extensions, and the ability to generate new object models. Implementing those components in your language of choice will produce applications without an operating system for your chosen language.√æ√æJOE is a bleeding edge process virtual machine technology. Current virtualization technology needs a hypervisor layer to run multiple operating systems.  This requires  a processor with hardware virtualization, memory, and disk. JOE is a software based process virtual machine, that runs multiple applications on any processor in less memory, no OS, no files, no MMU, and no disk. This is antithetical to how all other applications are run. JOE reduces the complexities by blending in the virtual machine, operating system, and hardware layers into consistent and cohesive objects which allows the developer to concentrate on the essential complexity of the application.√æ√æThe motivation for JOE is to make it easier to deploy and run an application on any computer. The virtualized Java environment can use Java without an operating system by providing objects that can provide operating system services. Dan Ingalls said that ""An operating system is a collections of things that don't fit into a language. There should not be one."" Languages like Java, Smalltalk, C# contain all the high level objects and language constructs that provide threading, synchronization, and timers but used an operating system to provide those services. The JikesRVM has made it possible to implement the lower level services that where provided by an operating system to be implemented as Java objects.√æ√æ[The Design](DESIGN.md)√æ√æ## What are the advantages to this approach?√æ√æJOE creates an application that is very secure. The OS as designed today is intrinsically unsafe and insecure because of its  use of  'C' and similar type programming languages and files. 'C's shortcomings are well documented. The reason I mention files is because they are the main vectors for virus's and malware to invade a computer system. A file is just a bunch of anonymous data that has no clear identity. The program and OS  do not verify if a file or executable is hostile. Java was designed with security in mind. Security is addressed through the JVM, language type safety, garbage collection, and the security manager. There are no inherited operating system vulnerabilities to deal with. Classes and objects are verified when loaded into the VM. Everything in memory is an object and thus has an identity as determined by an Object table. Security is increased because of the design's metacircularity and the resulting decrease of system size. Smaller system size reduces the code surface area and ultimately the potential avenues of attack.√æ√æJOE will reduce the difficulty of application design. The elimination of the operating system  reduces an application's complexity because the operating system does not need to be considered in the design. The developer is free to design application specific abstractions and interfaces to meet the application's specification. The elimination of an external operating system will eliminate the accidental difficulty of configuring and maintaining it. Operating system configuration and maintenance can be a complex, time consuming and error prone process. JOE has the advantage of being a homogeneous environment in that only Java can be used. This is an advantage because it prevents a 'Tower of Babel' situation that can happen when using different programming languages and environments in an application's design.√æ√æApplication portability is automatic. This is more of a platform implementation issue because the ability to run your application relies on if the appropriate compilers and hardware objects are implemented to run that application on a specific hardware platform. That means for x86 platform compiler and hardware objects for the APIC, cpu, interrupt vectors and handling, timers, ethernet cards, and so on need to be implemented to support running applications on a stock x86 platform.√æ√æIncreased application speed is achieved. There are several reasons for this. No paging hardware is needed or expected. Unix programs are linked and compiled to run from an address space starting from zero. That is what virtual memory and paging hardware provide. Java does not need that ability. Not needing paging and virtual memory saves on program context switching time. It does not need to switch the page table, flush old tlb entries and load new ones, and flush the cache. Another speed advantage is that it does not need run between user and supervisor modes. Since security is managed by the programming language, VM, garbage collection, and security manager, the application can run in supervisor mode safely. This saves time on context switching and interrupt handling. Speed is also increased by taking advantage of the JikesRVM adaptive compiler. This feature will continually optimize an application by analyzing how it runs.√æ√æTotal size of the system is reduced. The obvious reductions come from no operating system and no file system. Not so obvious is that only objects and classes that the application uses are part of the system. It will only the include the parts of the Java library that it needs. This translates to an image that is about 19MB at this moment. I am confident that the size can be reduced event more. I also believe that smaller code will lead to a decrease in code defects.√æ√æThis is interoperable with current Java compilers, class files, and libraries. One does not need to recompile their code to work in the JOE system. The whole JOE tool suite is written in Java which simplifies the tool chain greatly. The development tools can run on any platform that supports Java runtime environment.√æ√æ[Run your own classes](HelloWorldClass.md)√æ√æ## How To Build√æ√æAnt is used to compile and build the JOE files and image. To build after the initial repository clone:√æ```√æant compile√æant compile-classpath√æant build√æ```√æ√æ## How To Add External Classes√æ√æPrecompiled classes can be added to the image and loaded by the runtime. This allows users to run  programs that have been compiled outside of the JOE image. The class StartUp has two methods runMain(String class) for running the main() method and runThread(String class)  for running a Thread class. Those two methods will class load the program and run it. To have classes loaded into the image they must be copied into the `ext/bin` directory. Below is an example. The classes must be compiled for Java version 1.5.√æ√æ```√æFAMILYs-MacBook-Pro:JOE joe$ ls -R ext/bin√æcom hello√æ√æext/bin/com:√ævonhessling√æ√æext/bin/com/vonhessling:√æDiningPhilosophers$Philosopher.class DiningPhilosophers.class√æ√æext/bin/hello:√æworld√æ√æext/bin/hello/world:√æHwThread.class√æ```√æ## How To Run√æ√æTo run the image, jam.out:√æ```√æcd jikesrvm-hg√ç/target/BaseBaseSemiSpace_x86_64-osx√æ../../../scripts/rjoe√æ```√æ√æThe jam.out in the top directory will run org.jam.test.Sleep thread.√æ√æorg.jikesrvm.VM is where application boot starts."
zielu/GitToolBox,3364,196,9,23,User,False,GitToolBox IntelliJ plugin,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 3, 'yml': 1, 'md': 1}",1341,19,201,3,4,2191,True,45,198,22,38,0,7,0,0,27,0,1,197,7707,4639,0,0,21,,16,,GitToolBox - plugin for Jetbrains IDEs√æ======================================√æ[![Build Status](https://travis-ci.org/zielu/GitToolBox.svg?branch=develop)](https://travis-ci.org/zielu/GitToolBox)√æ√æPlugin for family of Jetbrains IDEs that expands build-in `Git Integration`.√æ√æ## Features√æFor list of features see [description](./GitToolBox/description.html)√æ√æ## Change notes√æFor list of change notes see [changenotes](./GitToolBox/change-notes.html)√æ√æ## Jetbrains plugin repository√æ[Plugin repository page](https://plugins.jetbrains.com/plugin/7499-gittoolbox)√æ√æ### EAP builds√æAdd https://plugins.jetbrains.com/plugins/eap/7499 in **Settings > Plugins > Browse repositories... > Manage √ærepositories...** to receive early access builds.√æ√æ## Architecture decisions record√æDecisions are stored [here](https://github.com/zielu/GitToolBox/wiki/arch).√æ√æ## Building & running√æ√æ### Releases√æ√æ#### Release current `-SNAPSHOT`√æ```√ægradle clean release√æ```√æ#### Upgrade to next minor version√æ```√ægradle clean releaseMinorVersion√æ```√æ#### Upgrade to next major version√æ```√ægradle clean releaseMajorVersion√æ```√æ√æ#### Release and publish√æAppend ```-Ppublish=true``` and include ```publishPlugin``` task.√æFor example√æ```√ægradle clean release publishPlugin -Ppublish=true√æ```√æ√æ### Useful build commands√æFull verification of build√æ```√ægradle clean check integrationTest√æ```√æQuick verification of build√æ```√ægradle clean check√æ```√æGenerate code coverage report√æ```√ægradle clean codeCoverage√æ```√æUpdate gradlew version√æ```√ægradle wrapper --gradle-version 5.6.4 --distribution-type ALL√æ```√æ√æ### Useful run commands√æRun with previous sandbox contents√æ```√ægradle runIde√æ```√æRun with fresh sandbox√æ```√ægradle clean runIde√æ```√æ√æ### Debugging√æTo debug the plugin execute Gradle run configuration with `runIde` task using IDE **Debug action**.√æ√æ## Logging√æPlugin can log additional diagnostic information to help with issues investigation. All categories can be used in any combination.√æ√æ### Debug logging√æAdd following line to **Help > Debug Log Settings...**√æ```√æ#zielu.gittoolbox√æ```√æ√æ## Performance metrics√æMetrics are exposed via JMX beans under `zielu.gittoolbox` domain.√æ√æ## Icons attribution:√æ√æ[Git Logo](https://git-scm.com/downloads/logos) by [Jason Long](https://twitter.com/jasonlong) is licensed under the [Creative Commons Attribution 3.0 Unported License](https://creativecommons.org/licenses/by/3.0/)√æ√æSome icons by [Yusuke Kamiyamane](http://p.yusukekamiyamane.com). Licensed under a [Creative Commons Attribution 3.0 License](http://creativecommons.org/licenses/by/3.0/)
xead/XeadDriver,35814,9,1,4,User,False,"XEAD Driver is a developing platform of DB systems. Write ""specifications"" using XEAD Editor. Driver interprets them and launches systems without generating codes nor compiling. ‚òÖ XEAD Driver„ÅØ„ÄÅÊ•≠Âãô„Ç∑„Çπ„ÉÜ„É†„ÇíÈñãÁô∫„Åô„Çã„Åü„ÇÅ„ÅÆÊú™Êù•Âûã„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Åß„Åô„ÄÇÂêåÊ¢±„Åï„Çå„Å¶„ÅÑ„Çã„Ç®„Éá„Ç£„Çø(XEAD Editor)„ÇíÁî®„ÅÑ„Å¶‰ªïÊßòÊõ∏„Çí‰ΩúÊàê„Åô„Çã„Å†„Åë„Åß„ÄÅ  „Ç∑„Çπ„ÉÜ„É†„ÅåÂãï‰Ωú„Åó„Åæ„Åô„ÄÇ",http://homepage2.nifty.com/dbc/,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",7,Java,{'': 5},92,1,0,1,0,3378,True,0,0,0,0,0,0,0,0,0,0,1,1,510,396,0,0,4,,29,,
santosh52krishna/os-sample-java-web,20,0,1,9,User,False,,,,6,Java,"{'': 1, 'md': 1, 'yml': 1, 'xml': 1}",38,3,0,1,0,871,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,24,,1,,# os-sample-java-web√æSample Java Web Application for use in OpenShift
codeka/carrot,5348,8,1,5,User,False,"A Java templating engine, similar in syntax to Jinja.",,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",12,Java,"{'': 3, 'yml': 1, 'md': 2, 'gradle': 1, 'properties': 1, 'bat': 1}",217,3,9,3,3,3983,True,1,18,0,3,0,19,0,0,7,0,1,14,1001,816,0,0,35,,41,,"Carrot√æ======√æ√æ[![Build Status](https://travis-ci.org/codeka/carrot.svg?branch=master)](https://travis-ci.org/codeka/carrot)√æ[![Code Coverage](https://img.shields.io/codecov/c/github/codeka/carrot/master.svg)](https://codecov.io/github/codeka/carrot?branch=master)√æ√æCarrot is a templating library for Java that is similar to the Jinja library from python. Jinja ->√æGinger -> Carrot, geddit?√æ√æIt was originally a fork of http://jangod.googlecode.com/, but that project appears to be abandoned,√æso I've renamed it, and subsequently (in version 2.x) rewritten it.√æ√æGetting Started√æ===============√æ√æWith Maven:√æ√æ    <dependency>√æ      <groupId>au.com.codeka</groupId>√æ      <artifactId>carrot</artifactId>√æ      <version>2.4.5</version>√æ    </dependency>√æ√æWith Gradle:√æ√æ    compile 'au.com.codeka:carrot:2.4.5'√æ√æFirst, you need to create a `CarrotEngine`, which will hold the environment for parsing templates√æand processing them:√æ√æ    CarrotEngine engine = new CarrotEngine(new Configuration.Builder()√æ         .setResourceLocator(new FileResourceLocator.Builder(""path/to/templates""))√æ         .build());√æ√æTypically, you'll have a ""skeleton"" template and a ""body"" template, where the skeleton defines the√æoverall HTML structure that all your pages share, and the body template is the custom things just√æfor that page. The way you do this is by having your body template extend the skeleton template,√ælike so:√æ√æskeleton.html:√æ√æ    <!DOCTYPE html>√æ    <html>√æ      <head>√æ        <title>{% block ""title"" %}{% end %}</title>√æ      </head>√æ      <body>√æ        {% block ""content"" %}{% end %}√æ      </body>√æ    </html>√æ√æindex.html:√æ√æ    {% extends ""skeleton.html"" %}√æ    {% block ""title"" %}Hello World{% end %}√æ    {% block ""content"" %}√æ      <h1>Hello, World!</h1>√æ    {% end %}√æ√æFinally to process a template, you use the `process` method:√æ√æ    System.out.println(engine.process(""index.html"", new EmptyBindings()));√æ√æNow how do you actually pass data from your application to the template? That's what the bindings√æare for. Say you have the following in your template:√æ√æ    <p>Hello, {{ name }}!</p>√æ√æYou'd pass data to that via `Bindings`, like so:√æ√æ    Map<String, Object> bindings = new TreeMap<>();√æ    bindings.put(""name"", ""Dean"");√æ    System.out.println(engine.process(""index.html"", new MapBindings(bindings)));√æ√æDocumentation√æ=============√æ√æThe documentation is currently pretty sparse, but you can head over to√æ[codeka.github.io/carrot](http://codeka.github.io/carrot/) to view what there is. Please do not√æhesitate to [open an issue](https://github.com/codeka/carrot/issues/new) if you have any questions.√æ√æContributing√æ============√æ√æI love contributions! In general, follow the [standard GitHub process for pull√ærequests](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).√æ√æTo build locally, you can just do:√æ√æ    gradlew build√æ√æWhich will put a .jar in `build/libs`. From there just copy it to your project, test it and so on.√æ√æTo build the documentation:√æ√æ    gradlew buildDocs√æ√æWhich will put the docs in `build/docs`."
realityforge/gwt-appcache-example,347,2,0,4,User,False,A simple application demonstrating the use of the gwt-appcache library,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Ruby,"{'': 6, 'yml': 1, 'md': 4, 'yaml': 1}",104,1,0,1,0,2370,False,,,,,0,1,0,0,6,0,1,3,6,2,0,0,259,,90,,> Project Archived: [gwt-appcache](https://github.com/realityforge/gwt-appcache) has been archived so example can also be archived.√æ√æ---√æ√ægwt-appcache-example√æ====================√æ√æ[![Build Status](https://secure.travis-ci.org/realityforge/gwt-appcache-example.svg?branch=master)](http://travis-ci.org/realityforge/gwt-appcache-example)√æ√æA sample application that demonstrates the use of the [gwt-appcache](https://github.com/realityforge/gwt-appcache) library.√æ√æCredit√æ======√æ√æThe image was used because it was beautiful and because it is CC licensed. The image was retrieved from [flickr](http://www.flickr.com/photos/jdbaskin/4204567297/sizes/l/).
mobile04/Harvard-Museums,4480,2,1,4,User,False,Reposit√≥rio para as atualiza√ß√µes e servi√ßos do projeto Harvard Museums,,,11,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",147,16,0,11,0,614,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,9,,12,mobile02-2019/Harvard-Museums,# Harvard-Museums√æReposit√≥rio para as atualiza√ß√µes e servi√ßos do projeto Harvard Museums
etf-validator/etf-bsxtd,1917,0,3,3,Organization,False,ETF test driver for running BaseX XQuery based test projects,,"{'key': 'eupl-1.2', 'name': 'European Union Public License 1.2', 'spdx_id': 'EUPL-1.2', 'url': 'https://api.github.com/licenses/eupl-1.2', 'node_id': 'MDc6TGljZW5zZTM0'}",12,Java,"{'': 3, 'yml': 1, 'md': 1, 'gradle': 2, 'properties': 2, 'bat': 1}",66,3,1,3,2,1613,False,,,,,0,2,0,0,7,0,0,0,0,0,0,0,20,2,,,"# ETF Test Driver for testing XML files with BaseX√æ√æThe test driver is loaded by the ETF framework at runtime. The test driver√æloads the test data into the integrated [BaseX database](http://basex.org/) and√æexecutes XQuery data test scripts bundled as ETF project files.√æ√æ[![European Union Public Licence 1.2](https://img.shields.io/badge/license-EUPL%201.2-blue.svg)](https://joinup.ec.europa.eu/software/page/eupl)√æ√æ&copy; 2017 European Union, interactive instruments GmbH. Licensed under the EUPL.√æ√æ## About ETF√æ√æETF is an open source testing framework for validating spatial data, metadata and web services in Spatial Data Infrastructures (SDIs). For documentation about ETF, see [http://docs.etf-validator.net](http://docs.etf-validator.net/).√æ√æPlease report issues [in the GitHub issue tracker of the ETF Web Application](https://github.com/interactive-instruments/etf-webapp/issues).√æ√æETF component version numbers comply with the [Semantic Versioning Specification 2.0.0](http://semver.org/spec/v2.0.0.html).√æ√æ## Build information√æ√æThe project can be build and installed by running the gradlew.sh/.bat wrapper with:√æ```gradle√æ$ gradlew build install√æ```√æ√æ## Installation√æCopy the JAR path to the _$driver_ directory. The $driver directory is configured in your _etf-config.properties_ configuration path as variable _etf.testdrivers.dir_. If the driver is loaded correctly, it is displayed on the status page.√æ√æ## Updating√æRemove the old JAR path from the _$driver_ directory and exchange it with the new version.√æ√æ## Developing BaseX-based Executable Test Suites√æ√æ[The ETF developer manual](http://docs.etf-validator.net/Developer_manuals/Developing_Executable_Test_Suites.html) describes how to develop Executable Test Suites using BaseX."
ow2-proactive/catalog,17247,3,18,23,Organization,False,,,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",10,Java,"{'': 3, 'txt': 1, 'md': 1, 'gradle': 1, 'properties': 1, 'bat': 1}",778,51,101,23,0,1629,True,14,24,0,1,0,180,0,14,7,10,6,14,1284,616,0,0,67,17,,,"# ProActive Catalog√æ√æ[![Build Status](http://jenkins.activeeon.com/buildStatus/icon?job=generic-catalog)](http://jenkins.activeeon.com/job/generic-catalog/)√æ[![Coverage Status](https://coveralls.io/repos/github/ow2-proactive/catalog/badge.svg?branch=origin%2Fmaster)](https://coveralls.io/github/ow2-proactive/catalog?branch=origin%2Fmaster)√æ√æThe goal of the catalog is to store ProActive objects. It is the catalog for general purpose.√æ√æThe stored objects in the catalog could be:√æ- rule for PCW service√æ- workflows√æ- selection script√æ- Proactive pre/post task√æ- objects for authentication service√æ- any kind of other objects√æ√æCatalog contains a set of objects organized into buckets with versioning capabilities.√æ√æA single Bucket can store multiple kinds of objects√æ√æ## Building and deploying√æ√æYou can build a WAR file as follows:√æ√æ```√æ$ ./gradlew clean build war√æ```√æ√æThen, you can directly deploy the service with embedded Tomcat:√æ√æ```√æ$ java -jar build/libs/catalog-X.Y.Z-SNAPSHOT.war√æ```√æ√æThe WAR file produced by Gradle can also be deployed in the embedded Jetty container started by an instance of [ProActive Server](https://github.com/ow2-proactive/scheduling).√æ√æ## Samples with REST API√æ√æAvailable resources can be listed and tested with Swagger.√æA complete documentation of the Catalog REST API is available by default on:√æ√æ[http://localhost:8080/catalog/swagger-ui.html](http://localhost:8080/catalog/swagger-ui.html)√æ√æBelow are some REST invocations using [HTTPie](https://github.com/jkbrzt/httpie).√æ√æ### Bucket resource√æ√æCreating a new bucket named _test_:√æ```√æ$ http -f POST http://localhost:8080/buckets name=test-bucket√æ```√æ√æGetting information about bucket by name as identifier:√æ```√æ$ http http://localhost:8080/buckets/test-bucket√æ```√æ√æListing available buckets:√æ```√æ$ http http://localhost:8080/buckets√æ```√æ√æ√æ### Object resource√æ√æ**REST actions related to existing objects apply to the latest revision of the identified object.**√æ√æAdding a new object in bucket with name test-bucket:√æ```√æ$ http -f POST http://localhost:8080/buckets/test-bucket/objects file@/path/to/object.xml√æ```√æ√æGetting object metadata for object with name objectName in bucket test-bucket:√æ```√æ$ http http://localhost:8080/buckets/test-bucket/objects/objectName√æ```√æ√æFetching the raw content of a last revision for object with identifier objectName:√æ```√æ$ http http://localhost:8080/buckets/{bucketName}/resources/{objectName}/raw√æ```√æ√æListing objects managed by bucket with name test-bucket:√æ```√æ$ http http://localhost:8080/buckets/test-bucket/objects√æ```√æ√æ### Object revision resource√æ√æAdding a new object revision for object with name objectName in bucket with name test-bucket:√æ```√æ$ http -f POST http://localhost:8080/buckets/test-bucket/objects/objectName/revisions file@/path/to/object.xml√æ```√æ√æGetting object metadata for object with identifier objectName in bucket test-bucket for revision identified by commitTime:√æ```√æ$ http http://localhost:8080/buckets/test-bucket/objects/objectName/revisions/commitTime√æ```√æ√æFetching raw object's content for object with identifier objectName and specific revision by commitTime:√æ```√æ$ http http://localhost:8080/buckets/{bucketName}/resources/{objectName}/revisions/{commitTime}/raw√æ√æ```√æ√æListing all revisions for object with name test-bucket:√æ```√æ$ http http://localhost:8080/buckets/test-bucket/objects/objectName/revisions√æ```√æ√æ## GraphQL usage√æGraphQL is the standardized query language, which provides opportunity to search and retrieve the Objects by specified criterion from the Catalog.√æNOTE: Please follow the graphiql endpoint: http://localhost:8080/catalog/graphiql in order to query for the specific Object.√æ√æIn GraphQL the user can filter Objects by specific parameters. The user will retrieve only the fields of Object that are required.√æ√æ### Example of GraphQL query√æ√æThe next example will fetch all Objects that has name like `Clear%` from `cloud-automation` bucket.√æThe response will return all fields, that are in the query.√æ```√æ{√æ  allCatalogObjects(where: {AND: [{nameArg: {like: ""Clear%""}}, {bucketNameArg: {eq: ""cloud-automation""}}]}) {√æ    edges {√æ      bucketName√æ      name√æ      kind√æ      contentType√æ      metadata {√æ        key√æ        value√æ        label√æ      }√æ      commitMessage√æ      commitDateTime√æ      link√æ    }√æ    page√æ    size√æ    totalPage√æ    totalCount√æ    hasNext√æ    hasPrevious√æ  }√æ}√æ```√æMore complex examples are available inside GraphqlServiceIntegrationTest class implementation.√æFor more information about existing search filters and model of Catalog Object, please check Documentation explorer in graphiql GUI."
wildfly-security/wildfly-elytron,206422,41,12,90,Organization,False,"WildFly Elytron: Security, Authentication, and Authorization SPIs for the WildFly project",https://wildfly-security.github.io/wildfly-elytron/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",29,Java,"{'': 1, 'txt': 3, 'md': 1, 'xml': 1}",4385,14,197,47,0,3290,False,,,,,16,1402,8,51,42,2,9,86,4677,2826,175,0,13,0,,,"WildFly Elytron√æ===============√æ√æWildFly Elytron is a new WildFly sub-project which is completely replacing the combination of PicketBox and JAAS as the WildFly client and  server security mechanism.√æ √æAn ""elytron"" (ƒïl¬¥¬∑ƒ≠¬∑tr≈èn, plural ""elytra"") is the hard, protective casing over a wing of certain flying insects (e.g. beetles).√æ√æBuilding From Source√æ--------------------√æ√æ```console√æ$ git clone git@github.com:wildfly-security/wildfly-elytron.git√æ```√æ√æSetup the JBoss Maven Repository√æ--------------------------------√æ√æTo use dependencies from JBoss.org, you need to add the JBoss Maven Repositories to your Maven settings.xml. For details see http://community.jboss.org/wiki/MavenGettingStarted-Users√æ√æBuild with Maven√æ----------------√æ√æThe command below builds the project and runs the embedded suite.√æ√æ```console√æ$ mvn clean install√æ```√æ√æIssue Tracking√æ--------------√æ√æBugs and features are tracked within the Elytron Jira project at https://issues.jboss.org/browse/ELY√æ√æContributions√æ-------------√æ√æWhen submitting bug fixes please start from the 1.3.x branch and submit the pull request against this branch.√æ√æAll new features and enhancements should be submitted to 1.x branch only.√æ√æhttps://developer.jboss.org/wiki/GettingStartedWithWildFlyElytron"
Agorise/crystal-wallet-android,6071,3,4,5,User,False,The Crystal multi-chain cryptocurrency mobile wallet,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",508,3,3,7,0,1040,True,0,0,0,0,0,10,0,0,7,0,0,0,0,0,0,0,29,,198,,# crystal-wallet-android
tterrag1098/K9,8940,23,1,25,User,False,A Discord bot with some useful commands.,http://tterrag.com/k9/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 3, 'md': 3, 'gradle': 1, 'mgc': 1, 'properties': 1, 'bat': 1, 'config': 1}",616,12,0,6,0,1205,True,10,20,2,1,3,18,3,0,7,0,1,41,1054,352,0,0,127,,142,,"<img src=""https://i.imgur.com/xjPT4WB.png"" width=""100px"" height=""100px""></img>√æ# K9 [![Build Status](https://ci.tterrag.com/buildStatus/icon?job=K9)](https://ci.tterrag.com/job/K9)√æ√æA Discord bot with some useful commands.√æ√æIt uses [Discord4J](https://discord4j.com/), an awesome Java library for the Discord API.√æ√æ## About√æ√æK9 was originally created for a server about Minecraft modding, and its first command was to look up MCP mappings. It still has this feature, but there is now much more!√æ√æ- Custom pings for arbitrary regex (!ping)√æ - Ever wanted to be pinged for something other than your username? Want to make sure to catch every time someone says your name, because you're a creepy bastard with nothing better to do? Then this is the command for you!√æ- A command to manage ""information"" channels√æ - Allows any administrator to update the content of an information channel from an outside source.√æ- A Clojure REPL emulator (!clj)√æ - If you know what this means, then you're probably a nerd.√æ- The ability to create custom commands (called ""tricks"") which can process user input and execute code (!trick)√æ    - I don't have a funny quip for this one, but trust me, it's neat!√æ- Look up CurseForge projects and download counts for any username (!cf)√æ    - You're so vain, I bet you'll run this command on yourself.√æ- Lets you keep track of the best quotes from your server, and even battle them together head-to-head! (!quote)√æ    - Because everything is funnier out of context.√æ- The ability to change the command prefix√æ    - What do you mean other bots already use an exclamation mark?√æ- Create drama (!drama)√æ- Slap people (!slap)√æ- More to come!√æ√æIt also features a complete help system, so figuring out how to use a command is as simple as `!help [command]`.√æ√æ## How do I get K9 in my server already?√æ√æWell, if you're lucky enough to know me, just ask. Currently the instance of K9 I run is private, so only I can invite it to servers I personally know the owners of. However, K9 is open source and the build server I use is public, so it's easy to set up your own instance! See the next section for a how-to.√æ√æ## So you want to run your own K9√æ√æGreat! Before doing anything, make sure you have the latest version of Java 8 installed on the machine that will be running the bot.√æ√æ1. Download the bot from [Jenkins](https://ci.tterrag.com/job/K9/). Make sure to grab the -all jar, it includes all the libraries needed to run K9 inside it.√æ2. Create a [Discord App](https://discordapp.com/developers/applications/me). Give it an appropriate name, and make sure to click the ""Create a Bot User"" button. After that, make sure to copy the bot token, you'll need it for the next step!√æ3. That's all the setup! Make sure the bot jar is inside a clean directory (it will create some folders for storing data), and then you can run it with the syntax: `java -jar [jar name] -a [bot token]`. You might want to do this inside a `screen` or similar.√æ√æAnd that's all! You should see a lot of console output, and then the bot will be running! To invite it to a server, use the ""Generate OAuth2 URL"" button on the app page. What permissions you give the bot is up to you, but it does not (currently) need any more than these:√æ√æ![](https://i.imgur.com/JINS5mk.png)√æ√æ## I know this sounds impossible, but I think K9 can be better. How can I help?√æ√æSee the [CONTRIBUTING.md](https://github.com/tterrag1098/K9/blob/master/CONTRIBUTING.md) file."
nishihatapalmer/byteseek,29940,26,3,9,User,False,A Java library for byte pattern matching and searching,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",9,Java,"{'': 2, 'md': 3, 'txt': 1, 'xml': 1}",1540,2,4,1,4,3484,True,7,13,0,0,0,1,0,0,10,0,0,0,0,0,15,0,5,,1,,"<img align=""left"" src=""images/byteseek_logo_64x63.png""> √æ√æ# byteseek√æ√æbyteseek is a Java library for efficiently matching patterns of bytes and searching for those patterns.  Source code can be found at Github in the [byteseek repository](https://github.com/nishihatapalmer/byteseek). Published releases of byteseek are also available on [maven central](https://search.maven.org/#search|ga|1|byteseek).  The main well-tested packages are:√æ√æ#### Matcher√æ√æA package which contains various types of matcher for individual bytes or sequences of them.√æ* bytes - matchers (and inverted matchers) for bytes, ranges of bytes, sets, any byte, and bitmasks.√æ* sequence - matchers for sequences of bytes, byte matchers, fixed gaps and sequences of sequences.  √æ√æ#### Searcher√æ√æA package which contains implementations of various search algorithms.  Most of them are sub-linear, which means they don't have to examine every position in an input source to find all possible matches.  All the search algorithms have been extended to work with sequences which can match more than one byte at a given position.  Any sequence search algorithm can work with any sequence matcher, no matter how it is composed.  All the search implementations are stream-friendly - the length of an input source is not required unless you explicitly want to work at the end of an input source.  √æ√æ* bytes - a naive searcher for byte matchers.√æ* matcher - a naive searcher for any matcher.√æ* sequence - various implementations of the naive search, Boyer-Moore-Horspool, Signed Horspool and Sunday QuickSearch algorithms.√æ√æ#### IO√æ√æMatchers and searchers can all work over byte arrays directly.  In order to read efficiently from any other input source,√æreaders provide a consistent random-access interface over files, input streams, strings and byte arrays.  Pluggable caching strategies allow tailoring the memory and performance for different use cases.√æ√æThis package may be generally useful, independent of byteseek matching and searching.√æ√æ* reader - readers for files, input streams, strings and byte arrays, and an adapter from any reader back to an InputStream.  Readers cache the byte arrays read from the input sources using flexible caching strategies.√æ* reader/cache - pluggable caching strategies for readers, including least recently added, least recently used, temporary file caches, two level caches, double caches and others.√æ√æ#### Parser√æA byte-oriented [regular expression language](syntax.md) is given to allow the easy construction of byte matchers, sequence matchers, and (eventually) finite state automata.  An abstract syntax tree is defined, so other regular expression syntaxes could be used if required.√æ* regex - a parser for a byte-oriented regular expression language, which produces a byteseek abstract syntax tree.√æ√æ#### Compiler√æA package which contains compilers for all of the matchers from an abstract syntax tree.√æ* matchers - compilers from the byteseek abstract syntax tree to byte matchers and sequence matchers.√æ√æ## Untested√æVarious other packages exist which are not currently tested, but will become so eventually.  These include:√æ√æ#### Matcher√æ* multisequence - algorithms for multi-sequence matching, including lists and trie structures.√æ* automata - matchers for non deterministic and deterministic automata.√æ√æ#### Searcher√æ* multisequence - implementations of Set Horspool, Signed Set Horspool, Wu-Manber and Signed Wu-Manber algorithms.√æ√æ#### Compiler√æ* regex - produces full regular expressions as finite state automata from the byteseek abstract syntax tree.√æ√æRegular expressions are constructed as Glushkov finite state automata, rather than the more common [Thompson construction](https://en.wikipedia.org/wiki/Thompson's_construction).  Glushkov automata are generally more compact and have no empty transitions, which can improve performance and makes them simpler to work with.√æ√æThe [normal construction for Glushkov automata](https://en.wikipedia.org/wiki/Glushkov's_construction_algorithm) involves a somewhat complex and recursive analysis stage.  In byteseek, we construct a Glushkov automata directly from the abstract syntax tree, similarly to the Thompson construction but avoiding the need for any empty transitions. It has been adapted and extended from the method given in the paper below:√æ√æ> ""[A reexamination of the Glushkov and Thompson Constructions](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.50.5883&rank=1)"", by Dora Giammarresi, Jean-Luc Ponty, Derick Wood, 1998.√æ√æ#### Automata√æ* Finite state automata with flexible transitions can be constructed. √æ* Non deterministic automata can be converted into deterministic automata.√æ* Trie structures are provided from multi sequences. √æ* Utilities allow for easily walking the automata and producing DOT files (graphviz) from them."
sormuras/bach,5466,140,8,33,User,False,üéº Java Shell Builder - Build modular Java projects with JDK tools,https://github.com/sormuras/bach,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'yml': 1, 'md': 2, 'properties': 1, 'sh': 1}",3552,2,41,12,3,1132,True,16,95,5,15,1,20,1,3,11,1,5,1460,71218,66666,0,0,98,,232,,"# Bach.java 11-ea - Java Shell Builder√æ √æ[![jdk11](https://img.shields.io/badge/JDK-11+-blue.svg)](https://jdk.java.net)√æ[![experimental](https://img.shields.io/badge/API-experimental-yellow.svg)](https://jitpack.io/com/github/sormuras/bach/master-SNAPSHOT/javadoc/)√æ[![github actions](https://github.com/sormuras/bach/workflows/Bach.java/badge.svg)](https://github.com/sormuras/bach/actions)√æ√æUse Java source to build your modular Java project.√æ√æ## Features√æ√æ- ‚òï **Java**, pristine Java√æ√æ    > JDK 11+ required.√æ    Write custom build programs in Java (no XML, YML, Z...).√æ√æ- üöÄ **Zero-installation** build mode√æ√æ    > `jshell https://sormuras.de/bach/build` - redirects to [bach-build.jsh](src/bach/bach-build.jsh)√æ√æ- üìö **API** documentation√æ√æ    > Calls `javadoc` with the right arguments.√æ    Find generated HTML pages in `bach/workspace/documentaion/api/`.√æ√æ- üíæ Custom runtime **image**√æ√æ    > Calls `jlink` with the right arguments.√æ    Find binary assets in `bach/workspace/image/`.√æ√æ- ‚úî Automated Checks: **Test** program and JUnit Platform support√æ√æ    > Runs custom `ToolProvider`-based test programs named `test(${MODULE})`.√æ    In-process.√æ    Launches [JUnit Platform](https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher) with the right arguments.√æ    In-process.√æ    Find reports in `.bach/workspace/junit-reports/`.√æ√æ- üóÑ **Multi-Release** modular JAR file support√æ√æ    > Place your sources in directories named like `java-N`.√æ    `N` stands for Java release feature number.√æ    Explore [MultiRelease](doc/project/MultiRelease) for an example project.√æ√æ- üß© **3<sup>rd</sup>-party modules** in plain sight√æ√æ    > You store and find all required modular JAR files in the top-level `lib/` directory.√æ    Missing modules are resolved recursively looking up module-to-maven mappings from [sormuras/modules](https://github.com/sormuras/modules).√æ√æ- üìã Structured build **summary** with history√æ√æ    > Stores latest summary as `.bach/workspace/summary.md`.√æ    Find a collection summary files from previous builds in `.bach/workspace/summaries/`.√æ√æ√æ# install-jdk.sh√æ√æ`install-jdk.sh` main purpose is to install the _latest-and-greatest_ available OpenJDK release from [jdk.java.net](https://jdk.java.net).√æFind a Travis CI matrix configuration at [sormuras.github.io/.travis.yml](https://github.com/sormuras/sormuras.github.io/blob/master/.travis.yml). √æ√æ#### Options of `install-jdk.sh`√æ```√æ-h|--help                 Displays this help√æ-d|--dry-run              Activates dry-run mode√æ-s|--silent               Displays no output√æ-e|--emit-java-home       Print value of ""JAVA_HOME"" to stdout (ignores silent mode)√æ-v|--verbose              Displays verbose output√æ√æ-f|--feature 9|11|...|ea  JDK feature release number, defaults to ""ea""√æ-o|--os linux-x64|osx-x64 Operating system identifier√æ-u|--url ""https://...""    Use custom JDK archive (provided as .tar.gz file)√æ-w|--workspace PATH       Working directory defaults to user's ${HOME}√æ-t|--target PATH          Target directory, defaults to first real component of the tarball√æ-c|--cacerts              Link system CA certificates (currently only Debian/Ubuntu is supported)√æ```√æ√æ#### How to set `JAVA_HOME` with `install-jdk.sh`√æ√æ- Source `install-jdk.sh` into current shell to install latest OpenJDK and let it update `JAVA_HOME` and `PATH` environment variables:√æ√æ  - `source ./install-jdk.sh` _Caveat: if an error happens during script execution the calling shell will terminate_√æ  √æ- Provide target directory path to use as `JAVA_HOME`:√æ√æ  - `JAVA_HOME=~/jdk && ./install-jdk.sh --target $JAVA_HOME && PATH=$JAVA_HOME/bin:$PATH`√æ√æ- Run `install-jdk.sh` in a sub-shell to install latest OpenJDK and emit the installation path to `stdout`:√æ√æ  - `JAVA_HOME=$(./install-jdk.sh --silent --emit-java-home)`√æ  - `JAVA_HOME=$(./install-jdk.sh --emit-java-home | tail --lines 1)`√æ√æ# be free - have fun√æ[![jsb](https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/Bachsiegel.svg/220px-Bachsiegel.svg.png)](https://wikipedia.org/wiki/Johann_Sebastian_Bach)√æ√æ[Apache Ant]: https://ant.apache.org√æ[install-jdk.sh]: https://github.com/sormuras/bach/blob/master/install-jdk.sh√æ[JDK Foundation Tools]: https://docs.oracle.com/en/java/javase/11/tools/main-tools-create-and-build-applications.html√æ[jlink]: https://docs.oracle.com/en/java/javase/11/tools/jlink.html√æ[jshell]: https://docs.oracle.com/en/java/javase/11/tools/jshell.html"
chabokpush/chabok-client-rn,5833,5,3,5,Organization,False,Chabok react native wrapper,https://doc.chabokpush.com/react-native-bridge/introducing.html,,10,Java,"{'': 3, 'md': 2, 'js': 1, 'json': 1}",263,10,14,6,4,903,True,4,13,0,0,1,27,0,0,11,0,0,0,0,0,0,0,24,2,,,"![Logo](https://github.com/chabokpush/chabok-assets/blob/master/sdk-logo/RN-Bridge.svg)√æ√æ# Chabok Push Client for React Native (Bridge)√æ√æ[![NpmVersion](https://img.shields.io/npm/v/react-native-chabok.svg)](https://www.npmjs.com/package/react-native-chabok)√æ[![npm](https://img.shields.io/npm/dt/react-native-chabok.svg)](https://www.npmjs.com/package/react-native-chabok)√æ√æReact native wrapper for chabok library.√æThis client library supports react-native to use chabok push library.√æA Wrapper around native library to use chabok functionalities in react-native environment.√æ√æ## installation√æFor java-part, library refrence and library initialization that includes seting up: `APP_ID`, `API_KEY`, `SDK_USERNAME`,  `SDK_PASSWORD` and platform specific parts regarding library reference for ios, and installatin details refer to [docs](https://doc.chabokpush.com/react-native-bridge/introducing.html).√æ√æTo install packages:√æ√æ```bash√æyarn add react-native-chabok√æ```√æor√æ√æ```bash√ænpm install react-native-chabok --save√æ```√æ√æFor linking `react-native-chabok`√æ√æ```bash√æreact-native link react-native-chabok√æ```√æ√æ## Getting Started Android√æ√æ1. Update compileSdkVersion, buildToolsVersion, support library version√æFor the Android SDK, edit the `build.gradle` file in your `android/app` directory √æ√æ```groovy√æandroid {√æ    compileSdkVersion 26√æ    buildToolsVersion ""26.0.2""√æ    ...√æ}√æ```√æ√æ```groovy√ædependencies {√æ    ...√æ    compile ""com.google.android.gms:play-services-gcm:10.2.6""√æ    compile 'me.leolin:ShortcutBadger:1.1.22@aar'√æ    compile 'com.adpdigital.push:chabok-lib:2.13.+'√æ    ...√æ}√æ```√æ2. Please update your `AndroidManifest.xml` according to following sample :√æ√æ```xml√æ<manifest√æ    xmlns:android=""http://schemas.android.com/apk/res/android""√æ    package=""YOUR_APPLICATION_PACKAGE_ID"">√æ√æ    <permission√æ        android:name=""YOUR_APPLICATION_PACKAGE_ID.permission.C2D_MESSAGE""√æ        android:protectionLevel=""signature""/>√æ√æ    <uses-permission android:name=""YOUR_APPLICATION_PACKAGE_ID.permission.C2D_MESSAGE"" />√æ√æ    <application>√æ        √æ        <receiver√æ                android:name=""com.google.android.gms.gcm.GcmReceiver""√æ                android:enabled=""true""√æ                android:exported=""true""√æ                android:permission=""com.google.android.c2dm.permission.SEND"">√æ            <intent-filter>√æ                <action android:name=""com.google.android.c2dm.intent.RECEIVE""/>√æ                <action android:name=""com.google.android.c2dm.intent.REGISTRATION""/>√æ                <category android:name=""YOUR_APPLICATION_PACKAGE_ID""/>√æ            </intent-filter>√æ        </receiver>√æ√æ...√æ√æ    </application>√æ√æ```√æ√æ3. Initialize Chabok SDK in your `MainApplication.java`:√æ√æ```java√æ√æpublic class YourAppClass extends Application {√æ√æprivate AdpPushClient chabok = null;√æ√æ    @Override√æ    public void onCreate() {√æ        super.onCreate();√æ        if (chabok == null) {√æ                   chabok = AdpPushClient.init(√æ                       getApplicationContext(),√æ                       MainActivity.class,√æ                       ""YOUR_APP_ID/SENDER_ID"",√æ                       ""YOUR_API_KEY"",√æ                       ""SDK_USERNAME"",√æ                       ""SDK_PASSWORD""√æ                       );√æ               }√æ    }√æ√æ    @Override√æ    public void onTerminate() {√æ        if (chabok != null)√æ            chabok.dismiss();√æ√æ        super.onTerminate();√æ    }√æ}√æ√æ```√æ√æ## Getting started - iOS√æ√æ1. The native iOS SDKs need to be setup using Cocoapods. In your project's `ios` directory, create a Podfile.√æ```bash√æ$ cd ios√æ$ pod init√æ```√æ2. Edit the Podfile to include `ChabokPush` as a dependency for your project, and then install the pod with `pod instal`.√æ```bash√æuse_frameworks!√æplatform :ios, '9.0'√æ√ætarget 'YOUR_TARGET_NAME' do√æ√æ  # Pods for AwesomeProject√æ  pod 'ChabokPush'√æ√æend√æ```√æ√æ3. Open the iOS project with .xcworkspace file in Xcode and also, open the `node_modules/react-native-chabok/` directory. Move the `ios/AdpPushClient.h` and `ios/AdpPushClient.m` files to your project.√æ√æ4. Import inside `AppDelegate`:√æ```objectivec√æ#import <AdpPushClient/AdpPushClient.h>√æ√æ- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {√æ    if ([PushClientManager.defaultManager application:application didFinishLaunchingWithOptions:launchOptions]) {√æ        NSLog(@""Application was launch by clicking on Notification..."");√æ    }√æ    √æ    ...√æ   }√æ√æ- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error{√æ  // Hook and handle failure of get Device token from Apple APNS Server√æ  [PushClientManager.defaultManager application:application√ædidFailToRegisterForRemoteNotificationsWithError:error];√æ}√æ√æ- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken{√æ  // Manager hook and handle receive Device Token From APNS Server√æ  [PushClientManager.defaultManager application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];√æ}√æ√æ- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings{√æ  // Manager hook and Handle iOS 8 remote Notificaiton Settings√æ  [PushClientManager.defaultManager application:application didRegisterUserNotificationSettings:notificationSettings];√æ}√æ√æ```√æ√æ√æ## Basic Usage√æIn your `App.js`:√æ√æ√æ### Initialize√æFor [initlializing](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L36-L42) the ChabokPush with paramteres follow the bellow code:√æ√æ```js√æ√æimport { NativeEventEmitter, NativeModules } from 'react-native';√æimport chabok from 'react-native-chabok';√æ√æconst options = {√æ  ""appId"": ""APP_ID/GOOGLE_SENDER_ID"",√æ  ""apiKey"": ""API_KEY"",√æ  ""username"": ""USERNAME"",√æ  ""password"": ""PASSWORD""√æ};√æ√æthis.chabok = new chabok.AdpPushClient();√æthis.chabok.init(options.appId, options.apiKey, options.username, options.password)√æ    .then((state) => {√æ        console.log(state);√æ        })√æ    .catch((error) => {√æ        console.log(error);√æ        });√æ```√æ√æ### Change chabok environment√æWith using `setDevelopment` [method](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L34) can change the ChabokPush environment to sandbox or production :√æ√æ```js√æthis.chabok.setDevelopment(true);√æ```√æ√æ### Register user√æTo [register](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L78-L85) user in the ChabokPush service use `register` method:√æ```js√æthis.chabok.register('USER_ID');√æ```√æ√æ### Getting message√æTo get the ChabokPush [message](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L70-L76) `addListener` on `ChabokMessageReceived` event:√æ√æ```js√æconst chabokEmitter = new NativeEventEmitter(NativeModules.AdpPushClient);√æ√æchabokEmitter.addListener( 'ChabokMessageReceived',√æ    (msg) => {√æ        alert(JSON.stringify(msg));√æ    });√æ```√æ√æ### Getting connection status√æTo get [connection state](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L44-L68) `addListener` on `connectionStatus` event :√æ√æ```js√æconst chabokEmitter = new NativeEventEmitter(NativeModules.AdpPushClient);√æ√æchabokEmitter.addListener(√æ    'connectionStatus',√æ        (status) => {√æ            if (status === 'CONNECTED') {√æ                //Connected to chabok√æ            } else if (status === 'CONNECTING') {√æ                //Connecting to chabok√æ            } else if (status === 'DISCONNECTED') {√æ                //Disconnected√æ            } else {√æ                // Closed√æ            }√æ    });√æ```√æ√æ### Publish message√æ√æFor [publishing](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L120-L125) a message use `publish` method:√æ√æ```js√æconst msg = {√æ    channel: ""default"",√æ    userId: ""USER_ID"",√æ    content:'Hello world',√æ    data: OBJECT√æ        };√æthis.chabok.publish(msg)√æ```√æ√æ### Subscribe on channel√æ√æTo [subscribe](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L104) on a channel use `subscribe` method:√æ```js√æthis.chabok.subscribe('CHANNEL_NAME');√æ```√æ√æ### Unsubscribe to channel√æ√æTo [unsubscribe](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L111-L115) to channel use `unSubscribe` method: √æ```js√æthis.chabok.unSubscribe('CHANNEL_NAME');√æ```√æ√æ### Publish event√æ√æTo [publish](https://github.com/chabokpush/chabok-starter-rn/blob/cb4d3597cb7af63bb3a72165822a70a360898c2a/App.js#L155) an event use `publishEvent` method:√æ```js√æthis.chabok.publishEvent('EVENT_NAME', [OBJECT]);√æ```√æ√æ### Subscribe on event√æ√æTo [subscribe on an event](https://github.com/chabokpush/chabok-starter-rn/blob/cb4d3597cb7af63bb3a72165822a70a360898c2a/App.js#L130) use `subscribeEvent` method:√æ√æ```js√æthis.chabok.subscribeEvent(""EVENT_NAME"");√æ```√æ√æFor subscribe on a single device use the other signature:√æ√æ```js√æthis.chabok.subscribeEvent(""EVENT_NAME"",""INSTALLATION_ID"");√æ```√æ√æ### Unsubscribe to event√æ√æTo [unsubscribe on an event](https://github.com/chabokpush/chabok-starter-rn/blob/cb4d3597cb7af63bb3a72165822a70a360898c2a/App.js#L138) use `unSubscribeEvent` method:√æ√æ```js√æthis.chabok.unSubscribeEvent(""EVENT_NAME"");√æ```√æ√æFor  unsubscribe to a single device use the other signature:√æ√æ```js√æthis.chabok.unSubscribeEvent(""EVENT_NAME"", ""INSTALLATION_ID"");√æ```√æ√æ### Getting event message√æ√æTo get the [EventMessage](https://github.com/chabokpush/chabok-starter-rn/blob/cb4d3597cb7af63bb3a72165822a70a360898c2a/App.js#L79-L85) define `onEvent` method to  `addListener`:√æ√æ```js√æconst chabokEmitter = new NativeEventEmitter(NativeModules.AdpPushClient);√æ√æchabokEmitter.addListener('onEvent', √æ (eventMsg) => {√æ  alert(JSON.stringify(eventMsg));√æ }√æ);√æ```√æ√æ### Track√æ√æTo [track](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L159) user interactions  use `track` method :√æ```js√æthis.chabok.track('TRACK_NAME', [OBJECT]);√æ```√æ√æ### Add tag√æ√æAdding [tag](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L135-L139) in the ChabokPush have `addTag` and `addTags` methods:√æ```js√æthis.chabok.addTag('TAG_NAME')√æ    .then(res => {√æ        alert('This tag was assign to ' + this.chabok.getUserId() + ' user');√æ        })√æ    .catch(_ => console.warn(""An error happend adding tag ..."",_));√æ```√æ√æ### Remove tag√æ√æ[Removing](https://github.com/chabokpush/chabok-starter-rn/blob/6794345acc1498b55cda8759b6e26550b21f9c6f/App.js#L147-L151) tag in the ChabokPush have `removeTag` and `removeTags` methods:√æ```js√æthis.chabok.removeTag('TAG_NAME')√æ    .then(res => {√æ        alert('This tag was removed from ' + this.chabok.getUserId() + ' user');√æ        })√æ    .catch(_ => console.warn(""An error happend removing tag ...""));√æ```"
apache/incubator-taverna-mobile,47941,12,14,23,Organization,False,Mirror of Apache Taverna Mobile (Incubating),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 4, 'yml': 1, 'xml': 1, 'md': 1, 'gradle': 3, 'properties': 1, 'bat': 1}",699,4,3,12,1,1873,False,,,,,2,95,0,0,7,0,1,1,45,36,0,0,2,869,,,"<!--√æ   Licensed to the Apache Software Foundation (ASF) under one or more√æ   contributor license agreements.  See the NOTICE file distributed with√æ   this work for additional information regarding copyright ownership.√æ   The ASF licenses this file to You under the Apache License, Version 2.0√æ   (the ""License""); you may not use this file except in compliance with√æ   the License.  You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ   Unless required by applicable law or agreed to in writing, software√æ   distributed under the License is distributed on an ""AS IS"" BASIS,√æ   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ   See the License for the specific language governing permissions and√æ   limitations under the License.√æ-->√æ√æ√æ√æ√æ## Taverna Project Retired√æ√æ> tl;dr: The Taverna code base is **no longer maintained** √æ> and is provided here for archival purposes.√æ√æFrom 2014 till 2020 this code base was maintained by the √æ[Apache Incubator](https://incubator.apache.org/) project _Apache Taverna (incubating)_√æ(see [web archive](https://web.archive.org/web/20200312133332/https://taverna.incubator.apache.org/)√æand [podling status](https://incubator.apache.org/projects/taverna.html)).√æ√æIn 2020 the Taverna community √æ[voted](https://lists.apache.org/thread.html/r559e0dd047103414fbf48a6ce1bac2e17e67504c546300f2751c067c%40%3Cdev.taverna.apache.org%3E)√æto **retire** Taverna as a project and withdraw the code base from the Apache Software Foundation. √æ√æThis code base remains available under the Apache License 2.0 √æ(see _License_ below), but is now simply called √æ_Taverna_ rather than ~~Apache Taverna (incubating)~~.√æ√æWhile the code base is no longer actively maintained, √æPull Requests are welcome to the √æ[GitHub organization taverna](http://github.com/taverna/), √æwhich may infrequently be considered by remaining √ævolunteer caretakers.√æ√æ√æ### Previous releases√æ√æThis code has not yet been formally released.√æ√æ√æ# Taverna Mobile√æ√æTaverna Mobile is an Android app for controlling an [Taverna Server](https://web.archive.org/web/*/https://taverna.incubator.apache.org/documentation/server/)√æfor remotely running√æ[Taverna](https://web.archive.org/web/*/https://taverna.incubator.apache.org/) workflows.√æ√æIt can also talk to a [Taverna Player](https://github.com/myGrid/taverna-player-portal).√æ√æThis module was created during Google Summer of Code 2015.√æ√æ√æ√æ## License√æ√æ(c) 2015-2020 Apache Software Foundation√æ√æThis product includes software developed at The [Apache Software√æFoundation](http://www.apache.org/).√æ√æLicensed under the [Apache License√æ2.0](https://www.apache.org/licenses/LICENSE-2.0), see the file√æ[LICENSE](LICENSE) for details.√æ√æThe file [NOTICE](NOTICE) contain any additional attributions and√ædetails about embedded third-party libraries and source code.√æ√æ√æ# Contribute√æ√æAny contributions received are assumed to be covered by the [Apache License√æ2.0](https://www.apache.org/licenses/LICENSE-2.0). √æ√æ√æ√æ# Building and install requirements√æ√æ* Android Studio at least version 3.0.0+√æ* Android Build tools version 28√æ* Android SDK for API 28√æ* gradle version 4.10.1 (a higher version might work)  √æUse `gradle wrapper --gradle-version 4.10.1` to create the gradle wrapper. Do not commit the `gradlew` file or the `gradle` directory to the repository.√æ* Support libraries for CardViews and recycler views. These are already configured in the gradle files√æImport the project as Android Studio Project into Android Studio after downloading from the github repository.√æCreate and startup a virtual device or connecct your mobile device if ready.√æOnce the devices are ready, build and run the project. Select the target device on which to install and launch the app.√æOnce installed, you get a flash screen containing the logo and Name of the app and some powered by Text.√æ* Also import AndroidStyle.xml to your android studio's codestyle. ( You can found this file at the project's root [file link](https://github.com/apache/incubator-taverna-mobile/blob/master/AndroidStyle.xml))√æ√æ√æ# Usage | Quick start√æ√æ## Launch and Login  √æ√æLaunch the application to get started. For first time use when the application is started, you will be prompted with tutorial screens which explains the usage of the applicationn and then you prompted to login screen. This login accepts MyExperiment accounts. You will need to first create one such account [here](https://www.myexperiment.org/users/new) in order to login. You can decide whether to remain logged-in or be logged-out when your session expires. You can also configure the login persistence from the settings option in the menu after you login.√æA successful login would lead you to a dashboard or home screen of the application.√æUsers need to go to the settings page and configure their Taverna Player accounts and mount points to indicate which server should be used to run their workflows. This setting could change per organisation.√æ√æ## Dashboard or Home  √æ√æThe dashboard has two swipeable tabs. These tabs represent screens that hosts workflow streams.√æonce logged-in a stream of workflows should appear on the first screen(Wrofklows). The second tab holds workflows that have been favorited or saved for offline reference.  √æOn the first tab, you could pull down to referesh initial workflows. To load more workflows, just scroll to the end of the current stream. more workflows would be loaded and added to the current ones as the user reaches the end of the current stream.  √æThe search bar icon allows you to search and find workfows by author or by name. The results are provided in real-time in the first tab (First page).  √æ√æ## Workflow Detail  √æ√æTo view details and actually run a workflow, click the view button for the given workflow. Details are fetched from myxperiment and presented on the current page. The details page has three main swipeable tabs. The second tab shows a list  of the runs performed on this workflow and the last tab is for some policy information. On the first page of the details, users can initiate a workflow run, download a workflow or mark them as favorite with the appropriate button.To mark a workflow as favorite, you can just tap the favorite toggle button for the given workflow.√æ√æ## Application Menus  √æ√æThe navigation drawer can be pulled out from the home page by swiping the extreme left of screen across the screen. This menu contains the following items:√æ - All Workflows: Enters the workflow screen from any other screen where all the workflows are avialable.√æ - My Workflows: Presents all the workflows created by you.√æ - Favourite Workflows: Presents all the workflows which you marked as favorite.√æ - Announcement: List all the announcements about Taverna.√æ - Usage: Presents users usage information using usage activity.√æ - About: Presents an about dialog box for the application.√æ - Licence info: Presents a dialogue box with licence file of everything.√æ - Apache Licence/Notice: Presents a dialouge box of terms and conditions, reproduction, and distribution.√æ - Settings: Provides a settings page for users to configure preference paramters an options like player portal location and credentials.√æ - Logout: Logs a user out of the application and closes the app.√æ√æ√æ# Documentation√æ√æTaverna Mobile has further [documentation](https://docs.google.com/document/d/1G3AmW-zgsOxNg81uOWOUVISfaimp9Ku5k1ntIFm8hvo/edit?usp=sharing)√æabout key functionalities and implementations with screenshots attached.√æ√æIt has been mainly adapted for developers, however, users can get neccessary information from the quick start section of this readme.√æ√æ√æ# Using your own Taverna Server√æ√æThe defaults for this applications uses a development instance of Taverna Server at University of Manchester, which might not be available.√æ√æYou can start our own [Taverna Server](https://hub.docker.com/r/taverna/taverna-server/) with √æ[Docker](https://www.docker.com/):√æ√æ    docker run -p 8090:8080 --name taverna-server -d taverna/taverna-server:2.5.4√æ√æAnd a [Taverna Player](https://hub.docker.com/r/fbacall/taverna-player-portal/):√æ√æ    docker run --name taverna-portal --link taverna-server:taverna -p 3000:3000 -d fbacall/taverna-player-portal√æ√æThen edit [app/src/main/res/values/strings\_activity\_settings.xml](app/src/main/res/values/strings_activity_settings.xml) to set:√æ√æ√æ```xml√æ    <string name=""pref_player_default""> http://example.com:3000/</string>   <!-- default value -->√æ    <string name=""pref_server_default""> http://example.com:8090/</string>   <!-- default value -->√æ```√æ√æ.. where you= replace `example.com` with the hostname or IP address of your server running Docker. √æ√æNote that if you are using Docker on OS X or Windows, then a Virtual Machine will run the Docker√æcontainers under a different IP address. Use `docker-machine ip` to check. You may have to√æadjust your firewalls to allow port `3000` and `8090` from the Taverna Mobile app. If you are √ætesting from a mobile/tablet, you may have to use WiFi to get access to the√æTaverna Server on the local network.√æ√æYou can alternatively install the [Taverna√æServer](https://web.archive.org/web/*/https://taverna.incubator.apache.org/download/server/) WAR file in your√æfavourite servlet container, e.g. [Apache Tomcat](http://tomcat.apache.org/) - see√æthe [Taverna Server installation guide](https://launchpad.net/taverna-server/2.5.x/2.5.4/+download/install.pdf)√æfor details.√æ√æ# Export restrictions√æ√æThis distribution includes cryptographic software.√æThe country in which you currently reside may have restrictions√æon the import, possession, use, and/or re-export to another country,√æof encryption software. BEFORE using any encryption software,√æplease check your country's laws, regulations and policies√æconcerning the import, possession, or use, and re-export of√æencryption software, to see if this is permitted.√æSee <http://www.wassenaar.org/> for more information.√æ√æThe U.S. Government Department of Commerce, Bureau of Industry and Security (BIS),√æhas classified this software as Export Commodity Control Number (ECCN) 5D002.C.1,√æwhich includes information security software using or performing√æcryptographic functions with asymmetric algorithms.√æThe form and manner of this Apache Software Foundation distribution makes√æit eligible for export under the License Exception√æENC Technology Software Unrestricted (TSU) exception√æ(see the BIS Export Administration Regulations, Section 740.13)√æfor both object code and source code.√æ√æThe following provides more details on the included cryptographic software:√æ√æ* Uses [Apache HttpComponents](https://hc.apache.org/) client, which can initiater `https://` connections √æ  through [Android SDK](https://code.google.com/p/android/issues/detail?id=186608)'s SSL support√æ* Uses [Dropbox Android SDK](https://www.dropbox.com/developers-v1/core/sdks/android), √æ  which includes a `SecureSSLSocketFactory` binding with Android SDK"
charles-wangkai/leetcode,2945,25,4,8,User,False,My LeetCode solutions,https://leetcode.com/goalboy,,1000,Java,"{'md': 1, 'sql': 71}",1596,1,0,1,0,2069,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,59,,284,,leetcode√æ========
Jakubeeee/online-shop-integration,11281,0,0,1,User,False,A spring application used for integrating the state of data between online shop platforms,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",16,Java,"{'': 1, 'md': 2, 'config': 1, 'xml': 1}",108,4,0,1,7,865,True,0,0,0,0,3,2,3,0,11,0,0,0,0,0,0,0,5,,2,,"# online-shop-integration√æA spring application used for integrating the state of data between online shop platforms. √æ√æUsed technologies:√æ- java 11√æ- spring (boot, security, mvc, jpa (with hibernate), websockets, mail, aop) for backend√æ- html, css (bulma, buefy), vue.js (vuex, vue-router, i18n, vuelidate) for frontend√æ- h2 embedded database (for development), postgresql database (for production)√æ- spring boot's embedded tomcat as application server√æ- maven, git√æ√æ---√æ√æ#### Building and configuration:√æ√æThis project is built using maven. There are two groups of profiles used during build:√æ- environmental (local, heroku): determines whether the application should be deployed locally or on a remote heroku server√æ- build type (full-build, back-build): determines whether it should build the entire application from scratch √æor skip refreshing the frontend resources (choose if nothing has changed in them for faster build)√æ√æBuild requires selection of one profile from each group, √æotherwise it will fail. Example command:<br/>√æ`mvn clean install -P local -P full-build`<br/>√æThe above command will build a local version of the application from scratch√æ√æDeploying on a remote server requires:√æ- having a heroku account√æ- creatng heroku application and setting its name in the configuration of heroku-maven-plugin√æ located in webapp-template/pom.xml file√æ- configuring heroku postgres database (https://devcenter.heroku.com/articles/heroku-postgresql)√æ- setting heroku config vars needed in resources/application-heroku.properties file √æ(eg SPRING_MAIL_SENDER_USERNAME and more)√æ- installing heroku cli and logging in to your account (https://devcenter.heroku.com/articles/heroku-cli)√æ- launching the build with the appropriate profile (eg `mvn clean install -P heroku -P full-build`)√æ√æIn order for mailing features to work, you need to add your email account credentials in resources/application-local.properties√æMoreover, you may need to change your email account configuration in order for spring mail to use it.  √æHere you can find how to do that with gmail account:  √æhttps://sanaulla.info/2017/09/15/using-gmail-as-smtp-server-from-java-spring-boot-apps/  √æIf it still doesn't work, you may also need this:  √æhttp://jafty.com/blog/unblocking-gmail-smtp-account-for-sending-emails-from-applications/√æ√æThis project also uses lombok library that needs to be configured properly in your IDE.  √æExamples for intelliJ IDEA and Eclipse:  √æhttps://projectlombok.org/setup/intellij  √æhttps://projectlombok.org/setup/eclipse  √æ√æ---"
revad-ueda/bot-test,61,1,0,2,User,False,,,,14,Java,"{'java': 4, 'md': 1, 'json': 2, '': 3, 'py': 1, 'xml': 1, 'c': 1}",43,29,0,2,0,1107,True,0,69,0,0,28,259,0,0,7,0,0,0,0,0,0,0,1,,0,,# bot-test
raojay7/bookShop,43183,0,0,2,User,False,18webÊúü‰∏≠‰Ωú‰∏ö,,,6,Java,"{'': 1, 'md': 1}",14,2,0,2,0,593,True,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,47,,7,,‰ΩøÁî®ËØ¥Êòé√æ======√æÊôÆÈÄöÁî®Êà∑ÁôªÈôÜ√æ-----√æÁõ¥Êé•ËæìÂÖ•localhost:8080/manager/index(tomcatÈÖçÁΩÆmanagerÂëΩÂêçÁ©∫Èó¥)√æ√æÁÆ°ÁêÜÁî®Êà∑ÁôªÈôÜ√æ------√æËæìÂÖ•localhost:8080/manager/adminUser_login√æ√æÂºÄÂèëÂ∑•ÂÖ∑ÁâàÊú¨ËØ¥Êòé√æjdk1.7‰ª•‰∏ã√ætomcat8‰ª•‰∏ã
ww20081120/framework,18902,98,21,56,User,False,java‰ºÅ‰∏öÁ∫ßÂ∫ïÂ±ÇÊ°ÜÊû∂ÔºåÊèê‰æõÊó•Âøó„ÄÅÁºìÂ≠ò„ÄÅDBËÆøÈóÆ„ÄÅÊ∂àÊÅØ‰∏≠Èó¥‰ª∂„ÄÅËßÑÂàôÂºïÊìé„ÄÅÊµÅÁ®ãÂºïÊìé„ÄÅÂàÜÂ∏ÉÂºè‰∫ãÂä°‰æøÊç∑‰ΩøÁî®ÊñπÊ≥ïÔºå Êàë‰ª¨‰∏çÈáçÂ§çÈÄ†ËΩÆÂ≠êÔºåÊàë‰ª¨Âè™ÊòØÂºÄÊ∫ê‰∏ñÁïåÁöÑÊê¨ËøêÂ∑•„ÄÇ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",20,Java,"{'': 3, 'md': 3, 'cmd': 1, 'xml': 1, 'properties': 1}",968,7,2,12,0,1828,True,2,0,2,0,1,0,1,0,8,0,1,64,18125,7155,0,0,15,,9,,"Framework 3.0 Ê°ÜÊû∂ËØ¥Êòé√æ=======√æ√æ# Êõ¥Êñ∞ËØ¥Êòé√æÁâàÊú¨|Êõ¥Êñ∞ÂÜÖÂÆπ| Êó∂Èó¥|‰øÆÊîπ‰∫∫√æ--- | --- | --- | ---√æ3.0 | 1.Êõ¥Êñ∞‰∫Üspring boot ÁâàÊú¨Ëá≥2.0 <br> 2.ÂéªÈô§dubboxÊ°ÜÊû∂ÔºåÂºïÂÖ•spring cloudÊ°ÜÊû∂ <br> 3. ÈáçÊñ∞ÂÆö‰πâ‰∫Ücommon Ê®°ÂùóÁöÑAPI <br> 4. ÊîØÊåÅJPA <br> 5. ÊîØÊåÅymlÊ†ºÂºèÁöÑÈÖçÁΩÆÊñá‰ª∂| 2017Âπ¥9Êúà24 | Áéã‰ºü√æ3.4 | Â¢ûÂä†‰∫Üframework-txÊ®°Âùó | 2020Âπ¥2Êúà4Êó• | Áéã‰ºü√æ√æ# Ê°ÜÊû∂‰ªãÁªç√æ√æFrameworkÊ°ÜÊû∂ÈõÜÊàê‰∫Ülog„ÄÅcache„ÄÅdb„ÄÅmessage„ÄÅrule„ÄÅtxÔºåÊØèÂùóÈÉΩ‰ª•Ê®°ÂùóÂΩ¢ÂºèÁªÑÁªáÔºåÂèØ‰ª•Ê†πÊçÆÈ°πÁõÆÈúÄË¶ÅËé∑ÂèñÊ®°Âùó„ÄÇ√æ√æ+ framework-common ÂÆö‰πâÂÖ¨Áî®ÁöÑÂ∏∏Èáè„ÄÅÂ∑•ÂÖ∑Á±ª ÈááÁî®‰∫Üspring-bootÊñπÂºèÂêØÂä®Ôºå ÂêØÂä®Á±ª‰∏∫ApplicationÔºå ‰πüÂèØ‰ª•ÊîØÊåÅwebÊñπÂºèÂêØÂä®„ÄÇ√æ+ framework-log ÂàÜÂ∏ÉÂºèÈõÜÊàêÊó•ÂøóÊ®°ÂùóÔºåËØ¶ÁªÜÁöÑËÆ∞ÂΩï‰∫ÜÊØè‰∏™ÊñπÊ≥ïÊâßË°åÁöÑÂèÇÊï∞„ÄÅËøîÂõûÁªìÊûú„ÄÅÊâßË°åÊó∂Èó¥ÔºåÂèØ‰ª•ÂæàÊñπ‰æøÁöÑÊéíÊü•ÈóÆÈ¢òÊàñÂëäË≠¶ÔºåÈÄöËøáËøúÁ®ãÊé•Âè£‰∏ä‰º†ÊúçÂä°Âô®ÔºàÊîØÊåÅÁõ¥ËøûÊúçÂä°Á´ØÔºå‰πüÊîØÊåÅÈÄöËøákafkaÂèëÈÄÅÔºâ√æ+ framework-cache ÂÆö‰πâ‰∫ÜÁºìÂ≠òÁöÑËé∑Âèñ„ÄÇ  ÊîØÊåÅÊ≥®Ëß£ÊñπÂºèËÆøÈóÆÁºìÂ≠òÔºå ÊîØÊåÅÂü∫‰∫éRedisÁöÑÂàÜÂ∏ÉÂºèÈîÅ√æ+ [framework-db](#framework-db) ÊòØÁÆÄÂçïÊòìÁî®ÁöÑËΩªÈáèÁ∫ßDAO(Data Access Object)Ê°ÜÊû∂ÔºåÂÆÉÈõÜÊàê‰∫ÜHibernateÂÆû‰ΩìÁª¥Êä§ÂíåMybaits SQLÂàÜÁ¶ªÁöÑ‰∏§Â§ß‰ºòÂäøÔºåÊèê‰æõ‰∫ÜÈùûÂÖ•‰æµÂºèAPIÔºåÂèØ‰ª•‰∏éHibernate„ÄÅSpringJdbcÁ≠âÊï∞ÊçÆÂ∫ìÊ°ÜÊû∂ÂæàÂ•ΩÁöÑÈõÜÊàê √æ+ framework-job Âü∫‰∫é[ElasticJob](http://elasticjob.io)ÁÆÄÂçïÂ∞ÅË£ÖÁöÑÂÆöÊó∂Âô®ÔºåÊîØÊåÅÂàÜÂ∏ÉÂºè„ÄÅÂàÜÁâáÁ≠âÂäüËÉΩ√æ+ framework-message Ê∂àÊÅØÊ®°ÂùóÔºåÈÄöËøáÁÆÄÂçïÁöÑapiÂèëÂ∏ÉÂíåËÆ¢ÈòÖ‰∫ã‰ª∂Ôºå ÁõÆÂâçÊîØÊåÅkafka„ÄÅredis„ÄÅrocketMq√æ+ framework-rule ËßÑÂàôÂºïÊìéÔºåÂü∫‰∫éjsonÁöÑÁÆÄÂçïËßÑÂàôÂºïÊìéÔºå ÊîØÊåÅÂ§öÁßçÊèí‰ª∂ÂèäÊâ©Â±ïÔºå ‰æãÂ¶ÇÔºöÂü∫‰∫éÁä∂ÊÄÅÊú∫ÁöÑÂ∑•‰ΩúÊµÅÂºïÊìé√æ+ [framework-tx](#framework-tx) ÂàÜÂ∏ÉÂºè‰∫ãÂä°ÔºåÊîØÊåÅÂêÑÁßçËøúÁ®ãÊé•Âè£„ÄÅÂêåÊ≠•ÂºÇÊ≠•Ê∂àÊÅØ„ÄÇ√æ√æ-------√æ## <p id=""framework-db"">framework-db</p>ÂÖ∑Êúâ‰ª•‰∏ãÁâπÂæÅ:√æ√æ1. O/R mapping‰∏çÁî®ËÆæÁΩÆxmlÔºåÈõ∂ÈÖçÁΩÆ‰æø‰∫éÁª¥Êä§  √æ2. ‰∏çÈúÄË¶Å‰∫ÜËß£JDBCÁöÑÁü•ËØÜ  √æ3. SQLËØ≠Âè•Âíåjava‰ª£Á†ÅÁöÑÂàÜÁ¶ª  √æ4. ÂèØ‰ª•Ëá™Âä®ÁîüÊàêSQLËØ≠Âè•  √æ5. Êé•Âè£ÂíåÂÆûÁé∞ÂàÜÁ¶ªÔºå‰∏çÁî®ÂÜôÊåÅ‰πÖÂ±Ç‰ª£Á†ÅÔºåÁî®Êà∑Âè™ÈúÄÂÜôÊé•Âè£Ôºå‰ª•ÂèäÊüê‰∫õÊé•Âè£ÊñπÊ≥ïÂØπÂ∫îÁöÑsql ÂÆÉ‰ºöÈÄöËøáÂä®ÊÄÅ‰ª£ÁêÜËá™Âä®ÁîüÊàêÂÆûÁé∞Á±ª  √æ6. ÊîØÊåÅËá™Âä®‰∫ãÂä°Â§ÑÁêÜÂíåÊâãÂä®‰∫ãÂä°Â§ÑÁêÜ  √æ7. MiniDaoÊï¥Âêà‰∫ÜHibernate+mybatisÁöÑ‰∏§Â§ß‰ºòÂäøÔºåÊîØÊåÅÂÆû‰ΩìÁª¥Êä§ÂíåSQLÂàÜÁ¶ª  √æ8. SQLÊîØÊåÅËÑöÊú¨ËØ≠Ë®Ä  √æ9. ÂèØ‰ª•Êó†ÁºùÈõÜÊàêHibernate„ÄÅSpringÁ≠âÁ¨¨‰∏âÊñπÊ°ÜÊû∂Ôºå‰πüÂèØ‰ª•ÂçïÁã¨ÈÉ®ÁΩ≤ËøêË°åÔºåÈÄÇÂ∫îÊÄßÂº∫„ÄÇ  √æ√æ √æ## Êé•Âè£ÂíåSQLÊñá‰ª∂ÂØπÂ∫îÁõÆÂΩï √æ √æ### Êé•Âè£Êñá‰ª∂[EmpDao.java]√æ√æ``` java√æ    @Dao√æ public interface EmpDao {√æ√æ     @Sql(""select * from emp"")√æ     List<Map<String,Object>> selectAll();√æ     √æ     @Sql(""select * from emp where empno = :empno"")√æ     Map<String,Object> selectOne(@Param(""empno"") int empno);√æ     √æ     @Sql(value=""select * from emp where deptno = :dept.deptno"", bean=Emp.class)√æ     List<Emp> selectDeptEmp(@Param(""deptno"")Dept dept, @Param(Param.pageIndex)int pageIndex,@Param(Param.pageSize)int pageSize);√æ     √æ     @Sql(bean = Emp.class)√æ     List<Emp> queryEmp(@Param(""dept"") Dept dept);√æ     √æ     @Sql(""select count(*) from emp"")√æ     int listCount(ResultTransformer transformer);√æ }√æ √æ```√æ√æ### SQLÊñá‰ª∂[EmpDao_queryEmp.sql] √æ``` sql √æ select * from emp √æ where 1=1 √æ #if($dept) √æ  and deptno=$dept.deptno √æ #end√æ```√æ√æ### ÊµãËØï‰ª£Á†Å[test.java]√æ``` java√æ @RunWith(SpringJUnit4ClassRunner.class)√æ @ContextConfiguration({√æ     ""classpath:/META-INF/spring/*.xml""√æ })√æ @Transactional√æ public class EmpService {√æ     @Resource√æ     private EmpDao empDao;√æ     @Test√æ     public void test() {√æ         try {√æ             Dept dept = new Dept();√æ             dept.setDeptno(30);√æ             System.out.println(""------------------"");√æ             System.out.println(empDao.queryEmp(dept).size());√æ             System.out.println(""------------------"");√æ         }√æ         catch (Exception e) {√æ             e.printStackTrace();√æ         }√æ     }√æ  }√æ```√æ√æ## <p id=""framework-tx"">framework-tx</p>ÂàÜÂ∏ÉÂºè‰∫ãÂä°:√æ√æÂÆûÈôÖÁîü‰∫ßËøáÁ®ã‰∏≠Âõ†‰∏∫Á°¨‰ª∂ÊïÖÈöú„ÄÅÁΩëÁªúÊïÖÈöú„ÄÅ‰æùËµñÁ¨¨‰∏âÊñπÁ≥ªÁªüÊïÖÈöúÁªôÊàë‰ª¨Â∏¶Êù•‰∫ÜÂæàÂ§öÈ∫ªÁÉ¶„ÄÇÂéüÊù•ÁöÑÈáçËØïË°•ÂÅøÂäüËÉΩÈÉΩÊòØÂÜôÂú®ÂêÑ‰∏öÂä°Ê®°ÂùóÔºåÂ¢ûÂä†‰∫ÜÂæàÂ§öÈ¢ùÂ§ñÁöÑÂºÄÂèëÂ∑•‰ΩúÈáèÔºåÂú®Âä†‰∏äÂºÄÂèë‰∫∫ÂëòÊ∞¥Âπ≥‰πü‰∏ç‰∏ÄËá¥‰πüÂæàÈöæÂÖ®Èù¢ÁöÑËÄÉËôëÂêÑÁßçÁ®≥ÂÆöÊÄßÈóÆÈ¢òÔºåÊâÄ‰ª•Á†îÂèëÂá∫ËØ•Ê®°ÂùóÁî®‰∫éËß£ÂÜ≥ÂæÆÊúçÂä°‰∏öÂä°Ê®°Âùó‰∏çÁ®≥ÂÆöÈóÆÈ¢ò„ÄÇÂõ†‰∏öÂä°Ë¶ÅÊ±ÇÔºå‰∏çÂÖÅËÆ∏Âá∫Áé∞Â§±Ë¥•ÂõûÊªöÂú∫ÊôØÔºåËØ•Ê®°ÂùóÂè™ÂÆûÁé∞‰∫Ü‰∫ãÂä°Ë°•ÂÅø„ÄÇ ÂéüÁêÜÔºöÈÄöËøáNÊ¨°ÈáçËØïÔºåË∑≥ËøáÊâßË°åÊàêÂäüÁöÑÈÉ®ÂàÜÔºå‰∏ÄÁõ¥ÈáçËØïÂ§±Ë¥•ÈÉ®ÂàÜÔºåÊù•ËææÂà∞‰∏öÂä°ÊúÄÁªàÊâßË°åÂÆåÊàê„ÄÇÔºàNÊ¨°Â§±Ë¥•ÂêéÂèØ‰ª•ÈÄöÁü•‰∫∫Â∑•Êù•ËøõË°åËß£ÂÜ≥Ôºâ„ÄÇ√æ√æÂÆûÈôÖÂú∫ÊôØ‰∏æ‰æãÔºö Áî®Êà∑Ë¥≠‰π∞‰∫ÜÂïÜÂìÅÔºåÂΩìÂæÆ‰ø°ÊîØ‰ªòÊàêÂäüÂêéÔºåÁ™ÅÁÑ∂ËÆ¢ÂçïÊ®°ÂùóÊï∞ÊçÆÂ∫ìÂÆïÊú∫‰∫Ü„ÄÇ ÂΩìÊï∞ÊçÆÂ∫ì‰øÆÂ§çÂêéÔºå‰πãÂâç‰∏¢Â§±ÁöÑËÆ¢ÂçïËÉΩÊ≠£Á°ÆÂ§ÑÁêÜ„ÄÇ√æ√æ#### ÂÖ∑Êúâ‰ª•‰∏ãÁâπÂæÅ:√æ√æ1. ÊîØÊåÅÂêåÊ≠•Ê∂àÊÅØ‰∏éÂºÇÊ≠•Ê∂àÊÅØ  √æ2. Êèê‰æõÊ≥®Ëß£ÊñπÊ≥ïÔºå‰ΩøÁî®ÁÆÄÂçïÔºåÂ≠¶‰π†ÊàêÊú¨‰Ωé √æ3. ‰ªª‰ΩïÈúÄË¶ÅÈáçËØïÁöÑÂÜÖÂÆπÈÉΩÂèØ‰ª•‰ΩøÁî®ÔºåÈÄÇÂ∫îÊÄßÂº∫„ÄÇ  √æ√æ#### ÊµãËØï‰ª£Á†Å[TestProducter.java]√æ√æ``` java√æ@RestController√æpublic class TestProducter {√æ√æ    @Resource√æ    private FeginClient2Consumer feClient2Consumer;√æ√æ    @GetMapping√æ    @Tx√æ    public String test(@RequestParam(""id"") String id) {√æ√æ        String value1 = TxInvokerProxy.invoke(""client2"", () -> {√æ            return feClient2Consumer.test(id);√æ        });√æ        System.out.println(value1);√æ        return value1;√æ    }√æ}√æ√æ```√æ√æ[---> ÁÇπËøôÈáåËµ∞Ëµ∑ <---](https://github.com/ww20081120/framework/wiki)√æ√æ---√æ- Author:Áéã‰ºü √æ- E-mail:[ww20081120@126.com](mail://ww20081120@126.com)"
astrapi69/bundle-app-ui,811,2,3,2,User,False,The bundle-app-ui is a cross-platform Java application for resource-bundle management.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,Java,"{'': 2, 'md': 1, 'xml': 1}",196,12,0,3,3,1093,True,3,3,0,0,0,3,0,0,7,0,0,0,0,0,0,0,153,,15,,"# Overview√æ√æThe bundle-app-ui is a cross-platform Java swing application for resource-bundle management. √æThe initial intention was to show the features of the library [resource-bundles-data](https://github.com/lightblueseas/resource-bundles-data). √æThis application does not need a database but an rest server have to be running on localhost on port 8080 from project [resource-bundles-data](https://github.com/lightblueseas/resource-bundles-data). √æ√æ# Features√æ√æ- Creation of bundle application√æ- Overview of all created bundle applications√æ- Import resourcebundles of an existing project to a new bundle application√æ- Import single files of resourcebundles√æ√æ# Install√æ√æYou can build it from the source files by clone this git repository. It is a maven project so you will need maven and a JDK.√æ√æThan compile the project:√æ√æ```√æmvn clean install√æ```√æ√æTo start the application you have to start the main method of the MainApplication class.√æ√æNote: Before you start the MainApplication class a rest server have to be running. Pull the project [resource-bundles-data](https://github.com/lightblueseas/resource-bundles-data) and start the class 'de.alpharogroup.db.resource.bundles.ApplicationJettyRunner' which starts jetty server that provides the rest services. √æ√æ## License√æ√æThe source code comes under the liberal MIT License.√æ√æ## Want to Help and improve it? ###√æ√æThe source code for bundle-app-ui are on GitHub. Please feel free to fork and send pull requests!√æ√æCreate your own fork of [astrapi69/bundle-app-ui/fork](https://github.com/astrapi69/bundle-app-ui/fork)√æ√æTo share your changes, [submit a pull request](https://github.com/astrapi69/bundle-app-ui/pull/new/develop).√æ√æDon't forget to add new units tests on your changes.√æ√æ## Contacting the Developer√æ√æDo not hesitate to contact the bundle-app-ui developers with your questions, concerns, comments, bug reports, or feature requests.√æ- Feature requests, questions and bug reports can be reported at the [issues page](https://github.com/astrapi69/bundle-app-ui/issues).√æ√æ## Note√æ√æNo animals were harmed in the making of this application.√æ√æ# Donate√æ√æIf you like this application, please consider a donation through √æ<a href=""https://flattr.com/submit/auto?fid=r7vp62&url=https%3A%2F%2Fgithub.com%2Flightblueseas%2Fbundle-app-ui"" target=""_blank"">√æ<img src=""http://button.flattr.com/flattr-badge-large.png"" alt=""Flattr this"" title=""Flattr this"" border=""0"">√æ</a>"
open-korean-text/elasticsearch-analysis-openkoreantext,13751,112,15,22,Organization,False,Korean analysis plugin that integrates open-korean-text module into elasticsearch.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 4, 'yml': 1, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",74,2,13,3,8,1150,True,5,12,1,0,4,4,1,0,7,0,0,0,0,0,0,0,16,14,,,"# elasticsearch-analysis-openkoreantext√æ√æ[![Build Status](https://travis-ci.org/open-korean-text/elasticsearch-analysis-openkoreantext.svg?branch=master)](https://travis-ci.org/open-korean-text/elasticsearch-analysis-openkoreantext)√æ√æÌïúÍµ≠Ïñ¥(ÌïúÍ∏Ä)Î•º Ï≤òÎ¶¨ÌïòÎäî Elasticsearch analyzerÏûÖÎãàÎã§. [open-korean-text](https://github.com/open-korean-text/open-korean-text) ÌïúÍµ≠Ïñ¥ Ï≤òÎ¶¨ÏóîÏßÑÏúºÎ°ú ÏûëÏÑ±ÎêòÏóàÏäµÎãàÎã§.√æ√æKorean analysis plugin that integrates [open-korean-text](https://github.com/open-korean-text/open-korean-text) module into Elasticsearch.√æ√æElasticsearch 4.x Ïù¥ÌïòÏùò Î≤ÑÏ†ÑÏùÄ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.√æ√æ## Install√æ√æ```shell√æ$ cd ${ES_HOME}√æ$ bin/elasticsearch-plugin install {download URL}√æ```√æ√æÏÑ§Ïπò ÌõÑ `bin/elasticsearch` Ïã§Ìñâ Ïãú, `loaded plugin [elasticsearch-analysis-openkoreantext]` ÎùºÎäî Î°úÍ∑∏Í∞Ä Ï∂úÎ†•ÎêòÎäîÏßÄ ÌôïÏù∏Ìï©ÎãàÎã§.√æ√æ**download URL ÏùÄ ÏïÑÎûò [Compatible Versions](#compatible-versions)Î•º Ï∞∏Í≥†ÌïòÏó¨ Elasticsearch Î≤ÑÏ†ºÏóê ÎßûÎäî Plugin Î≤ÑÏ†ºÏùÑ Îã§Ïö¥Î°úÎìú Î∞õÏïÑÏïºÌï©ÎãàÎã§.**√æ√æ## Example√æ#### Input√æ```shell√æcurl -X POST 'http://localhost:9200/_analyze' -d '{√æ  ""analyzer"": ""openkoreantext-analyzer"",√æ  ""text"": ""ÌïúÍµ≠Ïñ¥Î•º Ï≤òÎ¶¨ÌïòÎäî ÏòàÏãúÏûÖÎãàÎãº„Öã„Öã""√æ}'√æ```√æ√æ#### Output√æ```json√æ{√æ  ""tokens"": [√æ    {√æ      ""token"": ""ÌïúÍµ≠Ïñ¥"",√æ      ""start_offset"": 0,√æ      ""end_offset"": 3,√æ      ""type"": ""Noun"",√æ      ""position"": 0√æ    },√æ    {√æ      ""token"": ""Ï≤òÎ¶¨"",√æ      ""start_offset"": 5,√æ      ""end_offset"": 7,√æ      ""type"": ""Noun"",√æ      ""position"": 1√æ    },√æ    {√æ      ""token"": ""ÌïòÎã§"",√æ      ""start_offset"": 7,√æ      ""end_offset"": 9,√æ      ""type"": ""Verb"",√æ      ""position"": 2√æ    },√æ    {√æ      ""token"": ""ÏòàÏãú"",√æ      ""start_offset"": 10,√æ      ""end_offset"": 12,√æ      ""type"": ""Noun"",√æ      ""position"": 3√æ    },√æ    {√æ      ""token"": ""Ïù¥Îã§"",√æ      ""start_offset"": 12,√æ      ""end_offset"": 15,√æ      ""type"": ""Adjective"",√æ      ""position"": 4√æ    },√æ    {√æ      ""token"": ""„Öã„Öã"",√æ      ""start_offset"": 15,√æ      ""end_offset"": 17,√æ      ""type"": ""KoreanParticle"",√æ      ""position"": 5√æ    }√æ  ]√æ}√æ```√æ√æElasticsearchÏùò default analyzerÎ•º ÏÇ¨Ïö©ÌñàÏùÑ Í≤ΩÏö∞√æ```json√æ{√æ  ""tokens"": [√æ    {√æ      ""token"": ""ÌïúÍµ≠Ïñ¥Î•º"",√æ      ""start_offset"": 0,√æ      ""end_offset"": 4,√æ      ""type"": ""<HANGUL>"",√æ      ""position"": 0√æ    },√æ    {√æ      ""token"": ""Ï≤òÎ¶¨ÌïòÎäî"",√æ      ""start_offset"": 5,√æ      ""end_offset"": 9,√æ      ""type"": ""<HANGUL>"",√æ      ""position"": 1√æ    },√æ    {√æ      ""token"": ""ÏòàÏãúÏûÖÎãàÎãº„Öã„Öã"",√æ      ""start_offset"": 10,√æ      ""end_offset"": 17,√æ      ""type"": ""<HANGUL>"",√æ      ""position"": 2√æ    }√æ  ]√æ}√æ```√æ√æ**Ïã§Ï†ú ÏÇ¨Ïö© Î∞©Î≤ïÏùÄ [Elasicsearch analysis](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html)Î•º Ï∞∏Í≥†ÌïòÏÑ∏Ïöî.**√æ√æ## User Dictionary√æ[Í∏∞Î≥∏ÏÇ¨Ï†Ñ](https://github.com/open-korean-text/open-korean-text/tree/master/src/main/resources/org/openkoreantext/processor/util) Ïù¥Ïô∏Ïóê ÏÇ¨Ïö©ÏûêÍ∞Ä ÏõêÌïòÎäî Îã®Ïñ¥Î•º Ï∂îÍ∞ÄÌïòÏó¨ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§. ÏòàÎ•ºÎì§Ïñ¥ `ÎßêÏçΩÏüÅÏù¥`Î•º Î∂ÑÏÑùÌïòÎ©¥ `ÎßêÏçΩ(Noun)`Í≥º `ÏüÅÏù¥(suffix)`Î°ú Ï∂îÏ∂úÎêòÏßÄÎßå, ÏÇ¨Ï†ÑÏóê `ÎßêÏçΩÏüÅÏù¥`Î•º Ï∂îÍ∞ÄÌïòÎ©¥ `ÎßêÏçΩÏüÅÏù¥(Noun)`Î°ú Ï∂îÏ∂úÌï† Ïàò ÏûàÏäµÎãàÎã§.√æ√æAnalyzer PluginÏùÑ ÏÑ§ÏπòÌïòÎ©¥ `{ES_HOME}/plugins/elasticserach-analysis-openkoreantext` ÏúÑÏπòÏóê `dic/` ÎîîÎ†âÌÜ†Î¶¨Î•º Ï∞æÏùÑ Ïàò ÏûàÏäµÎãàÎã§. Ìï¥Îãπ ÎîîÎ†âÌÜ†Î¶¨ ÏïàÏóê ÏÇ¨Ï†Ñ ÌÖçÏä§Ìä∏ ÌååÏùºÏùÑ Ï∂îÍ∞ÄÌïòÎ©¥ Îê©ÎãàÎã§.√æ√æÏÇ¨Ï†Ñ ÌÖçÏä§Ìä∏ ÌååÏùºÏùÄ Í∞Å Îã®Ïñ¥Îì§ÏùÑ Ï§ÑÎ∞îÍøàÌïòÏó¨ ÎÑ£ÏúºÎ©¥ Îê©ÎãàÎã§. (Îã®, ÎùÑÏõåÏì∞Í∏∞Îäî Îã®Ïñ¥Î°ú Ïù∏ÏãùÌïòÏßÄ ÏïäÏäµÎãàÎã§.)√æ√æ```plain√æ# {ES_HOME}/plugins/elasticserach-analysis-openkoreantext/dic/sampledictionary√æÎßêÏçΩÏüÅÏù¥√æÎöúÏüÅÏù¥√æÏöïÏüÅÏù¥Ìï†Î®∏Îãà√æ...√æ```√æ√æ√æ## Components√æÏù¥ AnalyzerÎäî Î™á Í∞ÄÏßÄ [components](https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html)Î°ú Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÏäµÎãàÎã§.√æ√æ**Charater Filter**√æ* openkoreantext-normalizer√æ  * Íµ¨Ïñ¥Ï≤¥Î•º ÌëúÏ§ÄÌôî Ìï©ÎãàÎã§.√æ  > ÌõåÏ©çÌõåÏ©çÌõåÏ©çÌõåÏ©ç -> ÌõåÏ©çÌõåÏ©ç, ÌïòÍ≤üÎã§ -> ÌïòÍ≤†Îã§, ÏïàÎêî„Öã„Öã„Öã -> ÏïàÎèº„Öã„Öã√æ√æ**Tokenizer**√æ* openkoreantext-tokenizer√æ  * Î¨∏Ïû•ÏùÑ ÌÜ†ÌÅ∞Ìôî Ìï©ÎãàÎã§.√æ  > ÌïúÍµ≠Ïñ¥Î•º Ï≤òÎ¶¨ÌïòÎäî ÏòàÏãúÏûÖÎãàÎã§ „Öã„Öã -> [ÌïúÍµ≠Ïñ¥, Î•º, Ï≤òÎ¶¨, ÌïòÎäî, ÏòàÏãú, ÏûÖÎãàÎã§, „Öã„Öã]√æ√æ**Token Filter**√æ* openkoreantext-stemmer√æ  * ÌòïÏö©ÏÇ¨ÏôÄ ÎèôÏÇ¨Î•º Ïä§ÌÖåÎ∞çÌï©ÎãàÎã§.√æ  > ÏÉàÎ°úÏö¥ Ïä§ÌÖåÎ∞çÏùÑ Ï∂îÍ∞ÄÌñàÏóàÎã§. -> [ÏÉàÎ°≠Îã§, Ïä§ÌÖåÎ∞ç, ÏùÑ, Ï∂îÍ∞ÄÌïòÎã§, .]√æ√æ* openkoreantext-redundant-filter√æ  * Ï†ëÏÜçÏÇ¨, Í≥µÎ∞±(ÎùÑÏõåÏì∞Í∏∞), Ï°∞ÏÇ¨, ÎßàÏπ®Ìëú Îì±ÏùÑ Ï†úÍ±∞Ìï©ÎãàÎã§.√æ  > Í∑∏Î¶¨Í≥† Ïù¥Í≤ÉÏùÄ ÏòàÏãú, ÎòêÎäî ÏòàÎ°úÏç®, ÌïúÍµ≠Ïñ¥Î•º Ï≤òÎ¶¨ÌïòÍ∏∞ -> [ÏòàÏãú, Ïòà, ÌïúÍµ≠Ïñ¥, Ï≤òÎ¶¨, ÌïòÎã§]√æ√æ* openkoreantext-phrase-extractor√æ  * Ïñ¥Íµ¨Î•º Ï∂îÏ∂úÌï©ÎãàÎã§.√æ  > ÌïúÍµ≠Ïñ¥Î•º Ï≤òÎ¶¨ÌïòÎäî ÏòàÏãúÏûÖÎãàÎã§ „Öã„Öã -> [ÌïúÍµ≠Ïñ¥, Ï≤òÎ¶¨, ÏòàÏãú, Ï≤òÎ¶¨ÌïòÎäî ÏòàÏãú]√æ√æ**Analyzer**√æ√æ[`openkoreantext-normalizer`] -> [`openkoreantext-tokenizer`] -> [`openkoreantext-stemmer`, `openkoreantext-redundant-filter`,  `classic`, `length`, `lowercase`]√æ√æ* Ïù¥ analyzerÏóêÎäî `openkoreantext-phrase-extractor`Í∞Ä Í∏∞Î≥∏ token filterÎ°ú Ï†ÅÏö©ÎêòÏñ¥ÏûàÏßÄ ÏïäÏäµÎãàÎã§.√æ* custom analyzer Íµ¨ÏÑ±ÏùÑ ÏõêÌïòÏãúÎ©¥ [custom analyzer](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-custom-analyzer.html)Î•º Ï∞∏Í≥†ÌïòÏÑ∏Ïöî.√æ√æ## Compatible Versions√æ√æ| Elasticsearch | open-korean-text | Download URL |√æ|:----:|:----:|:----|√æ| 6.1.1 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/6.1.1/elasticsearch-analysis-openkoreantext-6.1.1.2-plugin.zip |√æ| 6.1.0 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/6.1.1/elasticsearch-analysis-openkoreantext-6.1.0.2-plugin.zip |√æ| 6.0.0 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/6.0.0.2/elasticsearch-analysis-openkoreantext-6.0.0.2-plugin.zip |√æ| 5.6.5 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/6.1.1/elasticsearch-analysis-openkoreantext-5.6.5.2-plugin.zip |√æ| 5.6.4 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.6.4.2/elasticsearch-analysis-openkoreantext-5.6.4.2-plugin.zip |√æ| 5.6.3 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.6.4.2/elasticsearch-analysis-openkoreantext-5.6.3.2-plugin.zip |√æ| 5.6.2 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/v5.6.x/elasticsearch-analysis-openkoreantext-5.6.2.2-plugin.zip |√æ| 5.6.1 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/v5.6.x/elasticsearch-analysis-openkoreantext-5.6.1.2-plugin.zip |√æ| 5.6.0 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/v5.6.x/elasticsearch-analysis-openkoreantext-5.6.0.2-plugin.zip |√æ| 5.5.2 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.5.2.2/elasticsearch-analysis-openkoreantext-5.5.2.2-plugin.zip |√æ| 5.5.1 | 2.1.0 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.5.1.2.1/elasticsearch-analysis-openkoreantext-5.5.1.2-plugin.zip |√æ| 5.5.0 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.5.0.2/elasticsearch-analysis-openkoreantext-5.5.0.2-plugin.zip |√æ| 5.4.3 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.2.2/elasticsearch-analysis-openkoreantext-5.4.3.2-plugin.zip |√æ| 5.4.2 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.2.2/elasticsearch-analysis-openkoreantext-5.4.2.2-plugin.zip |√æ| 5.4.1 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.1.2/elasticsearch-analysis-openkoreantext-5.4.1.2-plugin.zip |√æ| 5.4.0 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.4.0.2-plugin.zip |√æ| 5.3.2 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.3.2.2-plugin.zip |√æ| 5.3.1 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.3.1.2-plugin.zip |√æ| 5.3.0 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.3.0.2-plugin.zip |√æ| 5.2.2 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.2.2.2-plugin.zip |√æ| 5.2.1 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.2.1.2-plugin.zip |√æ| 5.1.2 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.1.2.2-plugin.zip |√æ| 5.1.1 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.1.1.2-plugin.zip |√æ| 5.1.0 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.1.0.2-plugin.zip |√æ| 5.0.2 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.0.2.2-plugin.zip |√æ| 5.0.1 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.0.1.2-plugin.zip |√æ| 5.0.0 | 2.0.1 | https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext/releases/download/5.4.0.2/elasticsearch-analysis-openkoreantext-5.0.0.2-plugin.zip |√æ√æ√æ* 5.0.0 ÎØ∏ÎßåÏùò Î≤ÑÏ†ºÏùÄ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§. open-korean-textÎ°ú ÏûëÏÑ±Îêú Îã§Î•∏ ÌîåÎü¨Í∑∏Ïù∏ÏùÄ Ï∞∏Ï°∞ÌïòÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.  √æ  * [tkt-elasticsearch](https://github.com/open-korean-text/open-korean-text-elastic-search)√æ  * [elasticsearch-twitter-korean](https://github.com/jobplanet/elasticsearch-twitter-korean)√æ√æ## License√æLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0"
SergeyOsechkin/Web-service-algorithms,11365,0,0,2,User,False,,,,5,Java,"{'': 1, 'md': 1}",33,1,0,2,0,823,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,6,,0,,"# Web-service-algorithms√æ–§–∏—Ä–º–∞ ¬´NewAlgorithm¬ª–∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –°—Ä–µ–¥—Å—Ç–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–∞–Ω–µ–µ –≤ –∫–æ–º–ø–∞–Ω–∏–∏, –ø–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é –Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –î–ª—è —Å–≤–æ–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏—Ä–º–∞ —Ä–µ—à–∏–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É. √æ–°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ä–∞–∑–º–µ—â–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ. –ö–∞–∂–¥—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Å–æ–¥–µ—Ä–∂–∏—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º–æ–π —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–µ–≥–∏ –∏ —Ä–∞–∑–º–µ—Ç–∫—É –≤—Ö–æ–¥–Ω—ã—Ö –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –∞ —Ç–∞–∫–∂–µ –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –î–ª—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –í –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∏—Å—Ç–µ–º—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å C/C++.–ù–∞–±–æ—Ä–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å.√æ–ö–∞–∂–¥—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º, —Ä–∞–∑–º–µ—â–∞–µ–º—ã–π –≤ —Å–∏—Å—Ç–µ–º–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤, –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–∫–∞–∑–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–ª–≥–æ—Ä–∏—Ç–º—É ‚Äì –æ—Ç–∫—Ä—ã—Ç—ã–π –∏–ª–∏ —Ç—Ä–µ–±—É—é—â–∏–π –ø–ª–∞—Ç—ã. –ü–µ—Ä–µ–¥–ø–æ–∫—É–ø–∫–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞ —Å–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö. √æ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏ –µ–≥–æ –ø–æ–∫—É–ø–∫–∏."
dperezcabrera/jpoker,3039,21,9,10,User,False,A simple poker game with gui.,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",9,Java,"{'': 2, 'yml': 1, 'epub': 1, 'mobi': 1, 'md': 1, 'xml': 2}",59,1,1,1,0,1988,True,0,0,0,0,0,0,0,0,7,0,1,1,0,1,0,0,29,,19,,[![License](http://img.shields.io/:license-gpl3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0.html)√æ[![Build Status](https://travis-ci.org/dperezcabrera/jpoker.svg?branch=master)](https://travis-ci.org/dperezcabrera/jpoker)√æ[![Coverage Status](https://coveralls.io/repos/github/dperezcabrera/jpoker/badge.svg?branch=master)](https://coveralls.io/github/dperezcabrera/jpoker?branch=master)√æ[![GitHub issues](https://img.shields.io/github/issues-raw/dperezcabrera/jpoker.svg?maxAge=2592000)](https://github.com/dperezcabrera/jpoker/issues)√æ√æ# JPoker√æ√æA simple poker game with gui.√æ√æ[Manual](http://www.javahispano.org/portada/2015/2/2/nuevo-tutorial-desarrollando-con-java-8.html)√æ√æ[Manual mobi](https://github.com/dperezcabrera/jpoker/blob/master/Desarrollando%20con%20Java%208:%20Poker.mobi)√æ[Manual epub](https://github.com/dperezcabrera/jpoker/blob/master/Desarrollando%20con%20Java%208:%20Poker.epub)
HartmannDemoCode/Sem2,34408,0,2,9,Organization,False,Small isolated demos of second semester stuff,,,30,Java,"{'': 2, 'md': 1}",20,1,0,1,0,1009,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,15,0,,,# Purpose of this repository  √æHere in this repo you can find small programs to illustrate one or a few learning objectives from the study of Computer Science on [Copenhagen Business Academy](https://www.cphbusiness.dk/uddannelser/erhvervsakademiuddannelser/datamatiker).√æ√æ| Project name    | Project Description                      | Resource |√æ| --------------- | ---------------------------------------- | -------- |√æ| OrderMapperDemo | Demonstrates the use of DataMapper pattern when a java entity (order with a list of order details) is mapped to 2 tables (orders and odetails with a foreign key constraint to orders primary key) |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |√æ|                 |                                          |          |
openmrs/openmrs-distro-referenceapplication,16724,12,67,125,Organization,False,,,,15,TSQL,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1, 'sh': 4}",1822,12,15,51,0,2642,False,,,,,0,271,0,10,6,0,6,64,144,132,0,0,255,68,,,"openmrs-distro-referenceapplication√æ===================================√æ√æ[master](https://github.com/openmrs/openmrs-distro-referenceapplication/) (platform-2.0.x): [![Build Status](https://travis-ci.org/openmrs/openmrs-distro-referenceapplication.svg?branch=master)](https://travis-ci.org/openmrs/openmrs-distro-referenceapplication/branches)√æ√æ[platform-2.1.x](https://github.com/openmrs/openmrs-distro-referenceapplication/tree/platform-2.1.x): [![Build Status](https://travis-ci.org/openmrs/openmrs-distro-referenceapplication.svg?branch=platform-2.1.x)](https://travis-ci.org/openmrs/openmrs-distro-referenceapplication/branches)√æ√æ[![Build Status](https://saucelabs.com/browser-matrix/rkorytkowski.svg)](https://saucelabs.com/open_sauce/user/openmrs)√æ√æ## Running with OpenMRS SDK√æ√æPlease follow the instructions at the [OpenMRS SDK Wiki page](https://wiki.openmrs.org/display/docs/OpenMRS+SDK). Set up a server with the Reference Application distribution.√æ√æ√æ### Running ui-tests locally:√æ√æBy default tests are run with Firefox 42.0 ([download here](https://ftp.mozilla.org/pub/firefox/releases/42.0/)), so please be sure to have it installed.√æAlso tests are run against https://qa-refapp.openmrs.org so confirm it is accessible from your machine.√æIt is also possible that tests start failing due to qa-refapp being redeployed. If it happens, please wait for qa-refapp to be available again and run tests again.√æ√æ1. Clone the repo√æ2. Go to the ui-tests directory using command line√æ3. Run `mvn clean install`√æ√æ### Running ui-tests on Travis CI with SauceLabs√æ√æThis project contains configuration for running tests on [Travis CI](https://travis-ci.org/) with [SauceLabs](https://saucelabs.com/). These platforms provide free plan for Open Source projects.√æ√æIf you want to know why a test fails you can view logs, screenshots and even screencasts on [SauceLabs](https://saucelabs.com/u/rkorytkowski) and see build logs on [Travis CI](https://travis-ci.org/openmrs/openmrs-distro-referenceapplication/builds).√æ√æTo setup Continuous Integration on your fork, execute following steps:√æ√æ1. Create accounts on [Travis CI](https://travis-ci.org/)(it has to be synced with Github owner of fork repository) and [SauceLabs](https://saucelabs.com/)√æ2. Enable CI on your fork repository on Travis CI (URL is like https://travis-ci.org/profile/${travis_username})√æ3. Get your SauceLabs access key on 'My Account' view (current URL is https://saucelabs.com/beta/users/${saulabs_username})√æ4. Add Environment variables to your repository on Travis.org:√æ  - 'SAUCELABS_USERNAME' equal to your SauceLabs username√æ  - 'SAUCELABS_ACCESSKEY' equal to access key you got in step 3.√æ √æ  [Guide for adding environment variables from official Travis CI documentation](https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings)√æ5. Push any commit to your master branch to trigger Travis CI build.√æ√æAnd that's it!√æ√æIf you would like to setup a similar configuration for your distribution, please have a look at [.travis.yml](https://github.com/openmrs/openmrs-distro-referenceapplication/blob/master/.travis.yml). The test server is created using `openmrs-sdk:build-distro` and started with `docker-compose up` on Travis-CI.√æ√æTravis-CI creates a tunnel to SauceLabs, which allows SauceLabs to access the test server and execute tests against that server in a browser. In order to speed up the build, we always run 5 UI tests in parallel using agents provided by SauceLabs. The test server is automatically terminated by Travis-CI once tests are done.√æ√æ√æ## Running locally with Vagrant√æ√æAs of March 2017, the resources for this method are outdated/ no longer maintained.√æhttps://wiki.openmrs.org/x/CIC3Ag√æ√æ## Writing test cases√æ√æWhile writing the code for the test cases, please, follow the instructions in the [Code Style paragraph](https://wiki.openmrs.org/display/docs/Java+Conventions) and the [guidelines](https://wiki.openmrs.org/display/docs/Automated+Testing+Guidelines)"
nccgroup/BurpSuiteLoggerPlusPlus,1855,317,29,82,Organization,False,Advanced Burp Suite Logging Extension,,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",14,Java,"{'': 4, 'html': 1, 'bmf': 1, 'md': 1, 'gradle': 2, 'bat': 1}",359,2,8,7,0,2243,True,12,81,5,10,0,11,0,6,5,1,4,111,17352,13363,0,0,207,15,,nccgroup/LoggerPlusPlus,"Logger++ - Advanced Logging for Burp Suite√æ=======================√æ![GitHub Workflow Status](https://img.shields.io/github/workflow/status/nccgroup/LoggerPlusPlus/Java%20CI%20with%20Gradle?style=for-the-badge) ![GitHub watchers](https://img.shields.io/github/watchers/nccgroup/loggerplusplus?label=Watchers&style=for-the-badge) ![GitHub stars](https://img.shields.io/github/stars/nccgroup/loggerplusplus?style=for-the-badge) ![GitHub All Releases](https://img.shields.io/github/downloads/nccgroup/loggerplusplus/total?style=for-the-badge)√æ![GitHub](https://img.shields.io/github/license/nccgroup/loggerplusplus?style=for-the-badge)√æ√æDeveloped by Corey Arthur  [![Twitter Follow](https://img.shields.io/twitter/follow/CoreyD97?style=social)](https://twitter.com/coreyd97/)  √æOriginal by Soroush Dalili  [![Twitter Follow](https://img.shields.io/twitter/follow/irsdl?style=social)](https://twitter.com/irsdl/)√æ√æReleased as open source by NCC Group Plc - https://www.nccgroup.com/  √æReleased under AGPL-3.0 see LICENSE for more information  √æ√æDescription√æ----√æ√æLogger++ is a multithreaded logging extension for Burp Suite. In addition to logging requests and responses from all Burp Suite tools, the extension allows advanced filters to be defined to highlight interesting entries or filter logs to only those which match the filter.√æ√æA built in grep tool allows the logs to be searched to locate entries which match a specified pattern, and extract the values of the capture groups.√æ√æTo enable logs to be used in other systems, the table can also be uploaded to elasticsearch or exported to CSV.√æ√æ√æScreenshots√æ----------------------√æ√æ<b>Log Filters</b>√æ√æ![Log Filters](images/filters.png)√æ√æ<b>Row Highlights</b>√æ√æ![Row Highlights](images/colorfilters.png)√æ√æ<b>Grep Search</b>√æ√æ![Grep Panel](images/grep.png)√æ√æ√æUsage√æ----√æYou can use this extension without using the BApp store. In order to install the latest version of this extension from the GitHub repository, follow these steps:√æ√æStep 1. Download the [latest release jar](https://github.com/nccgroup/LoggerPlusPlus/releases/latest) .√æ√æStep 2. In Burp Suite, click on the ""Extender"" tab, then in the ""Extensions"" tab click on the ""Add"" button and select the downloaded ""loggerplusplus.jar"" file.√æ√æStep 3. You should now be able to see the ""Logger++"" tab in Burp Suite. If it cannot log anything, check your Burp Suite extension settings. If the save buttons are disabled, make sure that the requested libraries have been loaded successfully; Unload and then reload the extension and try again. If you have found an issue, please report it in the GitHub project.√æ√æStep 4. You can configure this extension by using its ""option"" tab and by right click on the columns' headers.√æ√æStep 5. If you like the project, give the repo a star! <3√æ![Stargazers](https://starchart.cc/nccgroup/LoggerPlusPlus.svg)√æ√æ<b>Features:</b>√æ√æ- Works with the latest version of Burp Suite (tested on 1.7.27)√æ- Logs all the tools that are sending requests and receiving responses√æ- Ability to log from a specific tool√æ- Ability to save the results in CSV format√æ- Ability to show results of custom regular expressions in request/response√æ- User can customise the column headers√æ- Advanced Filters can be created to display only requests matching a specific string or regex pattern.√æ- Row highlighting can be added using advanced filters to make interesting requests more visible.√æ- Grep through logs.√æ- Live requests and responses.√æ- Multiple view options.√æ- Pop out view panel.√æ- Multithreaded.√æ√æ<b>Current Limitations:</b>√æ√æ- Cannot log the requests' actual time unless originating from proxy tool.√æ- Cannot calculate the actual delay between a request and its response unless originating from proxy tool.√æ√æ<b>Reporting bugs:</b>√æ√æIf you have found an issue, please report it in the GitHub project.√æ√æ<b>Latest version:</b>√æ√æPlease review the [""CHANGELOG""](CHANGELOG)"
grassrootza/grassroot-platform,80562,12,13,9,Organization,False,"Modular application to make it easier and faster to organize and mobilize people, through a meeting organizer, vote taker, action logger and group manager.",,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",22,Java,"{'': 5, 'md': 2, 'previous': 1, 'yml': 2, 'gradle': 2, 'bat': 1}",2444,8,0,20,0,1842,True,4,54,0,0,0,348,0,0,7,0,2,9,103,173,0,0,8,0,,,"# GRASSROOT PLATFORM√æ√æApplication to make it faster, cheaper and easier to persistently organize and mobilize people in low-income communities.√æ√æThe platform is built with the Spring framework and launches through Spring Boot. To run it on a local environment, use√æthe profile ""localpg"". It requires some local set up and configuration, namely:√æ√æ### Local Deployment using Docker ###√æ√æ* 1 -- Install Docker and Docker-compose√æMAC: https://docs.docker.com/docker-for-mac/√æLINUX/UBUNTU: https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/√æWINDOWS: https://docs.docker.com/docker-for-windows/√æ√æIn linux you might have to go through this https://techoverflow.net/2017/03/01/solving-docker-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket/√æ√æIf you already have it installed, make sure you can run it from the terminal by typing:√æ√ædocker --version√ædocker-compose --version√æ√æTESTED VERSIONS√æDocker version 17.09.0-ce, build afdb6d4√ædocker-compose version 1.16.1, build 6d1ac21√æ√æ* 2 -- Clone Master Branch to a DIR√æ* 3 -- Inside the DIR, either copy  the files from DIR/.deploy/templates to a folder OUTSIDE your project source (VERY IMPORTANT DUE TO SECURITY ISSUES), example /home/user/environment OR if you already have an integration properties file, just copy it directly into your folder OUTSIDE your project source.√æ* 4 -- Inside the DIR/.deploy, copy the file envpath.txt.template to envpath.txt and update the path you copied and modified your environment variables at step 3 above.√æ* 5 -- Run ""./localdeploy.sh -d [docker/localhost/external] -b [quick/restart/clean]"" from the DIR root. See the command options below to which parameter to choose. The quickest way to start is ""./localdeploy.sh -d docker -b quick""√æ√æCOMMAND OPTIONS√æ√æ**-b**√æ√æ* -b quick #It will only restart the java application (or re-compile if its the first deploy) leaving the container and gradlew daemon running for faster deployment (or instantiate a new container if its the first deploy)√æ√æ* -b restart #It will quickly restart the containers (or create one if its the first deploy) and recompile (or compile if its the first deploy) the java application. Note that Gradlew Daemon will be restarted. Thats to be used when the container become unstable.√æ√æ* -b clean #It will remove and download all the images again, and rebuild the docker containers. Thats the case when you have modified the container images and want to reset to its initial state. Note that doing that, the Postgres container if user the option ""-d docker"" will be reseted loosing its data.√æ√æ**-d**√æ* -d docker  # It will instantiate 3 containers, one for a local postgres db running at port 5432 with a blank db, application running on port 8080 accessible via http://localhost:8080 and a postgres admin app accessible via http://localhost:8081√æ√æ* -d localhost # FOR LINUX ONLY, it will instantiate 1 container only for the app accessible via http://localhost:8080 and enable the container to connect to a db located at localhost:5432. Remember to modify your environment-variables files to reflect that as in the template file we have http://db:5`432 for the ""-d docker"" option.√æ√æ* -d external # It will instantiate 1 container only for the app accessible via http://localhost:8080 and enable the container to connect to an external DB (outside your localnetwork). Remember to modify your environment-variables files to reflect that as in the template file we have http://db:5432 for the ""-d docker"" option.√æ√æ-----------------√æ√æ** You can check the application logs at DIR/log/grassroot-app.log√æ√æ** Note that the initial deployment will take between 10 - 20 min to download all the libraries dependencies. Subsequent deployments/buildings should take around 5 min as it just build and boot the jar files.√æ√æ** If you are having issues with running your Docker project, some of the following commands may help, use with care.√æ√ædocker system prune                #Remove all stopped containers, unused volumes and unused images√ædocker kill $(docker ps -q);       #Stop all the containers√ædocker rm $(docker ps -a -q);      #Remove all containers√ædocker rmi $(docker images -q -a)  #Remove all images√æ√æ** We have a ""always"" restart policy set for the containers as long as the docker engine is running. So, its very likely that when you restart your computer and the docker engine starts as a daemon, the containers will also restart. To avoid that, make sure you remove the docker to start as a daemon on reboot.√æ√æ### AWS Deployment using Beanstalk and Docker ###√æ√æWe currently use a combination of AWS Services, Circleci and Papertrail (Logging) to deploy our application to the cloud.√æ√æ* 1 -- Upload the source code to either GIT HUB or BIT bucket√æ* 2 -- Sign up for a Circleci account, a free account should be enough at this stage, configure to read changes from your repository√æ* 3 -- Configure CircleCI with the AWS Credentials that have ""Read Access"" to S3 and ""Full Control"" to beanstalk.√æ* 4 -- Setup a Docker Beanstalk environment√æ* 5 -- Setup a Postgres Database using AWS RDS or any other cloud database provider (faster if you setup within the same region of your Docker server)√æ* 6 -- Create a S3Bucket that will contain the environment files, a template of these files can be found at DIR/.deploy/templates, update them accordingly to your needs.√æ* 7 -- Update the deployment variables in the circle.yml file.√æ√æ√æ### EXTRA NOTES ###√æ√æ1 -- A configuration file, ~/grassroot/grassroot-integration.properties. This should set the following properties:√æ√æ* The SMS gateway for SMS notifications (grassroot.sms.gateway for the host, and grassroot.sms.gateway.username and√ægrassroot.sms.gateway.password)√æ√æ* A GCM sender ID and key for push notifications (gcm.sender.id and gcm.sender.key), unless GCM is turned off by setting√æproperty gcm.connection.enabled=false in application-localpg.properties in grassroot-webapp√æ√æ* Usual Spring Mail properties, plus grassroot.mail.from.address, grassroot.mail.from.name, and grassroot.system.mail√æ(destination for daily summary mail of activity on the platform), unless email is disabled via grassroot.email.enabled√æ√æ* The name of AWS S3 buckets in which to store task images, if desired√æ√æ2 -- A configuration file, ~/grassroot/grassroot-payments.properties, with details of the payments provider, only√ænecessary if billing and payments are switched on via grassroot.accounts.active, grassroot.billing.enabled and√ægrassroot.payments.enabled, in application-localpg.properties."
52North/wpsclient4arcgis,252,5,8,2,Organization,False,This client wraps WPS processes as standard ArcGIS Geoprocessing tools.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 4, 'md': 1, 'xml': 1}",79,3,4,2,0,1886,True,1,1,1,0,1,0,1,0,8,0,1,8,67,35,0,0,198,33,,,"# WPS Client for ArcGIS [![OpenHUB](https://www.openhub.net/p/wps-arcmap-client/widgets/project_thin_badge?format=js)](https://www.openhub.net/p/wps-arcmap-client)√æ√æ## Description√æ### Make use of the geo-processing Web with ArcMap. √æ√æ**The 52¬∞North WPS Client for ArcGIS wraps WPS processes as standard ArcGIS Geoprocessing tools. With the client it is possible to select one or more layers in ArcMap and use them as input for WPS processes. The result of the processes can be visualized in ArcMap again.**√æ√æThe 52¬∞North WPS Client for ArcGIS is a client implementation for servers following the [OGC WPS specification](http://www.opengeospatial.org/standards/wps). √æ√æ### Features√æ√æ * WPS version 1.0.0 and 2.0 support√æ * Seamless integration in ArcMap√æ * Use WPS processes in the Model Builder or execute them directly as ArcGIS Geoprocessing Tools√æ√æ## License√æ√æThe WPS Client for ArcGIS is published under The Apache Software License, Version 2.0. √æ√æ## Changelog√æ√æChanges since last release√æ  * New features√æ  * Support for ArcGIS for Desktop 10.6√æ  * Support for the WPS standard version 2.0√æ * Use of wps-client-lib version 1.0.0√æ  √æ## Quick Start√æ√æGet the latest Version here: [WPS Client for ArcGIS Installer](https://52north.org/delivery/WPSClient4ArcGIS/52n-Extensible-WPS-ArcMap-Client-1.5.0-Setup.exe)√æ√æ## User guide/tutorial√æ√æSee here : [Geoprocessing Wiki](https://wiki.52north.org/Geoprocessing/ExtensibleClient)√æ√æ## Demo√æ√æ* [WPS Client for ArcMap overview](https://www.youtube.com/watch?v=y5VzPkrEoPw)√æ* [Add a WPS process to ArcMap](https://www.youtube.com/watch?v=k0UhD1vr-cg)√æ* [Interaction with the Model Builder ](https://www.youtube.com/watch?v=SkuLOJAav3k)√æ√æ## References√æ√æ* [ArcUser Fall 2016 article](http://www.esri.com/esri-news/arcuser/fall-2016/sharing-geoprocessing-tools-via-the-web)√æ√æ## Contact√æ√æBenjamin Pross (b.pross (at) 52north.org)√æ√æ## Support√æ√æYou can get support in the community mailing list and forums:√æhttps://52north.org/discuss/#mailing-lists√æ√æ## Contribute√æ√æAre you are interesting in contributing to the 52¬∞North WPS Client for ArcGIS and you want to pull your changes to the 52N repository to make it available to all?√æIn that case we need your official permission and for this purpose we have a so called contributors license agreement (CLA) in place. With this agreement you grant us the rights to use and publish your code under an open source license.√æA link to the contributors license agreement and further explanations are available here:√æhttps://52north.org/software/licensing/guidelines/√æ√æ## Credits√æ√æ * Benjamin Pross, @bpross-52n√æ * Alber Sanchez, @albhasan√æ√æ## Contributing organizations√æ√æ### Funding organizations√æ√æ * Ordnance Survey√æ √æ### Funding projects√æ√æ * Google Summer of Code√æ * GLUES√æ * RIESGOS"
crops/eclipse-poky,2284,2,4,6,Organization,False,DEPRECATED. This is no longer under active development or support. Eclipse IDE plugin for OpenEmbedded and Yocto Project,http://git.yoctoproject.org/cgit/cgit.cgi/eclipse-poky/,,14,Java,"{'': 2, 'yml': 2, 'dev': 1, 'maven': 1, 'txt': 1, 'xml': 1}",728,57,377,11,0,3665,True,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,21,1,,,"Eclipse Yocto Developer's Workspace Setup√æ√æThis readme describes how to setup a development environment for developing√æand testing the eclipse-yocto plugins.√æ√æFor the time being we recommend using Linux for eclipse-yocto development,√æso all of the instructions below should be done on an appropriate Linux distribution.√æ√æPrerequisites√æ√æ1) Install Java Development Kit (jdk) 8+.√æ√æIf you already have Java 8+ installed on your system you can√æskip to step 2.  To check type:√æ√æ$ java -version√æ√æand if it responds with√æ√æjava version ""1.8.0_102""√æJava(TM) SE Runtime Environment (build 1.8.0_102-b14)√æJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)√æ√æWith a version >= 1.8.0 then you already have what you need.√æ√æIf not installed, download from:√æ√æhttps://java.com/en/download/√æ√æand install as appropriate for your system.√æ√æOther impls may be used if desired, but they must support JDK 8.√æ√æ2) Install Maven√æ√æIf you already have Maven 3.3.9+ installed you may skip to√æstep 3.√æ√æIf not installed, download from:√æ√æhttp://maven.apache.org/download.cgi√æ√æInstall instructions are here√æ√æhttp://maven.apache.org/install.html√æ√æ2a) Configure Maven for Proxy√æ√æIf you have a proxy, see√æ√æhttps://maven.apache.org/guides/mini/guide-proxies.html√æand√æhttps://maven.apache.org/settings.html√æ√æand consult your local network admin for the appropriate proxy info.√æ√æ2) Install Eclipse√æ√æa) Download Eclipse Photon or more recent release.   For eclipse-yocto plugin development√æthree  components are required:   i) Eclipse Java SDK, ii) Eclipse PDE;√æiii) Maven 2 Eclipse (m2e).   All three of these components are present in√æthe package named 'Eclipse IDE for Eclipse Committers'.  All of the packages√æare listed here:√æ√æhttps://www.eclipse.org/downloads/packages√æ√æDownload the 'Eclipse IDE for Eclipse Committers' and expand into a new directory√æ(e.g. ~/eclipse.photon) on your local disk.√æ√æ3) Clone the eclipse-yocto git repo√æ√æBy default, eclipse's git client (egit) uses ~/git for accessing git repos, so it's√ægenerally a good idea to create and use ~/git for the following clone command.√æ√æIn ~git type:√æ√æ$ git clone git://git.yoctoproject.org/eclipse-yocto-contrib√æ√æWhen complete, change to the timo/maven branch (temporary)√æ√æ$ git checkout timo/maven√æ√æ4) Import Project Set into Eclipse workspace√æ√æOpen a terminal, navigate to ~/eclipse.photon and type:√æ√æ$ ./eclipse√æ√æCreate a new workspace (e.g. workspace.eclipse-yocto)√æ√æFrom main menu:√æ√æFile->Import...->Team->Team Project Set->Next√æ√æSelect File radio button and choose 'Browse' button on right√æ√æBrowse to ~/git/eclipse-yocto-contrib/releng/org.yocto.sdk.releng/projectsets√æ√æand choose 'eclipse-yocto.psf' and Finish√æ√æThis should result in approximately 11 projects appearing in√æyour workspace.  Some will have compiler errors.√æ√æ5) Resolve and Set Target Platform√æ√æIn the Eclipse Package Explorer view (or Projects view) navigate√æto org.yocto.sdk.releng/ directory and open (double click)√æthis file:  eclipse-yocto.target√æ√æOnce this file is opened with the 'Target Definition' edito, you should√æsee in the message bar: ""Resolving Yocto with R...inition"" with a percentage.√æThis will take some time (possibly minutes depending upon the speed of your√æinternet connection)√æ√æWhen the resolving is complete, choose 'Set as Target Platform' link in√æupper right of the Target Definition Editor.  This should result in√æthe workspace projects being rebuilt without errors.√æ√æIf errors still remain in the workspace projects...√æ√æ6) The first time that Eclipse is installed, the maven 2 Eclipse plugin (m2e) has√æto install the tycho plugins.   If this is the case, you will see errors like√æthese in the Eclipse Problems view:√æ√æ-------------------√æDescription     Resource        Path    Location        Type√æPlugin execution not covered by lifecycle configuration: org.eclipse.tycho:tycho-compiler-plugin:1.0.0:compile (execution: default-compile, phase: compile)     pom.xml /org.yocto.cmake.managedbuilder line 8  Maven Project Build Lifecycle Mapping Problem√æ-------------------√æ√æIf you see errors such as these after resolving and setting the target platform√æthen you can install the necessary tycho maven plugins by:√æ√æ1) Go to the Eclipse Problems view√æ2) Select the first error as above√æ3) Hit Ctrl-1 (quick fix)√æ4) Select 'Discover m2e connectors'√æ5) Select Finish -> Next -> Next -> Accept license agreement -> Finish√æ√æAfter restart you might need to clean and rebuild all projects, and this√æshould result in a compile with all workspace errors gone.√æ√æIf it does not, please report to ecilpse-yocto mailing list at√æ√æhttps://lists.yoctoproject.org/listinfo/eclipse-yocto√æ√æor open bug√æ√æhttps://bugzilla.yoctoproject.org/buglist.cgi?query_format=specific&order=relevance+desc&bug_status=__open__&product=Eclipse+Plugin&content=√æ√æIt should install the Tycho maven plugins and restart Eclipse.√æ√æYou are now setup to build, run, debug eclipse-yocto plugins"
brightonter1/MultiOrderOnline,112649,0,0,2,User,False,Software Engineering,,,20,Java,"{'': 2, 'png': 7, 'jpg': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",249,3,0,6,0,627,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,24,,2,,
XPerience-AOSP-Lollipop/android_frameworks_base,2127558,0,2,6,Organization,False,XPerience AOSP Framework,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",35,Java,"{'mk': 2, '': 4, 'yaml': 1}",261043,19,0,851,0,4262,True,0,1,0,0,1,9,0,0,7,0,0,0,0,0,0,0,225,1,,,
AcadiaSoft/simm-lib,399,34,22,23,Organization,False,,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",8,Java,"{'': 2, 'md': 1, 'xml': 1}",17,2,4,2,0,1004,True,0,5,0,3,1,5,1,2,9,0,0,0,0,0,0,0,1,0,,,"# Simm-Lib√æ√æSimm-Lib is an implementation of version 2.2 of the value at risk Standard Initial√æMargin Model ([SIMM‚Ñ¢ 2.2](https://www2.isda.org/functional-areas/wgmr-implementation/))√ædeveloped by ISDA, see [here](https://www.isda.org/category/margin/isda-simm/) for methodology specifications.√æIt has been built to be compatible with the Common√æRisk Interchange Format (CRIF) and it's correlation parameters and risk√æweights are interfaced to allow them to be easily exchanged. This makes√æSimm-Lib easy to deploy, as most users of Simm-Lib will already be√ægenerating CRIF files; easy to maintain, as the yearly updates to√æSIMM‚Ñ¢ can be handled with only minor changes to Simm-Lib; and√æeasy to experiment with, as custom model parameters can be created for√æSimm-Lib and implemented with the same minor changes as the yearly updates.√æ√æUsers of Simm-Lib who wish to deploy it for commercial purposes√æwill need to obtain a license from ISDA to use ISDA SIMM‚Ñ¢ to√æcalculate initial margin for their or their clients‚Äô non-cleared√æderivatives transactions. Please contact isdalegal@isda.org for more√æinformation on licensing the ISDA SIMM‚Ñ¢.√æ√æ### Updates: 2019-11-19√æ- The library received a pretty major clean-up but all old interfaces should still be available.√æ- The library is now also passing the unit tests for 1-day SIMM.√æ- The library now supports jackson annotations for serialization of im-trees and CRIF.√æ√æ## Getting Started√æSimm-Lib is built with Apache Maven, so one must get Maven√æinstalled on their machine.√æ√æUbuntu users need only run in a terminal:√æ```√æ$ sudo apt-get install maven√æ```√æ√æSimilarly, Mac users who have [Homebrew](https://brew.sh) installed√æcan run:√æ```√æ$ brew install maven√æ```√æ√æAll others can go to the [Maven homepage](https://maven.apache.org)√æfor specific instructions on how to download and install Maven with√æany operating system.√æ√æTo confirm that Maven has been successfully downloaded, check√æthe Maven version on your machine by running:√æ```√æ$ mvn -version√æ```√æIf Maven has been successfully installed, this command should return√æsomething like:√æ```√æApache Maven 3.5.0 (ff4wa5hff; 2017-04-03T15:39:06-04:00)√æMaven home: --MavenHomeDirectory--√æJava version: 1.8.0_91, vendor: Oracle Corporation√æJava home: --JavaHomeDirectory--√æDefault locale: en_US, platform encoding: UTF-8√æOS name: ""mac os x"", version: ""10.11.6"", arch: ""x86_64"", family: ""mac""√æ```√æ√æ#### Installing√æSimm-Lib's sources have to be moved onto a local machine. This√æcan be accomplished by either downloading them as a zip file from√æGitHub, or by running in a terminal:√æ```√æ$ git clone <repo> simm-lib√æ```√æNext, the code's artifacts need to be built. As Simm-Lib is a Maven√æproject, this process is simplified to running:√æ```√æ$ mvn compile√æ```√æAfter this, Simm-Lib should be fully ready to run in a local√æenvironment.√æ√æ## Testing√æTo run all of Simm-Lib's tests, simply run:√æ```√æ$ mvn test√æ```√æIf one wants to run individual tests, or an individual test module,√æthe easiest way is to open Simm-Lib in some IDE and run the tests from√æthat.√æ√æ#### Testing Breakdown√æWhile there are simple tests to check the functionality of the√æindividual methods of Simm-Lib, the main focus of the test suite is to√æconfirm that the outputs of SIMM and Simm-Lib match. To accomplish√æthis, the tests take in sensitivities and then run Simm-Lib's√æcalculation, checking the result against SIMM's result:√æ```java√æ@Test√æpublic void test() {√æ    Sensitivity IR1 = new Sensitivity(""RatesFX"", ""Risk_IRCurve"", ""GBP"", ""1"", ""6m"", ""OIS"", new BigDecimal(""200000000""));√æ    Assert.assertEquals(new BigDecimal(""13400000000""), Simm.calculateStandard(Arrays.asList(IR1)).setScale(0, RoundingMode.HALF_UP));√æ}√æ```√æ√æWith the addition of the `Schedule` and `Simmple` classes the CRIF formatted objects have expanded beyond the `Sensitivity` object√æhowever the format of the testing is still generally the same as this is the main use case of the model.√æ#### Simm Class√æThis section focuses on the tests for the top level functionality√æof the `Simm` class, as the methods of this class directly consume CRIF√æformatted data in the form of the `Sensitivity` object and return the calculated IM of those inputs. There are six√æmethods in the `Simm` class: `calculateStanard()`, `calculateAdditional()`,√æ `calculateTotal()`, `calculateTreeStandard()`, `calculateTreeAdditional()`, and `calculateTreeTotal()`.√æThe first method returns the IM of the input sensitivities, the second returns the Additional√æIM generated by regulatory restrictions (this includes additional value created from product class multipliers),√æwhile the third is the sum of the previous two methods. The ""Tree"" methods of similar names do the exact same√æcalculation, except the intermediate exposures at key points are saved in a tree structure to give a more thorough√æview of how the exposure was calculated. All methods return the calculated value in US Dollars, so users of√æSimm-Lib working in other currencies should be sure to include the ""amountCurrency"", and ""amountUSD"" columns in their√æCRIF files.√æ√æThe inputs to these methods are CRIF formatted data-types where all amounts are√æstored as `BigDecimal` and all other values as `String`:√æ```√æAddOnNotionalFactor(product, factor)√æProductMultiplier(productClass, multiplier)√æAddOnFixedAmount(amount, amountCurrency, amountUSD)√æAddOnNotional(product, notional, notionalCurrency, notionalUSD)√æSensitivity(productClass, riskType, qualifier, bucket, label1, label2, amount, amountCurrency, amountUsd)√æ```√æFor `Sensitivity`, `AddOnFixedAmount`, and `AddOnNotional` the ""currency"", and√æ""amountUSD"" can be omitted; however, the currency in this case will be assumed√æto be US Dollars.√æ√æ#### Schedule Class√æThis section focuses on the `Schedule` class. As the Schdule model is focued on trade level data, unlike the SIMM model which uses√æsensitivities, new trade-level CRIF formatted objects have been added to the module to store this data. The `ScheduleNotional` object√æstores the notional amount of the trade (Note: the notional can be set to be positive or negative, and if multiple notionals exist√æfor the same trade they will be netted, the absolute value of the netted notional is then used in the calculation itself).√æThe `SchedulePv` is the Net Present Value of the trade (similarly, the PVs will be netted by trade, and the netted value will be used).√æ```√æScheduleNotional(tradeId, schduleProductClass, valuationDate, endDate, amount, amountCurrency, amountUsd)√æSchedulePv(tradeId, schduleProductClass, valuationDate, endDate, amount, amountCurrency, amountUsd)√æ```√æThe schdule module provides overloaded `calculate()` and `calculateTree()` methods√æto handle both calculating the net gross rate from the input net present values, and using an input NGR instead.√æAll exposure amounts are returned in US Dollars.√æ√æ#### Simmple√æThis section focuses on the `Simmple` class. The inputs to `Simmple` have been stream-lined at least from a CRIF object perspective.√æ`Simmple` takes in `Crif` objects which are a super-set of all of the other CRIF formatted objects used by either the simm or schedule modules.√æThe intent of the `Crif` object is to be able to directly translate a standard CRIF file into a `List<Crif>`.√æ```√æCrif(tradeId, valuationDate, endDate, notional, notionalCurrency, imModel, productClass, riskType, qualifier, bucket, label1, label2, amount, amountCurrency, amountUsd, postRegulation, collectRegulation)√æ```√æYou'll notice that some fields added to the `Crif` object are not in any of the other CRIF formatted objects. The `imModel` field is simply a `String` which√æindicates which model (SIMM or Schedule) that line of data should be input into. The current allowed model strings are **""SIMM"", ""SIMM-P"", ""Schedule""**.√æThe `notional` and `notionalCurrency` fields are for convenience when running a schedule calcualtion. If a trade only has `SchedulePv` inputs√æbut the `notional` field is set for at least one of those PVs, a `ScheduleNotional` will be constructed using the `notional` value. The `productClass` is overloaded to be√æeither the SIMM or Schedule product classes depending on the specified model. The `postRegulation` and `collectRegulation` fields are used for Pledgor and Secured regulation√ærespecitively. There are three different modes of specifying regulation:√æ- If all regulators are left blank for both post and collect, all `Crif` objects in the input list will be included in the calculation. A blank regulator string is considered√æto be the empty string **""""**, any number of spaces with no other characters, or an empty set of brackets **""\[\]""** which may also conatin any number of spaces.√æ- If some regulators are set **""include""** and all others are left blank, then all `Crif` objects which have **""include""** as one of its regulators will be included in the calcualtion.√æ- Otherwise, the regualtors may be set to a single name (**""CFTC""** or **""\[SEC\]**) or a comma seperated list of names (**""CFTC,SEC""** or  **""\[CFTC,SEC\]""**). When calculating the exposure√æof a particular regulator, only `Crif` whose regulators are associated with the role you are running the calculation for will be included. An example of this would be if a `Crif` had its√æ`postRegulation` set to ""CFTC"" and its `collectRegulation` set to ""SEC"". If you are running a calculation for the regulator ""SEC"" and the role is set to Pledgor, the example `Crif` would not√æbe included in the calculation, but if the role was set to Secured the example `Crif` would be included.√æFor simplicities sake, we call the regulator with the highest calculated exposure to be the 'winning' regulator of a 'Worst-Of' calcualtion.√æThe output of every fucntion in the `Simmple` class is a `ImTreeResult` which contains the winning regulator, an `ImTree` breakdown of the exposure√æassociated with the winning regulator, and finally the currency of all of the margins in the `ImTree`. The method names of the `Simmple` class should be fairly√æself-explanatory: `calculateSimmWorstOf()` returns the winning regulator calculating using only SIMM model `Crif`, `calculateScheduleWorstOf()` returns the winning regulator√æcalculating using only Schedule model `Crif`, and `calculateWorstOf()` returns the winning regulator calculating over the `Crif` in both models."
Appendium/flatpack,4659,46,8,16,Organization,False,CSV/Tab Delimited and Fixed Length Parser and Writer,http://flatpack.sf.net,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 1, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 1}",678,3,16,5,3,5322,True,13,29,2,1,0,13,0,0,8,2,1,2,71,5,46,0,5,0,,,"[![Build Status](https://secure.travis-ci.org/Appendium/flatpack.png?branch=master)](http://travis-ci.org/Appendium/flatpack) [![Stories in Ready](https://badge.waffle.io/Appendium/flatpack.png?label=ready)](https://waffle.io/Appendium/flatpack)√æ[![SonarQube](https://sonarcloud.io/api/project_badges/measure?project=net.sf.flatpack:flatpack-parent&metric=bugs)](https://sonarcloud.io/dashboard/index/net.sf.flatpack:flatpack-parent) √æ[![Sonar Reliability](https://sonarcloud.io/api/project_badges/measure?project=net.sf.flatpack:flatpack-parent&metric=reliability_rating)](https://sonarcloud.io/dashboard/index/net.sf.flatpack:flatpack-parent) √æ[![Sonar Security](https://sonarcloud.io/api/project_badges/measure?project=net.sf.flatpack:flatpack-parent&metric=security_rating)](https://sonarcloud.io/dashboard/index/net.sf.flatpack:flatpack-parent) √æ[![Maven Central Flatpack](https://maven-badges.herokuapp.com/maven-central/net.sf.flatpack/flatpack/badge.svg)](https://maven-badges.herokuapp.com/maven-central/net.sf.flatpack/flatpack)√æ![GitHub license](https://img.shields.io/github/license/appendium/flatpack.svg?style=flat-square)√æ√æ [![Quality Gate](https://sonarcloud.io/api/project_badges/quality_gate?project=net.sf.flatpack:flatpack-parent)](https://sonarcloud.io/dashboard/index/net.sf.flatpack:flatpack-parent) √æ √æ√æflatpack√æ========√æ√æCSV/Tab Delimited and Fixed Length Parser and Writer√æ√æFlatPack on SourceForge: a Java (1.8+) flat file parser that handles CSV, √æfixed length and custom delimiters. It can handle very large files.√æ√æThe formats are configured in XML, it is fast and released under Apache license 2.0.√æ√æLinks√æ=====√æ√æ* Thank you to [YourKit](http://www.yourkit.com) for the OSS Licence"
SmallTigerBrother/TigerFrameworkForAS,10548,7,3,2,User,False,,,,25,Java,{'': 1},520,9,0,2,0,1803,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,11,,13,,
NYRDS/pixel-dungeon-remix,109770,138,26,56,Organization,False,Traditional roguelike game with pixel-art graphics and simple interface - Remixed Pixel Dungeon,http://wiki.nyrds.net,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",18,Java,"{'': 2, 'txt': 1, 'md': 1, 'yml': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",8080,10,432,17,4,2158,True,8,28,0,1,0,146,0,36,7,0,3,314,9322,7019,0,0,17,0,,NYRDS/remixed-dungeon,"Remixed Dungeon √æ√æ[![Bitrise](https://app.bitrise.io/app/e26fee6867be46dc/status.svg?token=6vQccAuFDO9IBcSGhQbwSg&branch=master)](https://app.bitrise.io/app/e26fee6867be46dc)√æ[![codebeat badge](https://codebeat.co/badges/53dde841-192d-4c22-8025-b4036864919f)](https://codebeat.co/projects/github-com-nyrds-pixel-dungeon-remix-master) √æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/2f7c71d126c649df96191e91bcb5d4c1)](https://www.codacy.com/app/NYRDS/pixel-dungeon-remix?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=NYRDS/pixel-dungeon-remix&amp;utm_campaign=Badge_Grade)√æ[![Twitter Follow](https://img.shields.io/twitter/follow/NYRDS?style=social)](https://twitter.com/intent/follow?screen_name=NYRDS)√æ=====================√æ√æClassic roguelike with pixel graphics and simple interface.√æ√æThis is fork of Famous Pixel Dungeon featuring English, Russian and many more localizations.√æ√æRemixed Dungeon in [Google Play](https://play.google.com/store/apps/details?id=com.nyrds.pixeldungeon.ml&referrer=utm_source%3Dgithub%26utm_content%3Dreadme)√æ√æ[Remixed Dungeon translation project](https://www.transifex.com/projects/p/remixed-dungeon/)√æ√æ–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–æ–≥–∞–ª–∏–∫ —Å –ø–∏–∫—Å–µ–ª—å–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–æ–π –∏ –ø—Ä–æ—Å—Ç—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.√æ√æ–≠—Ç–æ —Ñ–æ—Ä–∫ –ó–Ω–∞–º–µ–Ω–∏—Ç–æ–π Pixel Dungeon —Å –ê–Ω–≥–ª–∏–π—Å–∫–æ–π, –†—É—Å—Å–∫–æ–π –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥—Ä—É–≥–∏—Ö –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π.√æ√æRemixed Dungeon –≤ [Google Play](https://play.google.com/store/apps/details?id=com.nyrds.pixeldungeon.ml&referrer=utm_source%3Dgithub%26utm_content%3Dreadme)√æ√æ[–ü—Ä–æ–µ–∫—Ç –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É Remixed Dungeon](https://www.transifex.com/projects/p/remixed-dungeon/)"
carvill/foundation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
Opetushallitus/koodisto,6022,0,77,2,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",23,Java,"{'': 3, 'yml': 1, 'txt': 1, 'md': 1, 'json': 4, 'xml': 2, 'sh': 1, 'js': 3}",1166,55,37,22,0,2376,True,1,0,0,0,49,39,23,6,9,0,2,4,24,24,0,0,133,0,,,# koodisto√æ√æKoodistopalvelun palvelukerros ja k√§ytt√∂liittym√§. √æ√æKs [tekninen dokumentaatio](https://confluence.csc.fi/display/OPHPALV/Koodistopalvelun+tekninen+dokumentaatio) CSC:n Wikiss√§.√æ√æSwagger-documentaatio: https://virkailija.opintopolku.fi/koodisto-service/swagger/index.html
youtongluan/sumk,8529,283,51,126,User,False,sumkÁöÑÂÆö‰ΩçÊòØ‰∏∫‰∫íËÅîÁΩëÂÖ¨Âè∏Êèê‰æõ‰∏Ä‰∏™Âø´ÈÄüÂºÄÂèë„ÄÅÊé•Âè£‰∫§‰∫íÔºàRPCÂíåHTTPÔºâ„ÄÅÊï∞ÊçÆÁºìÂ≠ò„ÄÅËØªÂÜôÂàÜÁ¶ª„ÄÅË¥üËΩΩÂùáË°°„ÄÅÊïÖÈöúËΩ¨ÁßªÁöÑÊ°ÜÊû∂„ÄÇ‰∏ÄÁ´ôÂºèËß£ÂÜ≥‰∫íËÅîÁΩëÂÖ¨Âè∏Èù¢‰∏¥ÁöÑÂ∏∏ËßÅÈóÆÈ¢ò,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 3, 'md': 1, 'jpg': 1, 'xml': 1, 'dtd': 1, 'sql': 1}",115,1,0,1,0,1383,True,0,1,0,0,1,0,0,0,7,0,1,2,14,9,2,0,4,,23,,# sumk√æ&emsp;&emsp;sumkÁöÑÂÆö‰ΩçÊòØ‰∏∫‰∫íËÅîÁΩëÂÖ¨Âè∏Êèê‰æõ‰∏Ä‰∏™**ÂºÄÂèëÈÄüÂ∫¶Âø´**„ÄÅÂèàËÉΩÂæàÂÆπÊòìËøõË°å**Ê®™ÂêëÊâ©Â±ï**ÁöÑ**È´òÊÄßËÉΩ**Ê°ÜÊû∂„ÄÇ√æÂêåÊó∂ÂÖ∑Â§áÊé•Âè£‰∫§‰∫íÔºàRPCÂíåHTTPÔºâ„ÄÅÊï∞ÊçÆÁºìÂ≠ò„ÄÅËØªÂÜôÂàÜÁ¶ª„ÄÅË¥üËΩΩÂùáË°°„ÄÅÊïÖÈöúËΩ¨Áßª„ÄÅÂºÇÂ∏∏Â§ÑÁêÜÁ≠âÂäüËÉΩ„ÄÇ**‰∏ÄÁ´ôÂºè**Ëß£ÂÜ≥‰∫íËÅîÁΩëÂÖ¨Âè∏Èù¢‰∏¥ÁöÑÂ∏∏ËßÅÈóÆÈ¢ò„ÄÇ<BR>√æ* [ËØ¶ÊÉÖËØ¥ÊòéËØ∑ÁÇπÂáªËøôÈáå](https://www.oschina.net/p/sumk)√æ* [ÂÖ•Èó®ÊïôÁ®ãÂèÇËßÅËøôÈáå](https://github.com/youtongluan/sumk-server-demo)√æ* [ËøôÊòØÊó•ÂøóÂ∑•Á®ã](https://github.com/youtongluan/sumk-log)√æ* [‰ª£Á†ÅËá™Âä®ÁîüÊàêÂ∑•ÂÖ∑](https://github.com/youtongluan/sumk-codetool)√æ√æ√ætestÁõÆÂΩï‰∏ãÊúâÁÆÄÂçïÁöÑÂéãÊµãÂ∑•ÂÖ∑Á±ªHttpPressTestÂíåRpcPressTest„ÄÇ√æ√æ### ‰ΩúËÄÖÔºöÊ∏∏Â§è„ÄÇQQÔºö3205207767
EvidentSolutions/gradle-beanstalk-plugin,115,33,6,14,Organization,False,Gradle plugin for deploying WARs to AWS Elastic Beanstalk.,https://plugins.gradle.org/plugin/fi.evident.beanstalk,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",11,Java,"{'': 3, 'md': 2, 'gradle': 2, 'bat': 1}",58,1,15,5,3,1917,True,2,12,1,1,1,13,0,1,7,0,1,1,2,2,0,0,19,7,,,"# gradle-beanstalk-plugin√æ√æGradle plugin for deploying applications to AWS Elastic Beanstalk.√æ√æ## Usage√æ√æFirst, create `~/.aws/credentials` with a profile for your app:√æ√æ    [my-profile]√æ    aws_access_key_id=YOUR_ACCESS_KEY_ID√æ    aws_secret_access_key=YOUR_SECRET_ACCESS_KEY√æ√æOr set `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` environment variables.√æ√æNext, configure some deployments in your `build.gradle`:√æ√æ    plugins {√æ        id ""fi.evident.beanstalk"" version ""0.2.3""√æ    }√æ√æ    // beanstalk requires unique version number for each uploaded archive√æ    // SNAPSHOT will be replaced with 'yyyyMMdd.HHmms' label√æ    version = '0.1-SNAPSHOT'√æ√æ    beanstalk {√æ        profile = 'my-profile' // Only required if using .aws/credentials√æ        s3Endpoint = ""s3-eu-west-1.amazonaws.com""√æ        beanstalkEndpoint = ""elasticbeanstalk.eu-west-1.amazonaws.com""√æ    √æ        deployments {√æ            // Example to deploy to the same env√æ            staging {√æ                file = tasks.war√æ                application = 'my-app'√æ                environment = 'my-app-staging'√æ            }√æ            // Example to create a new env for each version (to use URL swapping for blue/green deployment)√æ            production {√æ                file = tasks.productionWar√æ                application = 'my-app'√æ                environment = ""my-app-${project.version.replaceAll('\\.', '-')}""√æ                template = 'default' // Saved configuration name to use to create each env√æ            }√æ            // Example to upload a new version to an application without deploying it (to be able to√æ            //  manually pick which environment to use)√æ            upload {√æ                file = tasks.war√æ                application = 'my-app'√æ            }√æ        }√æ    }√æ√æFinally, deploy by running `gradle deploy<deployment-name>`, e.g. `gradle deployStaging`."
PIH/openmrs-module-pihmalawi,8235,0,13,13,Organization,False,Collection of PIH Malawi customizations to OpenMRS,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",9,Java,"{'': 2, 'md': 1, 'sh': 1, 'xml': 1}",1660,18,21,11,0,3556,False,,,,,0,51,0,12,6,0,8,56,2818,685,0,0,107,10,,,"This represents the overall distribution and customization module for PIH Malawi√æ√æ## Build PIH Malawi development environment with OpenMRS SDK√æ√æ**NOTE**√æThe following are variables which can be modified:√æ```√æserverId = malawi√ædatabase = openmrs_neno√æsource code = ~/workspace√æmodule name = pihmalawi for openmrs-module-pihmalawi√æ```√æ### Linux instructions √æ√æ#### Install prerequisites√æ√æ1. [Install Java and Maven](https://wiki.openmrs.org/display/docs/OpenMRS+SDK#OpenMRSSDK-Installation)√æ2. Install git√æ   - sudo apt-get install git√æ3. To setup the OpenMRS SDK, you just need to open up a terminal/console and enter:√æ   - mvn org.openmrs.maven.plugins:openmrs-sdk-maven-plugin:setup-sdk√æ√æ#### Source the PIH Malawi database√æ√æDownload a *de-identified* backup and source the database:√æ```√æmysql -u root -p mysql√æ(enter password)√æ√æCREATE DATABASE openmrs_neno√æDEFAULT CHARACTER SET utf8√æDEFAULT COLLATE utf8_general_ci;√æ√æuse openmrs_neno;√æ√æsource *name of openmrs neno database*.sql√æ```√æ√æ#### Install OpenMRS SDK√æ1. Setup source code directory√æ   - cd ~√æ   - mkdir workspace√æ   - cd workspace√æ2. Get PIH Malawi module from git√æ   - git clone https://github.com/PIH/openmrs-module-pihmalawi.git pihmalawi√æ3. Install the PIH Malawi omod in your local maven repo√æ    - from the directory you have PIH Malawi checked out:√æ    - mvn clean install -DskipTests√æ4. Setup SDK√æ   - mvn openmrs-sdk:setup -DserverId=malawi √æ   - Type '1' to setup a distribution√æ   - Set custom distribution = 'org.openmrs.module:pihmalawi:X-Y-Z-SNAPSHOT' (see pom.xml for current version) √æ   - Set -DdbUri=jdbc:mysql://localhost:3306/openmrs_neno√æ5. Run SDK√æ   - mvn openmrs-sdk:run -DserverId=malawi √æ6. If everything starts up, but when you try to go to the login page (or any other page) you get a big stack trace that looks like it is due to Groovy, you need to remove the groovy jar file from the lib file.  Use the desktop file UI to open the openmrs-1.9.x.war file and remove the groovy jar from the logic omod.√æ   - Using the system file UI, double click the openmrs war file (ie. ~/openmrs/malawi/openmrs-1.9.11.war)√æ   - navigate to the WEB-INF/bundledModules folder√æ   - find the logic omod and double click on the logic omod√æ   - find the lib/groovy jar file and delete the groovy jar file√æ   - delete the ~/openmrs/malawi/tmp directory before running 'mvn openmrs-sdk:run'√æ7. Run SDK√æ   - mvn openmrs-sdk:run -DserverId=malawi√æ√æ## Using your local development environment√æ√æWith the Chrome browser, use this URL:√æ√æ> http://localhost:8080/openmrs√æ√æ## Modify development environment√æ√æIf you want to modify and test the PIH Malawi module, you can ""watch"" the the module for the ""malawi"" project.  You can add a module as watched by the selected server executing the openmrs-sdk:watch command in module's project directory. √æ```√æcd ~/workspace/pihmalawi√æmvn openmrs-sdk:watch -DserverId=malawi√æmvn openmrs-sdk:run -DserverId=malawi√æ```√æ√æ### Additional references√æ√æ- [OpenMRS SDK](https://wiki.openmrs.org/display/docs/OpenMRS+SDK)"
2008Choco/DragonEggDrop,1051,13,3,8,User,False,Custom Ender Dragon loot to reward your players greatly! (Active Fork of PixelStix's DragonEggDrop),https://www.spigotmc.org/resources/dragoneggdrop-revival.35570/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",7,Java,"{'': 3, 'md': 1, 'xml': 1}",390,2,25,2,9,1569,True,3,28,1,7,0,2,0,1,9,0,1,82,12196,9530,0,0,19,,12,,"<a href=""https://github.com/2008Choco/DragonEggDrop/releases/latest"" alt=""Latest release"">√æ    <img src=""https://img.shields.io/github/v/release/2008Choco/DragonEggDrop?include_prereleases"" alt=""Latest release"">√æ</a>√æ<a href=""http://choco.wtf/javadocs/dragoneggdrop-revival"" alt=""Javadocs"">√æ    <img src=""https://img.shields.io/badge/Javadocs-Regularly_updated-brightgreen"" alt=""Javadocs""/>√æ</a>√æ<a href=""https://github.com/2008Choco/DragonEggDrop/wiki/"" alt=""Wiki"">√æ    <img src=""https://img.shields.io/static/v1?label=Plugin%20Wiki&message=Hosted%20by%20GitHub&color=3B3B3B&logo=github"" alt=""Wiki""/>√æ</a>√æ<br>√æ<a href=""https://twitter.com/intent/follow?screen_name=2008Choco_"" alt=""Follow on Twitter"">√æ    <img src=""https://img.shields.io/twitter/follow/2008Choco_?style=social&logo=twitter"" alt=""Follow on Twitter"">√æ</a>√æ√æ√æThis Minecraft (Bukkit) plugin is a fork of NinjaStix's original, open sourced DragonEggDrop licensed under GPLv3. Release are made on GitHub to comply with this license. You are currently on the GitHub page for DragonEggDrop - Revival. NinjaStix's inactive GitLab repository may be found [here](https://gitlab.com/xPixelRagex/DragonEggDrop/). You are welcome to fork this project and create a pull request or request features/report bugs through the [issue tracker](https://github.com/2008Choco/DragonEggDrop/issues).√æ√æFor information about the plugin and how to use it, please see either the [GitHub Wiki](https://github.com/2008Choco/DragonEggDrop/wiki/) or the plugin's [resource page on SpigotMC](https://www.spigotmc.org/resources/35570/)."
LectureSight/lecturesight,44698,5,4,3,Organization,False,Automatic live PTZ camera tracking for lecture and presentation recordings,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",6,Java,"{'': 2, 'md': 1, 'yml': 1}",294,6,1,3,4,2905,True,1,0,1,0,0,11,0,0,8,0,0,0,0,0,0,0,2,0,,,[![Build Status](https://travis-ci.org/LectureSight/lecturesight.svg?branch=develop)](https://travis-ci.org/LectureSight/lecturesight)√æ[![Documentation Status](https://readthedocs.org/projects/lecturesight/badge/?version=latest)](http://lecturesight.readthedocs.io/en/latest/?badge=latest)√æ√æLectureSight√æ============√æ√æAn OSGI application that uses OpenCL to find and track people in a video stream in real-time. Based on the tracker data PTZ cameras like Sony EVIs can be controlled by user-provided logic.√æ√æFurther information can be found on [docs.lecturesight.org](http://docs.lecturesight.org) and the [project wiki](http://www.lecturesight.org).
flipkart-incubator/grpc-jexpress,1813,11,7,7,Organization,False,Developer friendly container for writing gRPC services using grpc-java,,,15,Java,"{'': 2, 'md': 2, 'gradle': 2, 'bat': 1}",168,4,0,3,0,752,True,5,10,0,0,0,12,0,1,8,0,0,0,0,0,0,0,114,5,,,"# grpc-jexpress√æDeveloper friendly container for writing gRPC services using grpc-java, called GJEX - for Grpc Java Express.√æ√æProvides following features:√æ* Transparent gRPC runtime startup alongwith Jetty for dashboard/administration√æ* Guice module support to integrate gRPC service implementations with the gRPC runtime√æ* Metrics support - e.g. @Timed annotations to publish to JMX√æ* YAML based configuration support for gRPC service implementations√æ* Component Lifecycle (Start(), Stop()) support via Service interface√æ* Health Check - ability to add any number of deep Health Checks√æ* Custom web resources for enabling Control Path, Administration actions√æ* Filters - ability to add any number of Filters to gRPC stub method implementations√æ* Validation - using [Hibernate Validator](http://hibernate.org/validator/)√æ* Distributed Tracing - using [opentracing](http://opentracing.io/) and the [openzipkin](https://github.com/openzipkin/brave) implementation√æ* Concurrent execution, Circuit breaking using [Hystrix](https://github.com/Netflix/Hystrix) and Dispatch-Compose through a [FutureDecorator](https://github.com/flipkart-incubator/grpc-jexpress/blob/master/core/src/main/java/com/flipkart/gjex/core/task/FutureDecorator.java) API√æ* Deadlining for APIs - ability to specify execution timeouts for gRPC stubs at service end√æ* Task/Upstream request retries using [Hedged Requests as described here](https://cseweb.ucsd.edu/~gmporter/classes/fa17/cse124/post/schedule/p74-dean.pdf)√æ* Tool recommendations for testing√æ√æ## Releases√æ| Release | Date | Description |√æ|:---------------------------------|:----------------|:------------|√æ| Version 1.33                     | Nov 2019        |  Bug fixes, feature enhahncements√æ| Version 1.0                      | Jan 2019        |  Initial stable release√æ√æ## Changelog√æChangelog can be viewed in [CHANGELOG.md](https://github.com/flipkart-incubator/grpc-jexpress/blob/master/CHANGELOG.md) file√æ√æ## Distribution√æGJEX builds are distributed via the [Clojars](https://clojars.org/) community maintained repository for open source libraries. √æAdd the following repository to your build system to access releases builds - e.g for Maven :√æ√æ```xml√æ<repository>√æ    <id>clojars</id>√æ    <name>Clojars repository</name>√æ    <url>https://clojars.org/repo</url>√æ</repository>√æ```√æMore details on [Distribution Binaries](https://github.com/flipkart-incubator/grpc-jexpress/wiki/Distribution-Binaries)√æ√æ## Building√æYou may also build GJEX from source. To build, clone this repository and run:√æ√æ```√æ$ ./gradlew clean build install√æ```√æ√æ## Examples√æThe [examples](https://github.com/flipkart-incubator/grpc-jexpress/tree/master/examples) requires https://github.com/grpc/grpc-java/tree/master/examples to already be built. √æ√æUse the Maven build option in order to have the built examples binaries in your local Maven repository (e.g ~/.m2/repository). grpc-java is in active development and the master branch is often in SNAPSHOT versions that are not published to central repositories. It is therefore advisable to edit the examples build file (pom.xml) to use a published gRPC version instead of SNAPSHOT version. For e.g. we updated examples to use gRPC version 1.20.0 and produce built binary(.jar) with the same version.√æ√æTo build the GJEX examples, run in the 'examples' directory:√æ√æ```√æ$ ../gradlew installDist√æ```√æTo run the hello world example with GJEX extensions, run:√æ√æ```√æ$ ./build/install/examples/bin/hello-world-server server ./src/main/resources/hello_world_config.yml√æ```√æThe gRPC Server, hosted gRPC services and the Jetty server status will be displayed in the console. By attaching an MBeans explorer like JConsole, one can inspect method-level execution metrics for the gRPC services.√æ√æAnd in a different terminal window run:√æ√æ```√æ$ ./build/install/examples/bin/hello-world-client√æ```√æ√æ## Documentation√æRefer to the [wiki](https://github.com/flipkart-incubator/grpc-jexpress/wiki) for documentation. "
tsaglam/JavaCodeEcorification,396,2,2,2,User,False,Proof of concept for the integration of Ecore functionality into existing Java code.,,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",10,Java,"{'': 3, 'md': 1, 'properties': 2, 'xml': 1}",372,1,2,2,8,1231,True,0,0,0,0,0,6,0,0,7,0,1,1,14,14,0,0,10,,28,,"# JavaCodeEcorification√æThis is a proof of concept for the automatic integration of Ecore functionality into Java code. We call this process Ecorification. The goal is to integrate Ecore functionality into Java code while preserving all of its original functionality. Preserving the original functionality of the Java code requires retaining the interfaces which are offered by the modules of the code and also retaining all internal functionality of the code. That means the product of the Ecorification is the original code, enriched with the desired Ecore functionality. It can be used exactly as before, but it also uses the modeling infrastructure and implements all interfaces for Ecore-based tooling.√æ√æThe basic idea of the Ecorification is to find an Ecore representation of the Java code, which is used to integrate its Ecore functionality into the Java code. The Ecore representation is obtained by creating an Ecore metamodel that represents the Java code as closely as possible (with the help of the [EcoreMetamodelExtraction project](https://github.com/tsaglam/EcoreMetamodelExtraction)). We use the Eclipse Modeling Framework to generate Ecore model code from the Ecore metamodel. We then interlace both the original Java code and the generated Ecore model code. This can be achieved by utilizing the separation of interface and implementation in the Ecore count to mount the original code into the super relation hierarchy of the model code. The combination of both codes then contains the implementation details of the original code and the Ecore functionality of the model code. This way, the Java Code Ecorification allows the integration of Ecore functionality.√æ√æThis process is depicted in the following diagram:√æ<p align=""center""> √æ<img alt=""The Ecorification Process"" src=""https://www.lucidchart.com/publicSegments/view/1fe0e941-1931-4d9b-afa2-395a4016498b/image.png"" width=""700"">√æ</p>√æ√æ## How to install:√æ1. Clone or download the project.√æ2. Import as existing project into the Eclipse IDE.√æ3. Do the steps one and two of the [EcoreMetamodelExtraction project](https://github.com/tsaglam/EcoreMetamodelExtraction) installation instructions (use Eclipse 2018-09 or newer, Oxygen is no longer supported, tested up to Eclipse 2020-06).√æ4. You need the Eclipse Modeling Framework, the Eclipse Java Development Tools, the Eclipse Plug-in Development Environment, the Xtend IDE, [XAnnotations](https://github.com/kit-sdq/XAnnotations), and log4j. Make sure that all of them are installed.√æ5. Run the project as Eclipse Application.√æ6. You can start the extraction from the context menu of a Java project (provisional UI)."
w11k/lsql,2016,7,13,5,Organization,False,Java SQL Database Library,https://github.com/w11k/lsql/blob/master/README.md,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 4, 'yml': 1, 'md': 3, 'xml': 1}",849,6,201,2,3,2545,True,10,29,0,0,1,6,1,1,6,0,0,0,0,0,0,0,74,5,,,"[![Build Status](https://travis-ci.org/w11k/lsql.svg?branch=master)](https://travis-ci.org/w11k/lsql)√æ√æ# Literate SQL - A Java Database Library√æ√æLSql (Literate SQL) is a Java database library focusing on type-safety and the preservation of the relational data model.  √æ√æKey points:√æ√æ* LSql is *not* yet another object/relational mapper. We believe that functional application data (in particular stored in a relational model) should not be mapped to a strict classes/objects model. The relational data model is elegant, well-thought-out and a reliable way to model the application data. Any abstraction between the relational model and the application logic makes things more complicated and should be avoided.√æ√æ* Based on your *database schema* and *SQL statement files*, LSql generates Java classes (with an immutability API design) in order to interact with the database in a type-safe manner.   √æ√æ* SQL is a superior language for data manipulation. The RDBMS should be choosen depending on the project requirements and database access libraries should not try to hide their characteristics.√æ√æ√æ## Example√æ√æ### CRUD√æ√æGiven the following DDL:√æ√æ```sql√æCREATE TABLE person (√æ    id SERIAL PRIMARY KEY,√æ    name VARCHAR(200),√æ    age INT√æ);√æ```√æ√æJava code:√æ√æ```java√æ// insert√æPerson_Table personTable = new Person_Table(lSql);√æPerson_Row person = new Person_Row()√æ    .withName(""John"")√æ    .withAge(20);√æOptional<Integer> pk = personTable.insert(person);√æ√æ// load by ID√æOptional<Person_Row> personRowOptional = personTable.load(pk.get());√æpersonRowOptional.get().name == ""John"";√æpersonRowOptional.get().age == 20;√æ```√æ√æ## Query√æ√æGiven the following SQL statement file `PersonStatements.sql`:√æ√æ```sql√æ--loadPersonByAge√æSELECT * FROM person WHERE age = /*=*/ 0 /**/;√æ```√æ√æJava code:√æ√æ```java√æPersonStatements statements = new PersonStatements(lSql);√æ√æList<LoadPersonByAge> list = personStatements.loadPersonByAge()√æ    .withAge(20)√æ    .toList();√æ√ælist.get(0).name == ""John"";√ælist.get(0).age == 20;√æ```√æ√æ√æ√æ√æ√æ# Download√æ√æ## Maven Repository Artifacts√æ√æAll released files are stored in a Maven repository:√æ√æ```{.language-xml}√æ<repositories>√æ    <repository>√æ        <snapshots>√æ            <enabled>false</enabled>√æ        </snapshots>√æ        <id>bintray-w11k-lsql</id>√æ        <name>bintray</name>√æ        <url>https://dl.bintray.com/w11k/lsql</url>√æ    </repository>√æ</repositories>√æ√æ<dependencies>√æ    <dependency>√æ        <groupId>com.w11k.lsql</groupId>√æ        <artifactId>lsql-core</artifactId>√æ        <version>...</version>√æ    </dependency>√æ    <dependency>√æ        <groupId>com.w11k.lsql</groupId>√æ        <artifactId>lsql-guice</artifactId>√æ        <version>...</version>√æ    </dependency>√æ    <dependency>√æ        <groupId>com.w11k.lsql</groupId>√æ        <artifactId>lsql-cli</artifactId>√æ        <version>...</version>√æ    </dependency>√æ</dependencies>√æ```"
vnomics/spring-stateless-ticket-cache-redis,73,0,4,1,Organization,False,Implements a stateless ticket cache with Redis cache for use with CAS and Spring Security,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 1, 'txt': 1, 'md': 1, 'xml': 1}",40,8,4,2,0,1763,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,5,0,,,"# Spring Stateless Ticket Cache Redis√æ√æ## Project Deprecated√æThis project is no longer supported, it can be replaced with this solution:√æ√æ```xml√æ<dependency>√æ <groupId>org.springframework.data</groupId>√æ <artifactId>spring-data-redis</artifactId>√æ</dependency>√æ```√æ√æThis project provides the `RedisCache` class which can then be combined with the `SpringCacheBasedTicketCache`√æclass from the following:√æ√æ```xml√æ<dependency>√æ <groupId>org.springframework.security</groupId>√æ <artifactId>spring-security-cas</artifactId>√æ</dependency>√æ```√æ√æThese two classes together accomplish the same behavior as this project set to accomplish.  Since √æthose projects are spring classes those should be more widely supported and thus why this √æproject is not longer required.√æ√æ# Overview√æ√æThis project implements `org.springframework.security.cas.authentication.StatelessTicketCache` for storing stateless CAS tickets in a Redis database. This supports stateless authentication scheme in a highly available environment. This project depends on the [Jedis](https://github.com/xetorthio/jedis) Redis library.√æ√æ## Maven Coordinates√æ√æ```xml√æ<dependency>√æ    <groupId>com.vnomicscorp</groupId>√æ    <artifactId>spring-stateless-ticket-cache-redis</artifactId>√æ    <version>1.0.3</version>√æ</dependency>√æ```√æ√æ## Usage√æ√æUsage is simple. Construct a `com.vnomicscorp.spring.security.cas.authentication.redis.RedisStatelessTicketCache` with a Redis connection, optionally set expiration time, and use the instance when configuring your CAS security provider.√æ√æ```java√æ// Configure Redis connection√æJedisPool pool = new JedisPool(new JedisPoolConfig(), hostname, port, timeout, null, database);√æ// Create the cache√æRedisStatelessTicketCache cache = new RedisStatelessTicketCache(pool);√æcache.setExpirationSeconds(expirationSeconds);√æ// Configure the CAS provider√æcasAuthenticationProvider.setStatelessTicketCache(cache);√æ```√æ√æ√æ## Building√æ√æ mvn install√æ√æ### Key setup√æYou must have gpg key to do a full build.  Create one on linux with:√æ√æ gpg --gen-key√æ √æIf you need to supply a passphrase to the build then use √æ√æ mvn install -D""gpg.passphrase=thephrase""√æ √æSee maven-gpg-plugin documentation for further details. "
CNDDeasyoder/EasyOrder_server,2929,0,0,2,Organization,False,,,,9,Java,"{'': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",72,1,0,4,0,1013,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,3,0,,,
Rickecr/CamaraDosDeputados,794,39,3,29,User,False,Aplicativo web da c√¢mara dos deputados usando ReactJS.,https://camaradosdeputados.netlify.app/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",12,JavaScript,"{'': 4, 'js': 1, 'md': 2, 'json': 2}",127,2,0,21,6,555,True,8,21,4,2,0,34,0,3,11,0,3,6,6560,5450,0,0,37,,58,,"[![Open Source Helpers](https://www.codetriage.com/rickecr/camaradosdeputados/badges/users.svg)](https://www.codetriage.com/rickecr/camaradosdeputados)√æ# [C√¢mara dos Deputados](https://camaradosdeputados.netlify.app/)√æ> Aplica√ß√£o com prop√≥sito de mostrar o que esta acontecendo na C√¢mara dos Deputados.√æ√æ## Executar localmente :smirk:√æ√æA aplica√ß√£o estar sendo desenvolvida em [ReactJS](https://reactjs.org/) e consumimos os dados da [API dos Dados Abertos](dadosabertos).√æ√æPara executar a aplica√ß√£o localmente e contribuir, √© necess√°rio:√æ√æ- NodeJS.√æ- ReactJS.√æ√æE ent√£o, rodar os seguintes comandos:√æ√æ```sh√ænpm install√ænpm start√æ```√æA aplica√ß√£o estar√° disponivel em: http://localhost:3000/√æ√æ√æ## Quer contribuir ? :smiley:√æ√æCaso voc√™ deseje adicionar/atualizar/criar issues bacanas e contribuir para o projeto, leia o [CONTRIBUTING.md](CONTRIBUTING.md).√æ√æFique tranquilo para enviar sugest√µes, fazer altera√ß√µes e/ou procurar erros para nos informar criando uma issue e at√© mesmo corrigindo e mandando um PR. :relaxed:√æ√æ√æ## N√£o sabe ReactJS ? :disappointed_relieved:√æ√æN√£o tem problema, temos lugar para todo mundo. Voc√™ n√£o precisa codificar pra ajudar, pode contribuir com ideias, achando problemas, contribuindo com a documenta√ß√£o e/ou dando sugest√µes e etc.√æ√æMas se voc√™ quiser aprender ReactJS e dar seus primeiros passos por aqui, seja muito bem vindo(a).√æ√æ### Links para come√ßar com ReactJS:√æ- [Tutorial oficial do React](https://pt-br.reactjs.org/docs/getting-started.html#try-react).√æ- [Curso para iniciar no ReactJS da Rockeseat](https://skylab.rocketseat.com.br/node/curso-react-js).√æ√æFique a vontade para adicionar novos links.√æ√æ## Hall of Fame√æ√æ[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/0)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/0)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/1)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/1)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/2)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/2)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/3)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/3)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/4)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/4)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/5)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/5)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/6)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/6)[![](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/images/7)](https://sourcerer.io/fame/Rickecr/Rickecr/CamaraDosDeputados/links/7)"
mcg-helper/mcg-helper,105590,182,21,91,User,False,Ëá™Á†îÊµÅÁ®ãËÆæËÆ°ÔºåÂèØËßÜÂåñÁïåÈù¢‰∏é‰∫∫ÊÄßÂåñËÆæËÆ°Ôºå‰∏∞ÂØåÁöÑÊãñÊãΩÊéß‰ª∂ÔºåÂü∫‰∫éÊµÅÁ®ãÂõæÂÆûÁé∞Ëá™Âä®Âåñ,http://blog.csdn.net/loginandpwd,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 2, 'md': 1, 'xml': 1}",34,2,0,2,0,837,True,1,0,1,0,1,9,1,3,9,0,1,1,1,1,0,0,4,,5,,# mcg-helperÁ†îÂèëÂä©Êâã√æ## mcg-helperÊòØ‰ªÄ‰πà?√æ√æÂÆö‰Ωç‰∏ÄÊ¨æÁ†îÂèë‰∏™ÂåñÊÄßÊµÅÁ®ãËá™Âä®ÂåñÂ∑•ÂÖ∑ÔºåÊèê‰æõ‰∏ÄÂ•óÂèØËßÜÂåñ‚ÄùÊµÅÁ®ãËá™Âä®Âåñ‚ÄúÁöÑËßÑËåÉÔºå‰∏∞ÂØåÁöÑÊãñÊãΩÊéß‰ª∂ÔºåËâØÂ•ΩÁöÑ‰∫§‰∫íÊÄßÔºåÂü∫‰∫éÊµÅÁ®ãÂõæÂÆûÁé∞Ëá™Âä®ÂåñÔºåËÉΩÂ§üÂæàÂ•ΩÊÑüÁü•Âà∞ÂèØÊéßÊÄß„ÄÅÂÆûÊó∂ÊÄß„ÄÅÂèØËøΩÊ∫ØÊÄß„ÄÇÊõ¥Â•ΩÁöÑËß£ÂÜ≥Âú®Á†îÂèëÂ∑•‰Ωú‰∏≠ËæÉÂÖ∏ÂûãÁöÑ‰ª£Á†ÅÁîüÊàê„ÄÅÂ∫îÁî®ÈÉ®ÁΩ≤„ÄÅÁéØÂ¢ÉÊê≠Âª∫„ÄÅÊ®°ÊãüÁéØÂ¢É„ÄÅËá™Âä®ÂèëÁé∞‰∏éÊ£ÄÊµã„ÄÅÊï∞ÊçÆÂ§ÑÁêÜÁ≠âÈúÄÊ±ÇÂú∫ÊôØÔºå‰ªéËÄåËææÂà∞ÂáèÂ∞ëÁÆÄÂåñÂ∑•‰ΩúÈáè„ÄÇÂÖ∂Ê†∏ÂøÉ‰∫ÆÁÇπÂú®‰∫éÊâìÈÄ†Ëá™Â∑±ÁöÑÊµÅÁ®ãÊéß‰ª∂ÔºåÂÆûÁé∞Ëá™ÂÆö‰πâÈúÄÊ±Ç„ÄÇ  √æ√æ## mcg-helperÁöÑ‰ºòÂäøÔºü√æ* ËΩªÈáèÁ∫ß„ÄÅÊó†Êµ∏ÂÖ•ÊÄß„ÄÅÈÉ®ÁΩ≤ÁÆÄÂçïÔºàÊó†ÈúÄÂÆâË£ÖÊï∞ÊçÆÂ∫ìÊàñÁâπÂÆöÈÖçÁΩÆÔºåjdk8„ÄÅtomcat8Âç≥ÂèØÁã¨Á´ãËøêË°åÔºâ √æ* Ë∑®Âπ≥Âè∞ÊÄß„ÄÅÂèØÁßªÊ§çÊÄß„ÄÅÂèØÊâ©Â±ïÊÄßÔºåÂü∫‰∫éB/SÊû∂ÊûÑÔºåÈÄöËøáÊµèËßàÂô®Âç≥ÂèØËÆøÈóÆ  √æ* ÂÆûÁé∞‰∏ÄÂ•óÊµÅÁ®ãËá™Âä®ÂåñËßÑËåÉÔºåÊõ¥Âä†‰æøÊç∑ÁöÑÂÆûÁé∞Ëá™Âä®Âåñ  √æ* ‰∫åÊ¨°ÂºÄÂèëÔºåÊâìÈÄ†Ëá™ÂÆö‰πâÊãñÊãΩÊµÅÁ®ãÊéß‰ª∂ÔºåËÆ©ÊµÅÁ®ãËá™Âä®ÂåñÊõ¥‰∏∫Âº∫Â§ß  √æ√æ## mcg-helperËÉΩÂ§üÂÅö‰ªÄ‰πàÔºü√æ√æ‰ª•Á†îÂèëÂ∑•‰Ωú‰∏≠ÁöÑÂÆûÈôÖÈúÄÊ±ÇÂú∫ÊôØ‰∏∫‰æãÔºö  √æ‰∏Ä„ÄÅ‰ª£Á†ÅÁîüÊàêÔºöÂø´ÈÄüÊûÑÂª∫‰ª£Á†ÅÁîüÊàêÂäüËÉΩÔºåÈÄöËøáÂèØËßÜÂåñÁïåÈù¢ÔºåÈááÁî®ÊãñÊãΩÂºèÊéß‰ª∂ÂèäËøûÊé•Á∫øÁªòÂà∂ÊµÅÁ®ãÂõæÔºåËá™ÂÆö‰πâÂÆûÁé∞ÁîüÊàê‰ªª‰ΩïÊÉ≥Ë¶ÅÁöÑ‰ª£Á†Å„ÄÇ  √æ‰∫å„ÄÅÁéØÂ¢ÉÊê≠Âª∫Ôºö‰ª•javaÂ∫îÁî®Êù•ËÆ≤ÔºåÊØîÂ¶ÇÂÆâË£ÖjdkÔºåtomcatÔºåzookeeperÔºåmqÔºåhbaseÔºåmysqlÁ≠âÁ≠âÈÉΩÂèØ‰ª•ÂÆûÁé∞Ëá™Âä®Âåñ„ÄÇ  √æ‰∏â„ÄÅÂ∫îÁî®ÈÉ®ÁΩ≤ÔºöÂÆûÁé∞Linux SSHËøûÊé•ÔºåËΩªÊùæÂÆûÁé∞ÂàáÊç¢Áî®Êà∑Á≠â‰∫§‰∫íÊÄßÈúÄÊ±ÇÔºåÊï∞ÊçÆÂàùÂßãÂåñÔºåÂ§öÂ∫îÁî®ÁöÑÂêØÂä®È°∫Â∫èÊàñÁâπÂÆöÊù°‰ª∂Ëß¶ÂèëÔºåÂùáÂèØÂÆûÁé∞Ëá™Âä®ÂåñÊìç‰Ωú„ÄÇ    √æÂõõ„ÄÅÊ®°ÊãüÊìç‰ΩúÔºöÊé•Âè£Ë∞ÉËØïÔºåÊï∞ÊçÆÊ®°ÊãüÔºåÂäüËÉΩËá™ÊµãÁ≠âÁ≠âÔºåÈÄÇÁî®‰∫éÊµãËØïÂú∫ÊôØ„ÄÇ  √æ‰∫î„ÄÅËá™Âä®Ê£ÄÊµãÔºöÂü∫‰∫éÊµÅÁ®ãÂæ™ÁéØÔºåÂÆûÁé∞‰∏ªÂä®Ëß¶Âèë„ÄÅÊ£ÄÊµã„ÄÅÊéßÂà∂ÁöÑÈúÄÊ±ÇÂú∫ÊôØÔºåÂ¶ÇÊúçÂä°Âô®ÊÄßËÉΩÊ£ÄÊµãÔºåÂ∫îÁî®Â≠òÊ¥ªÊ£ÄÊµãÔºåÂæ™ÁéØÊâ´ÊèèÊìç‰ΩúÁ≠â„ÄÇ  √æÂÖ≠„ÄÅÊï∞ÊçÆÂ§ÑÁêÜÔºöÂ¶ÇÂºÄÂèëÁéØÂ¢ÉÂÆöÊúüÂêåÊ≠•Êï∞ÊçÆÂà∞ÊµãËØïÁéØÂ¢ÉÔºåÊàñÂ§ö‰∏™Êï∞ÊçÆÂ∫ìÊï∞ÊçÆÂä†Â∑•ËøáÊª§Á≠âÈúÄÊ±Ç„ÄÇ  √æ  √æÊï¥‰Ωì‰∏äËÆ≤ÔºåÊéß‰ª∂‰ΩøÁî®ÁÆÄÂçïÔºåÂü∫‰∫éÊµÅÁ®ãÂõæÊ∏ÖÊô∞ÊòìÁª¥Êä§ÔºåÊòìÊéåÊéßÔºåÂ≠¶‰π†Êó†Èó®Êßõ„ÄÇÁ≥ªÁªü‚Äú‰∏ªÈ°µ‚ÄùÈáåÈù¢ÊúâËßÜÈ¢ëÊïôÁ®ãÈìæÊé•ÔºåÁõ∏‰ø°ËÉΩÂ§üÂæàÂ•ΩÁöÑ‰∏äÊâãÂíåÁé©ËΩ¨mcg-helper„ÄÇ√æ√æ## Â≠¶‰π†ËµÑÊ∫ê√æQQ‰∫§ÊµÅÁæ§Ôºö619815829  √æÂÖçË¥πËßÜÈ¢ëÊïôÁ®ãÔºö  √æ[Á¨¨‰∏ÄËäÇ„ÄÅËßÜÈ¢ëÊïôÁ®ãÂÜÖÂÆπ‰ªãÁªç](https://edu.csdn.net/course/play/5954)  Êé¢ËÆ®Á†îÂèëÂ∑•‰Ωú‰∏≠ÂÖ∏ÂûãÁöÑÈáçÂ§çÁπÅÊùÇÂ∑•‰ΩúÔºåÂèØÈÄöËøáÊµÅÁ®ãËá™Âä®ÂåñÂÆûÁé∞‰ª£ÊõøÁöÑÂ∏∏ËßÅÂú∫ÊôØ„ÄÇ  √æ[Á¨¨‰∫åËäÇ„ÄÅmcg-helperÂàùÊ≠•ËÆ§ËØÜÊïôÁ®ã](https://edu.csdn.net/course/play/5954/300130) mcg-helperÊ¶ÇËø∞„ÄÅÊ†∏ÂøÉËÆæËÆ°„ÄÅÂü∫Êú¨Áü•ËØÜ„ÄÅÂ∑•‰ΩúÂéüÁêÜ„ÄÅÂÖ•Èó®Á§∫‰æã„ÄÅ‰ΩøÁî®Âú∫ÊôØÁ≠âÊñπÈù¢Êù•ËÆ§ËØÜ‰∏éÁÜüÊÇâÂ∑•ÂÖ∑„ÄÇ  √æ[Á¨¨‰∏âËäÇ„ÄÅÂºÄÂßã„ÄÅÊñáÊú¨„ÄÅÁªìÊùüÊéß‰ª∂ËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/300416)  ‰∫ÜËß£ÊµÅÁ®ãÊéß‰ª∂ËøêË°åÂéüÁêÜÔºå‰ªãÁªç‰∏éÊºîÁ§∫Êéß‰ª∂ÁöÑÂäüËÉΩ‰∏é‰ΩúÁî®„ÄÇ  √æ[Á¨¨ÂõõËäÇ„ÄÅdata„ÄÅjsonÊéß‰ª∂ËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/305640)  ÂÖ®Â±ÄÂèòÈáèÁöÑ‰ΩøÁî®„ÄÅÂä®ÊÄÅËØªÂèñË°®ÁªìÊûÑ‰ø°ÊÅØ„ÄÅËæìÂá∫ÊåáÂÆöÂÜÖÂÆπÂà∞Êñá‰ª∂„ÄÇ  √æ[Á¨¨‰∫îËäÇ„ÄÅjs„ÄÅjava„ÄÅpythonÊéß‰ª∂ËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/309934)  Âú®ÊµÅÁ®ã‰∏≠‰ΩøÁî®Â§öÁßçËÆ°ÁÆóÊú∫ËØ≠Ë®ÄÔºåÂèëÊå•ÂêÑËá™‰ºòÂäøÔºåËÆ©ÊµÅÁ®ãÊõ¥‰∏∫ÁÅµÊ¥ªÂº∫Â§ß„ÄÇ  √æ[Á¨¨ÂÖ≠ËäÇ„ÄÅsqlÊü•ËØ¢„ÄÅsqlÊâßË°åÊéß‰ª∂ËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/310142)  ÂÆûÁé∞Â∏∏Áî®ÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÁöÑ‰∫§‰∫íÂäüËÉΩ„ÄÇ  √æ[Á¨¨‰∏ÉËäÇ„ÄÅLinux„ÄÅÂæ™ÁéØ„ÄÅÂ≠êÊµÅÁ®ãÊéß‰ª∂ËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/324751)  Linux SSHËøûÊé•ÔºåÊµÅÁ®ãÂæ™ÁéØÂäüËÉΩÔºå‰ª•ÂèäÊµÅÁ®ãÊãÜÂàÜÂ§çÁî®‰∏éÁªÑÂêà„ÄÇ  √æ[Á¨¨ÂÖ´ËäÇ„ÄÅ‰∏áËÉΩ‰ª£Á†ÅÁîüÊàêËÆ≤Ëß£](https://edu.csdn.net/course/play/5954/365298?spm=1002.2009.3001.4024)  ‰ª•‰∏ÄÊ¨æjavaÂºÄÊ∫êÊ°ÜÊû∂jeecg‰∏∫‰æãÂ≠êÔºåÂÆûÁé∞‰∏ÄÈîÆ‰ª£Á†ÅÁîüÊàê„ÄÇ  √æ√æ## ÂàùÊ≠•ËÆ§ËØÜmcg-helper√æ  ËøõÂÖ•‰∏ªÈ°µÔºåÈáåÈù¢ÂåÖÂê´QQÁæ§„ÄÅcsdnÂçöÂÆ¢„ÄÅËßÜÈ¢ëÊïôÁ®ã„ÄÅÂºÄÊ∫êÂú∞ÂùÄ„ÄÅÁâàÊú¨‰ø°ÊÅØ„ÄÇ √æ  √æ![‰∏ªÈ°µ](https://github.com/mcg-helper/mcg-helper/raw/master/image/home.png)√æ√æ![‰ª£Á†ÅÁîüÊàê](https://github.com/mcg-helper/mcg-helper/raw/master/image/genCode.jpg)√æ√æ![ÁéØÂ¢ÉÊê≠Âª∫](https://github.com/mcg-helper/mcg-helper/raw/master/image/build.png)√æ√æ![Â∫îÁî®ÂèëÂ∏É](https://github.com/mcg-helper/mcg-helper/raw/master/image/publish.jpg)√æ√æ## mcg-helperÊéßÂà∂Âè∞√æÂú®ÊµÅÁ®ãÊâßË°åÊó∂‰ºöËæìÂá∫ÊØè‰∏™Êéß‰ª∂ÁöÑÊó•ÂøóÁõ∏ÂÖ≥‰ø°ÊÅØÔºåËøôÊ†∑Âú®ÁªòÂà∂ÂíåË∞ÉËØïÊµÅÁ®ãÊó∂ÊûÅ‰∏∫ÊúâÁî®Ôºå‰∏î‰º¥ÈöèÊó•ÂøóÁöÑ‰∏çÊñ≠ËæìÂá∫ÔºåÊï¥‰∏™ÊµÅÁ®ãÊâßË°åÁöÑÈ°∫Â∫è‰∏éËøáÁ®ãÂèòÂæóÊõ¥Âä†Ê∏ÖÊô∞„ÄÇ√æ![ÊéßÂà∂Âè∞](https://github.com/mcg-helper/mcg-helper/raw/master/image/console.png)√æ√æ## ÈóÆÈ¢òÂèçÈ¶à√æÂú®‰ΩøÁî®‰∏≠ÈÅáÂà∞ÈóÆÈ¢òÊàñÊúâÊõ¥Â•ΩÁöÑÂª∫ËÆÆÔºåÊ¨¢ËøéÂ§ßÂÆ∂ÂèçÈ¶à:√æ√æ* QQ‰∫§ÊµÅÁæ§: 619815829√æ* ÈÇÆÁÆ±Âú∞ÂùÄ: mcg-helper@qq.com
wen-fei/AngelEyes,47894,38,3,18,User,False,a system for searching information about losing children. you can find text information and upload images to achieve the similarity with the images in the system database so that you can be sure if this children is the person who you want to find.,,,4,Java,"{'': 2, 'md': 1}",62,6,0,2,0,910,True,2,1,0,0,2,4,2,1,9,0,1,2,5,7,0,0,33,,93,,# AngelEyes√æÂü∫‰∫é‰∫∫ËÑ∏ËØÜÂà´ÊäÄÊúØÁöÑËµ∞Â§±ÂÑøÁ´•ÊâæÂØªÁ≥ªÁªü√æ√æpytorchÂÆûÁé∞vgg-faceËøõË°å‰∫∫ËÑ∏ËØÜÂà´√æ√æ### È°πÁõÆÊäÄÊúØÊ†à√æ√æ1. Ê∑±Â∫¶Â≠¶‰π†ÂíåÁ•ûÁªèÁΩëÁªú√æ2. ÂõæÂÉèÂ§ÑÁêÜ√æ3. webÂºÄÂèë„ÄÅwebAppÂºÄÂèë√æ√æ#### È°πÁõÆÂÆåÊàêÂäüËÉΩ√æ√æ##### webÁ´Ø√æ√æÂåÖÊã¨‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÁΩëÁ´ôÂäüËÉΩÔºåÂü∫‰∫éJava8„ÄÅSSM„ÄÅtomcat7„ÄÅmysql5.6√æ√æ* ÁôªÂΩïÊ≥®ÂÜåÊ®°Âùó√æ* ËÆ∫ÂùõÊ®°Âùó√æ* Ëµ∞Â§±‰∫∫ÂëòÁôªËÆ∞Ê®°Âùó√æ* Ëµ∞Â§±‰∫∫Âëò‰ø°ÊÅØÊ®°Âùó√æ* ÂêéÂè∞ÁÆ°ÁêÜÊ®°Âùó√æ* ÂõæÂÉèÂåπÈÖçÊ®°Âùó√æ√æ##### Êï∞ÊçÆÈááÈõÜ√æ√æ* ÂÆùË¥ùÂõûÂÆ∂1.2WÊù°Â∑¶Âè≥ÂõæÁâáÂíå‰ø°ÊÅØÊï∞ÊçÆ√æ* ‰∏á‰∫ãÈÄöÂØª‰∫∫ÁΩëÔºö9kÂ∑¶Âè≥ÂõæÁâáÂíå‰ø°ÊÅØÊï∞ÊçÆ√æ* ‰∏≠ÂõΩÂØª‰∫∫ÂêØ‰∫ãÁΩëÔºö5kÂ∑¶Âè≥ÂõæÁâáÂíå‰ø°ÊÅØÊï∞ÊçÆ√æ√æ##### ÂõæÂÉèËØÜÂà´√æ√æÂü∫‰∫épythonÂÆûÁé∞ÔºåÁ•ûÁªèÁΩëÁªúÂü∫‰∫épytorchÂÆûÁé∞√æ√æ##### ‰∏Ä„ÄÅ‰∫∫ËÑ∏Ê£ÄÊµã√æ√æ1. ‰ΩøÁî®ÁöÑÊäÄÊúØÔºödlib„ÄÅCNN„ÄÅopencv√æ√æ2. ÁªìÊûúÔºöÂáÜÁ°ÆÁéáÔºà1kÂº†ÂõæÁâáÊµãËØïÈõÜÔºâ√æ√æ   DLIB           92.82%√æ√æ   OpenCV     88.14%√æ√æ   CNN           90.77%√æ√æ3. ÊïàÊûúÂ¶Ç‰∏ãÔºö√æ√æ   ![](https://user-images.githubusercontent.com/8847689/75103448-b0577b00-5635-11ea-9b6e-194669038feb.png)√æ√æ##### ‰∫å„ÄÅ‰∫∫ËÑ∏ÂØπÈΩê√æ√æ‰ΩøÁî®ÁöÑÊäÄÊúØÔºöÁÆÄÂçïÁöÑ‰ªøÂ∞ÑÂèòÊç¢ÔºåopencvÂç≥ÂèØ√æ√æ![](https://user-images.githubusercontent.com/8847689/75103453-c49b7800-5635-11ea-92d4-6ac5fa6bff57.png)√æ√æÔºàÂõæÁâáÊù•Ê∫ê‰∫éÁΩëÁªúÔºå‰æµÂà†Ôºâ√æ√æ##### ‰∏â„ÄÅÊ®°ÂûãÊû∂ÊûÑ√æ√æ![](https://user-images.githubusercontent.com/8847689/75103550-ee08d380-5636-11ea-9717-dc2069bc8a1a.png)√æ√æ##### Âõõ„ÄÅÂåπÈÖçÂ∫¶√æ√æ![](https://user-images.githubusercontent.com/8847689/75103574-535cc480-5637-11ea-9ee2-9b2af919a2dc.png)√æ√æ√æ√æ#### ÂèÇ‰∏é‰∫∫Âëò√æ√æ@TenYun√æ√æ@css0306√æ√æ@Ëé±Â∏ÉÂ∞ºÂÖπ√æ√æ@ÁõêÁÑóÂí∏È±º√æ√æ#### ÂÖ∂‰ªñ√æ√æÊ®°Âûã„ÄÅÊï∞ÊçÆËßÅissue
kptfh/feign-reactive,338,117,14,48,User,False,Reactive Feign client based on Spring WebFlux,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 1, 'xml': 2}",74,4,0,2,8,844,True,1,5,0,0,2,9,1,2,9,0,1,2,3,1,0,0,21,,11,,"Happy to announce that from now Java Reactive Feign client is officially backed by Playtika. All development will be conducted in Playtika fork https://github.com/Playtika/feign-reactive√æ√æ[Subscribe to stay up to date üôÇ](https://www.youtube.com/channel/UCAIRpdkVAj1RT6butHUV9yg)√æ√æ# feign-reactive√æ√æ[ ![Download](https://api.bintray.com/packages/kptfh/feign-reactive/client/images/download.svg) ](https://bintray.com/kptfh/feign-reactive/client/_latestVersion)√æ√æUse Feign with Spring WebFlux√æ√æ## Overview√æ√æImplementation of Feign on Spring WebClient. Brings you the best of two worlds together : √æconcise syntax of Feign to write client side API on fast, asynchronous and√ænon-blocking HTTP client of Spring WebClient.√æ√æ## Modules√æ  √æ  **_feign-reactor-core_** : base classes and interfaces that should allow to implement alternative reactor Feign√æ  √æ  **_feign-reactor-webclient_** : Spring WebClient based implementation of reactor Feign √æ  √æ  **_feign-reactor-cloud_** : Spring Cloud implementation of reactor Feign (Ribbon/Hystrix)√æ  √æ  **_feign-reactor-rx2_** : Rx2 compatible implementation of reactor Feign (depends on feign-reactor-webclient)√æ  √æ  **_feign-reactor-jetty_** : experimental Reactive Jetty client based implementation of reactor Feign (doesn't depend on feign-reactor-webclient). In future will allow to write pure Rx2 version.√æ  - have greater reactivity level then Spring WebClient. By default don't collect body to list instead starts sending request body as stream. √æ  - starts receiving reactive response before all reactive request body has been sent√æ  - process Flux<`String`> correctly in request and response body  √æ√æ## Usage√æ√æWrite Feign API as usual, but every method of interface√æ - may accept `org.reactivestreams.Publisher` as body√æ - must return `reactor.core.publisher.Mono` or `reactor.core.publisher.Flux`.√æ√æ```java√æ@Headers({ ""Accept: application/json"" })√æpublic interface IcecreamServiceApi {√æ√æ  @RequestLine(""GET /icecream/flavors"")√æ  Flux<Flavor> getAvailableFlavors();√æ√æ  @RequestLine(""GET /icecream/mixins"")√æ  Flux<Mixin> getAvailableMixins();√æ√æ  @RequestLine(""POST /icecream/orders"")√æ  @Headers(""Content-Type: application/json"")√æ  Mono<Bill> makeOrder(IceCreamOrder order);√æ√æ  @RequestLine(""GET /icecream/orders/{orderId}"")√æ  Mono<IceCreamOrder> findOrder(@Param(""orderId"") int orderId);√æ√æ  @RequestLine(""POST /icecream/bills/pay"")√æ  @Headers(""Content-Type: application/json"")√æ  Mono<Void> payBill(Publisher<Bill> bill);√æ}√æ```√æBuild the client :√æ√æ```java√æ√æ/* Create instance of your API */√æIcecreamServiceApi client = ReactiveFeign√æ    .builder()√æ    .target(IcecreamServiceApi.class, ""http://www.icecreame.com"")√æ√æ/* Execute nonblocking requests */√æFlux<Flavor> flavors = icecreamApi.getAvailableFlavors();√æFlux<Mixin> mixins = icecreamApi.getAvailableMixins();√æ```√æ√æor cloud aware client :√æ√æ```java√æ IcecreamServiceApi client = CloudReactiveFeign.<IcecreamServiceApi>builder()√æ    .setFallback(new TestInterface() {√æ        @Override√æ        public Mono<String> get() {√æ            return Mono.just(""fallback"");√æ        }√æ    })√æ    .setLoadBalancerCommand(√æ         LoadBalancerCommand.builder()√æ                 .withLoadBalancer(AbstractLoadBalancer.class.cast(getNamedLoadBalancer(serviceName)))√æ                 .withRetryHandler(new DefaultLoadBalancerRetryHandler(1, 1, true))√æ                 .build()√æ    )√æ    .target(IcecreamServiceApi.class, ""http://"" + serviceName);√æ√æ/* Execute nonblocking requests */√æFlux<Flavor> flavors = icecreamApi.getAvailableFlavors();√æFlux<Mixin> mixins = icecreamApi.getAvailableMixins();√æ```√æ√æ## Rx2 Usage √æ√æWrite Feign API as usual, but every method of interface√æ - may accept `Flowable`, `Observable`, `Single` or `Maybe` as body√æ - must return `Flowable`, `Observable`, `Single` or `Maybe`.√æ√æ```java√æ@Headers({""Accept: application/json""})√æpublic interface IcecreamServiceApi {√æ√æ  @RequestLine(""GET /icecream/flavors"")√æ  Flowable<Flavor> getAvailableFlavors();√æ√æ  @RequestLine(""GET /icecream/mixins"")√æ  Observable<Mixin> getAvailableMixins();√æ√æ  @RequestLine(""POST /icecream/orders"")√æ  @Headers(""Content-Type: application/json"")√æ  Single<Bill> makeOrder(IceCreamOrder order);√æ√æ  @RequestLine(""GET /icecream/orders/{orderId}"")√æ  Maybe<IceCreamOrder> findOrder(@Param(""orderId"") int orderId);√æ√æ  @RequestLine(""POST /icecream/bills/pay"")√æ  @Headers(""Content-Type: application/json"")√æ  Single<Long> payBill(Bill bill);√æ```√æBuild the client :√æ√æ```java√æ√æ/* Create instance of your API */√æIcecreamServiceApi client = Rx2ReactiveFeign√æ    .builder()√æ    .target(IcecreamServiceApi.class, ""http://www.icecreame.com"")√æ√æ/* Execute nonblocking requests */√æFlowable<Flavor> flavors = icecreamApi.getAvailableFlavors();√æObservable<Mixin> mixins = icecreamApi.getAvailableMixins();√æ```√æ√æ## Maven√æ√æ```xml√æ<repositories>√æ    <repository>√æ        <id>bintray-kptfh-feign-reactive</id>√æ        <name>bintray</name>√æ        <url>https://dl.bintray.com/kptfh/feign-reactive</url>√æ    </repository>√æ</repositories>√æ...√æ<dependencies>√æ    ...√æ    √æ    <dependency>√æ        <groupId>io.github.reactivefeign</groupId>√æ        <artifactId>feign-reactor-cloud</artifactId>√æ        <version>1.0.0</version>√æ    </dependency>√æ    √æ    or if you don't need cloud specific functionality√æ    √æ    <dependency>√æ        <groupId>io.github.reactivefeign</groupId>√æ        <artifactId>feign-reactor-webclient</artifactId>√æ        <version>1.0.0</version>√æ    </dependency>√æ    √æ    or if you tend to use Rx2 interfaces√æ    √æ    <dependency>√æ            <groupId>io.github.reactivefeign</groupId>√æ            <artifactId>feign-reactor-rx2</artifactId>√æ            <version>1.0.0</version>√æ        </dependency>√æ    ...√æ</dependencies>√æ```√æ√æ## License√æ√æLibrary distributed under Apache License Version 2.0."
elascano/FarmSystem,9,0,1,8,User,False,Only the base classes,,,12,Java,"{'java': 7, '': 2, 'csv': 2, 'md': 1}",16,1,0,5,0,1092,True,0,0,0,0,2,0,0,0,7,0,0,0,0,0,0,0,11,,15,,
ralscha/extclassgenerator,818,14,4,8,User,False,Ext JS code generator. Creating model js classes from java classes,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 4, 'md': 1, 'cmd': 1, 'xml': 2}",231,1,12,1,3,2391,True,3,27,0,0,0,3,0,0,6,0,1,8,28,28,37,0,63,,190,,## Ext Class Generator √æ√æ![Build Status](https://github.com/ralscha/extclassgenerator/workflows/test/badge.svg)√æ√æ√æCode generator that creates Javascript classes for [Ext JS](http://www.sencha.com/products/extjs/) and [Sencha Touch](http://www.sencha.com/products/touch/) either dynamically at runtime √æor during build time with the help of an Annotation Processing Tool (APT) processor.√æ√æSee the [Wiki](https://github.com/ralscha/extclassgenerator/wiki) for more information.
openweb-nl/hippo-unit-tester,97,2,5,3,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 3, 'MD': 1, 'xml': 1}",63,1,8,1,0,1030,True,0,0,0,0,5,2,0,0,8,0,0,0,0,0,0,0,33,1,,,"# Hippo Unit Tester√æ√æHippo Unit Tester is a framework that tries to take advantage of JCR mocking solutions and Hippo Mock objects to setup a mock Hippo API.√æIt tries to be as realistic as possible while still be highly manipulatable.√æIn order to enable developers to focus on designing their unit tests scenarios instead of focusing on technical details mocking process.√æ√æ## Installation√æ√æ1. Add dependency to pom.xml√æ```xml√æ<dependencyManagement>√æ    <dependency>√æ        <groupId>nl.openweb.hippo</groupId>√æ        <artifactId>hippo-unit-tester</artifactId>√æ        <version>2.2.0</version>√æ        <scope>test</scope>√æ    </dependency>√æ    ...√æ</dependencyManagement>√æ```√æ√æ2. Add dependency to site pom.xml.√æ```xml√æ<dependency>√æ    <groupId>nl.openweb.hippo</groupId>√æ    <artifactId>hippo-unit-tester</artifactId>√æ</dependency>√æ```√æ√æ## Usage√æWithin the package there are classes to extend from:√æ√æ* BaseHippoTest√æ* SimpleHippoTest√æ√æ### Importer√æThe importer works with JSON or XML.√æIt will import the file at given location.√æ√æ#### XML√æ√æ```xml√æ<sv:node sv:name=""news1"">√æ    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">√æ        <sv:value>hippo:handle</sv:value>√æ    </sv:property>√æ    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"" sv:multiple=""true"">√æ        <sv:value>mix:referenceable</sv:value>√æ    </sv:property>√æ    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">√æ        <sv:value>3119bd98-9361-4b78-a81b-ad8228bc8bfb</sv:value>√æ    </sv:property>√æ    <sv:node sv:name=""news1"">√æ        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">√æ            <sv:value>ns:NewsPage</sv:value>√æ        </sv:property>√æ        ...√æ    </sv:node>√æ</sv:node>√æ```√æ√æ#### JSON√æ√æ```json√æ√æ```√æ√æ### Debug√æ√æ```java√æ/**√æ* prints out the whole JCR structure√æ*/√æprintNodeStructure();√æ√æ/**√æ* prints out the JCR structure from given path√æ*/√æprintNodeStructure(""/path"");√æ```√æ√æ√æ### Explain√æ√æ```java√æ/**√æ* When you want to create you own namespace√æ*/√æregisterNodeType(""ns:custom"");√æ```√æ√æ```java√æ/**√æ* eForms needs a Local to be set√æ*/√ærequest.setLocale(new Locale(""nl_NL""));√æ````√æ√æ```java√æ/**√æ * From the given file create a node containing the content of imported file√æ * Location should contain the path the node should be created not where you want to import the file√æ**/√æimporter.createNodesFromXml(getResourceAsStream(""/nl/openweb/hippo/demo/news.xml""), ""/content/documents/mychannel/news"", ""hippostd:folder"");√æ````√æ√æ### Demo√æ√æOne of the best ways to learn about how to use this library is by looking at an [example](https://github.com/openweb-nl/hippo-unit-tester/blob/master/src/test/java/nl/openweb/hippo/demo/EssentialsListComponentTest.java)"
cloudera/lucene-solr,380169,16,24,18,Organization,False,Mirror of Apache Lucene + Solr https://github.com/apache/lucene-solr,https://lucene.apache.org/,,10,Java,"{'': 2, 'txt': 1, 'xml': 3}",9429,103,104,26,0,3750,True,3,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,115,26,,,
filestack/filestack-java,2154,8,3,7,Organization,False,Official Java SDK for Filestack - API and content management system that makes it easy to add powerful file uploading and transformation capabilities to any web or mobile application.,https://filestack.com,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",16,Java,"{'': 4, 'yml': 1, 'md': 3, 'gradle': 1, 'bat': 1, 'svg': 1}",530,3,10,2,6,1112,True,2,11,0,0,0,70,0,0,7,0,0,0,0,0,0,0,28,8,,,"<p align=""center""><img src=""logo.svg"" align=""center"" width=""100""/></p>√æ<h1 align=""center"">Filestack Java SDK</h1>√æ√æ<p align=""center"">√æ  <a href=""https://bintray.com/filestack/maven/filestack-java"">√æ    <img src=""https://img.shields.io/badge/bintray-v0.8.0-blue.svg?longCache=true&style=flat-square"">√æ  </a>√æ  <a href=""https://filestack.github.io/filestack-java/"">√æ    <img src=""https://img.shields.io/badge/ref-javadoc-795548.svg?longCache=true&style=flat-square"">√æ  </a>√æ  <img src=""https://img.shields.io/badge/java_version-7-green.svg?longCache=true&style=flat-square"">√æ  <a href=""https://travis-ci.org/filestack/filestack-java"">√æ    <img src=""https://img.shields.io/travis/filestack/filestack-java.svg?style=flat-square"">√æ  </a>√æ  <a href=""https://coveralls.io/github/filestack/filestack-java"">√æ    <img src=""https://img.shields.io/coveralls/filestack/filestack-java.svg?style=flat-square"">√æ  </a>√æ</p>√æ√æ<p align=""center"">√æ  Java SDK for Filestack. Includes wrappers for Core, Upload, Transformation, and Cloud APIs. Supports Amazon Drive, Box, Dropbox, Facebook, GitHub, Gmail, Google Drive, Google Photos, Instagram, and OneDrive.√æ</p>√æ√æ## Install√æ```√æimplementation 'com.filestack:filestack-java:0.9.0'√æ```√æ√æ## Upload√æ```java√æ// Create a client√æConfig config = new Config(""API_KEY"");√æClient client = new Client(config);√æ√æ// Set options and metadata for upload√æStorageOptions options = new StorageOptions.Builder()√æ    .mimeType(""text/plain"")√æ    .filename(""hello.txt"")√æ    .build();√æ√æ// Perform a synchronous, blocking upload√æFileLink file = client.upload(""/path/to/file"", false);√æ√æ// Perform an asynchronous, non-blocking upload√æFlowable<Progress<FileLink>> upload = client.uploadAsync(""/path/to/file"", false);√æupload.doOnNext(new Consumer<Progress<FileLink>>() {√æ  @Override√æ  public void accept(Progress<FileLink> progress) throws Exception {√æ    System.out.printf(""%f%% uploaded\n"", progress.getPercent());√æ    if (progress.getData() != null) {√æ      FileLink file = progress.getData();√æ    }√æ  }√æ});√æ```√æ√æ## Asynchronous Functions√æEvery function that makes a network call has both a synchronous (blocking) and asynchronous (non-blocking) version. The asynchronous versions return [RxJava][rxjava-repo] classes (Observable, Single, Completable).√æ√æFor example to delete a file both synchronously and asynchronously:√æ```java√æ// Synchronous, blocking√æfileLink.delete();√æ√æ// Asynchronous, not blocking√æfileLink.deleteAsync().doOnComplete(new Action() {√æ  @Override√æ  public void run() throws Exception {√æ    System.out.println(""File deleted."");√æ  }√æ});√æ```√æ√æ## FileLink Operations√æ```√æString handle = fileLink.getHandle(); // A handle is a file ID√æfileLink.download(""/path/to/save/file"");√æfileLink.delete();√æfileLink.overwrite(""/path/to/new/file"");√æ```√æ√æ## Transformations√æThe transform functions generate URLs for backend transformations; No local processing occurs. With the exception of video transformations, front-end clients can directly use the generated URLS.√æ√æFor example, to reduce image bandwidth usage, generate resize transform URLs based on display size:√æ```java√æResizeTask task = new ResizeTask.Builder()√æ    .width(100)√æ    .fit(""center"")√æ    .build();√æImageTransform transform = fileLink.imageTransform().addTask(task);√æString url = transform.url();√æ```√æ√æ## Cloud Transfers√æ√æ```java√æ// Check a user's auth status by first trying to list contents of drive√æCloudResponse response = client.getCloudItems(Sources.GOOGLE_DRIVE, ""/"");√æString authUrl = response.getAuthUrl();√æ// If auth URL isn't null, user needs to authenticate, open URL in browser√æif (authUrl != null) {√æ    openBrowser(authUrl);√æ    return;√æ}√æ√æ// Transfer the first file from the cloud provider to Filestack√æCloudItem first = response.getItems()[0];√æclient.storeCloudItem(Sources.GOOGLE_DRIVE, first.getPath());√æ√æ// Check for another page of results√æString nextToken = response.getNextToken();√æ// If next token isn't null, there's more items to fetch√æif (nextToken != null) {√æ  response = client.getCloudItems(Sources.GOOGLE_DRIVE, ""/"", nextToken);√æ}√æ√æ// Save the session token√æString sessionToken = client.getSessionToken();√æsaveSessionToken(sessionToken);√æ```√æ√æ## Cloud Auth States√æThere are 3 levels of state to note with cloud integrations: 1) the local state (stored by a session token) 2) the authorization state between the user's cloud account and Filestack (on the backend) and 3) (potentially) the login state within the browser where users complete the OAuth login.√æ√æA session token determines the auth state between an app and Filestack. Every response includes a refreshed token, and every request should send the last token received. Tokens do not just identify a session, they hold the session state. For example if a user logs out of a cloud, only the token returned by the logout response reflects that action; Using the old token would still allow listing the contents of the logged out cloud. To maintain state across client destruction, export and save the token.√æ√æThe auth state in the local session does not connect to the authorization state between a cloud account and Filestack. For example a user can log out of an account in a local session, but still see Filestack as authorized in the cloud provider's settings. A user must revoke access to Filestack within a provider to truly disconnect Filestack.√æ√æUsers complete the OAuth flow (aka login to their clouds) in a browser, and the browser state can cause confusion. For example if a user logs into a cloud they previously logged out of, the OAuth flow may work differently because they've already logged in within the browser, and have already authorized Filestack to that cloud.√æ√æ## Running Tests and Linting√æTo run tests:√æ```shell√æ./gradlew test√æ```√æ√æThe project also has Checkstyle setup for code linting. The config is at `config/checkstyle/checkstyle.xml`. To run:√æ```shell√æ./gradlew check # Runs linter and unit tests√æ```√æ√æ## Proguard√æIf you are using Proguard, please include entries from [this file](src/main/resources/META-INF/proguard/filestack.pro) in your Proguard configuration file.√æ√æPlease note, that those rules will probably decrease in size as we proceed with getting rid of most of external dependencies.√æ√æ## Deployment√æ_This is for Filestack devs._ Deployments are made to Bintray. You must have an account that's been added to the Filestack organization to deploy. Also make sure to follow general Filestack release guidelines. ""BINTRAY_USER"" and ""BINTRAY_API_KEY"" environment variables are required. To run:√æ√æ```shell√æexport BINTRAY_USER=''√æexport BINTRAY_API_KEY=''√æ./gradlew bintrayUpload√æ```√æ√æ[rxjava-repo]: https://github.com/ReactiveX/RxJava"
Turksat/ESign,4326,16,13,9,Organization,False,Electronic Signature (Elektronik ƒ∞mza),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 2, 'md': 1, 'xml': 1}",17,1,1,4,0,1949,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,5,3,,,"# ESign√æ√æ## Definition√æ√æESign is an open source electronic signature application which consists of ESignCore, ESignUI and ESignWebApp applications.√æ√æ1. ESignCore: Includes core functionalities.√æ2. ESignUI: Includes almost complete sample UI for testing core functionalities. Includes desktop and web UI:√æ    1. Desktop: JFrame is used as a main container. Application runs inside frame and pages are separated by panels.√æ    2. Web: JApplet is used as a main panel. Applet can be embedded into JFrame for testing or it can be embedded into jsp file inside ESignWebApp to run.√æ3. ESignWebApp: Sample web application to use as a container for applet.√æ√æ## Jar Signing√æ√æTo run application using JFrame no need to sign application. In pom.xml by default build configuration for sign operation is added. If a valid trusted certificate is not provided, it will prevent application to be built. One can comment out those fields to successfully built and run application.√æ√æIf applet will be used it has to be signed by trusted certificate. Its forced by browsers. Some other ways could be found to bypass this for testing(google it). Signing is done in 3 steps:√æ√æ1. Define manifest file.√æ2. One jar all jar files.√æ3. Sign with trusted key.√æ√æTo achieve these below code is added to pom.xml in ESignUI application:√æ√æ```xml√æ<build>√æ    <plugins>√æ        <!--Set manifest file-->√æ        <plugin>√æ            <groupId>org.apache.maven.plugins</groupId>√æ            <artifactId>maven-jar-plugin</artifactId>√æ            <version>2.5</version>√æ            <configuration>√æ                <archive>√æ                    <addMavenDescriptor>false</addMavenDescriptor>√æ                    <manifest>√æ                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>√æ                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>√æ                    </manifest>√æ                    <!--Add manifest properties-->√æ                    <manifestEntries>√æ                        <Permissions>all-permissions</Permissions>√æ                        <Trusted-Library>true</Trusted-Library>√æ                    </manifestEntries>√æ                </archive>√æ            </configuration>√æ        </plugin>√æ        <!--Set manifest file ends-->√æ        <!--one jar plugin-->√æ        <plugin>√æ            <groupId>org.apache.maven.plugins</groupId>√æ            <artifactId>maven-shade-plugin</artifactId>√æ            <version>2.3</version>√æ            <configuration>√æ                <filters>√æ                    <filter>√æ                        <artifact>*:*</artifact>√æ                        <!--Remove uncessary files which prevents application to be signed-->√æ                        <excludes>√æ                            <exclude>META-INF/*.SF</exclude>√æ                            <exclude>META-INF/*.DSA</exclude>√æ                            <exclude>META-INF/*.RSA</exclude>√æ                        </excludes>√æ                    </filter>√æ                </filters>√æ            </configuration>√æ            <executions>√æ                <execution>√æ                    <phase>package</phase>√æ                    <goals>√æ                        <goal>shade</goal>√æ                    </goals>√æ                </execution>√æ            </executions>√æ        </plugin>√æ        <!--one jar plugin ends-->√æ        <!--Sign application with trusted key-->√æ        <plugin>√æ            <groupId>org.apache.maven.plugins</groupId>√æ            <artifactId>maven-jarsigner-plugin</artifactId>√æ            <version>1.3.2</version>√æ            <executions>√æ                <execution>√æ                    <id>sign</id>√æ                    <goals>√æ                        <goal>sign</goal>√æ                    </goals>√æ                </execution>√æ            </executions>√æ            <configuration>√æ                <keystore>${keystore}</keystore>√æ                <storetype>${storetype}</storetype>√æ                <alias>${alias}</alias>√æ                <storepass>${storepass}</storepass>√æ            </configuration>√æ        </plugin>√æ        <!--Sign application with trusted key ends-->√æ    </plugins>√æ</build>√æ```√æ√æ### Settings File√æ√æTo sign application keystore information is need to be provided in pom.xml. Since its not suitable to distribute this data along with code, settings file can be used. Settings file is used to create maven specific environment variables. Later on data can be reached using ${...}.√æ√æ#### Example:√æ√æpom.xml√æ√æ```xml√æ...√æ<configuration>√æ<keystore>${keystore}</keystore>√æ             <storetype>${storetype}</storetype>√æ             <alias>${alias}</alias>√æ            <storepass>${storepass}</storepass>√æ</configuration>√æ...√æ```√æ√æsettings.xml√æ√æ```xml√æ<?xml version=""1.0"" encoding=""UTF-8""?>√æ<!--√æ    User-specific configuration for maven. Includes things that should not √æ    be distributed with the pom.xml file, such as developer identity, along with √æ    local settings, like proxy information. The default location for the√æ    settings file is ~/.m2/settings.xml √æ-->√æ<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""√æ          xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"">√æ    <profiles>√æ        <profile>√æ            <id>signer</id>√æ            <properties>√æ                <keystore>/user/home/../../code-signer.pfx</keystore>√æ                <storetype>pkcs12</storetype>√æ                <alias>myalias</alias>√æ                <storepass>storepassword </storepass>√æ            </properties>√æ        </profile>√æ    </profiles>√æ<!‚ÄîDefines which profiles shall be active and reachable--‚Üí√æ    <activeProfiles>√æ        <activeProfile>signer</activeProfile>√æ    </activeProfiles>√æ</settings>√æ```√æ√æ## E-SignUI Basic Steps√æ√æ1. Check if library pkcs11wrapper is installed.√æ2. List modules.√æ    1. Select module.√æ3. Read certificate.√æ  1. Show certificate details.√æ  2. Show user agreement.√æ  3. Accept user agreement.√æ4. Let user enter pin code.√æ  1. Check pin code.√æ  2. Sign user agreement.√æ5. Show last page.√æ  1. Let user download signed user agreement or login.√æ√æ## Run√æ√æBefore building project. Keystore information is need to be defined or build configuration should be removed from pom.xml of ESignUI application. Otherwise project cannot be build.√æ√æ1. Build all projects.√æ2. Run ESignUI StartFrame.class to test whether build done successfully or not."
AOSiP/platform_packages_services_Telephony,97887,1,2,7,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",17,Java,"{'mk': 2, 'xml': 3, '': 3, 'cfg': 1, 'flags': 1}",15171,9,0,77,0,2559,True,0,0,0,0,0,0,0,0,7,0,3,3,32,71,0,0,204,2,,,
Alfresco/rest-api-explorer,1077,26,65,16,Organization,False,Public REST API Explorer,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 3, 'md': 1, 'xml': 1, 'sh': 1}",800,32,49,29,0,1598,True,1,2,0,0,5,90,2,19,15,0,8,19,762,605,0,0,217,5,,,"# Welcome to the Alfresco REST API Explorer√æ√æThe API Explorer allows you to browse and experiment with the REST APIs available in the Alfresco platform.√æ√æ#### Building and deploying the war√æ- `mvn install`√æ√æYou now have a `target/api-explorer.war`, drop this into your Application server that is running alfresco.war√æ√æ√æ#### For development only√æYou can run the project as a packaged web application using an embedded Tomcat server.  √æThis is useful for changing documentation and endpoint descriptions but it means that the ""Try it Out!"" button will not work.√æ√æ- `mvn tomcat7:run-war-only`√æ√æNow the application is running at [http://localhost:8085/api-explorer](http://localhost:8085/api-explorer/)√æ√æ### License√æCopyright (C) 2016 Alfresco Software Limited√æ√æThis file is part of an unsupported extension to Alfresco.√æ√æAlfresco Software Limited licenses this file√æto you under the Apache License, Version 2.0 (the√æ""License""); you may not use this file except in compliance√æwith the License.  You may obtain a copy of the License at√æ√æ http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing,√æsoftware distributed under the License is distributed on an√æ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY√æKIND, either express or implied.  See the License for the√æspecific language governing permissions and limitations√æunder the License."
cropgeeks/flapjack,53885,4,3,5,Organization,False,Flapjack,https://ics.hutton.ac.uk/flapjack,"{'key': 'bsd-2-clause', 'name': 'BSD 2-Clause ""Simplified"" License', 'spdx_id': 'BSD-2-Clause', 'url': 'https://api.github.com/licenses/bsd-2-clause', 'node_id': 'MDc6TGljZW5zZTQ='}",12,Java,"{'': 1, 'md': 1, 'template': 1, 'xml': 1}",1582,6,40,6,0,4603,True,12,9,0,2,0,8,0,0,9,0,2,76,5693,2760,0,0,18,2,,,"# Flapjack√æ√æFlapjack is a multi-platform application providing interactive visualizations of high-throughput genotype data, allowing for rapid navigation and comparisons between lines, markers and chromosomes.√æ√æ![](https://ics.hutton.ac.uk/resources/flapjack/flapjack.png ""Flapjack"")√æ√æ### Get Flapjack√æ√æFor more information on Flapjack, please visit https://ics.hutton.ac.uk/flapjack where various binaries for multiple operating systems are available for download.√æ√æ### Flapjack Help√æ√æFor help with Flapjack, including tutorials on some of its more advanced features, please visit http://flapjack.readthedocs.io/en/latest/.√æ√æ### Open Source Sponsors√æ√æThe following companies have very kindly provided open source licences for their products to assist in the development of Flapjack:√æ√æhttps://www.ej-technologies.com/products/install4j/overview.html√æ√æ![](https://ics.hutton.ac.uk/resources/flapjack/ejtechnologies.png ""ejtechnologies"")√æ√æhttps://lokalise.co/√æ√æ![](https://ics.hutton.ac.uk/resources/flapjack/lokalise.png ""lokalise"")"
apache/servicemix3,21493,2,5,5,Organization,False,Mirror of Apache Servicemix 3,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'': 6, 'xml': 1}",2968,16,15,12,7,,False,,,,,2,0,0,0,1,0,0,0,0,0,2,0,2,869,,,
contactlab/contacthub-sdk-java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
austriapro/ebinterface-rendering,843,1,9,1,Organization,False,Repository for ebInterface rendering logic such as PDF generation,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",9,Java,"{'': 2, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 2}",68,1,1,3,0,1890,True,0,0,0,0,0,1,0,0,7,0,1,2,7,7,2,0,13,0,,,"![ebInterface Logo](https://github.com/pliegl/ebinterface/blob/master/site/images/logo.jpg?raw=true ""ebInterface e-Invoice standard"")√æ√æ# ebInterface Rendering√æ√æThe goal of ebInterface rendering is to provide an API, allowing to transform a given ebInterface XML representation to a PDF document.√æ√æUsing [ebInterface Web](https://github.com/austriapro/ebinterface-web) a user may easily upload a given ebInterface XML instance and transform it to a downloadable PDF document.√æ√æ## Code style√æ√æFor this project the Google code style is used. Please [download the code style file](https://code.google.com/p/google-styleguide/source/browse/trunk/intellij-java-google-style.xml) and set it in your IDE, before you commit to the repository. √æ√æ:green_heart: Pull requests are greatly appreciated and welcomed."
ist-dsi/fenixedu-id-cards,10589,1,9,11,Organization,False,,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",6,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",362,2,42,12,0,2314,False,,,,,0,81,0,3,7,0,2,9,258,162,0,0,69,8,,,"# Identification Cards√æ√æIf there are some errors while `mvn clean install`, dependencies for frontend are described [here](src/main/frontend/README.md)"
choelea/dubboot-example,66,14,2,11,User,False,Êé¢Á¥¢dubbo Âíå spring boot ÁöÑÁªìÂêà,,,10,Java,"{'': 1, 'md': 1, 'xml': 1}",7,1,0,1,0,916,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,58,,7,,"---√ætitle: Dubbo + Spring Boot ÂÆûÁé∞ÂæÆÊúçÂä°Ê≤ªÁêÜ√ædescription: ÈÄöËøáDubbo ÁªìÂêà Spring Boot Êé¢Á¥¢ÂæÆÊúçÂä°ÁöÑÊ≤ªÁêÜ√æ---√æDubbo ÊòØÂõΩÂÜÖÈòøÈáåÁ≥ªÁöÑ‰∏Ä‰∏™ÂºÄÊ∫êÊ°ÜÊû∂ÔºåÊèê‰æõÂü∫‰∫éRPCÁöÑÂæÆÊúçÂä°ÁöÑÊ≤ªÁêÜÊ°ÜÊû∂„ÄÇÊú¨Êñá‰∏ªË¶ÅÊé¢Á¥¢dubbo Âíå spring boot ÁöÑÁªìÂêà, ÈááÁî®https://github.com/dubbo/dubbo-spring-boot-project Êù•ÂÆûÁé∞dubboÂíåspring bootÁöÑÁªìÂêà„ÄÇÔºàÊñ∞ÁöÑSpring Boot StartË≤å‰ººËøòÂú®Á†îÂèë‰∏≠„ÄÇÔºâ√æ‰∏ªË¶ÅÊé¢Á¥¢ÂíåÂÆûÁé∞Â¶Ç‰∏ãÂá†È°πÔºö√æ 1. ÊúçÂä°Ê≥®ÂÜå‰∏éÂèëÁé∞√æ 2. ÊúçÂä°Êèê‰æõÊñπÂíåÊ∂àË¥πÊñπËøûÈÄö√æ 3. ÊúçÂä°ÁÆ°ÁêÜ‰∏éÁõëÊéß Ôºàdubbo-admin  dubbo-monitorÔºâ√æ 4. Ë¥üËΩΩÂùáË°°√æ 4. Ë∑®ÊúçÂä°Êó•ÂøóËøΩË∏™ ÔºàtraceIdÁöÑÂÆûÁé∞Ôºâ√æ 5. RPC Ë∞ÉÁî®ÁöÑÂºÇÂ∏∏Â§ÑÁêÜ√æ√æ## Á§∫‰æã‰ª£Á†Å√æhttps://github.com/choelea/dubboot-example√æ√æ## Êû∂ÊûÑÂõæ√æ![](http://tech.jiu-shu.com/Micro-Services/duboo.png)√æÂàÜ‰∏§‰∏™ÊúçÂä°Êèê‰æõÊñπÔºöproductÂíåpromotionÔºå‰∏Ä‰∏™Ê∂àË¥πÊñπweb demo„ÄÇwebÂØπÂ§ñÊèê‰æõrestfulÁöÑÊúçÂä°ÔºåÂÜÖÈÉ®ÈááÁî®rpcÂçèËÆÆ„ÄÇ√æ> ËøôÈáåproductÊúçÂä°ÁöÑÊ®°ÂûãÂà©Áî®‰∫Ü[MongoDB vs Mysql ÊµãËØï](http://tech.jiu-shu.com/Database-Technologies/Mongodb-vs-Mysql-basic) ÁöÑÊ®°Âûã,‰ª£Á†ÅÂíåÊï∞ÊçÆÂ∫ì„ÄÇ√æ## È°πÁõÆÁªìÊûÑ‰ªãÁªç√æ![Dubbo-Spring-Boot-Maven](http://tech.jiu-shu.com/Micro-Services/duboo-projects.png)√æ## ÊúçÂä°Ê≥®ÂÜå√æÊ≥®ÂÜåÈááÁî®Êé®ËçêÁöÑzookeeperÔºåÂÖ∑‰ΩìÂÆâË£Ö‰∏çÂú®ËøôÈáåËµòËø∞„ÄÇ√æÊúçÂä°Ê≥®ÂÜåÂíåÁõëÊéßËøôÈáåÊ≤°ÊúâËØ¶ÁªÜ‰ªãÁªçÔºåÈúÄË¶ÅÊ†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ‰ª•‰∏ãÈÖçÁΩÆÔºö√æ√æ```√æspring.dubbo.registry.address=zookeeper://192.168.1.99:2181√æspring.dubbo.monitor.address=192.168.1.99:7070√æ```√æ√æ## ÊúçÂä°ÁÆ°ÁêÜÂíåÁõëÊéß√æcheckout dubboÂ∑•Á®ãÁöÑÊúÄÊñ∞ÁöÑrelease ‰ª£Á†ÅÔºåÂèÇËÄÉÂºÄÂèëÊâãÂÜåhttp://dubbo.io/books/dubbo-dev-book/ ÊûÑÂª∫„ÄÇÊûÑÂª∫ÂÆåÊàêÂêéÔºåÂàÜÂà´Âú®dubbo-simple\dubbo-monitor-simple Âíå dubbo-adminÂ∑•Á®ãÈáåÊâæÂà∞Áõ∏Â∫îÁöÑdubbo-monitor-simple-2.5.8-assembly.tar.gzÂíådubbo-admin-2.5.8.war„ÄÇ ÂèÇËÄÉhttp://dubbo.io/books/dubbo-admin-book/ ËøõË°åÈÉ®ÁΩ≤„ÄÇ√æ## Ë∑®ÊúçÂä°Êó•ÂøóËøΩË∏™√æ### Êâ©Â±ïË∞ÉÁî®Êã¶Êà™√æÈÄöËøáËá™ÂÆö‰πâË∞ÉÁî®Êã¶Êà™ÔºåÂ∞ÜtraceIdÈÄè‰º†ÁªôÊúçÂä°Êèê‰æõÊñπ„ÄÇ√æ> ËøôÈáåÂè™Êé¢Á¥¢ÔºåÊâÄ‰ª•Âè™Áî®‰∫Ü‰∏Ä‰∏™filterÊù•‰æõÊúçÂä°ÊñπÂíåÊ∂àË¥πÊñπÁî®ÔºåÂÆûÈôÖ‰∏≠ÂèØËÉΩÂàÜÂºÄ‰∏™filterÊõ¥ÂêàÈÄÇ„ÄÇ√æ√æÂèÇËÄÉdubboÂºÄÂèëÊâãÂÜåÁöÑSPIÁöÑË∞ÉÁî®Êã¶Êà™Êâ©Â±ïÔºåËá™ÂÆö‰πâfilterÊù•Êù•ÂÆåÊàêtraceidÁöÑÈÄè‰º†„ÄÇÔºàÂèÇËÄÉÔºöhttp://blog.csdn.net/coolsky600/article/details/63684046Ôºâ√æÊâ©Â±ïÈúÄË¶ÅÊ≥®ÊÑè‰∏Ä‰∏ãÔºö√æ√æ - META-INF/dubbo/com.alibaba.dubbo.rpc.Filter‰∏≠Ê∑ªÂä†Ôºö`xxx=com.xxx.XxxFilter`√æ - serviceÁöÑÁî≥ÊòéÂá∫ËÆæÁΩÆfilter `@Service(version = ""1.0.0"", filter=""traceIdFilter"")`√æ√æÂÖ∑‰ΩìÂÆûÁé∞ËØ∑ÂèÇËÄÉdubboot-trace-log.√æ### Â¢ûÂº∫Êó•ÂøóÂäüËÉΩËÆ©Êó•ÂøóÂèØ‰ª•ÊâìÂç∞traceId√æÂèÇËÄÉÊñáÁ´†Ôºöhttps://moelholm.com/2016/08/16/spring-boot-enhance-your-logging/√ætraceIdÁöÑÂèëËµ∑‰ΩçÁΩÆÊòØ‰ªéweb-demo Êé•ÂèóÂà∞ËØ∑Ê±ÇÂºÄÂßã„ÄÇ ÂÖ∑‰ΩìÂèÇËÄÉÔºöcom.dubboot.webdemo.web.filter.TraceLoggingFilter„ÄÇ√æ### ÊµãËØïÈ™åËØÅ√æ‰æùÊ¨°ÂêØÂä®productÔºåpromotionÂíåweb-demoÊúçÂä°ÔºåÁÑ∂ÂêéËÆøÈóÆhttp://localhost:8080/product/pp-0 ËßÇÂØüÂêéÈù¢ÁöÑÊó•ÂøóÊÉÖÂÜµ„ÄÇÔºàzookeeperÈúÄË¶ÅÊèêÂâçÂêØÂä®Â•Ω‰øùÊåÅËøêË°åÁä∂ÊÄÅÔºâ√æ### Ë¥üËΩΩÂùáË°°ÊµãËØï√æ‰øÆÊîπÁ´ØÂè£ÔºåÂêØÂä®Â§ö‰∏™promotionÊúçÂä°ÔºåÊü•ÁúãÊó•ÂøóÊù•È™åËØÅÈöèÊú∫ÁÆóÊ≥ïÁöÑË¥üËΩΩÂùáË°°„ÄÇ√æ> Áîü‰∫ßÁéØÂ¢ÉÔºåÂú®Âêå‰∏Ä‰∏™ÂÆπÂô®‰∏≠ËøêË°åÂêå‰∏Ä‰∏™ÊúçÂä°ÁöÑÂ§ö‰∏™ÂÆû‰æãÂπ∂‰∏çÊòØÊúÄ‰Ω≥ÂÆûË∑µ„ÄÇ‰∏∫‰∫ÜÂÖÖÂàÜÂà©Áî®Á≥ªÁªüÁöÑËµÑÊ∫êÔºåÂèØ‰ª•ÈÄâÊã©ÂêØÂä®Â§öÁßçÊúçÂä°ÁöÑÂÆû‰æãÔºå‰∏çÂêåÊúçÂä°ÁöÑÂÆû‰æãÂàÜÂ∏ÉÂú®‰∏çÂêåÁöÑÂÆπÂô®/Êú∫Âô®‰∏ä„ÄÇ Âêå‰∏Ä‰∏™ÊúçÂä°ÁöÑÁ´ØÂè£‰∏çÂèòÔºåIPÂú∞ÂùÄÊàñËÄÖhostname‰ºö‰∏çÂêå„ÄÇ"
OpenGGEngine/OpenGG-Project,398251,7,3,2,Organization,False,The Official OpenGG Project!,http://openggengine.github.io/OpenGG-Project/,"{'key': 'wtfpl', 'name': 'Do What The F*ck You Want To Public License', 'spdx_id': 'WTFPL', 'url': 'https://api.github.com/licenses/wtfpl', 'node_id': 'MDc6TGljZW5zZTE4'}",12,Java,"{'': 2, 'md': 1, 'gradle': 2, 'exe': 1, 'properties': 1, 'bat': 1, 'txt': 1}",947,5,6,3,11,1746,True,25,36,0,0,0,31,0,0,7,0,2,17,9356,5112,0,0,20,0,,," √æHappy New Year 2017√æ√æNew Features will be coming to an OpenGG release near you.√æ√æ OBJLoader2 One Year Anniversary√æ___________________________________________________________________________√æOne year ago OBJLoader2 was released to the world in all its glory and forever changed the √æthe way people designed model loaders. With innovative methods like FastInt and unique uses of √æinterfaces, this loader was really in a tier by itself. While originally shunned by disgruntled √ædevelopers like javster101 who said quotes like ""What  is IMTLLimitingScanner"" and ""How the√æhell ddo you not know how to use the thing you commited"", OBJLoader2 is now viewed as the forefather √æof OpenGG model loading and ushered the additions of DrawnObjectGroup and MatDrawnObject. So on this√æday we celebrate the ""commitment"" of the developers who work on Opengg and the damn pull problems that√æhappened on this fine day.√æ√æOpenGG engine is a world class engine designed for efficiancy and performance.√æBecause of this, we have decided to use Java as a language of choice. This engine √ætechnical achievements are unparrelled and are best expierianced if viewed in 1970.√æWe are already are better than Bethasda's GameByro and creation engines in terms of √æperformance. Our framerates are comparable to the Witcher 2 on ubersampling mode.√æ√æGraveyard: entities, OBJLoader2, OBJLoader 1, OBJLoader 3, GlobalUtil, GlobalInfo"
orbisgis/orbisdata,1936,1,5,3,Organization,False,Providing a common access point to data,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",9,Java,"{'': 1, 'yml': 2, 'md': 1, 'xml': 1}",742,5,1,3,0,1154,True,13,74,5,12,0,184,0,53,16,1,0,0,0,0,0,0,45,1,,,
seedstack/seed,8658,23,14,21,Organization,False,"The foundation of SeedStack, providing integration of carefully selected technologies to build applications or cloud services.",http://seedstack.org/docs,"{'key': 'mpl-2.0', 'name': 'Mozilla Public License 2.0', 'spdx_id': 'MPL-2.0', 'url': 'https://api.github.com/licenses/mpl-2.0', 'node_id': 'MDc6TGljZW5zZTE0'}",16,Java,"{'': 4, 'yml': 1, 'md': 2, 'xml': 2}",654,3,39,7,5,1923,True,15,107,2,0,1,151,0,0,10,2,1,11,1644,1192,0,0,71,9,,,"# SeedStack Java Framework√æ√æ[![Build status](https://travis-ci.org/seedstack/seed.svg?branch=master)](https://travis-ci.org/seedstack/seed) [![Coverage Status](https://coveralls.io/repos/seedstack/seed/badge.svg?branch=master)](https://coveralls.io/r/seedstack/seed?branch=master) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.seedstack.seed/seed/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/org.seedstack.seed/seed)√æ√æAlso known as Seed, the Java framework provides support for a large range of technologies and standards from the Java world.√æ√æ# Copyright and license√æ√æThis source code is copyrighted by [The SeedStack Authors](https://github.com/seedstack/seedstack/blob/master/AUTHORS) and√æreleased under the terms of the [Mozilla Public License 2.0](https://www.mozilla.org/MPL/2.0/). "
palantir/sls-packaging,7403,35,86,72,Organization,False,A set of Gradle plugins for creating SLS-compatible packages,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",21,Shell,"{'yml': 4, '': 3, 'gradle': 2, 'properties': 1, 'bat': 1, 'md': 1, 'lock': 1, 'props': 1}",830,6,152,57,1,1731,True,46,77,3,0,3,814,3,212,15,0,9,194,3236,2670,0,0,191,31,,,
GraphicalUserInterface/DesignPattern,31,0,0,1,Organization,False,Session2 to design the GUI,,,3,Java,{'md': 1},10,5,12,1,0,595,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,2,0,,,# DesignPattern√æSession 2 to design the GUI√æGroup 2√æ1.Zhiheng Wu√æ2.Ge Qiu√æ3.Shuyu Chen√æ√æWe finish the basic function of updating and showing the properties of items simply using the action of button.√æNext we can continue to make it more clear like showing the SellIn and Quality by the mouse click on the choosing Item.
jdi-testing/jdi-light,30631,42,22,22,Organization,False,Powerful Framework for UI Automation Testing on Java,https://jdi-docs.github.io/jdi-light/,,24,Java,"{'': 1, 'yml': 1, 'md': 2, 'bat': 1, 'xml': 1, 'sh': 1}",1061,108,9,37,13,817,True,175,724,128,148,6,1203,6,227,63,0,18,283,77060,76645,4,0,15,1,,,"[![Codacy Badge](https://api.codacy.com/project/badge/Grade/49c13734696f4baaacc3dde33926b6a1)](https://www.codacy.com/app/jdi-testing/jdi-light?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=jdi-testing/jdi-light&amp;utm_campaign=Badge_Grade)√æ√æ# JDI Light Test Automation Framework√æ√æ[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://mit-license.org/)√æ[![stackoverflow](https://img.shields.io/badge/stackoverflow-jdi-blue.svg?style=flat)](http://stackoverflow.com/questions/tagged/jdi)√æ[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjdi-testing%2Fjdi-light.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjdi-testing%2Fjdi-light?ref=badge_shield)√æ√æ## Documentation√æFor fast start you can go through [tutorial](https://jdi-docs.github.io/jdi-light/?java#tutorial) </br>√æ√æMore links: </br>√æDocumentation: https://jdi-docs.github.io/jdi-light/?java - different types of documentation from introduction and tutorial to technical methods documentation </br>√æIntroduction + fast start example: https://jdi-docs.github.io/jdi-light/?java#introduction </br>√æTutorial: https://jdi-docs.github.io/jdi-light/?java#tutorial - helps to get main ideas on practice </br>√æTutorial repo:  https://github.com/jdi-tutorials </br>√æProject templates: https://github.com/jdi-templates - for fast projects start </br>√æExamples: https://github.com/jdi-examples </br>√æHow to use [UI Elements examples](https://github.com/jdi-testing/jdi-light/tree/master/jdi-light-html-tests/src/test/java/io/github/epam/html/tests/elements) </br>√æIncrease test [performance examples](https://github.com/jdi-testing/jdi-light/tree/master/jdi-performance) </br>√æ </br>√æ**Note: JDI Light natively work with JDK 8. Some problems identified with JDK 12 so it is not recommended** </br>√æ√æ## Introduction√æ√æJDI ‚Äì is the test Framework for UI test automation that helps to makes your tests fast and sustainable and provide obvious and predictable test run result√æ√æ## Highlights√æ- Has simple integration with any Selenium based project that allows to increase projects stability, add user actions logs and enrich standard WebElements capabilities with new features in minutes (TBD add Guide)√æ- Extends Page Objects pattern with powerful UI Elements: Buttons, TextFields, Forms, Tables etc ( TBD add good links to examples)√æ- Write stable and predictable tests that fail only because of changing business logic or layout. No more waits, thread sleep and other flaky staff√æ- Increase your tests execution speed in general and especially for complex cases like search in big tables, dropdowns with hundreds elements or enter text with thousand lines√æ- Get detailed logs and good reports of all user actions with no effort√æ- Easy integration with all modern Automation tools: CI (Jenkins, TC etc.), Logging (Log4j or any other slf4j based logs), Reporting (Allure or Report Portal); Browser/Devices farms (Selenium Grid, Browser Stack, Selenoid etc.), Test Runners (TestNG, JUnit) etc.√æ√æ## Our plans√æ### Ultimate Goal√æDevelop an automation framework based on AI that can identify and write correct stable PageObject automatically without engineers effort, generate smoke tests for application in seconds and some negative cases too. √æRun test execution automatically and correct tests if any changes in layout happens provide good reports for test project team and recommendations how Project can be improved√æ### Nearest plans√æ[Features](https://github.com/jdi-testing/jdi-light/labels/feature)√æ√æ## Useful Links√æTest site: https://jdi-testing.github.io/jdi-light/√æ√æLogin to get access to all pages (Login: Roman; Password: Jdi1234)√æ√æHtml Elements examples: https://jdi-testing.github.io/jdi-light/html5.html√æ√æExample Html elements tests: https://github.com/jdi-testing/jdi-light/tree/master/jdi-light-html-tests√æ√æExample Scenario tests: https://github.com/jdi-testing/jdi-light/tree/master/jdi-light-examples√æ√æSite: http://jdi.epam.com/√æ√æVK: https://vk.com/jdi_framework√æ√æFacebook: https://www.facebook.com/groups/jdi.framework/√æ√æYou can ask your questions on StackOverflow with [![htmlelements](https://img.shields.io/badge/stackoverflow-jdiframework-orange.svg?style=flat)](http://stackoverflow.com/questions/tagged/jdiframework) tag√æ√æGet Help in active users Skype chat: https://join.skype.com/clvyVvnZvWqc√æ√æ## Contacts:√æ√æMail: roman.iovlev.jdi@gmail.com√æ√æSkype: roman.iovlev√æ√æ√æ√æ## License√æ[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjdi-testing%2Fjdi-light.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjdi-testing%2Fjdi-light?ref=badge_large)"
MobClub/SMSSDK-for-Android,12139,102,25,63,Organization,False,The convenience of the SDK message authentication code function integration,,,9,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",32,8,10,4,0,1622,True,2,3,2,0,0,0,0,0,7,0,1,3,1541,88,0,0,116,0,,,"SMSSDK for Android√æ==================√æ√æThis is a demonstration project for <a href=""http://www.mob.com/downloadDetail/SMS/android"">SMSSDK</a>.√æ√æThis project uses the main functions of SMSSDK.<br>√æWith SMSSDK ,your app can securely and quickly register new users√æby using a SMS verification code sent to their Mobile phone.√æ√æ√æGetting up√æ----------√æWe offer two popular IDE guide to integrate SMSSDK.√æ√æ###Android Studio√æ√æjust clone down and open with Studio.√æ√æ###Eclipse√æ√æjust clone down and import Project directory to Eclipse.√æ√æ√æNeed more support about SMSSDK? please check at [Mob.com](http://wiki.mob.com/android-%E7%9F%AD%E4%BF%A1sdk%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3/) (Chinese)"
NSDie/softwork-project,101,8,1,5,User,False,Ë∂≥ËøπÂú∞Âõæ ËÆ©‰Ω†ÁöÑÂàÜ‰∫´Êõ¥ÁÇ´ÈÖ∑,,,7,Java,"{'': 1, 'md': 3, 'sql': 1, 'xml': 1}",50,1,0,2,0,589,True,0,0,0,0,0,9,0,0,8,0,0,0,0,0,0,0,15,,4,,# FootPrint√æË∂≥ËøπÂú∞Âõæ ËÆ©‰Ω†ÁöÑÂàÜ‰∫´Êõ¥ÁÇ´ÈÖ∑√æ√æËΩØÂ∑•ÂÆûË∑µÁöÑ‰Ωú‰∏öÔºå‰πüÊòØ‰∏ÄÊ¨°spring boot DemoÁöÑÂÆûÊàòÔºåÂü∫‰∫éspingboot+mybatisÁöÑÂ∞èÁ®ãÂ∫èÂêéÁ´Ø„ÄÇ
lzan13/VMLibrary,4192,25,2,12,User,False,Â∞ÅË£ÖËá™Â∑±ÂºÄÂèë‰∏≠Â∏∏Áî®ÁöÑ‰∏Ä‰∫õÂ∑•ÂÖ∑Á±ª‰ª•ÂèäËá™ÂÆö‰πâÊéß‰ª∂Á≠â,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",182,2,0,1,3,1255,True,0,1,0,0,0,0,0,0,7,0,1,20,954,728,0,0,48,,77,,"VMLibrary√æ=========√æ[![](https://img.shields.io/badge/author-lzan13-green.svg)](https://github.com/lzan13)√æ[![](https://img.shields.io/badge/weibo-@lzan13-red.svg)](http://weibo.com/lzan13)√æ[![](https://img.shields.io/badge/blog-@%E7%A9%BF%E8%A3%A4%E8%A1%A9%E9%97%AF%E5%A4%A9%E4%B8%8B-blue.svg)](http://blog.melove.net)√æ√æÂ∞ÅË£ÖËá™Â∑±ÂºÄÂèë‰∏≠Â∏∏Áî®ÁöÑ‰∏Ä‰∫õÂ∑•ÂÖ∑Á±ª‰ª•ÂèäËá™ÂÆö‰πâÊéß‰ª∂Á≠âÔºåËøô‰∏™È°πÁõÆÂåÖÂê´‰∫ÜÂ§ö‰∏™`module`ÔºåÁé∞Âú®Â∑≤ÁªèÂ∞Ü `vmtools`ÂèëÂ∏ÉÂà∞`JCenter`‰ªìÂ∫ìÔºå√æÊúâÈúÄË¶ÅÁöÑÂêåÂ≠¶ÂèØ‰ª•ÈÄöËøáËøúÁ®ãÂºïÁî®ÁöÑÊñπÂºè‰ΩøÁî®√æ√æ√æ### #‰ªãÁªç√æÊú¨Êù•ÊòØ‰Ωú‰∏∫‰∏Ä‰∏™Ëá™Â∑±È°πÁõÆÁÆ°ÁêÜÁ¨¨‰∏âÊñπ‰æùËµñÁî®ÁöÑÔºåÂêéÊù•ÊÖ¢ÊÖ¢Âú∞ÁßØÁ¥Ø‰∫Ü‰∏Ä‰∫õÂ∏∏Áî®ÁöÑÂ∑•ÂÖ∑Á±ª‰ª•ÂèäËá™ÂÆö‰πâÊéß‰ª∂ÔºåÊâÄ‰ª•ÊúâÊÉ≥Ê≥ïÊää‰ªñÊîæÂá∫ÂéªÔºå√æÂèØ‰ª•ËÆ©ÂÖ∂‰ªñÊúâÈúÄË¶ÅÁöÑÂêåÂ≠¶‰ª•Âèä‰ΩøÁî®ÔºåÊàëËøôËæπÂë¢‰ºöÊÖ¢ÊÖ¢ÂÆåÂñÑËøô‰∏™Â∫ìÁöÑÂäüËÉΩÔºåÂ¶ÇÊûúÊúâÂ•ΩÊÉ≥Ê≥ïÔºåÂ•ΩÁöÑÂ∑•ÂÖ∑Á±ª‰πüÂèØ‰ª•ÊèêÂà∞ËøôÈáåÊù•√æ√æ√æ### #ËØ¶ÁªÜ√æ- [example](./example) Á§∫‰æã`Module`‰∏ªË¶ÅÈÉΩÊòØ‰∏Ä‰∫õËá™Â∑±ÊµãËØï‰ª£Á†Å√æ- [vmtools](./vmtools) Ëá™Â∑±Â∞ÅË£ÖÁöÑÂ∑•ÂÖ∑Á±ªÂ∫ìÔºåÂåÖÂê´Â∏∏Áî®Â∑•ÂÖ∑Á±ª‰ª•Âèä‰∏Ä‰∫õËá™ÂÆö‰πâÊéß‰ª∂Á≠â√æ- [vmutils](./vmutils) ÊîæÁΩÆ‰∏Ä‰∫õËá™Â∑±ÊµãËØïÁöÑ`Java`‰ª£Á†Å√æ√æ√æ### #LICENSE√æ```√æCopyright 2018 lzan13√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ   http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
singa-bio/singa,12758,6,4,2,Organization,False,:leaves: SiNGA (Simulation of Natural Systems using Graph Automata) is an open-source library containing tools especially for structural bioinformatics and systems biology.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",15,Java,"{'': 1, 'yml': 1, 'md': 2, 'png': 1}",898,7,22,3,6,1533,True,6,86,0,2,0,2,0,1,15,2,0,0,0,0,0,0,5,2,,,"<img src=""singa_logo_text.png"" height=""125""/>√æ√æ[![Build Status](https://travis-ci.org/singa-bio/singa.svg?branch=master)](https://travis-ci.org/singa-bio/singa)√æ![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)√æ[![MMTF support](https://img.shields.io/badge/MMTF-supported-blue.svg)](https://mmtf.rcsb.org/)√æ[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1320146.svg)](https://doi.org/10.5281/zenodo.1320146)√æ√æSiNGA (**Si**mulation of **N**atural Systems using **G**raph **A**utomata) is an open-source library containing tools especially for structural bioinformatics and systems biology.√æ√æMany aspects of the API are under development. API changes are frequent, never the less we try to keep them minimal.√æ√æ## Quick start√æSiNGA is deployed to the [Maven Central Repository](https://mvnrepository.com/artifact/bio.singa). Simply add the desired modules to your ```pom.xml```:√æ√æ```xml√æ<dependencies>√æ    <dependency>√æ        <groupId>bio.singa</groupId>√æ        <artifactId>singa-[module]</artifactId>√æ        <version>0.6.0</version>√æ    </dependency>√æ    <!-- more dependencies -->√æ</dependencies>√æ```√æ## Documentation√æThe full JavaDocs are available at [singa-bio.github.io/singa-doc](https://singa-bio.github.io/singa-doc).√æ√æ## Requirements√æMake sure you have the following tools and libraries installed:√æ- Java 8 or later√æ√æFor _p_-value calculation for Fit3D: √æ- R installation 3.4.x or later√æ- local package installation privileges or the `sfsmisc` package pre-installed√æ√æ## Contributors√æ - Christoph Leberecht | christoph.leberecht(at)hs-mittweida.de | https://github.com/cleberecht√æ - Florian Kaiser | contact(at)fkaiser.bio | https://github.com/fkaiserbio√æ√æ## Projects using SiNGA√æ - Fit3D - template-based detection of small structural motifs | https://github.com/fkaiserbio/fit3d√æ - MMM - template-free detection of substructure conservation | https://github.com/fkaiserbio/mmm√æ - PNAtor - generation of PNA aptamer structures | https://github.com/eisold/PNAtor"
junkerm/specmate,531022,11,3,33,User,False,Web-based Modeling and Test-Generation Tool,https://specmate.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'yml': 1, 'md': 1, 'png': 1, 'jmx': 1}",2441,52,35,19,0,1279,True,0,5,0,0,5,472,0,0,8,0,0,0,0,0,0,0,7,,0,,"# Specmate√æ√æ## How to set up your development environment√æ1. Install Eclipse Neon.2 Modeling Tools√æ2. From the Eclipse Marketplace, install √æ    - bndtools 4.1√æ    - Acceleo 3.7√æ3. Install node js version 8√æ4. In the folder web, run npm run init.√æ5. Import all projects in the bundles folder into your Eclipse workspace√æ6. Open specmate-std-env/dev-specmate-all.bndrun and hit the run button√æ√æ## Developing the GUI√æ√æSee ```web/README.md```√æ√æ## Big Thanks√æ√æCross-browser Testing Platform and Open Source <3 Provided by [![Sauce Labs](Sauce-Labs_Horiz_Red-Grey_RGB_200x28.png)][homepage]√æ√æ[homepage]: https://saucelabs.com"
pascallemoine/ynov-jdbc-lovecalculator,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
DataSketches/characterization,22392,3,8,3,Organization,False,Java Sketch Characterization Code.,http://datasketches.github.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 5, 'yml': 1, 'md': 1, 'xml': 1}",340,2,0,4,1,,True,0,0,0,0,0,47,0,17,8,0,2,55,13809,3552,0,0,2,869,,apache/incubator-datasketches-characterization,"<!--√æ    Licensed to the Apache Software Foundation (ASF) under one√æ    or more contributor license agreements.  See the NOTICE file√æ    distributed with this work for additional information√æ    regarding copyright ownership.  The ASF licenses this file√æ    to you under the Apache License, Version 2.0 (the√æ    ""License""); you may not use this file except in compliance√æ    with the License.  You may obtain a copy of the License at√æ√æ      http://www.apache.org/licenses/LICENSE-2.0√æ√æ    Unless required by applicable law or agreed to in writing,√æ    software distributed under the License is distributed on an√æ    ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY√æ    KIND, either express or implied.  See the License for the√æ    specific language governing permissions and limitations√æ    under the License.√æ-->√æ√æ# Characterization Java & C++ Component√æ√æPlease visit the main [DataSketches website](https://datasketches.apache.org) for more information. √æ√æIf you are interested in making contributions to this site please see our [Community](https://datasketches.apache.org/docs/Community/) page for how to contact us.√æ√æWe define characterization as the task of comprehensively measuring accuracy √æor speed performance of our library. These characterization tests are often long running √æ(some can run for days) and very resource intensive, which makes them unsuitable for including √æin unit tests.  The code in this repository are some of the test suites we use to create √æsome of the plots on our website and provide evidence for our speed and accuracy claims.  √æThis code is shared here so that others can duplicate our own characterizations.√æ√æThe code here is shared ""as-is"" and does not pretend to have the same level of quality as the √æprimary repositories (java, pig, hive and vector).  This code is not archived to Maven Central √æand will change from time-to-time as we grow these characterization suites.√æ√æ## Documentation√æ√æ### [DataSketches Library Website](https://datasketches.apache.org/)√æ√æ### [Java Core Overview](https://datasketches.apache.org/docs/TheChallenge.html)√æ√æ### [Java Core Javadocs](https://datasketches.apache.org/api/java/snapshot/apidocs/index.html)√æ√æ## Build / Run Instructions (Java)√æ√æ### JDK8 is required to compile√æThis Java classes of this DataSketches component must be compiled using JDK 8.√æ√æ### Recommended Build Tool√æThis DataSketches component is structured as a Maven project and Maven is the recommended Build Tool.√æ√æThere are two types of tests: normal unit tests and tests run by the strict profile.  √æ√æTo run normal unit tests:√æ√æ    $ mvn clean test√æ√æTo run the strict profile tests:√æ√æ    $ mvn clean test -P strict√æ√æ### Dependencies√æ√æ#### Run-time√æSee the pom.xml for the top-level dependencies.√æ√æ#### Testing√æSee the pom.xml file for test dependencies.√æ√æ### Run√æ* The characterization tests are called profiles and are located by type under the directories:√æ    * src/main/java/org/apache/datasketches/characterization/&lt;type&gt;/&lt;test&gt;.java√æ* These tests have many parameters that are specified in a corresponding configuration "".conf"" file located in directories:√æ    * src/main/resources/&lt;type&gt;/&lt;test&gt;.conf√æ    * One of the parameters specified by the .conf file is the specific ""Job Profile"" that is to be run using that configuration.√æ* It is recommended that you use your IDE and run the test by executing *org.apache.datasketches.job.main(&lt;location of .conf file&gt;)*. √æThe IDE should resolve all the required dependencies specified by the pom.xml file for you.  With Eclipse, the command is ""run as java application"".√æIntelliJ should have something similar.  The output is sent to Standard Out.√æ√æ## Build Instructions (C++)√æ√æ### Using Eclipse√æ√æ#### **Installing CDT** √æIf you already have Eclipse you will need to install the CDT extensions, or you can install Eclipse with CDT only.  We had to upgrade our Eclipse to the latest version before we could successfully install the CDT extensions.√æ#### **Setting up the Eclipse Project** √æWe have found it convenient to setup two projects in Eclipse:√æ√æ* **Java project**: where the root directory is the root of your local copy of the datasketches-characterization repository. We named it ""datasketches-characterization"".√æ* **C++ project**: where the root directory is the cpp directory just under the Java project root. We named it ""datasketches-characterization-CPP"".√æ√æ#### **Choosing the Tool Chain** √æAfter your project is created, open *Project Properties*√æ√æ* **C/C++ Build** In this menu select *Use default build command*, *Generate Makefiles automatically*, and *Expand Env. Variable Refs in Makefiles*.√æ    √æ    * **Tool Chain Editor** Choose the compatible tool chain for your system. We use *MacOSX GCC* and *Gnu Make Builder*.√æ    * **Settings/Tool Settings**√æ        * **GCC C++ Compiler**√æ            * **Dialect** *Other dialect flags*: ""-std=c++11""√æ            * **Includes** Select from the directory where you have datasketches-cpp installed. Then add complete paths for:√æ                * .../datasketches-cpp/common/include√æ                * .../datasketches-cpp/cpc/include√æ                * .../datasketches-cpp/fi/include√æ                * .../datasketches-cpp/hll/include√æ                * .../datasketches-cpp/kll/include√æ                * .../datasketches-cpp/theta/include√æ            * **Optimization**√æ                * **Optimization Level** Optimize most (-O3)√æ                * **Other optimization flags** ""-DNDEBUG""√æ            * **Warnings** Check *All Warnings (-Wall)*√æ            * **Miscellaneous** *Other flags* ""-c fmessage-length=0""√æ√æ* **C/C++ General**√æ    * **Paths and Symbols** Tab: *Source Locations*, Action: *Add Folder...*: Add reference to ""/datasketches-characterization_CPP/src""√æ√æ#### **Build Project**√æAfter this setup you should be able to *Build Project* from the top-level *Eclipse / Project* Menu.  You may need to unselect the *Build Automatically* option.√æ√æ----√æ√æDisclaimer: Apache DataSketches is an effort undergoing incubation at The Apache Software Foundation (ASF), sponsored by the Apache Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF."
Qixingchen/DataBindingModelFormatter,484,25,1,5,User,False,quickly add data binding getter and setter for a model,,,8,Java,"{'': 1, 'md': 2, 'iml': 1}",19,1,7,1,0,1379,True,2,4,0,0,0,0,0,0,8,0,0,0,0,0,0,0,50,,204,,"# DataBindingModelFormatter√æquickly add data binding getter and setter for a model√æ√æAfter created model,open Generate window, select Data Binding Formatter.<br>  √æ√æAndroidX supported.  <br>√æ√ætodo:<br>√æ- [x] find exits getter and setter.<br>√æ- [x] allow select field.<br>√æ- [ ] allow set notify method name.  √æ√æ## screenshot√æ√ægif:  √æ![gif](./screenshot/screenshot.gif)√æ√æBefore Format:</br>√æ![](./screenshot/1.png)√æ√æAfter Format:</br>√æ![](./screenshot/3.png)√æ√æ## download√æ√æYou can download from [JetBrans Plugin Center](https://plugins.jetbrains.com/plugin/8616?pr=idea) √æor download from [github release page](https://github.com/Qixingchen/DataBindingModelFormatter/releases)."
Nepxion/Permission,401,78,11,27,Organization,False,"üéØ Nepxion Permission is a permission system based on Spring Cloud with Nepxion Matrix AOP framework and Aquarius framework, and add permission control to microservice APIs Âü∫‰∫éSpring CloudÁöÑÂæÆÊúçÂä°Ê≥®Ëß£ÂºèAPIÊùÉÈôêÊ°ÜÊû∂",http://www.nepxion.com,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",19,Java,"{'': 3, 'yml': 1, 'md': 1, 'bat': 2, 'xml': 1}",219,3,0,1,6,888,True,0,0,0,0,0,0,0,0,8,0,1,3,3,3,2,0,46,1,,,"# Nepxion Permission√æ[![Total lines](https://tokei.rs/b1/github/Nepxion/Permission?category=lines)](https://tokei.rs/b1/github/Nepxion/Permission?category=lines)  [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg?label=license)](https://github.com/Nepxion/Permission/blob/master/LICENSE)  [![Maven Central](https://img.shields.io/maven-central/v/com.nepxion/permission.svg?label=maven%20central)](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.nepxion%22%20AND%20permission)  [![Javadocs](http://www.javadoc.io/badge/com.nepxion/permission-aop.svg)](http://www.javadoc.io/doc/com.nepxion/permission-aop)  [![Build Status](https://travis-ci.org/Nepxion/Permission.svg?branch=master)](https://travis-ci.org/Nepxion/Permission)  [![Codacy Badge](https://api.codacy.com/project/badge/Grade/06ee5cfb85b946cc95affcb6e10ee45c)](https://www.codacy.com/project/HaojunRen/Permission/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Nepxion/Permission&amp;utm_campaign=Badge_Grade_Dashboard)√æ√æNepxion PermissionÊòØ‰∏ÄÊ¨æÂü∫‰∫éSpring CloudÁöÑÂæÆÊúçÂä°APIÊùÉÈôêÊ°ÜÊû∂ÔºåÂπ∂ÈÄöËøáRedisÂàÜÂ∏ÉÂºèÁºìÂ≠òËøõË°åÊùÉÈôêÁºìÂ≠ò„ÄÇÂÆÉÈááÁî®Nepxion Matrix AOPÊ°ÜÊû∂ËøõË°åÂàáÈù¢ÂÆûÁé∞ÔºåÊîØÊåÅÊ≥®Ëß£Ë∞ÉÁî®ÊñπÂºèÔºå‰πüÊîØÊåÅRestË∞ÉÁî®ÊñπÂºè√æ√æ## ËØ∑ËÅîÁ≥ªÊàë√æÂæÆ‰ø°ÂíåÂÖ¨‰ºóÂè∑√æ√æ![Alt text](https://github.com/HaojunRen/Docs/raw/master/zxing-doc/ÂæÆ‰ø°-1.jpg)![Alt text](https://github.com/HaojunRen/Docs/raw/master/zxing-doc/ÂÖ¨‰ºóÂè∑-1.jpg)√æ√æ## ÁÆÄ‰ªã√æ- ÂÆûÁé∞ÊùÉÈôêËá™Âä®Êâ´ÊèèÂÖ•Â∫ìÔºàÂèØÈÄöËøáÈÖçÁΩÆÊñá‰ª∂ÂºÄÂêØÂÖ≥Èó≠Ôºâ√æ- ÂÆûÁé∞ÊùÉÈôêÈ™åËØÅ‰ªéÂàÜÂ∏ÉÂºèÁºìÂ≠òÂíåAPIË∞ÉÁî®Ëé∑Âèñ‰∏§ÁßçÊñπÂºèÔºàÁºìÂ≠òËé∑ÂèñÂèØÈÄöËøáÈÖçÁΩÆÊñá‰ª∂ÂºÄÂêØÂÖ≥Èó≠Ôºâ√æ- ÂÆûÁé∞ÊùÉÈôêÈ™åËØÅËµ∞UserIdÂíåToken‰∏§ÁßçÊñπÂºèÔºåÈÄöËøáÊ≥®Ëß£Êù•ÂÜ≥ÂÆö√æ- ÂÆûÁé∞Êèê‰æõFeignÊé•Âè£Ôºå‰ΩøÁî®ËÄÖÂÆûÁé∞Âà∞Êï∞ÊçÆÂ∫ìÂíåÁºìÂ≠òÊï∞ÊçÆ‰∫§‰∫íÁöÑÊâ©Â±ï√æ- ÂÆûÁé∞Êèê‰æõÊòæÂºèÂü∫‰∫éÊ≥®Ëß£ÁöÑÊùÉÈôêÈ™åËØÅÔºåÂèÇÊï∞ÈÄöËøáÊ≥®Ëß£‰º†ÈÄíÔºõÂÆûÁé∞Êèê‰æõÂü∫‰∫éRestËØ∑Ê±ÇÁöÑÊùÉÈôêÈ™åËØÅÔºåÂèÇÊï∞ÈÄöËøáHeader‰º†ÈÄí√æ- ÂÆûÁé∞Ê†πÊçÆJava8ÁöÑÁâπÊÄßÊù•Ëé∑ÂèñÊ≥®Ëß£ÂØπÂ∫îÊñπÊ≥ï‰∏äÁöÑÂèòÈáèÂêç(‰∏çÊòØÂèòÈáèÁ±ªÂûã)ÔºåÊîØÊåÅÊ†áÂáÜÂèçÂ∞ÑÂíåÂ≠óËäÇÁ†ÅCGLIG(ASM library)Êù•Ëé∑ÂèñÔºåÂâçËÄÖÈÄÇÁî®‰∫éÊé•Âè£‰ª£ÁêÜÔºåÂêéËÄÖÈÄÇÁî®‰∫éÁ±ª‰ª£ÁêÜ√æ√æ  Ê†áÂáÜÂèçÂ∞ÑÁöÑÊñπÂºèÔºåÈúÄË¶ÅÂú®IDEÂíåMavenÈáåËÆæÁΩÆ""-parameters""ÁöÑCompiler Argument„ÄÇÂèÇËÄÉÂ¶Ç‰∏ãÔºö√æ  - EclipseÂä†""-parameters""ÂèÇÊï∞Ôºöhttps://www.concretepage.com/java/jdk-8/java-8-reflection-access-to-parameter-names-of-method-and-constructor-with-maven-gradle-and-eclipse-using-parameters-compiler-argument√æ  - IdeaÂä†""-parameters""ÂèÇÊï∞Ôºöhttp://blog.csdn.net/royal_lr/article/details/52279993√æ√æ## Ê≥®ÊÑè√æNepxion PermissionÊèê‰æõÁÆÄÂçïÊòìÁî®ÁöÑAOPÊ°ÜÊû∂ÔºàÂèÇËÄÉpermission-springcloud-client-exampleÔºâÔºåÂπ∂ÈùûÊòØÂÖ®Èù¢ÁöÑÊùÉÈôêÁÆ°ÁêÜÂíåË∞ÉÁî®Á≥ªÁªüÔºåÈâ¥‰∫é‰∏çÂêåÂÖ¨Âè∏Êúâ‰∏çÂêåÊùÉÈôêÊû∂ÊûÑÔºåÈÇ£‰πà‰ΩøÁî®ËÄÖÈúÄË¶ÅËá™Ë°åÂéªÂÆûÁé∞Â¶Ç‰∏ãÊ®°ÂùóÔºàÂèÇËÄÉpermission-springcloud-service-exampleÔºâÔºö√æ- ÂÆûÁé∞Âü∫‰∫éÊùÉÈôê-ËßíËâ≤-Áî®Êà∑‰∏âÂ±Ç‰ΩìÁ≥ªÁöÑÊï∞ÊçÆÂ∫ìÊ®°Âûã(PojoÁ±ªÂ∑≤Âú®permission-entityÈáåÂÆûÁé∞)ÔºåÂπ∂Êèê‰æõÁõ∏ÂÖ≥ÁöÑÂ¢ûÂà†ÊîπÊü•Êé•Âè£√æ- ÂÆûÁé∞Âü∫‰∫éÁïåÈù¢ÁöÑÊùÉÈôê-ËßíËâ≤-Áî®Êà∑ÁöÑÊìç‰ΩúÂäüËÉΩ√æ- ÂÆûÁé∞ÂíåÁõ∏ÂÖ≥Áî®Êà∑Á≥ªÁªüÁ≠âÂ§öÂØπÊé•√æ- ÂÆûÁé∞Âü∫‰∫éÊùÉÈôêÈ™åËØÅÁöÑÂàÜÂ∏ÉÂºèÁºìÂ≠òÂäüËÉΩÔºå‰æãÂ¶ÇÈ™åËØÅÁºìÂ≠òÂíåÂ§±Êïà(Â¶ÇÊûú‰ΩøÁî®ËÄÖÊúâËøôÊ†∑ÁöÑÈúÄÊ±Ç)√æ- ÂÆûÁé∞Âü∫‰∫éTokenÁöÑÊùÉÈôêÈ™åËØÅÂäüËÉΩÔºåÂíåÁõ∏ÂÖ≥ÂçïÁÇπÁôªÂΩïÁ≥ªÁªüÁ≠âÂÅöÂØπÊé•(Â¶ÇÊûú‰ΩøÁî®ËÄÖÊúâËøôÊ†∑ÁöÑÈúÄÊ±Ç)√æ- ÂÆûÁé∞Êèê‰æõUIÊùÉÈôêÂíåAPI GATEWAYÊùÉÈôêÁöÑÊé•ÂÖ•(Â¶ÇÊûú‰ΩøÁî®ËÄÖÊúâËøôÊ†∑ÁöÑÈúÄÊ±Ç)√æ√æ## ÂÖºÂÆπ√æÁâàÊú¨ÂÖºÂÆπÊÉÖÂÜµ√æ- Spring Cloud FÁâàÔºåËØ∑ÈááÁî®3.x.xÁâàÊú¨ÔºåÂÖ∑‰Ωì‰ª£Á†ÅÂèÇËÄÉmasterÂàÜÊîØ√æ- Spring Cloud EÁâàÔºåËØ∑ÈááÁî®2.x.xÁâàÊú¨ÔºåÂÖ∑‰Ωì‰ª£Á†ÅÂèÇËÄÉEdgwareÂàÜÊîØ√æ√æ## ‰æùËµñ√æAOP‰æùËµñ√æ```xml√æ<dependency>√æ    <groupId>com.nepxion</groupId>√æ    <artifactId>permission-aop-starter</artifactId>√æ    <version>${permission.version}</version>√æ</dependency>√æ```√æ√æFeign‰æùËµñ√æ```xml√æ<dependency>√æ    <groupId>com.nepxion</groupId>√æ    <artifactId>permission-feign-starter</artifactId>√æ    <version>${permission.version}</version>√æ</dependency>√æ```√æ√æ## Á§∫‰æã√æ### ÊùÉÈôêÊúçÂä°Á´Ø√æÊúçÂä°Á´ØÈÖçÁΩÆ√æ```xml√æ# Spring cloud config√æspring.application.name=permission-springcloud-service-example√æserver.port=4321√æeureka.instance.metadataMap.owner=Haojun Ren√æeureka.client.serviceUrl.defaultZone=http://localhost:9528/eureka/√æ√æ# Permission config√æ# ÊùÉÈôêÊúçÂä°ÂºÄÂêØÂíåÂÖ≥Èó≠Ôºå‰∏çÂä†ËøôË°åÔºåËßÜ‰∏∫ÂºÄÂêØ√æpermission.service.enabled=true√æ√æ# Datasource config√ædatabase.driverClassName=com.mysql.jdbc.Driver√ædatabase.url=jdbc:mysql://127.0.0.1:3306/permission?useUnicode=true&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;failOverReadOnly=false√ædatabase.username=root√ædatabase.password=111111√æpool.init=10√æpool.min=10√æpool.max=20√æpool.max.wait=60000√æpool.time.between.eviction.runs.millis=60000√æpool.min.evictable.idle.time.millis=300000√æpool.remove.abandoned.timeout=120√æ√æ# Cache config√æprefix=permission√æcache.enabled=true√æcache.type=redisCache√æ# ÂΩìÂàáÈù¢Êã¶Êà™Âá∫Áé∞ÂºÇÂ∏∏ÔºåÂ¶ÇÊûúÂøΩÁï•ËØ•ÂºÇÂ∏∏ÔºåÂàô‰∏çÂΩ±ÂìçÂΩìÂâç‰∏öÂä°ÊñπÊ≥ïË∞ÉÁî®ÔºåÂê¶Âàô‰∏≠Êñ≠ÂΩìÂâç‰∏öÂä°ÊñπÊ≥ïË∞ÉÁî®ÔºåÁº∫ÁúÅ‰∏∫true√æ# cache.aop.exception.ignore=true√æ# ÂÖ®Â±ÄÁºìÂ≠òËøáÊúüÂÄºÔºåÂçï‰ΩçÊØ´ÁßíÔºàÂ∞è‰∫éÁ≠â‰∫éÈõ∂ÔºåË°®Á§∫Ê∞∏‰∏çËøáÊúüÔºâÔºåÂΩìÊ≥®Ëß£‰∏äÊ≤°ÈÖçÁΩÆËØ•ÂÄºÁöÑÊó∂ÂÄôÔºå‰ª•ÂÖ®Â±ÄÂÄº‰∏∫ÂáÜÔºåÁº∫ÁúÅ‰∏∫-1√æ# cache.expire=-1√æ# Êâ´ÊèèÂê´Êúâ@CacheableÔºå@CacheEvictÔºå@CachePutÁ≠âÊ≥®Ëß£ÁöÑÊé•Âè£ÊàñËÄÖÁ±ªÊâÄÂú®ÁõÆÂΩï√æcache.scan.packages=com.nepxion.permission√æ√æ# Redis config√æspring.redis.host=localhost√æspring.redis.port=6379√æspring.redis.password=√æspring.redis.database=0√æspring.redis.pool.max-active=8√æspring.redis.pool.max-wait=-1√æspring.redis.pool.max-idle=8√æspring.redis.pool.min-idle=0√æ√æ# Frequent log print√æfrequent.log.print=true√æ```√æ√æSpringCloudÂ∫îÁî®ÂÖ•Âè£ÔºåÈúÄË¶ÅÂä†‰∏ä@EnablePermissionSerivceÊ≥®Ëß£ÊøÄÊ¥ªÊùÉÈôêÊúçÂä°ÔºàÂΩìÁÑ∂‰πüÂèØ‰ª•Âú®ÈÖçÁΩÆÊñá‰ª∂ÈáåÈù¢permission.service.enabled=falseÂÖ≥Èó≠ÂÆÉÔºâÔºå@EnableCache‰ªéÁºìÂ≠òËé∑ÂèñÊùÉÈôêÊï∞ÊçÆ√æ```java√æpackage com.nepxion.permission.example.service;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.springframework.boot.autoconfigure.SpringBootApplication;√æimport org.springframework.boot.builder.SpringApplicationBuilder;√æimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;√æ√æimport com.nepxion.aquarius.cache.annotation.EnableCache;√æimport com.nepxion.permission.service.annotation.EnablePermissionSerivce;√æ√æ@SpringBootApplication√æ@EnableDiscoveryClient√æ@EnablePermissionSerivce√æ@EnableCache√æpublic class PermissionApplication {√æ    public static void main(String[] args) {√æ        new SpringApplicationBuilder(PermissionApplication.class).run(args);√æ    }√æ}√æ```√æ√æÈúÄË¶ÅÂÆûÁé∞permission-apiÁöÑ‰∏§‰∏™FeignÊé•Âè£PermissionResourceÂíåUserResource√æÊ®°ÊãüÂÆûÁé∞ÊùÉÈôêÂØπÊï∞ÊçÆÂ∫ìÁöÑÁõ∏ÂÖ≥Êé•Âè£ÔºåËØ∑Ëá™Ë°åÂÆûÁé∞Áõ∏ÂÖ≥ÂíåÊï∞ÊçÆÂ∫ìÔºåÁºìÂ≠òÁ≠âÊìç‰ΩúÈÄªËæë√æ```java√æpackage com.nepxion.permission.service.impl;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport java.util.List;√æ√æimport org.apache.commons.lang3.StringUtils;√æimport org.slf4j.Logger;√æimport org.slf4j.LoggerFactory;√æimport org.springframework.web.bind.annotation.PathVariable;√æimport org.springframework.web.bind.annotation.RequestBody;√æimport org.springframework.web.bind.annotation.RestController;√æ√æimport com.nepxion.permission.api.PermissionResource;√æimport com.nepxion.permission.entity.PermissionEntity;√æ√æ// ËØ•Êé•Âè£ÂÆûÁé∞Êèê‰æõÁªôË∞ÉÁî®Á´ØÁöÑFeignÊé•Âè£ÔºåÈúÄË¶ÅÂÆûÁé∞ÁöÑÈÄªËæëÊòØÊùÉÈôêÊï∞ÊçÆÂÖ•Â∫ìÔºåÈ™åËØÅÔºå‰ª•ÂèäÁºìÂ≠òÁöÑÊìç‰Ωú√æ@RestController√æpublic class PermissionResourceImpl implements PermissionResource {√æ    private static final Logger LOG = LoggerFactory.getLogger(PermissionResourceImpl.class);√æ√æ    // ÊùÉÈôêÂàóË°®ÂÖ•Â∫ì√æ    @Override√æ    public void persist(@RequestBody List<PermissionEntity> permissions) {√æ        for (PermissionEntity permission : permissions) {√æ            permission.validateName();√æ        }√æ√æ        // ÂÆûÁé∞ÊùÉÈôêÊâ´ÊèèÁªìÊûúÂà∞Êï∞ÊçÆÂ∫ìÁöÑÂÖ•Â∫ì√æ        // ÈúÄË¶ÅÊ≥®ÊÑèÔºåÊùÉÈôêÁöÑÈáçÂ§çÂÖ•Â∫ìÈóÆÈ¢òÔºå‰∏ÄËà¨ÈÅµÂæ™‚Äú‰∏çÂ≠òÂú®ÂàôÊèíÂÖ•ÔºåÂ≠òÂú®ÂàôË¶ÜÁõñ‚ÄùÁöÑÂéüÂàô√æ        LOG.info(""ÊùÉÈôêÂàóË°®ÂÖ•Â∫ìÔºö{}"", permissions);√æ    }√æ√æ    // ÊùÉÈôêÈ™åËØÅ√æ    @Override√æ    public boolean authorize(@PathVariable(value = ""userId"") String userId, @PathVariable(value = ""userType"") String userType, @PathVariable(value = ""permissionName"") String permissionName, @PathVariable(value = ""permissionType"") String permissionType, @PathVariable(value = ""serviceName"") String serviceName) {√æ        LOG.info(""ÊùÉÈôêËé∑ÂèñÔºö userId={}, userType={}, permissionName={}, permissionType={}, serviceName={}"", userId, userType, permissionName, permissionType, serviceName);√æ        // È™åËØÅÁî®Êà∑ÊòØÂê¶ÊúâÊùÉÈôê√æ        // ÈúÄË¶ÅÂíåÁî®Êà∑Á≥ªÁªüÂÅöÂØπÊé•ÔºåuserId‰∏ÄËà¨‰∏∫ÁôªÂΩïÂêçÔºåuserType‰∏∫Áî®Êà∑Á≥ªÁªüÁ±ªÂûã„ÄÇÁõÆÂâçÊîØÊåÅÂ§öÁî®Êà∑Á±ªÂûãÔºåÊâÄ‰ª•ÈÄöËøáuserTypeÊù•Âå∫ÂàÜÂêåÂêçÁôªÂΩïÁî®Êà∑Ôºå‰æãÂ¶ÇË¥¢Âä°Á≥ªÁªüÊúâÁî®Êà∑Âè´zhangsanÔºåÊîØ‰ªòÁ≥ªÁªü‰πüÊúâÁî®Êà∑Âè´zhangsan√æ        // permissionNameÂç≥Âú®@PermissionÊ≥®Ëß£‰∏äÂÆö‰πâÁöÑnameÔºåpermissionType‰∏∫ÊùÉÈôêÁ±ªÂûãÔºåÁõÆÂâçÊîØÊåÅÊé•Âè£ÊùÉÈôê(API)ÔºåÁΩëÂÖ≥ÊùÉÈôê(GATEWAY)ÔºåÁïåÈù¢ÊùÉÈôê(UI)‰∏âÁßçÁ±ªÂûãÁöÑÊùÉÈôê(ÂèÇËÄÉPermissionType.javaÁ±ªÁöÑÂÆö‰πâ)√æ        // serviceNameÂç≥ÊúçÂä°ÂêçÔºåÂú®application.propertiesÈáåÂÆö‰πâÁöÑspring.application.name√æ        // ÂØπ‰∫éÈ™åËØÅÁªìÊûúÔºåÂú®ÂêéÁ´ØÂÆûÁé∞ÂàÜÂ∏ÉÂºèÁºìÂ≠òÔºåÂèØ‰ª•ÈÅøÂÖçÈ¢ëÁπÅË∞ÉÁî®Êï∞ÊçÆÂ∫ìËÄåÂá∫Áé∞ÊÄßËÉΩÈóÆÈ¢ò√æ        // Á§∫‰æãÊèèËø∞Áî®Êà∑zhangsanÊúâÊùÉÈôêÔºåÁî®Êà∑lisiÊ≤°ÊùÉÈôê√æ        if (StringUtils.equals(userId, ""zhangsan"")) {√æ            return true;√æ        } else if (StringUtils.equals(userId, ""lisi"")) {√æ            return false;√æ        }√æ√æ        return true;√æ    }√æ}√æ```√æ√æ```java√æpackage com.nepxion.permission.service.impl;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.apache.commons.lang3.StringUtils;√æimport org.slf4j.Logger;√æimport org.slf4j.LoggerFactory;√æimport org.springframework.web.bind.annotation.PathVariable;√æimport org.springframework.web.bind.annotation.RestController;√æ√æimport com.nepxion.permission.api.UserResource;√æimport com.nepxion.permission.entity.UserEntity;√æ√æ@RestController√æpublic class UserResourceImpl implements UserResource {√æ    private static final Logger LOG = LoggerFactory.getLogger(UserResourceImpl.class);√æ√æ    // Ê†πÊçÆTokenËé∑ÂèñUserÂÆû‰Ωì√æ    @Override√æ    public UserEntity getUser(@PathVariable(value = ""token"") String token) {√æ        // ÂΩìÂâçÁ´ØÁôªÂΩïÂêéÔºåÂÆÉÂ∏åÊúõÈÄÅtokenÂà∞ÂêéÁ´ØÔºåÊü•ËØ¢Âá∫Áî®Êà∑‰ø°ÊÅØ(Âπ∂‰ª•Ê≠§Ë∞ÉÁî®authorizeÊé•Âè£ÂÅöÊùÉÈôêÈ™åËØÅÔºåpermission-aopÂ∑≤ÁªèÂÆûÁé∞Ôºå‰ΩøÁî®ËÄÖÂπ∂‰∏çÈúÄË¶ÅÂÖ≥ÂøÉ)√æ        // ÈúÄË¶ÅÂíåÂçïÁÇπÁôªÂΩïÁ≥ªÁªüÔºå‰æãÂ¶ÇOAuthÊàñËÄÖJWTÁ≠âÁ≥ªÁªüÂÅöÂØπÊé•√æ        // Á§∫‰æãÊèèËø∞token‰∏∫abcd1234ÂØπÂ∫îÁöÑÁî®Êà∑‰∏∫lisi√æ        LOG.info(""TokenÔºö{}"", token);√æ        if (StringUtils.equals(token, ""abcd1234"")) {√æ            UserEntity user = new UserEntity();√æ            user.setUserId(""lisi"");√æ            user.setUserType(""LDAP"");√æ√æ            return user;√æ        }√æ√æ        return null;√æ    }√æ}√æ```√æ√æ### Ê®°Êãü‰∏öÂä°ÊúçÂä°Á´Ø√æ‰∏öÂä°ÊúçÂä°Á´ØÈÖçÁΩÆ√æ```xml√æ# Spring cloud config√æspring.application.name=permission-springcloud-my-service-example√æserver.port=1234√æeureka.instance.metadataMap.owner=Haojun Ren√æeureka.client.serviceUrl.defaultZone=http://10.0.75.1:9528/eureka/√æ√æ# Ribbon config√æribbon.ReadTimeout=60000√æribbon.ConnectTimeout=60000√æ√æ# Permission config√æ# ÊùÉÈôêÊã¶Êà™ÂºÄÂêØÂíåÂÖ≥Èó≠Ôºå‰∏çÂä†ËøôË°åÔºåËßÜ‰∏∫ÂºÄÂêØ√æpermission.enabled=true√æ# ÊùÉÈôêÁ≥ªÁªüÁöÑÊúçÂä°ÂêçÔºå‰Ωú‰∏∫FeignÁöÑÂØªÂùÄÂêç√æpermission.service.name=permission-springcloud-service-example√æ# Êâ´ÊèèÂê´Êúâ@PermissionÊ≥®Ëß£ÁöÑÊé•Âè£ÊàñËÄÖÁ±ªÊâÄÂú®ÁõÆÂΩï√æpermission.scan.packages=com.nepxion.permission.example.client.service√æ# Â¶ÇÊûúÂºÄÂêØÔºåÈªòËÆ§ÊØèÊ¨°ÊúçÂä°ÂêØÂä®Êó∂ÂÄôÔºå‰ºöÂæÄÊùÉÈôêÁ≥ªÁªüÁöÑÊï∞ÊçÆÂ∫ìÊèíÂÖ•ÊùÉÈôêÔºàÊùÉÈôê‰∏çÂ≠òÂú®ÂàôÊèíÂÖ•ÔºåÊùÉÈôêÂ≠òÂú®ÂàôË¶ÜÁõñÔºâ√æpermission.automatic.persist.enabled=true√æ# ÊùÉÈôêËá™Âä®ÂÖ•Â∫ìÁ¨¨‰∏ÄÊ¨°Â§±Ë¥•ÂêéÔºåËøòÊúâÈáçËØïÁöÑÊú∫‰ºö„ÄÇ‰∏ãÈù¢ÈÖçÁΩÆÈ°π‰∏∫ÈáçËØïÁöÑÊ¨°Êï∞√æpermission.automatic.persist.retry.times=5√æ# ÊùÉÈôêËá™Âä®ÂÖ•Â∫ìÁ¨¨‰∏ÄÊ¨°Â§±Ë¥•ÂêéÔºåËøòÊúâÈáçËØïÁöÑÊú∫‰ºö„ÄÇ‰∏ãÈù¢ÈÖçÁΩÆÈ°π‰∏∫ÊØèÊ¨°ÈáçËØïÁöÑÈó¥ÈöîÊó∂Èó¥√æpermission.automatic.persist.retry.interval=10000√æ# ÊùÉÈôêÁ≥ªÁªüÈ™åËØÅÊã¶Êà™ÁöÑÁî®Êà∑Á±ªÂûãÁôΩÂêçÂçïÔºà‰æãÂ¶ÇÁî®Êà∑Á±ªÂûãÊòØLDAPÔºåÈÇ£‰πàÂØπLDAPÁöÑÁî®Êà∑ÂÅöÊùÉÈôêÈ™åËØÅÊã¶Êà™Ôºâ,Â§ö‰∏™ÂÄº‰ª•‚Äú;‚ÄùÂàÜÈöî√æpermission.user.type.whitelist=LDAP√æ√æ# Cache config√æprefix=permission√æcache.enabled=true√æcache.type=redisCache√æ# ÂΩìÂàáÈù¢Êã¶Êà™Âá∫Áé∞ÂºÇÂ∏∏ÔºåÂ¶ÇÊûúÂøΩÁï•ËØ•ÂºÇÂ∏∏ÔºåÂàô‰∏çÂΩ±ÂìçÂΩìÂâç‰∏öÂä°ÊñπÊ≥ïË∞ÉÁî®ÔºåÂê¶Âàô‰∏≠Êñ≠ÂΩìÂâç‰∏öÂä°ÊñπÊ≥ïË∞ÉÁî®ÔºåÁº∫ÁúÅ‰∏∫true√æ# cache.aop.exception.ignore=true√æ# ÂÖ®Â±ÄÁºìÂ≠òËøáÊúüÂÄºÔºåÂçï‰ΩçÊØ´ÁßíÔºàÂ∞è‰∫éÁ≠â‰∫éÈõ∂ÔºåË°®Á§∫Ê∞∏‰∏çËøáÊúüÔºâÔºåÂΩìÊ≥®Ëß£‰∏äÊ≤°ÈÖçÁΩÆËØ•ÂÄºÁöÑÊó∂ÂÄôÔºå‰ª•ÂÖ®Â±ÄÂÄº‰∏∫ÂáÜÔºåÁº∫ÁúÅ‰∏∫-1√æ# cache.expire=-1√æ# Êâ´ÊèèÂê´Êúâ@CacheableÔºå@CacheEvictÔºå@CachePutÁ≠âÊ≥®Ëß£ÁöÑÊé•Âè£ÊàñËÄÖÁ±ªÊâÄÂú®ÁõÆÂΩï√æcache.scan.packages=com.nepxion.permission√æ√æ# Redis config√æspring.redis.host=localhost√æspring.redis.port=6379√æspring.redis.password=√æspring.redis.database=0√æspring.redis.pool.max-active=8√æspring.redis.pool.max-wait=-1√æspring.redis.pool.max-idle=8√æspring.redis.pool.min-idle=0√æ√æ# Frequent log print√æfrequent.log.print=true√æ```√æ√æSpringCloudÂ∫îÁî®ÂÖ•Âè£ÔºåÈúÄË¶ÅÂä†‰∏ä@EnablePermissionÊ≥®Ëß£ÊøÄÊ¥ªÊùÉÈôêÊã¶Êà™ÂäüËÉΩÔºàÂΩìÁÑ∂‰πüÂèØ‰ª•Âú®ÈÖçÁΩÆÊñá‰ª∂ÈáåÈù¢permission.enabled=falseÂÖ≥Èó≠ÂÆÉÔºâÔºå@EnableCache‰ªéÁºìÂ≠òËé∑ÂèñÊùÉÈôêÊï∞ÊçÆ√æ```java√æpackage com.nepxion.permission.example.service;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.slf4j.Logger;√æimport org.slf4j.LoggerFactory;√æimport org.springframework.boot.SpringApplication;√æimport org.springframework.boot.autoconfigure.SpringBootApplication;√æimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;√æimport org.springframework.cloud.netflix.feign.EnableFeignClients;√æimport org.springframework.context.ConfigurableApplicationContext;√æ√æimport com.nepxion.aquarius.cache.annotation.EnableCache;√æimport com.nepxion.permission.annotation.EnablePermission;√æ√æ@SpringBootApplication√æ@EnableDiscoveryClient√æ@EnableFeignClients(basePackages = { ""com.nepxion.permission.api"" })√æ@EnablePermission√æ@EnableCache√æpublic class MyApplication {√æ    private static final Logger LOG = LoggerFactory.getLogger(MyApplication.class);√æ√æ    public static void main(String[] args) {√æ        ConfigurableApplicationContext applicationContext = SpringApplication.run(MyApplication.class, args);√æ√æ        MyController myController = applicationContext.getBean(MyController.class);√æ        try {√æ            LOG.info(""Result : {}"", myController.doA(""zhangsan"", ""LDAP"", ""valueA""));√æ        } catch (Exception e) {√æ            LOG.error(""Error"", e);√æ        }√æ√æ        try {√æ            LOG.info(""Result : {}"", myController.doB(""abcd1234"", ""valueB""));√æ        } catch (Exception e) {√æ            LOG.error(""Error"", e);√æ        }√æ    }√æ}√æ```√æ√æÂú®RestControllerÊ∑ªÂä†@PermissionÊ≥®Ëß£ÔºåÂÆûÁé∞APIÊùÉÈôêÈ™åËØÅÂäüËÉΩ√æ```java√æpackage com.nepxion.permission.example.service;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.slf4j.Logger;√æimport org.slf4j.LoggerFactory;√æimport org.springframework.web.bind.annotation.PathVariable;√æimport org.springframework.web.bind.annotation.RequestMapping;√æimport org.springframework.web.bind.annotation.RequestMethod;√æimport org.springframework.web.bind.annotation.RestController;√æ√æimport com.nepxion.permission.annotation.Permission;√æimport com.nepxion.permission.annotation.Token;√æimport com.nepxion.permission.annotation.UserId;√æimport com.nepxion.permission.annotation.UserType;√æ√æ@RestController√æpublic class MyController {√æ    private static final Logger LOG = LoggerFactory.getLogger(MyController.class);√æ√æ    // ÊòæÂºèÂü∫‰∫éUserIdÂíåUserTypeÊ≥®Ëß£ÁöÑÊùÉÈôêÈ™åËØÅÔºåÂèÇÊï∞ÈÄöËøáÊ≥®Ëß£‰º†ÈÄí√æ    @RequestMapping(path = ""/doA/{userId}/{userType}/{value}"", method = RequestMethod.GET)√æ    @Permission(name = ""A-Permission"", label = ""AÊùÉÈôê"", description = ""AÊùÉÈôêÁöÑÊèèËø∞"")√æ    public int doA(@PathVariable(value = ""userId"") @UserId String userId, @PathVariable(value = ""userType"") @UserType String userType, @PathVariable(value = ""value"") String value) {√æ        LOG.info(""===== doAË¢´Ë∞ÉÁî®"");√æ√æ        return 123;√æ    }√æ√æ    // ÊòæÂºèÂü∫‰∫éTokenÊ≥®Ëß£ÁöÑÊùÉÈôêÈ™åËØÅÔºåÂèÇÊï∞ÈÄöËøáÊ≥®Ëß£‰º†ÈÄí√æ    @RequestMapping(path = ""/doB/{token}/{value}"", method = RequestMethod.GET)√æ    @Permission(name = ""B-Permission"", label = ""BÊùÉÈôê"", description = ""BÊùÉÈôêÁöÑÊèèËø∞"")√æ    public String doB(@PathVariable(value = ""token"") @Token String token, @PathVariable(value = ""value"") String value) {√æ        LOG.info(""----- doBË¢´Ë∞ÉÁî®"");√æ√æ        return ""abc"";√æ    }√æ√æ    // ÈöêÂºèÂü∫‰∫éRestËØ∑Ê±ÇÁöÑÊùÉÈôêÈ™åËØÅÔºåÂèÇÊï∞ÈÄöËøáHeader‰º†ÈÄí√æ    @RequestMapping(path = ""/doC/{value}"", method = RequestMethod.GET)√æ    @Permission(name = ""C-Permission"", label = ""CÊùÉÈôê"", description = ""CÊùÉÈôêÁöÑÊèèËø∞"")√æ    public boolean doC(@PathVariable(value = ""value"") String value) {√æ        LOG.info(""----- doCË¢´Ë∞ÉÁî®"");√æ√æ        return true;√æ    }√æ}√æ```√æ√æ### Ê®°Êãü‰∏öÂä°ÂÆ¢Êà∑Á´ØÔºåÂü∫‰∫éFeignË∞ÉÁî®√æ‰∏öÂä°ÂÆ¢Êà∑Á´ØÈÖçÁΩÆ√æ```xml√æ# Spring cloud config√æspring.application.name=permission-springcloud-my-client-example√æserver.port=1212√æeureka.client.serviceUrl.defaultZone=http://10.0.75.1:9528/eureka/√æ√æ# Ribbon config√æribbon.ReadTimeout=60000√æribbon.ConnectTimeout=60000√æ√æ# Permission config√æ# ÊùÉÈôêFeignÊã¶Êà™ÂºÄÂêØÂíåÂÖ≥Èó≠Ôºå‰∏çÂä†ËøôË°åÔºåËßÜ‰∏∫ÂºÄÂêØ√æpermission.feign.enabled=true√æ```√æ√æSpringCloudÂ∫îÁî®ÂÖ•Âè£ÔºåÈúÄË¶ÅÂä†‰∏ä@EnablePermissionFeignÊ≥®Ëß£ÊøÄÊ¥ªÊùÉÈôêFeignÊã¶Êà™ÂäüËÉΩÔºàÂΩìÁÑ∂‰πüÂèØ‰ª•Âú®ÈÖçÁΩÆÊñá‰ª∂ÈáåÈù¢permission.feign.enabled=falseÂÖ≥Èó≠ÂÆÉÔºâÔºåËØ•Ê≥®Ëß£ÂèØ‰ª•ÊääRestË∞ÉÁî®ÁöÑHeaderÊï∞ÊçÆ‰º†ÈÄÅÂà∞ÂêéÁ´Ø‰∏öÂä°ÊúçÂä°Êù•√æ```java√æpackage com.nepxion.permission.example.client;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.springframework.boot.autoconfigure.SpringBootApplication;√æimport org.springframework.boot.builder.SpringApplicationBuilder;√æimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;√æimport org.springframework.cloud.netflix.feign.EnableFeignClients;√æ√æimport com.nepxion.permission.feign.annotation.EnablePermissionFeign;√æ√æ@SpringBootApplication√æ@EnableDiscoveryClient√æ@EnableFeignClients√æ@EnablePermissionFeign√æpublic class MyApplication {√æ    public static void main(String[] args) {√æ        new SpringApplicationBuilder(MyApplication.class).run(args);√æ    }√æ}√æ```√æ√æÂü∫‰∫éFeignÁöÑË∞ÉÁî®√æ```java√æpackage com.nepxion.permission.example.client;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.springframework.cloud.netflix.feign.FeignClient;√æimport org.springframework.web.bind.annotation.PathVariable;√æimport org.springframework.web.bind.annotation.RequestMapping;√æimport org.springframework.web.bind.annotation.RequestMethod;√æ√æ@FeignClient(value = ""permission-springcloud-my-service-example"")√æpublic interface MyFeign {√æ    @RequestMapping(path = ""/doA/{userId}/{userType}/{value}"", method = RequestMethod.GET)√æ    int doA(@PathVariable(value = ""userId"") String userId, @PathVariable(value = ""userType"") String userType, @PathVariable(value = ""value"") String value);√æ√æ    @RequestMapping(path = ""/doB/{token}/{value}"", method = RequestMethod.GET)√æ    String doB(@PathVariable(value = ""token"") String token, @PathVariable(value = ""value"") String value);√æ√æ    @RequestMapping(path = ""/doC/{value}"", method = RequestMethod.GET)√æ    boolean doC(@PathVariable(value = ""value"") String value);√æ}√æ```√æ√æ```java√æpackage com.nepxion.permission.example.client;√æ√æ/**√æ * <p>Title: Nepxion Permission</p>√æ * <p>Description: Nepxion Permission</p>√æ * <p>Copyright: Copyright (c) 2017-2050</p>√æ * <p>Company: Nepxion</p>√æ * @author Haojun Ren√æ * @version 1.0√æ */√æ√æimport org.springframework.beans.factory.annotation.Autowired;√æimport org.springframework.web.bind.annotation.PathVariable;√æimport org.springframework.web.bind.annotation.RequestMapping;√æimport org.springframework.web.bind.annotation.RequestMethod;√æimport org.springframework.web.bind.annotation.RestController;√æ√æ@RestController√æpublic class MyController {√æ    @Autowired√æ    private MyFeign myFeign;√æ√æ    @RequestMapping(path = ""/doA/{userId}/{userType}/{value}"", method = RequestMethod.GET)√æ    public int doA(@PathVariable(value = ""userId"") String userId, @PathVariable(value = ""userType"") String userType, @PathVariable(value = ""value"") String value) {√æ        return myFeign.doA(userId, userType, value);√æ    }√æ√æ    @RequestMapping(path = ""/doB/{token}/{value}"", method = RequestMethod.GET)√æ    public String doB(@PathVariable(value = ""token"") String token, @PathVariable(value = ""value"") String value) {√æ        return myFeign.doB(token, value);√æ    }√æ√æ    @RequestMapping(path = ""/doC/{value}"", method = RequestMethod.GET)√æ    public boolean doC(@PathVariable(value = ""value"") String value) {√æ        return myFeign.doC(value);√æ    }√æ}√æ```√æ√æ### Âü∫‰∫éÊ≥®Ëß£Ë∞ÉÁî®ÁªìÊûú√æ```java√æpermission 2018-01-18 17:18:33,382 INFO [main] c.n.p.a.PermissionInterceptor [PermissionInterceptor.java:103] - Intercepted for annotation - Permission [name=A-Permission, label=AÊùÉÈôê, description=, proxyType=Reflective Aop Proxy, proxiedClass=com.nepxion.permission.service.MyServiceImpl, method=doA]√æpermission 2018-01-18 17:18:33,442 INFO [main] c.n.a.c.a.CacheInterceptor [CacheInterceptor.java:120] - Intercepted for annotation - Cacheable [key=permission_cache_zhangsan_LDAP_A-Permission_SERVICE_permission-springcloud-example, expire=-1, proxyType=Cglib Aop Proxy, proxiedClass=com.nepxion.permission.aop.PermissionAuthorization, method=authorizeCache]√æpermission 2018-01-18 17:18:33,582 INFO [main] c.n.a.c.r.i.RedisCacheDelegateImpl [RedisCacheDelegateImpl.java:54] - Before invocation, Cacheable key=permission_cache_zhangsan_LDAP_A-Permission_SERVICE_permission-springcloud-example, cache=true in Redis√æpermission 2018-01-18 17:18:33,582 INFO [main] c.n.p.s.MyServiceImpl [MyServiceImpl.java:22] - ===== doAË¢´Ë∞ÉÁî®√æpermission 2018-01-18 17:18:33,582 INFO [main] c.n.p.MyApplication [MyApplication.java:30] - Result : 123√æpermission 2018-01-18 17:18:33,582 INFO [main] c.n.p.a.PermissionInterceptor [PermissionInterceptor.java:103] - Intercepted for annotation - Permission [name=B-Permission, label=BÊùÉÈôê, description=BÊùÉÈôêÁöÑÊèèËø∞, proxyType=Reflective Aop Proxy, proxiedClass=com.nepxion.permission.service.MyServiceImpl, method=doB]√æpermission 2018-01-18 17:18:33,584 INFO [main] c.n.a.c.a.CacheInterceptor [CacheInterceptor.java:120] - Intercepted for annotation - Cacheable [key=permission_cache_lisi_LDAP_B-Permission_SERVICE_permission-springcloud-example, expire=-1, proxyType=Cglib Aop Proxy, proxiedClass=com.nepxion.permission.aop.PermissionAuthorization, method=authorizeCache]√æpermission 2018-01-18 17:18:33,585 INFO [main] c.n.a.c.r.i.RedisCacheDelegateImpl [RedisCacheDelegateImpl.java:54] - Before invocation, Cacheable key=permission_cache_lisi_LDAP_B-Permission_SERVICE_permission-springcloud-example, cache=false in Redis√æException in thread ""main"" com.nepxion.permission.exception.PermissionException: No permision to proceed method [name=doB, parameterTypes=java.lang.String,java.lang.String], permissionName=B-Permission, permissionLabel=BÊùÉÈôê√æ at com.nepxion.permission.aop.PermissionInterceptor.invokePermission(PermissionInterceptor.java:131)√æ at com.nepxion.permission.aop.PermissionInterceptor.invoke(PermissionInterceptor.java:73)√æ at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)√æ at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)√æ at com.sun.proxy.$Proxy64.doB(Unknown Source)√æ at com.nepxion.permission.MyApplication.main(MyApplication.java:31)√æ√æ``` √æ√æ### Âü∫‰∫éRestË∞ÉÁî®ÁªìÊûú√æÂü∫‰∫éUserIdÂíåUserTypeÁöÑÊùÉÈôêÈ™åËØÅ„ÄÇÂ¶ÇÂõæÊâÄÁ§∫ÔºåËØ•Áî®Êà∑ÂØπËØ•APIÊúâÊùÉÈôê√æ![Alt text](https://github.com/HaojunRen/Docs/raw/master/permission-doc/Permission1.jpg)√æ√æÂü∫‰∫éTokenÁöÑÊùÉÈôêÈ™åËØÅ„ÄÇÂ¶ÇÂõæÊâÄÁ§∫ÔºåËØ•TokenÂØπÂ∫îÁöÑÁî®Êà∑ÂØπËØ•APIÊó†ÊùÉÈôê√æ![Alt text](https://github.com/HaojunRen/Docs/raw/master/permission-doc/Permission2.jpg)√æ√æ## StarËµ∞ÂäøÂõæ√æ√æ[![Stargazers over time](https://starchart.cc/Nepxion/Permission.svg)](https://starchart.cc/Nepxion/Permission)"
pentaho/pentaho-hadoop-shims,134956,43,79,152,Organization,False,Hadoop Configurations,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 1, 'txt': 1, 'md': 1, 'xml': 1}",2171,70,134,74,0,3660,True,5,0,1,0,0,1138,0,48,6,0,8,17,1723,828,0,0,95,8,,,"# pentaho-hadoop-shims #√æHadoop Configurations, also known and shims and the Pentaho Big Data Adaptive layer, are collections of Hadoop libraries required to communicate with a specific version of Hadoop (and related tools: Hive, HBase, Sqoop, Pig, etc.). They are designed to be easily configured.√æ√æHow to build√æ--------------√æ√æpentaho-hadoop-shims uses the maven framework. √æ√æ√æ#### Pre-requisites for building the project:√æ* Maven, version 3+√æ* Java JDK 1.8√æ* This [settings.xml](https://raw.githubusercontent.com/pentaho/maven-parent-poms/master/maven-support-files/settings.xml) in your <user-home>/.m2 directory√æ√æ#### Building it√æ√æThis is a maven project, and to build it use the following command√æ√æ```√æ$ mvn clean install√æ```√æOptionally you can specify -Drelease to trigger obfuscation and/or uglification (as needed)√æ√æOptionally you can specify -Dmaven.test.skip=true to skip the tests (even though√æyou shouldn't as you know)√æ√æThe build result will be a Pentaho package located in ```target```.√æ√æ#### Running the tests√æ√æ__Unit tests__√æ√æThis will run all unit tests in the project (and sub-modules). To run integration tests as well, see Integration Tests below.√æ√æ```√æ$ mvn test√æ```√æ√æIf you want to remote debug a single java unit test (default port is 5005):√æ√æ```√æ$ cd core√æ$ mvn test -Dtest=<<YourTest>> -Dmaven.surefire.debug√æ```√æ√æ__Running tests on Windows__√æ√æRunning tests on Window requires additional environment set up because of existing problems running Hadoop on Windows (please see https://wiki.apache.org/hadoop/WindowsProblems).√æ√æExactly it needs to have **hadoop.home.dir** variable pointed to dir with ` \bin\winutils.exe`.√æ√æ__Steps to set up environment:__√æ √æ - Download *winutils.exe*  binary. E.g. from: https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-winutils√æ - Create any dir (e.g. d:\TEMP_DIR) and **bin** sub dir in it. Then put **winutils.exe** in **bin**:√æ `d:\TEMP_DIR\bin\winutils.exe`√æ √æ - Set system property `hadoop.home.dir=""d:\TEMP_DIR""` or just run the Java process with this property:√æ```√æ$ mvn test -Dhadoop.home.dir=""d:\TEMP_DIR""√æ```√æor√æ```√æ$ mvn clean install -Dhadoop.home.dir=""d:\TEMP_DIR""√æ```√æ√æ__Integration tests__√æ√æIn addition to the unit tests, there are integration tests that test cross-module operation. This will run the integration tests.√æ√æ```√æ$ mvn verify -DrunITs√æ```√æ√æTo run a single integration test:√æ√æ```√æ$ mvn verify -DrunITs -Dit.test=<<YourIT>>√æ```√æ√æTo run a single integration test in debug mode (for remote debugging in an IDE) on the default port of 5005:√æ√æ```√æ$ mvn verify -DrunITs -Dit.test=<<YourIT>> -Dmaven.failsafe.debug√æ```√æPentahoMapReduceIT.java√æ√æTo skip test√æ√æ```√æ$ mvn clean install -DskipTests√æ```√æ√æTo get log as text file√æ√æ```√æ$ mvn clean install test >log.txt√æ```√æ√æ√æ__IntelliJ__√æ√æ* Don't use IntelliJ's built-in maven. Make it use the same one you use from the commandline.√æ  * Project Preferences -> Build, Execution, Deployment -> Build Tools -> Maven ==> Maven home directory√æ√æ````"
kareluo/Imaging,951,446,8,80,User,False,Android Image Edit Lib. Android ÂõæÁâáÁºñËæëÂ∫ìÔºåÂæÆ‰ø°ÂõæÁâáÁºñËæëÂ∫ì,,,12,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",38,2,1,1,2,938,True,14,4,2,1,2,0,0,0,8,0,1,4,6152,6042,0,0,37,,55,minetsh/Imaging,"# Imaging√æ√æ‰∏ÄÊ¨æÂõæÁâáÁºñËæëÁ±ªÂ∫ìÔºåÂäüËÉΩÁ±ª‰ººÂæÆ‰ø°‰∏≠ÂõæÁâáÁºñËæëÂäüËÉΩÔºåÂÖ∂‰∏ªË¶ÅÁõÆÊ†áÁî®‰∫éËÅäÂ§©‰∏≠Âø´ÈÄüÁºñËæëÂõæÁâá„ÄÇ√æ√æ![Summary](./screenshot/pv.webp)√æ√æÂåÖÂê´‰ª•‰∏ã‰∏ªË¶ÅÂäüËÉΩÔºö√æ√æ- Áº©Êîæ√æ- Ê∂ÇÈ∏¶√æ- ÊñáÂ≠ó√æ- È©¨ËµõÂÖã√æ- Ë£ÅÂâ™√æ- ÊóãËΩ¨√æ√æ# Usage√æ√æ``` gradle√æimplementation project(':image')√æ```√æ√æÂèÇËÄÉSampleÁ§∫‰æã√æ√æ# Sample√æ√æ``` kotlin√æfun onChooseImages(uri: Uri, saveToPath: String) {√æ   startActivityForResult(√æ           Intent(this, IMGEditActivity::class.java)√æ                   .putExtra(IMGEditActivity.EXTRA_IMAGE_URI, image.uri)√æ                   .putExtra(IMGEditActivity.EXTRA_IMAGE_SAVE_PATH, saveToPath),√æ           REQ_IMAGE_EDIT√æ   )√æ}√æ√æoverride fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {√æ    when (requestCode) {√æ        REQ_IMAGE_EDIT -> {√æ            if (resultCode == Activity.RESULT_OK) {√æ                onImageEditDone()√æ            }√æ        }√æ    }√æ}√æ√æfun onImageEditDone() {√æ // TODO do some thins√æ}√æ```√æ√æ# Blog√æ√æ- [Android ÂõæÁâáÁºñËæëÁöÑÂéüÁêÜ‰∏éÂÆûÁé∞‚Äî‚ÄîÊ∂ÇÈ∏¶‰∏éÈ©¨ËµõÂÖã](https://mp.weixin.qq.com/s/rIGGSFua-HPmUL4citYxow)√æ√æ# About√æ√æÊàëÁöÑÂæÆ‰ø°√æ<img width=""229.2px"" height=""268.8px"" src=""./screenshot/wechat.jpeg""/>"
svenmeier/coxswain,7368,46,16,12,User,False,Your rowing servant,http://play.google.com/store/apps/details?id=svenmeier.coxswain,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",14,Java,"{'': 5, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",493,1,23,1,0,1737,True,29,76,6,8,0,4,0,0,7,0,1,13,755,559,0,0,5,,14,,"![Feature](/doc/google-play/feature.png?raw)√æ√æCoxswain helps you organize your rowing: Connect your Android device to your Waterrower and choose your training program. √æ√æ- record your workout while watching Youtube videos or other media (choose an intent to be executed on training start)√æ- row against previous workouts√æ- adjust the workout display (long press to choice from distance, duration, strokes, energy, speed, pulse, stroke rate, stroke ratio, time, split, average split, delta distance, delta duration)√æ- export your workout to TCX (Training Center XML) to import it into your favorite fitness tracking App or service.√æ- export your workout to your calendar√æ- export your workout to Google Fit (experimental)√æ- read heart rate from your Waterrower, Android sensor or a connected Bluetooth LE/Ant+ device√æ√æYour Waterrower S4 can be connected to your Android device√æ- either via USB-OTG adapter (USB-A-female to USB-micro/USB-C resp.), requires On-The-Go (OTG) support on your device√æ- or Bluetooth, requires the Waterrower S4 Bluetooth Comm Module √æ√æSideload from https://github.com/svenmeier/coxswain/releases/latest or install from Google Play:√æ√æ[<img alt=""Get it on Google Play"" height=""70"" src=""https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png"" />](http://play.google.com/store/apps/details?id=svenmeier.coxswain)√æ√æThis app is under development. Please report problems and ideas and/or support the development by a donation:√æ√æ[<img alt=""Donate"" src=""https://www.paypalobjects.com/en_US/DE/i/btn/btn_donateCC_LG.gif"" />](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CC3QC76CKCCRY)"
OpenHFT/Chronicle-Bytes,353182,197,31,52,Organization,False,Chronicle Bytes has a similar purpose to Java NIO's ByteBuffer with many extensions,http://chronicle.software,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",8,Java,"{'': 1, 'adoc': 2, 'xml': 1, 'properties': 1}",2342,7,278,20,0,1945,True,6,83,3,14,0,37,0,0,7,0,0,0,0,0,43,0,42,5,,,"= Chronicle-Bytes√æ√æ// GitHub customization√æifdef::env-github[]√æ:badges:√æendif::[]√æ√æ// Badges√æifdef::badges[]√æimage:https://maven-badges.herokuapp.com/maven-central/net.openhft/chronicle-bytes/badge.svg[""Maven Central"",link=""https://maven-badges.herokuapp.com/maven-central/>net.openhft/chronicle-bytes""]√æendif::[]√æ√æ:css-signature: demo√æ:toc: macro√æ:toc-placement!:√æ:icons:√æ:source-highlighter: highlight√æ√æ=== Chronicle-Bytes√æ√ætoc::[]√æ√æChronicle Bytes contains all the low level memory access wrappers.  It is built on Chronicle Core's direct memory and OS system call access.√æ√æChronicle Bytes has a similar purpose to Java NIO's ByteBuffer with some extensions.√æ√æThe API supports.√æ√æ - 64-bit sizes√æ - UTF-8 and ISO-8859-1 encoded strings.√æ - thread safe off heap memory operations.√æ - deterministic release of resources via reference counting.√æ - compressed data types such as stop bit encoding.√æ - elastic ByteBuffer wrappers which resize as required.√æ - parsing text and writing text directly to off heap bytes.√æ√æ=== Data types supported√æ√æ|===√æ| operation | Indexed or streaming | binary | text√æ| read/write binary primitives | both | float, double, boolean and unsigned/signed byte, short, 24-bit int, int, long, incompleteLong | double, int, long, char, double with precision√æ| read/write text | both | 8-bit/UTF-8 string with length or limit | 8-bit/UTF-8 string√æ| read/write other | streaming | histogram, named enum | bigdecimal, biginteger, date/time/zone, UUID, hexadecimal√æ| data driven tests | from files | no | yes√æ| CAS | indexed | int, long |√æ| volatile read/write | indexed | byte, short, int, long, float, double |√æ| peek | both | unsigned byte |√æ| stop bit compression | streaming | int,long, double, float, char |√æ| search | from start | indexOf string, findByte |√æ| addAndGet | indexed | float, double, int, long |√æ| copy | from start | write, copy |√æ| hash | from start | byteSum, fastHash |√æ| bytes marshallable | streaming | nested data structures, expected types only. |√æ|===√æ√æ=== Data types explained√æ√æ|===√æ| operation |  explained |√æ| read/write binary primitives |  to read an write primitive data stuctures stored in a binary from |√æ| read/write text | to read an write text data |√æ| read/write other | to read an write other data |√æ| data driven tests | https://en.wikipedia.org/wiki/Data-driven_testing |√æ| CAS | an atomic instruction used in multithreading to achieve synchronization. It compares the contents of a memory location with a given value and, only if they are the same, modifies the contents of that memory location to a new given value. |√æ| volatile read/write |  http://tutorials.jenkov.com/java-concurrency/volatile.html |√æ| peek |  peek is an operation which returns the value of the bytes without effecting its read position |√æ| stop bit compression |  https://github.com/OpenHFT/RFC/tree/master/Stop-Bit-Encoding |√æ| search |  is any algorithm which solves the search problem, namely, to retrieve information stored within some data structure |√æ| addAndGet | atomically adds the given value to the current value. | √æ| copy | to transfer data from one structure to another |√æ| hash |  https://en.wikipedia.org/wiki/Hash_function  |√æ| bytes marshallable |  a serialization funciton |√æ|===√æ√æ=== Creating Bytes√æ√æ.Bytes which wraps an on heap ByteBuffer√æ[source, Java]√æ----√æBytes<ByteBuffer> bytes = Bytes.elasticHeapByteBuffer(64);√æByteBuffer bb = bytes.underlyingObject();√æ----√æ√æ.Bytes which wraps a direct ByteBuffer√æ[source,Java]√æ----√æBytes<ByteBuffer> bytes = Bytes.elasticByteBuffer(64);√æByteBuffer bb = bytes.underlyingObject();√æ----√æ√æ.Bytes which wraps some native memory√æ[source,Java]√æ----√æBytes bytes = Bytes.allocateElasticDirect(64);√ælong address = bytes.address√æbytes.releaseLast(); // when it can be freed.√æ----√æ√æ.Bytes which will wrap some native memory when used√æ[source,Java]√æ----√æBytes bytes = Bytes.allocateElasticDirect();√æ// use the bytes√æbytes.releaseLast(); // when it can be freed.√æ----√æ√æ=== Flipping Bytes√æ√æByteBuffer needs to be flipped to switch between reading and writing.√æ√æBytes holds a read position and a write position allowing you to write and immediately read without flipping.√æ√æNOTE: The writePosition is the readLimit.√æ√æ=== Writing to a Hexadecimal dump√æ√æWriting to a hexadecimal dump is useful for documenting the format for messages written.√æWe have used the hexadecimal dump here.√æ√æ.Writing primitives as binary and dumping√æ[source, java]√æ----√æ// only used for documentation√æHexDumpBytes bytes = new HexDumpBytes();√æbytes.comment(""true"").writeBoolean(true);√æbytes.comment(""s8"").writeByte((byte) 1);√æbytes.comment(""u8"").writeUnsignedByte(2);√æbytes.comment(""s16"").writeShort((short) 3);√æbytes.comment(""u16"").writeUnsignedShort(4);√æbytes.comment(""char"").writeUnsignedShort('5'); // char√æbytes.comment(""s24"").writeInt24(-6_666_666);√æbytes.comment(""u24"").writeUnsignedInt24(16_666_666);√æbytes.comment(""s32"").writeInt(6);√æbytes.comment(""u32"").writeUnsignedShort(7);√æbytes.comment(""s64"").writeLong(8);√æbytes.comment(""f32"").writeFloat(9);√æbytes.comment(""f64"").writeDouble(10);√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ59                                              # true√æ01                                              # s8√æ02                                              # u8√æ03 00                                           # s16√æ04 00                                           # u16√æ35                                              # char√æ56 46 9a                                        # s24√æ2a 50 fe                                        # u24√æ06 00 00 00                                     # s32√æ07 00 00 00                                     # u32√æ08 00 00 00 00 00 00 00                         # s64√æ00 00 10 41                                     # f32√æ00 00 00 00 00 00 24 40                         # f64√æ----√æ√æto read this data you can use√æ√æ.Reading the primitive values above√æ[source, java]√æ----√æboolean flag = bytes.readBoolean();√æbyte s8 = bytes.readByte();√æint u8 = bytes.readUnsignedByte();√æshort s16 = bytes.readShort();√æint u16 = bytes.readUnsignedShort();√æchar ch = bytes.readStopBitChar();√æint s24 = bytes.readInt24();√ælong u24 = bytes.readUnsignedInt24();√æint s32 = bytes.readInt();√ælong u32 = bytes.readUnsignedInt();√ælong s64 = bytes.readLong();√æfloat f32 = bytes.readFloat();√ædouble f64 = bytes.readDouble();√æ----√æ√æ=== Writing and reading using offsets√æ√æInstead of streaming the data, sometimes you need to control the placement of data, possibly at random.√æ√æ.Write and read primitive by offset√æ[source, Java]√æ----√æBytes<ByteBuffer> bytes = Bytes.elasticHeapByteBuffer(64);√æbytes.writeBoolean(0, true);√æbytes.writeByte(1, (byte) 1);√æbytes.writeUnsignedByte(2, 2);√æbytes.writeShort(3, (short) 3);√æbytes.writeUnsignedShort(5, 4);√æbytes.writeInt(7, 6);√æbytes.writeUnsignedInt(11, 7);√æbytes.writeLong(15, 8);√æbytes.writeFloat(23, 9);√æbytes.writeDouble(27, 10);√æbytes.writePosition(35);√æ√æSystem.out.println(bytes.toHexString());√æ√æboolean flag = bytes.readBoolean(0);√æbyte s8 = bytes.readByte(1);√æint u8 = bytes.readUnsignedByte(2);√æshort s16 = bytes.readShort(3);√æint u16 = bytes.readUnsignedShort(5);√æint s32 = bytes.readInt(7);√ælong u32 = bytes.readUnsignedInt(11);√ælong s64 = bytes.readLong(15);√æfloat f32 = bytes.readFloat(23);√ædouble f64 = bytes.readDouble(27);√æ----√æ√æprints√æ√æ----√æ00000000 59 01 02 03 00 04 00 06  00 00 00 07 00 00 00 08 Y¬∑¬∑¬∑¬∑¬∑¬∑¬∑ ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑√æ00000010 00 00 00 00 00 00 00 00  00 10 41 00 00 00 00 00 ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ ¬∑¬∑A¬∑¬∑¬∑¬∑¬∑√æ00000020 00 24 40                                         ¬∑$@√æ----√æ√æNOTE: While HexDumpBytes supports the offset methods, you need to provide the offset in binary and the dump making it more complex to use.√æ√æ==== Volatile read and ordered write√æ√æChronicle Bytes supports variants of the write primitives which have a store barrier `writeOrderedXxxx`, and reads with a load barrier `readVolatileXxxx`√æ√æNOTE: write ordered doesn't stall the pipeline to wait for the write to occur, making it possible for a single thread to read an old value after the ordered write.√æ√æ=== Working wth text√æ√æYou can also write and read text to Bytes for low level, direct to native memory text processing.√æ√æ.Writing primitives as text√æ[source, Java]√æ----√æBytes<ByteBuffer> bytes = Bytes.elasticHeapByteBuffer(64);√æbytes.append(true).append('\n');√æbytes.append(1).append('\n');√æbytes.append(2L).append('\n');√æbytes.append('3').append('\n');√æbytes.append(4.1f).append('\n');√æbytes.append(5.2).append('\n');√æbytes.append(6.2999999, 3).append('\n');√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ00000000 54 0a 31 0a 32 0a 33 0a  34 2e 31 0a 35 2e 32 0a T¬∑1¬∑2¬∑3¬∑ 4.1¬∑5.2¬∑√æ00000010 36 2e 33 30 30 0a                                6.300¬∑√æ----√æ√æ.Reading primitives as text√æ[source, Java]√æ----√æboolean flag = bytes.parseBoolean();√æint s32 = bytes.parseInt();√ælong s64 = bytes.parseLong();√æString ch = bytes.parseUtf8(StopCharTesters.SPACE_STOP);√æfloat f32 = bytes.parseFloat();√ædouble f64 = bytes.parseDouble();√ædouble f64b = bytes.parseDouble();√æ----√æ√æNOTE: There are less methods for text as 8, 16 and 24 bit can use methods for `int`, Unsigned int can use the `long` method.√æ√æ=== Reading and Writing Strings√æ√æChronicle Bytes supports two encodings, ISO-8859-1 and UTF-8.√æIt also supports writing these as binary with a length prefix, and a string which should be terminated.√æBytes expects Strings to be read to a buffer for further processing, possibly with a String pool.√æ√æ[source, Java]√æ----√æHexDumpBytes bytes = new HexDumpBytes();√æbytes.comment(""write8bit"").write8bit(""¬£ 1"");√æbytes.comment(""writeUtf8"").writeUtf8(""¬£ 1"");√æbytes.comment(""append8bit"").append8bit(""¬£ 1"").append('\n');√æbytes.comment(""appendUtf8"").appendUtf8(""¬£ 1"").append('\n');√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ03 a3 20 31                                     # write8bit√æ04 c2 a3 20 31                                  # writeUtf8√æa3 20 31 0a                                     # append8bit√æc2 a3 20 31 0a                                  # appendUtf8√æ----√æ√æ[source, Java]√æ----√æString a = bytes.read8bit();√æString b = bytes.readUtf8();√æString c = bytes.parse8bit(StopCharTesters.CONTROL_STOP);√æString d = bytes.parseUtf8(StopCharTesters.CONTROL_STOP);√æ----√æ√æBinary strings are prefixed with a https://github.com/OpenHFT/RFC/blob/master/Stop-Bit-Encoding/Stop-Bit-Encoding-1.0.adoc[Stop Bit Encoded] length.√æ√æ[source, Java]√æ----√æHexDumpBytes bytes = new HexDumpBytes();√æbytes.comment(""write8bit"").write8bit((String) null);√æbytes.comment(""writeUtf8"").writeUtf8(null);√æ√æSystem.out.println(bytes.toHexString());√æ√æString a = bytes.read8bit();√æString b = bytes.readUtf8();√æassertEquals(null, a);√æassertEquals(null, b);√æ----√æ√æprints√æ√æ----√æ80 00                                           # write8bit√æ80 00                                           # writeUtf8√æ----√æ√æNOTE: `80 00` is the stop bit encoding for `-1` or `~0`√æ√æ=== Compare and Set operation√æ√æIn binary, you can atomically replace an `int` or `long` on condition that it is an expected value.√æ√æ.Write two fields, remember where the `int` and `long` are√æ[source, Java]√æ----√æHexDumpBytes bytes = new HexDumpBytes();√æ√æbytes.comment(""s32"").writeUtf8(""s32"");√ælong s32 = bytes.writePosition();√æbytes.writeInt(0);√æ√æbytes.comment(""s64"").writeUtf8(""s64"");√ælong s64 = bytes.writePosition();√æbytes.writeLong(0);√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ03 73 33 32 00 00 00 00                         # s32√æ03 73 36 34 00 00 00 00 00 00 00 00             # s64√æ----√æ√æ.CAS two fields√æ[source, Java]√æ----√æassertTrue(bytes.compareAndSwapInt(s32, 0, Integer.MAX_VALUE));√æassertTrue(bytes.compareAndSwapLong(s64, 0, Long.MAX_VALUE));√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ03 73 33 32 ff ff ff 7f                         # s32√æ03 73 36 34 ff ff ff ff ff ff ff 7f             # s64√æ----√æ√æINFO: You might wonder, how is the hex dump updated as well as the binary? The `readPosition` actually holds the write position for both, which is why it has to be computed in this case.√æ√æ=== Stop bit compression√æ√æStop Bit encoding is one form of simple compression.  For each 7 bits set, a byte is used with the high bit set when there is another byte to write.√æ√æSee https://github.com/OpenHFT/RFC/blob/master/Stop-Bit-Encoding/Stop-Bit-Encoding-1.0.adoc[Stop Bit Encoding RFC] for more details√æ√æ.Writing with stop bit encoding√æ[source, Java]√æ----√æHexDumpBytes bytes = new HexDumpBytes();√æ√æfor (long i : new long[]{√æ        0, -1,√æ        127, -127,√æ        128, -128,√æ        1 << 14, 1 << 21,√æ        1 << 28, 1L << 35,√æ        1L << 42, 1L << 49,√æ        1L << 56, Long.MAX_VALUE,√æ        Long.MIN_VALUE}) {√æ    bytes.comment(i + ""L"").writeStopBit(i);√æ}√æ√æfor (double d : new double[]{√æ        0.0,√æ        -0.0,√æ        1.0,√æ        1.0625,√æ        -128,√æ        -Double.MIN_NORMAL,√æ        Double.NEGATIVE_INFINITY,√æ        Double.NaN,√æ        Double.POSITIVE_INFINITY}) {√æ    bytes.comment(d + """").writeStopBit(d);√æ}√æ√æSystem.out.println(bytes.toHexString());√æ----√æ√æprints√æ√æ----√æ00                                              # 0L√æ80 00                                           # -1L√æ7f                                              # 127L√æfe 00                                           # -127L√æ80 01                                           # 128L√æff 00                                           # -128L√æ80 80 01                                        # 16384L√æ80 80 80 01                                     # 2097152L√æ80 80 80 80 01                                  # 268435456L√æ80 80 80 80 80 01                               # 34359738368L√æ80 80 80 80 80 80 01                            # 4398046511104L√æ80 80 80 80 80 80 80 01                         # 562949953421312L√æ80 80 80 80 80 80 80 80 01                      # 72057594037927936L√æff ff ff ff ff ff ff ff 7f                      # 9223372036854775807L√æff ff ff ff ff ff ff ff ff 00                   # -9223372036854775808L√æ00                                              # 0.0√æ40                                              # -0.0√æ9f 7c                                           # 1.0√æ9f fc 20                                        # 1.0625√æe0 18                                           # -128.0√æc0 04                                           # -2.2250738585072014E-308√æff 7c                                           # -Infinity√æbf 7e                                           # NaN√æbf 7c                                           # Infinity√æ----√æ√æTo read these you need either `long x = bytes.readStopBit()` or `double d = bytes.readStopBitDouble()`√æ√æ=== BytesMarshallable objects√æ√æChronicle Bytes supports serializing simple objects where the type is not stored.  This is similar to`RawWire` in Chronicle Wire.√æ√æ[source, Java]√æ----√æ@NotNull MyByteable mb1 = new MyByteable(false, (byte) 1, (short) 2, '3', 4, 5.5f, 6, 7.7);√æ@NotNull MyByteable mb2 = new MyByteable(true, (byte) 11, (short) 22, 'T', 44, 5.555f, 66, 77.77);√æZonedDateTime zdt1 = ZonedDateTime.parse(""2017-11-06T12:35:56.775Z[Europe/London]"");√æZonedDateTime zdt2 = ZonedDateTime.parse(""2016-10-05T01:34:56.775Z[Europe/London]"");√æUUID uuid1 = new UUID(0x123456789L, 0xABCDEF);√æUUID uuid2 = new UUID(0x1111111111111111L, 0x2222222222222222L);√æ@NotNull MyScalars ms1 = new MyScalars(""Hello"", BigInteger.ONE, BigDecimal.TEN, zdt1.toLocalDate(), zdt1.toLocalTime(), zdt1.toLocalDateTime(), zdt1, uuid1);√æ@NotNull MyScalars ms2 = new MyScalars(""World"", BigInteger.ZERO, BigDecimal.ZERO, zdt2.toLocalDate(), zdt2.toLocalTime(), zdt2.toLocalDateTime(), zdt2, uuid2);√æ@NotNull MyNested mn1 = new MyNested(mb1, ms1);√æ@NotNull MyNested mn2 = new MyNested(mb2, ms2);√æbytes.comment(""mn1"").writeUnsignedByte(1);√æmn1.writeMarshallable(bytes);√æbytes.comment(""mn2"").writeUnsignedByte(2);√æmn2.writeMarshallable(bytes);√æ----√æ√æ.MyByteable data structure√æ[source, Java]√æ----√æclass MyByteable implements BytesMarshallable {√æ    boolean flag;√æ    byte b;√æ    short s;√æ    char c;√æ    int i;√æ    float f;√æ    long l;√æ    double d;√æ√æ    public MyByteable(boolean flag, byte b, short s, char c, int i, float f, long l, double d) {√æ        this.flag = flag;√æ        this.b = b;√æ        this.s = s;√æ        this.c = c;√æ        this.i = i;√æ        this.f = f;√æ        this.l = l;√æ        this.d = d;√æ    }√æ----√æ√æ.MyScalars data structure√æ[source, Java]√æ----√æclass MyScalars implements BytesMarshallable {√æ    String s;√æ    BigInteger bi;√æ    BigDecimal bd;√æ    LocalDate date;√æ    LocalTime time;√æ    LocalDateTime dateTime;√æ    ZonedDateTime zonedDateTime;√æ    UUID uuid;√æ√æ    public MyScalars(String s, BigInteger bi, BigDecimal bd, LocalDate date, LocalTime time, LocalDateTime dateTime, ZonedDateTime zonedDateTime, UUID uuid) {√æ        this.s = s;√æ        this.bi = bi;√æ        this.bd = bd;√æ        this.date = date;√æ        this.time = time;√æ        this.dateTime = dateTime;√æ        this.zonedDateTime = zonedDateTime;√æ        this.uuid = uuid;√æ    }√æ----√æ√æprints√æ√æ----√æ01                                              # mn1√æ                                                # byteable√æ      4e                                              # flag√æ      01                                              # b√æ      02 00                                           # s√æ      33                                              # c√æ      04 00 00 00                                     # i√æ      00 00 b0 40                                     # f√æ      06 00 00 00 00 00 00 00                         # l√æ      cd cc cc cc cc cc 1e 40                         # d√æ                                                # scalars√æ      05 48 65 6c 6c 6f                               # s√æ      01 31                                           # bi√æ      02 31 30                                        # bd√æ      0a 32 30 31 37 2d 31 31 2d 30 36                # date√æ      0c 31 32 3a 33 35 3a 35 36 2e 37 37 35          # time√æ      17 32 30 31 37 2d 31 31 2d 30 36 54 31 32 3a 33 # dateTime√æ      35 3a 35 36 2e 37 37 35 27 32 30 31 37 2d 31 31 # zonedDateTime√æ      2d 30 36 54 31 32 3a 33 35 3a 35 36 2e 37 37 35√æ      5a 5b 45 75 72 6f 70 65 2f 4c 6f 6e 64 6f 6e 5d # uuid√æ      24 30 30 30 30 30 30 30 31 2d 32 33 34 35 2d 36√æ      37 38 39 2d 30 30 30 30 2d 30 30 30 30 30 30 61√æ      62 63 64 65 66√æ02                                              # mn2√æ                                                # byteable√æ      59                                              # flag√æ      0b                                              # b√æ      16 00                                           # s√æ      54                                              # c√æ      2c 00 00 00                                     # i√æ      8f c2 b1 40                                     # f√æ      42 00 00 00 00 00 00 00                         # l√æ      e1 7a 14 ae 47 71 53 40                         # d√æ                                                # scalars√æ      05 57 6f 72 6c 64                               # s√æ      01 30                                           # bi√æ      01 30                                           # bd√æ      0a 32 30 31 36 2d 31 30 2d 30 35                # date√æ      0c 30 31 3a 33 34 3a 35 36 2e 37 37 35          # time√æ      17 32 30 31 36 2d 31 30 2d 30 35 54 30 31 3a 33 # dateTime√æ      34 3a 35 36 2e 37 37 35 2c 32 30 31 36 2d 31 30 # zonedDateTime√æ      2d 30 35 54 30 31 3a 33 34 3a 35 36 2e 37 37 35√æ      2b 30 31 3a 30 30 5b 45 75 72 6f 70 65 2f 4c 6f√æ      6e 64 6f 6e 5d 24 31 31 31 31 31 31 31 31 2d 31 # uuid√æ      31 31 31 2d 31 31 31 31 2d 32 32 32 32 2d 32 32√æ      32 32 32 32 32 32 32 32 32 32√æ----√æ√æ== Data driven tests√æ√æThe purpose of a Lambda function is to create a simple, highly reproducible, easily testable component.√æ√æOnce you have your data dumped as hexadecimal, you can create tests using that data, and make variations of those tests.√æ√æ==== What do we mean by a Lambda function?√æ√æIn this context a Lambda function is one which is entirely input driven and produces a list of messages (one or more outputs).√æ√æThe simplest Lambda function is stateless, however this has limited application.  They are useful for message translation.√æ√æIf you need a stateful Lambda function, you can consider the input to the function to be every message it has ever consumed.√æObviously this is inefficient, however with appropriate caches in your lamdba function, you can process and produce result incrementally.√æ√æ==== Data in and out.√æ√æWe module a Lambda function as having an interface for inputs and another for outputs.  These interfaces can be the same.√æ√æ.Sample interface for Lambda function√æ[source, Java]√æ----√æinterface IBytesMethod {√æ    @MethodId(0x81L) // <1>√æ    void myByteable(MyByteable byteable);√æ√æ    @MethodId(0x82L)√æ    void myScalars(MyScalars scalars);√æ√æ    @MethodId(0x83L)√æ    void myNested(MyNested nested);√æ}√æ----√æ<1> assign a unique id to each method to simplify decoding/encoding.√æ√æEach method needs a DTO to describe the data for that message.√æ√æ[source, Java]√æ----√æclass MyByteable implements BytesMarshallable {√æ    boolean flag;√æ    byte b;√æ    short s;√æ    char c;√æ    int i;√æ    float f;√æ    long l;√æ    double d;√æ....√æclass MyScalars implements BytesMarshallable {√æ    String s;√æ    BigInteger bi;√æ    BigDecimal bd;√æ    LocalDate date;√æ    LocalTime time;√æ    LocalDateTime dateTime;√æ    ZonedDateTime zonedDateTime;√æ    UUID uuid;√æ....√æclass MyNested implements BytesMarshallable {√æ    MyByteable byteable;√æ    MyScalars scalars;√æ....√æ----√æ√æThe implementation needs to take it's output interface and implement the input interface√æ√æ.A simple pass through implementation√æ[source, Java]√æ----√æstatic class IBMImpl implements IBytesMethod {√æ    final IBytesMethod out;√æ√æ    IBMImpl(IBytesMethod out) { this.out = out; }√æ√æ    @Override√æ    public void myByteable(MyByteable byteable) { out.myByteable(byteable); }√æ√æ    @Override√æ    public void myScalars(MyScalars scalars) { out.myScalars(scalars); }√æ√æ    @Override√æ    public void myNested(MyNested nested) { out.myNested(nested); }√æ}√æ√æ----√æ√æOnce we have interfaces, DTOs, and an implementation we can setup a test harness√æ√æ.Setup a test harness for a Lambda function√æ[source, Java]√æ----√æprotected void btmttTest(String input, String output) throws IOException {√æ    BytesTextMethodTester tester = new BytesTextMethodTester<>(√æ            input,√æ            IBMImpl::new,√æ            IBytesMethod.class,√æ            output);√æ    tester.run();√æ    assertEquals(tester.expected(), tester.actual());√æ}√æ----√æ√æThis allows us to give two files, one for expected inputs and one for expected outputs.√æ√æ[source, Java]√æ----√æ@Test√æpublic void run() throws IOException {√æ    btmttTest(""btmtt/prim-input.txt"", ""btmtt/prim-output.txt"");√æ}√æ----√æ√æNOTE: In this case the input and outputs are expected to be the same.√æ√æ.Sample input/output file√æ[source]√æ----√æ81 01                                           # myByteable√æ   4e                                              # flag√æ   01                                              # b√æ   02 00                                           # s√æ   33                                              # c√æ   04 00 00 00                                     # i√æ   00 00 b0 40                                     # f√æ   06 00 00 00 00 00 00 00                         # l√æ   cd cc cc cc cc cc 1e 40                         # d√æ### End Of Block√æ81 01                                           # myByteable√æ   59                                              # flag√æ   0b                                              # b√æ   16 00                                           # s√æ   54                                              # c√æ   2c 00 00 00                                     # i√æ   8f c2 b1 40                                     # f√æ   42 00 00 00 00 00 00 00                         # l√æ   e1 7a 14 ae 47 71 53 40                         # d√æ### End Of Block√æ82 01                                           # myScalars√æ   05 48 65 6c 6c 6f                               # s√æ   01 31                                           # bi√æ   02 31 30                                        # bd√æ   0a 32 30 31 37 2d 31 31 2d 30 36                # date√æ   0c 31 32 3a 33 35 3a 35 36 2e 37 37 35          # time√æ   17 32 30 31 37 2d 31 31 2d 30 36 54 31 32 3a 33 # dateTime√æ   35 3a 35 36 2e 37 37 35 27 32 30 31 37 2d 31 31 # zonedDateTime√æ   2d 30 36 54 31 32 3a 33 35 3a 35 36 2e 37 37 35√æ   5a 5b 45 75 72 6f 70 65 2f 4c 6f 6e 64 6f 6e 5d # uuid√æ   24 30 30 30 30 30 30 30 31 2d 32 33 34 35 2d 36√æ   37 38 39 2d 30 30 30 30 2d 30 30 30 30 30 30 61√æ   62 63 64 65 66√æ### End Of Block√æ83 01                                           # myNested√æ                                                # byteable√æ      59                                              # flag√æ      0b                                              # b√æ      16 00                                           # s√æ      54                                              # c√æ      2c 00 00 00                                     # i√æ      8f c2 b1 40                                     # f√æ      42 00 00 00 00 00 00 00                         # l√æ      e1 7a 14 ae 47 71 53 40                         # d√æ                                                # scalars√æ      05 57 6f 72 6c 64                               # s√æ      01 30                                           # bi√æ      01 30                                           # bd√æ      0a 32 30 31 36 2d 31 30 2d 30 35                # date√æ      0c 30 31 3a 33 34 3a 35 36 2e 37 37 35          # time√æ      17 32 30 31 36 2d 31 30 2d 30 35 54 30 31 3a 33 # dateTime√æ      34 3a 35 36 2e 37 37 35 2c 32 30 31 36 2d 31 30 # zonedDateTime√æ      2d 30 35 54 30 31 3a 33 34 3a 35 36 2e 37 37 35√æ      2b 30 31 3a 30 30 5b 45 75 72 6f 70 65 2f 4c 6f√æ      6e 64 6f 6e 5d 24 31 31 31 31 31 31 31 31 2d 31 # uuid√æ      31 31 31 2d 31 31 31 31 2d 32 32 32 32 2d 32 32√æ      32 32 32 32 32 32 32 32 32 32√æ### End Of Block√æ### End Of Test√æ----√æ√æIn this case, the test calls the methods with the matching method ids which in turn uses the same ids to encode the output.√æ√æNOTE: Creating and maintain such tests can be an overhead you don't need.  In this case, you can use Chronicle Wire's YAML testing format to check functionality. WIre can be used for most of the tests even if you intend to use Bytes for production.√æ√æ=== Comparison of access to native memory√æ√æ|===√æ| Access | ByteBuffer | Netty IOBuffer  | Aeron UnsafeBuffer | Chronicle Bytes√æ√æ| Read/write primitives in native memory√æ| yes√æ| yes√æ| yes√æ| yes√æ√æ| Separate Mutable interfaces√æ| run time check√æ| run time check√æ|  yes√æ|  yes√æ√æ| Read/Write UTF8 strings√æ|  no√æ|   no√æ| String√æ|  any CharSequence + Appendable√æ√æ| Read/Write ISO-8859-1 strings√æ| no√æ| no√æ| ?√æ| any CharSequence + Appendable√æ√æ| Support Endianness√æ| Big and Little√æ| Big and Little√æ| Big and Little√æ| Native only√æ√æ| Size of buffer√æ| 31-bit√æ| 31-bit√æ| 31-bit√æ| 63-bit√æ√æ| Elastic ByteBuffers√æ| no√æ| yes√æ| no√æ| yes√æ√æ| Disable bounds checks√æ| no√æ| no√æ| set globally√æ| by buffer√æ√æ| Wrap an address√æ| no√æ| no√æ| yes√æ| yes√æ√æ| Thread safe read/write, CAS and atomic add operations√æ| no√æ| no√æ| int; long√æ| int; long; float and double√æ√æ| Streaming access√æ| yes√æ| yes√æ| no√æ| yes√æ√æ| Deterministic release of memory√æ| Internal API√æ| Internal API√æ| Caller's responsibility√æ| yes√æ√æ| Separate read and write position√æ| no√æ| yes√æ| na√æ| yes√æ|===√æ√æ=== View Chronicle-Bytes in the debugger√æ√æWhen using intellij idea, you can set up a custom renderer to view the bytes, see the images below :√æ√æimage::images/customize-data-views-menu.tiff[]√æ√æimage::images/customize-data-views.png[]"
lite-os/packages_apps_Settings,1018766,0,1,1,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",13,Java,"{'mk': 2, 'xml': 2, '': 3, 'cfg': 1, 'flags': 1, 'py': 1}",44684,4,0,243,1,4262,True,0,0,0,0,0,20,0,0,8,0,0,0,0,0,0,0,69,0,,,
epics-base/jca,885,1,12,7,Organization,False,Java Channel Access client API,https://www.javadoc.io/doc/org.epics/jca/latest/index.html,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",11,Java,"{'': 1, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 2}",276,2,10,12,0,3919,True,11,17,0,0,0,22,0,0,7,0,2,6,12,12,7,0,24,1,,,"# jca [![Build Status](https://travis-ci.org/epics-base/jca.svg?branch=master)](https://travis-ci.org/epics-base/jca)√æ√æJava Channel Access client and server API and a pure java implementation for both.√æ√æ### Java Requirements√æ√æ- Java 8 or later JDK (e.g., [Oracle Java SE](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html))√æ- [Maven 2.x](https://maven.apache.org/)√æ√æ### Download jca√æ√æ**Latest release**  √æ√æThe jca artifacts are hosted on maven centeral and can be downloaded from https://mvnrepository.com/artifact/org.epics/jca  √æ√æYou can also directly download the jca jars along with their sources and javadocs from    √æ[jca-2.4.3 jars](https://repo1.maven.org/maven2/org/epics/jca/2.4.3/)√æ√æThe javadocs are also available online:  √æ[jca-2.4.3-javadocs](https://www.javadoc.io/doc/org.epics/jca/latest/index.html)√æ√æ**Development Release**  √æYou can also download the lastest development snapshots from the sonatype snapshot repository√æ√æ[Download jca-2.4.4-SNAPSHOT jars](https://oss.sonatype.org/content/repositories/snapshots/org/epics/jca/2.4.4-SNAPSHOT/)√æ√æor add the sonatype repository to your pom√æ√æ```√æ<!-- Explicitly declare snapshot repository -->√æ<repositories>√æ  <repository>√æ    <id>sonatype-nexus-snapshots</id>√æ    <name>OSS Snapshots</name>√æ    <url>https://oss.sonatype.org/content/repositories/snapshots</url>√æ  </repository>√æ</repositories>√æ<dependencies>√æ  <dependency>√æ    <groupId>org.epics</groupId>√æ    <artifactId>jca</artifactId>√æ    <version>2.4.3-SNAPSHOT</version>√æ  </dependency>√æ</dependencies>√æ```√æ√æ**Archived Release**  √æ√æOlder released of jca are archived [here](https://repo1.maven.org/maven2/org/epics/jca/)√æ√æ### Build/Install√æ√æClone the Git repository and run a Maven `install` in the top directory.√æ```√æ$ git clone https://github.com/epics-base/jca.git√æ$ cd jca√æ$ mvn install√æ```√æ### Getting Started√æ√æThe [BasicExamples](https://github.com/epics-base/jca/blob/master/test/gov/aps/jca/test/BasicExample.java) shows a simple example on how to connect, read, write, and monitor a pv."
DJI-Mobile-SDK-Tutorials/Android-GEODemo,127389,6,8,6,Organization,False,"In this tutorial, you will learn how to use the ""DJIFlyZoneManager"" and ""DJIFlyZoneInformation"" of DJI Mobile SDK to get the fly zone information, and unlock authorization fly zones. ",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",4,Java,"{'': 1, 'txt': 1, 'md': 1}",36,1,19,2,0,1384,True,3,0,1,0,0,0,0,0,7,0,1,1,6,3,0,0,31,0,,,"# Android-GEODemo√æ√æ## Introduction√æ√æIn this tutorial, you will learn how to use the ""DJIFlyZoneManager"" and ""DJIFlyZoneInformation"" of DJI Mobile SDK to get the fly zone information, and unlock authorization fly zones. √æ√æ## Requirements√æ√æ - Android Studio 1.5+√æ - Android System 4.1+√æ - DJI Android SDK 4.12√æ√æ## Tutorial√æ√æFor this demo's tutorial: **DJI GEO System Tutorial**, please refer to <https://developer.dji.com/mobile-sdk/documentation/android-tutorials/GEODemo.html>.√æ√æ> Note: The demo's tutorial will be updated to Android SDK 4.10 soon.√æ√æ## Feedback√æ√æWe‚Äôd love to hear your feedback on this demo and tutorial.√æ√æPlease use **DJI Developer Forum** [dji-forum](https://forum.dji.com/forum-139-1.html?from=developer) or **email** [dev@dji.com](dev@dji.com) when you meet any problems of using this demo. At a minimum please let us know:√æ√æ* Which DJI Product you are using?√æ* Which Android Device and Android System version you are using?√æ* Which Android Studio version you are using?√æ* A short description of your problem includes debugging logs or screenshots.√æ* Any bugs or typos you come across.√æ√æ## License√æ√æAndroid-GEODemo is available under the MIT license. Please see the LICENSE file for more info.√æ√æ## Join Us√æ√æDJI is looking for all kinds of Software Engineers to continue building the Future of Possible. Available positions in Shenzhen, China and around the world. If you are interested, please send your resume to <software-sz@dji.com>. For more details, and list of all our global offices, please check <https://we.dji.com/jobs_en.html>.√æ√æDJI ÊãõËΩØ‰ª∂Â∑•Á®ãÂ∏àÂï¶ÔºåbasedÂú®Ê∑±Âú≥ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÂíåÊàë‰ª¨‰∏ÄËµ∑ÊääDJI‰∫ßÂìÅÂÅöÂæóÊõ¥Â•ΩÔºåËØ∑ÂèëÈÄÅÁÆÄÂéÜÂà∞ <software-sz@dji.com>.  ËØ¶ÊÉÖËØ∑ÊµèËßà <https://we.dji.com/zh-CN/recruitment>."
apache/mina-sshd,14985,271,31,178,Organization,False,Mirror of Apache MINA SSHD,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",33,Java,"{'': 2, 'md': 2, 'txt': 4, 'xml': 7}",2048,4,30,37,4,4218,False,,,,,9,127,2,26,0,0,4,37,24155,19398,30,0,2,869,,,"![Apache MINA SSHD](https://mina.apache.org/assets/img/header-sshd.png ""Apache MINA SSHD"")√æ# Apache MINA SSHD√æ√æApache SSHD is a 100% pure java library to support the SSH protocols on both the client and server side. This library can√æleverage [Apache MINA](http://mina.apache.org), a scalable and high performance asynchronous IO library. SSHD does not really√æaim at being a replacement for the SSH client or SSH server from Unix operating systems, but rather provides support for Java√æbased applications requiring SSH support.√æ√æ# Supported standards√æ√æ## Reference implementation documentation√æ* [RFC 4251 - The Secure Shell (SSH) Protocol Architecture](https://tools.ietf.org/html/rfc4251)√æ* [RFC 4252 - The Secure Shell (SSH) Authentication Protocol](https://tools.ietf.org/html/rfc4252)√æ* [RFC 4253 - The Secure Shell (SSH) Transport Layer Protocol](https://tools.ietf.org/html/rfc4253)√æ* [RFC 4254 - The Secure Shell (SSH) Connection Protocol](https://tools.ietf.org/html/rfc4254)√æ* [RFC 4256 - Generic Message Exchange Authentication for the Secure Shell Protocol (SSH)](https://tools.ietf.org/html/rfc4256)√æ* [RFC 4335 - The Secure Shell (SSH) Session Channel Break Extension](https://tools.ietf.org/html/rfc4335)√æ* [RFC 4344 - The Secure Shell (SSH) Transport Layer Encryption Modes](https://tools.ietf.org/html/rfc4344)√æ* [RFC 4345 - Improved Arcfour Modes for the Secure Shell (SSH) Transport Layer Protocol](https://tools.ietf.org/html/rfc4345)√æ* [RFC 4419 - Diffie-Hellman Group Exchange for the Secure Shell (SSH) Transport Layer Protocol](https://tools.ietf.org/html/rfc4419)√æ* [RFC 4716 - The Secure Shell (SSH) Public Key File Format](https://tools.ietf.org/html/rfc4716)√æ* [RFC 5208 - Public-Key Cryptography Standards (PKCS) #8 - version 1.2](https://tools.ietf.org/html/rfc5208)√æ* [RFC 5480 - Elliptic Curve Cryptography Subject Public Key Information](https://tools.ietf.org/html/rfc5480)√æ* [RFC 5656 - Elliptic Curve Algorithm Integration in the Secure Shell Transport Layer](https://tools.ietf.org/html/rfc5656)√æ* [RFC 5915 - Elliptic Curve Private Key Structure](https://tools.ietf.org/html/rfc5915)√æ* [RFC 6668 - SHA-2 Data Integrity Verification for the Secure Shell (SSH) Transport Layer Protocol](https://tools.ietf.org/html/rfc6668)√æ* [RFC 8160 - IUTF8 Terminal Mode in Secure Shell (SSH)](https://tools.ietf.org/html/rfc8160)√æ* [RFC 8268 - More Modular Exponentiation (MODP) Diffie-Hellman (DH) Key Exchange (KEX) Groups for Secure Shell (SSH)](https://tools.ietf.org/html/rfc8268)√æ* [RFC 8308 - Extension Negotiation in the Secure Shell (SSH) Protocol](https://tools.ietf.org/html/rfc8308)√æ    * **Note:** - the code contains [**hooks**](./docs/event-listeners.md#kexextensionhandler) for implementing the RFC but√æ    beyond allowing convenient support for the required protocol details, it does not implement any default logic that handles√æ    the messages or manages the actual extension negotiation (though some **experimental** code is available).√æ* [RFC 8332 - Use of RSA Keys with SHA-256 and SHA-512 in the Secure Shell (SSH) Protocol](https://tools.ietf.org/html/rfc8332)√æ    * **Note:** - the server side supports these signatures by default. The client side requires specific√æ    initialization - see [section 3.3](https://tools.ietf.org/html/rfc8332#section-3.3) and also the√æ    above mentioned hooks for [RFC 8308](https://tools.ietf.org/html/rfc8308).√æ* [Key Exchange (KEX) Method Updates and Recommendations for Secure Shell](https://tools.ietf.org/html/draft-ietf-curdle-ssh-kex-sha2-03)√æ* [OpenSSH support for U2F/FIDO security keys](https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.u2f)√æ    * **Note:** the server side supports these keys by default. The client side requires specific initialization√æ* [OpenSSH public-key certificate authentication system for use by SSH](https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys)√æ* SFTP version 3-6 + extensions√æ    * `supported` - [DRAFT 05 - section 4.4](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-05.tx)√æ    * `supported2` - [DRAFT 13 section 5.4](https://tools.ietf.org/html/draft-ietf-secsh-filexfer-13#page-10)√æ    * `versions` - [DRAFT 09 Section 4.6](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * `vendor-id` - [DRAFT 09 - section 4.4](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * `acl-supported` - [DRAFT 11 - section 5.4](https://tools.ietf.org/html/draft-ietf-secsh-filexfer-11)√æ    * `newline` - [DRAFT 09 Section 4.3](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * `md5-hash`, `md5-hash-handle` - [DRAFT 09 - section 9.1.1](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * `check-file-handle`, `check-file-name` - [DRAFT 09 - section 9.1.2](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * `copy-file`, `copy-data` - [DRAFT 00 - sections 6, 7](http://tools.ietf.org/id/draft-ietf-secsh-filexfer-extensions-00.txt)√æ    * `space-available` - [DRAFT 09 - section 9.3](http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/draft-ietf-secsh-filexfer-09.txt)√æ    * Several [OpenSSH SFTP extensions](https://github.com/openssh/openssh-portable/blob/master/PROTOCOL)√æ√æ## Implemented/available support√æ√æ* **Ciphers**: aes128cbc, aes128ctr, aes192cbc, aes192ctr, aes256cbc, aes256ctr, arcfour128, arcfour256, blowfishcbc, tripledescbc√æ* **Digests**: md5, sha1, sha224, sha256, sha384, sha512√æ* **Macs**: hmacmd5, hmacmd596, hmacsha1, hmacsha196, hmacsha256, hmacsha512, hmac-sha2-256-etm@openssh.com√æ, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com√æ* **Key exchange**: diffie-hellman-group1-sha1, diffie-hellman-group-exchange-sha256, diffie-hellman-group14-sha1, diffie-hellman-group14-sha256√æ, diffie-hellman-group15-sha512, diffie-hellman-group16-sha512, diffie-hellman-group17-sha512, diffie-hellman-group18-sha512√æ, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521√æ* **Compressions**: none, zlib, zlib@openssh.com√æ* **Signatures/Keys**: ssh-dss, ssh-rsa, rsa-sha2-256, rsa-sha2-512, nistp256, nistp384, nistp521√æ, ed25519 (requires `eddsa` optional module), sk-ecdsa-sha2-nistp256@openssh.com, sk-ssh-ed25519@openssh.com√æ, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com, ssh-ed25519-cert-v01@openssh.com√æ, ecdsa-sha2-nistp256-cert-v01@openssh.com, ecdsa-sha2-nistp384-cert-v01@openssh.com, ecdsa-sha2-nistp521-cert-v01@openssh.com√æ√æ# [Release notes](./CHANGES.md)√æ√æ# Core requirements√æ√æ* Java 8+ (as of version 1.3)√æ√æ* [Slf4j](http://www.slf4j.org/)√æ√æThe code only requires the core abstract [slf4j-api](https://mvnrepository.com/artifact/org.slf4j/slf4j-api) module. The actual√æimplementation of the logging API can be selected from the many existing adaptors.√æ√æ# Basic artifacts structure√æ√æ* *sshd-common* - contains basic classes used throughout the project as well as code that does not require client or server network support.√æ√æ* *sshd-core* - contains the basic SSH client/server code implementing the connection, transport, channels, forwarding, etc..√æ    * *sshd-mina*, *sshd-netty* - replacements for the default NIO2 connector used to establish and manage network connections using√æ[MINA](https://mina.apache.org/mina-project/index.html) and/or [Netty](https://netty.io/) libraries respectively.√æ√æ* *sshd-sftp* - contains the server side SFTP subsystem and the SFTP client code.√æ    * *sshd-spring-sftp* - contains a [Spring Integration](https://spring.io/projects/spring-integration) compatible SFTP adapter√æ√æ* *sshd-scp* - contains the server side SCP command handler and the SCP client code.√æ√æ* *sshd-ldap* - contains server-side password and public key authenticators that use an LDAP server.√æ√æ* *sshd-git* - contains replacements for [JGit](https://www.eclipse.org/jgit/) SSH session factory.√æ√æ* *sshd-osgi* - contains an artifact that combines *sshd-common* and *sshd-core* so it can be deployed in OSGi environments.√æ√æ* *sshd-putty* - contains code that can parse [PUTTY](https://www.putty.org/) key files.√æ√æ* *sshd-openpgp* - contains code that can parse [OpenPGP](https://www.openpgp.org/) key files (with some limitations - see relevant section)√æ√æ* *sshd-cli* - contains simple templates for command-line client/server - used to provide look-and-feel similar to the Linux *ssh/sshd* commands.√æ√æ* *sshd-contrib* - **experimental** code that is currently under review and may find its way into one of the other artifacts√æ(or become an entirely new artifact - e.g., *sshd-putty* evolved this way).√æ√æ# [Optional dependencies](./docs/dependencies.md)√æ√æ# Quick reference√æ√æ## [Set up an SSH client in 5 minutes](./docs/client-setup.md)√æ√æ## [Embedding an SSHD server instance in 5 minutes](./docs/server-setup.md)√æ√æ# SSH functionality breakdown√æ√æ## [Security providers setup](./docs/security-providers.md)√æ√æ## [Commands infrastructure](./docs/commands.md)√æ√æ## [SCP](./docs/scp.md)√æ√æ## [SFTP](./docs/sftp.md)√æ√æ## [Port forwarding](./docs/port-forwarding.md)√æ√æ## [Internal support classes](./docs/internals.md)√æ√æ## [Event listeners and handlers](./docs/event-listeners.md)√æ√æ## [Command line clients](./docs/cli.md)√æ√æ## [GIT support](./docs/git.md)√æ√æ## [Configuration/data files parsing support](./docs/files-parsing.md)√æ√æ## [Extension modules](./docs/extensions.md)"
Hygieia/hygieia-core,2846,18,13,150,Organization,False,"Core components for Hygieia (model, repositories, utilities etc)",https://hygieia.github.io/hygieia-core/index.html,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 3, 'properties': 1, 'yml': 1, 'md': 2, 'xml': 1}",225,4,51,28,3,609,True,1,9,0,2,1,217,0,58,16,0,0,0,0,0,0,0,52,0,,,"## Hygieia Core √æ√æ[![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ[![Maven Central](https://img.shields.io/maven-central/v/com.capitalone.dashboard/core.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:%22com.capitalone.dashboard%22%20AND%20a:%22core%22)√æ[![Build Status](https://travis-ci.com/Hygieia/hygieia-core.svg?branch=master)](https://travis-ci.com/Hygieia/hygieia-core)√æ[![Total alerts](https://img.shields.io/lgtm/alerts/g/Hygieia/hygieia-core.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Hygieia/hygieia-core/alerts/)√æ[![Language grade: Java](https://img.shields.io/lgtm/grade/java/g/Hygieia/hygieia-core.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Hygieia/hygieia-core/context:java)√æ[![Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ<br>√æ<br>√æCore components for Hygieia (model, repositories, utilities etc)√æ<br>√æ<br>√æThe README is in the [gh-pages](https://github.com/capitalone/Hygieia/blob/gh-pages/pages/hygieia/core/core.md) branch. Please update it there."
donbeave/graphql-java-datetime,492,76,6,17,User,False,GraphQL ISO Date is a set of RFC 3339 compliant date/time scalar types to be used with graphql-java.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",25,Java,"{'': 4, 'yml': 1, 'md': 1, 'gradle': 2, 'sh': 6, 'properties': 1, 'bat': 1}",145,2,10,6,6,1079,True,1,13,1,1,0,12,0,3,7,0,3,43,757,315,0,0,72,,68,,"# graphql-java-datetime &middot; [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/donbeave/graphql-java-datetime/blob/master/LICENSE) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/donbeave/graphql-java-datetime/pulls)√æGraphQL ISO Date is a set of RFC 3339 compliant date/time scalar types to be used with [graphql-java](https://github.com/graphql-java/graphql-java).√æ√æ[![Build Status](https://travis-ci.org/donbeave/graphql-java-datetime.svg?branch=master)](https://travis-ci.org/donbeave/graphql-java-datetime)√æ[![Latest Dev Build](https://api.bintray.com/packages/donbeave/maven/graphql-java-datetime/images/download.svg)](https://bintray.com/donbeave/maven/graphql-java-datetime/_latestVersion)√æ√æ# Summary√æ√æA set of ISO 33601, RFC 3339 compatible date time scalars for GraphQL Java implementation ([graphql-java](https://github.com/graphql-java/graphql-java)) and GraphQL Java Kickstart ([com.graphql-java-kickstart:graphql-spring-boot-starter](https://github.com/graphql-java-kickstart/graphql-spring-boot)).√æ√æ# Serialization√æ√æ**java.util.Date**, **java.time.LocalDate**, **java.time.LocalDateTime**√æ√æ| Format                       | JSON String              |√æ|:-----------------------------|:-------------------------|√æ| yyyy-MM-dd'T'HH:MM:ss.SSS'Z' | 2017-07-09T13:14:45.947Z |√æ| yyyy-MM-dd'T'HH:MM:ss'Z'     | 2017-07-09T11:54:42Z     |√æ| yyyy-MM-dd'T'HH:MM:ss        | 2017-07-09T11:54:42      |√æ| yyyy-MM-dd                   | 2017-07-09               |√æ√æ**java.time.LocalTime**√æ√æ| Format       | JSON String  |√æ|:-------------|:-------------|√æ| HH:MM:ss.SSS | 17:59:59.129 |√æ| HH:MM:ss     | 17:59:59     |√æ| HH:MM        | 17:59        |√æ√æ# Usage√æ√æ## Spring Boot√æ√æAdd `graphql-datetime-spring-boot-starter` or `graphql-datetime-spring-boot-starter-webflux` starter (according to your spring boot stack) to your project first.√æ√æ### Installation√æ√æ#### Maven√æ√æAdd folowing to your `pom.xml`:√æ√æfor **Spring MVC**:√æ√æ```xml√æ<dependency>√æ  <groupId>com.zhokhov.graphql</groupId>√æ  <artifactId>graphql-datetime-spring-boot-starter</artifactId>√æ  <version>2.1.0</version>√æ</dependency>√æ```√æ√æor √æ√æfor **Spring WebFlux**:√æ√æ```xml√æ<dependency>√æ  <groupId>com.zhokhov.graphql</groupId>√æ  <artifactId>graphql-datetime-spring-boot-starter-webflux</artifactId>√æ  <version>2.1.0</version>√æ</dependency>√æ```√æ√æ#### Gradle√æ√æAdd folowing to your `build.gradle`:√æ√æfor **Spring MVC**:√æ√æ```groovy√æimplementation(""com.zhokhov.graphql:graphql-datetime-spring-boot-starter:2.1.0"")√æ```√æ√æor √æ√æfor **Spring WebFlux**:√æ√æ```groovy√æimplementation(""com.zhokhov.graphql:graphql-datetime-spring-boot-starter-webflux:2.1.0"")√æ```√æ√æ### Scalars√æ√æAdd these scalars to your `.graphqls` schema file:√æ√æ```graphql√æ# java.util.Date implementation√æscalar Date√æ√æ# java.time.LocalDate implementation√æscalar LocalDate√æ√æ# java.time.LocalDateTime implementation√æscalar LocalDateTime√æ√æ# java.time.LocalTime implementation√æscalar LocalTime√æ√æ# javal.time.OffsetDateTime implementation√æscalar OffsetDateTime √æ```√æ√æYou can rename the scalar however you want with by simply adding the following properties to you application.yaml:√æ√æ```yaml√ægraphql:√æ  datetime:√æ    scalars:√æ      date:√æ        scalarName: MyDate√æ      localDate:√æ        scalarName: MyLocalDate√æ      localDateTime:√æ        scalarName: MyLocalDateTime√æ      localTime:√æ        scalarName: MyLocalTime√æ      offsetDateTime:√æ        scalarName: MyOffsetDateTime√æ```√æ√æA custom format can be set for LocalDate and LocalDateTime only using the following properties in application.yaml√æ√æ```yaml√ægraphql:√æ  datetime:√æ    scalars:√æ      localDate:√æ        format: MM/dd/yyyy√æ      localDateTime:√æ        format: yyyy-MM-dd'T'HH:mm:ss√æ```√æ√æYou can enable automatic zone conversion by adding the following property to your application.yaml. This will√æautomatically convert between UTC and the default TimeZone for `LocalDateTime`:√æ√æ```yaml√ægraphql:√æ  datetime:√æ    scalars:√æ      zone-conversion-enabled: true√æ```√æ√æIf using OffsetDateTime in order to present the offset and disable the automatic convertion to UTC from Jackson you should√æset to your application.yml the following:√æ√æ```yaml√æspring:√æ  jackson:√æ    deserialization:√æ      adjust-dates-to-context-time-zone: false√æ```√æ√æ### Sample√æ√æNow you can use these scalars in your application. Here is graphql-datetime spring boot sample applications:√æ - mvc: [graphql-datetime-sample-app](graphql-datetime-sample-app/)√æ - weblux: [graphql-datetime-sample-app-webflux](graphql-datetime-sample-app-webflux/)√æ√æ## Bugs√æ√æTo report any bug, please use the project [Issues](https://github.com/donbeave/graphql-java-datetime/issues/new) section on GitHub.√æ√æ## Contributing√æ√æPlease contribute using [Github Flow](https://guides.github.com/introduction/flow/). Create a branch, add commits, and [open a pull request](https://github.com/donbeave/graphql-java-datetime/compare/).√æ√æ## License√æ√æCopyright ¬© 2017-2020 [Alexey Zhokhov](http://www.zhokhov.com). All rights reserved.√æ√æThis project is licensed under the Apache License, Version 2.0 - see the [LICENSE](LICENSE) file for details."
Arvato-Systems/t9t,12817,0,1,1,User,False,t9t framework - backend,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",137,Java,"{'': 4, 'txt': 1, 'md': 1, 'xml': 1}",22,1,3,1,0,308,True,0,0,0,0,0,0,0,0,9,0,1,7,1765,543,0,0,3,,4,,# t9t√æBackend of the Arvato Systems t9t framework
appian/integration-sdk-examples,326,6,14,27,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 3, 'md': 1}",53,3,1,13,0,619,True,0,0,0,0,0,33,0,1,8,0,1,2,115,8,0,0,51,0,,,"# Integration SDK Examples√æ√æThis repo provides Appian partners with examples of how to create Connected System Plug-ins and Component Plug-ins.√æ√æ## Connected System Plug-in (CSP) SDK√æThe Connected System Plug-in (CSP) SDK gives developers a toolkit for providing designers with simple, point-click integration experiences. With the SDK, developers can create Connected System Plug-ins that appear alongside out-of-the-box Connected Systems like Google Cloud Natural Language or Amazon Machine Learning in the Appian Designer UI.√æ√æ## Component Plug-in (CP) and Client API√æThe Client API in the CSP SDK enables developers to build more complex Component Plug-ins with the support of server-side, java-based Client APIs. These Client APIs have access to the configurations stored in their parent Connected System.√æ√æ## License√æApache 2.0"
bitstadium/HockeySDK-Android,4239,285,35,140,Organization,False,HockeyApp was retired and the SDKs are deprecated. Please use App Center instead.,https://github.com/microsoft/appcenter-sdk-android,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",1594,11,47,48,0,3121,True,0,204,0,0,0,231,0,0,11,1,0,0,0,0,0,0,39,4,,,"[![Slack Status](https://slack.hockeyapp.net/badge.svg)](https://slack.hockeyapp.net)√æ√æ## Version 5.2.0√æ√æHockeySDK-Android implements support for using HockeyApp in your Android applications.√æ√æThe following features are currently supported:√æ√æ1. **Crash Reporting:** If your app crashes, a crash log is written to the device's storage. If the user starts the app again, they will be asked to submit the crash report to HockeyApp. This works for both beta and live apps, i.e. those submitted to Google Play or other app stores. Crash logs contain viable information for you to help resolve the issue. Furthermore, you as a developer can add additional information to the report as well.√æ√æ2. **User Metrics:** Understand user behavior to improve your app. Track usage through daily and monthly active users, monitor crash impacted users, as well as customer engagement through session count.√æ√æ3. **Update alpha/beta apps:** The app will check with HockeyApp if a new version for your alpha/beta build is available. If yes, it will show a dialog to users and let them see the release notes, the version history and start the installation process right away. You can even force the installation of certain updates.√æ√æ4. **Feedback:** Besides crash reports, collecting feedback from your users from within your app is a great option to help with improving your app. You act on and answer feedback directly from the HockeyApp backend.√æ√æ5. **Authenticate:** To help you stay in control of closed tester groups you can identify and authenticate users against your registered testers with the HockeyApp backend.√æ√æ√æ## 1. Setup√æ√æIt is super easy to use HockeyApp in your Android app. Have a look at our [documentation](https://support.hockeyapp.net/kb/client-integration-android/hockeyapp-for-android-sdk) and onboard your app within minutes.√æ√æ## 2. Documentation√æ√æPlease visit [our landing page](https://support.hockeyapp.net/kb/client-integration-android) as a starting point for all of our documentation.√æ√æPlease check out our [getting started documentation](https://support.hockeyapp.net/kb/client-integration-android/hockeyapp-for-android-sdk), [change log](https://github.com/bitstadium/HockeySDK-Android/releases/tag/5.2.0), [java doc](https://www.hockeyapp.net/help/sdk/android/5.2.0/index.html) as well as our [troubleshooting section](https://support.hockeyapp.net/kb/client-integration-android/hockeyapp-for-android-sdk#troubleshooting).√æ√æ## 3. Contributing√æ√æWe're looking forward to your contributions via pull requests to our [repo on GitHub](https://github.com/bitstadium/HockeySDK-Android).√æ√æ### 3.1 Development environment√æ√æ* We are using Macs ourselves, but any OS should work.√æ* The latest stable release of Android Studio√æ√æ### 3.2 Code of Conduct√æ√æThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.√æ√æ### 3.3 Contributor License√æ√æYou must sign a [Contributor License Agreement](https://cla.microsoft.com/) before submitting your pull request. To complete the Contributor License Agreement (CLA), you will need to submit a request via the [form](https://cla.microsoft.com/) and then electronically sign the CLA when you receive the email containing the link to the document. You need to sign the CLA only once to cover submission to any Microsoft OSS project.√æ√æ## 4. Contact√æ√æIf you have further questions or are running into trouble that cannot be resolved by any of the steps [in our troubleshooting section](https://support.hockeyapp.net/kb/client-integration-android/hockeyapp-for-android-sdk#6-troubleshooting), feel free to open an issue here, contact us at [support@hockeyapp.net](mailto:support@hockeyapp.net) or join our [Slack](https://slack.hockeyapp.net)."
StringCare/GradlePlugin,3733,11,1,2,Organization,False,Gradle plugin for obfuscating strings at compilation time (Groovy - Java),,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1}",97,5,9,1,0,927,True,1,2,0,0,0,14,0,0,9,0,0,0,0,0,0,0,4,1,,,"[![version][badge]][link]√æ√æ#### [Wiki](https://github.com/StringCare/AndroidLibrary/wiki)√æ√æ√æLicense√æ-------√æ    Copyright 2019 StringCare [üêí SpaceMonkeys]√æ√æ    Licensed under the Apache License, Version 2.0 (the ""License"");√æ    you may not use this file except in compliance with the License.√æ    You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ    Unless required by applicable law or agreed to in writing, software√æ    distributed under the License is distributed on an ""AS IS"" BASIS,√æ    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ    See the License for the specific language governing permissions and√æ    limitations under the License.√æ    √æ[link]: https://github.com/StringCare/GradlePlugin√æ[badge]: https://img.shields.io/bintray/v/efff/maven/StringCareAndroidPlugin.svg"
CPE-OAuth/servicestage-java-client,84,1,1,3,User,False,The ServiceStage Client provides a simple library to interact with Huawei Cloud's ServiceStage service,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 3, 'xml': 2, 'txt': 1, 'md': 1, 'bat': 1}",30,3,1,4,0,616,True,0,0,0,0,0,4,0,0,8,0,0,0,0,0,0,0,15,,9,,"<!--√æCopyright 2016 - 2018 Huawei Technologies Co., Ltd. All rights reserved.√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ     http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ-->√æ√æServiceStage Client (Java)√æ==========================√æ√æThe ServiceStage Client provides a simple library to interact with Huawei Cloud's ServiceStage service.√æ√æFeatures√æ--------√æ√æ- create application√æ- update application√æ- upload binary files to SWR√æ- check application status√æ- get servicestage metadata√æ√æInstallation√æ------------√æ√æAdd the client as maven dependency.√æ√æBuild√æ-----√æ√æ`mvn clean package -DskipTests -DfinalName=servicestage-client` to get output jar file with dependencies.√æ√æ√æDevelopment√æ-----------√æ√æImport into Eclipse as a Maven Project.√æ√æContributing√æ------------√æ√æFollow the instructions under [Development](development) to get started.√æ√æ### Formatting√æ√æBefore submitting changes, make sure to format the code correctly, this will make merging code easier.√æ√æImport formatter profile:√æ- `Window > Preferences > Java > Code Style > Formatter`√æ- Click Import and Select `JavaFormatter.xml` from the project's root directory.√æ√æNext, right-click on the source packages under the project, e.g. `src/main/java` and select `Source > Format`.√æ√æLicense√æ-------√æ√æApache 2.0. See [LICENSE.txt](LICENSE.txt).√æ√æ> Licensed under the Apache License, Version 2.0 (the ""License"");√æ> you may not use this file except in compliance with the License.√æ> You may obtain a copy of the License at√æ>√æ>      http://www.apache.org/licenses/LICENSE-2.0√æ>√æ> Unless required by applicable law or agreed to in writing, software√æ> distributed under the License is distributed on an ""AS IS"" BASIS,√æ> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ> See the License for the specific language governing permissions and√æ> limitations under the License."
TalkingData/Myna,19276,154,18,51,Organization,False,A context awareness framework for Android platform,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 2, 'md': 2}",46,3,0,3,0,1371,True,4,5,0,0,0,7,0,0,7,0,0,0,0,0,0,0,65,6,,,"# Myna√æ√æAndroid Âπ≥Âè∞ÊÉÖÊôØÊÑüÁü•Ê°ÜÊû∂√æ√æ[![GitHub license](http://og41w30k3.bkt.clouddn.com/apache2.svg)](./LICENSE)√æ√æ√æ![](images/myna.png)√æ√æ√æMyna È°πÁõÆ‰∏≠ÂåÖÂê´‰∏Ä‰∏™ÊµãËØï Demo Â∑•Á®ãÔºödemo-myna, Â∞ÜËØ•Â∑•Á®ãÂíå Myna È°πÁõÆÊú¨Ë∫´ÂØºÂÖ•Âà∞ Android Studio ‰∏≠ÔºåÂ∞±ÂèØ‰ª•ÂºÄÂßãË∞ÉËØï‰∫Ü„ÄÇ√æ√æMyna Êèê‰æõ‰∫Ü‰∏§Â•óÊé•Âè£Ôºö√æ√æ- Èù¢ÂêëÂºÄÂèëËÄÖÁöÑÊé•Âè£ÔºöÂºÄÂèëËÄÖÂè™ÈúÄË¶ÅÁÆÄÂçïÁöÑÊé•Âè£Ë∞ÉÁî®ÔºåÂ∞±ËÉΩÂú®Â∫îÁî®Á®ãÂ∫è‰∏≠Ëé∑ÂèñÂÆûÊó∂ËØÜÂà´ÁöÑÁî®Êà∑Ë°å‰∏∫Áä∂ÊÄÅ„ÄÇ√æ- Èù¢ÂêëÊï∞ÊçÆÁßëÂ≠¶ÂÆ∂ÁöÑÊé•Âè£ÔºöÊï∞ÊçÆÁßëÂ≠¶ÂÆ∂ÂèØ‰ª•ÂæàÊñπ‰æøÂú∞Ê∑ªÂä†Êñ∞ÁöÑËØÜÂà´ÁÆóÊ≥ïÔºåÂú®ËøêË°åÊó∂Ë∞ÉÊï¥ËÆ¢ÈòÖÁöÑ‰º†ÊÑüÂô®Á±ªÂûã„ÄÅÈááÊ†∑È¢ëÁéáÂíåÈááÊ†∑Êó∂ÈïøÔºåËÄåÊó†ÈúÄÂÖ≥ÂøÉ Android Á≥ªÁªüÁõ∏ÂÖ≥ÁöÑ‰º†ÊÑüÂô®Êï∞ÊçÆËÆ¢ÈòÖÁªÜËäÇ„ÄÇ√æ√æ## Êõ¥Êñ∞ 2017-07-12√æ√æ- ÊîØÊåÅ‰∏ãÈù¢ 6 ÁßçË°å‰∏∫Á±ªÂûãÔºö√æ 1. Walking√æ 2. Running√æ 3. Bus√æ 4. Subway√æ 5. Car√æ 6. Stationary√æ- Êñ∞Â¢û XGBoost ÂíåÂü∫‰∫é Tensorflow ÁöÑ LSTM ÂàÜÁ±ªÊ®°Âûã„ÄÇ√æ  1. `Dataset` ÁõÆÂΩï‰∏ãÊúâÊï∞ÊçÆÈõÜ‰∏ãËΩΩÈìæÊé•„ÄÅÊï∞ÊçÆÂ§ÑÁêÜËÑöÊú¨Âíå XGBoost Ê®°ÂûãËÆ≠ÁªÉËÑöÊú¨„ÄÇ√æ  2. ‰ΩøÁî® LSTM Ê®°ÂûãÈúÄË¶ÅÊó∂ÈúÄË¶ÅÊèê‰æõËÆ≠ÁªÉÂ•ΩÁöÑÊ®°ÂûãÂíå Tensorflow ÁöÑÂä®ÊÄÅÂ∫ì‰ª•Âèä Java Interface ÂåÖ„ÄÇTensorflow ÂÆòÊñπÂ∑≤ÁªèÊèê‰æõ‰∫ÜÈÄöËøá `AAR` Ê†ºÂºè‰æùËµñ Tensorflow Âä®ÊÄÅÂ∫ìÂíå interface ÁöÑÊñπÊ≥ïÔºåMyna Â∑≤ÁªèÊõ¥Êñ∞‰ΩøÁî®ËØ•ÊñπÂºè„ÄÇÂÖ∑‰ΩìËØ∑ÂèÇËÄÉÔºö[Android TensorFlow support](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/android/README.md)„ÄÇLSTM È¢ÑËÆ≠ÁªÉÊ®°Âûã‰Ωç‰∫éÊµãËØïÂ∑•Á®ãÁöÑ `assets` ÁõÆÂΩï‰∏ã„ÄÇÁî±‰∫éËÆ≠ÁªÉÊï∞ÊçÆÈáè‰∏çÂ§üÔºåËØ•Ê®°ÂûãÁöÑÂáÜÁ°ÆÁéáËæÉ‰ΩéÔºå‰ªÖÂèØÁî®‰∫é End2End ÊñπÊ°àÈ™åËØÅÔºåËØ∑ÂãøÁî®‰∫éÁîü‰∫ßÁéØÂ¢É„ÄÇ√æ- Â¢ûÂä†ÊâãÊåÅÁä∂ÊÄÅÊ£ÄÊµã„ÄÇ√æ√æMyna ‰ΩøÁî®ÈöèÊú∫Ê£ÆÊûóÂàÜÁ±ªÁÆóÊ≥ïÁöÑ‰∏ÄÁßçÂºÄÊ∫êÂÆûÁé∞--**Dice** ËøõË°åÁöÑÂÆûÊó∂Áî®Êà∑Ë°å‰∏∫ËØÜÂà´Ôºö√æ√æ- [DiceÈ°πÁõÆ‰∏ªÈ°µ](http://www.dice4dm.com/)√æ√æ- [DiceÊñáÊ°£](http://www.dice4dm.com/doc/index.html)√æ√æÂΩì‰ΩøÁî® XGBoost ËøõË°åÂàÜÁ±ªÊó∂„ÄÇÊ®°ÂûãÁöÑ metrics ‰∏∫Ôºö√æ√æ Precision 0.909969288145√æ Recall 0.908256880734√æ f1_score 0.90816711949√æ confusion_matrix√æ [[ 93   0   1   0   0   0]√æ  [  0 115   1   1   1   0]√æ  [  0   0 102   3   5   0]√æ  [  3   0   9  84   6   2]√æ  [  2   0   7  11  85   1]√æ  [  0   0   4   3   0 115]]√æ predicting, classification error=0.091743√æ√æConfusion matrix:√æ√æ![](images/confusionmatrix.png)√æ√æROC:√æ√æ![](images/roc.png)√æ√æ## ÈõÜÊàêÊñáÊ°£√æ√æ[Âø´ÈÄüÈõÜÊàêÊñáÊ°£](/QuickStart.md)√æ√æ## Roadmap√æ√æ2017 Âπ¥√æ√æ- Â¢ûÂä†ÂØπÊõ¥Â§öË°å‰∏∫ÁöÑËØÜÂà´ËÉΩÂäõ„ÄÇ√æ√æ√æ## License√æ√æÂºÄÊ∫êÂçèËÆÆÔºö [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0)√æ√æ Copyright 2016 TalkingData√æ√æ Licensed under the Apache License, Version 2.0 (the ""License"");√æ you may not use this file except in compliance with the License.√æ You may obtain a copy of the License at√æ √æ   http://www.apache.org/licenses/LICENSE-2.0√æ √æ Unless required by applicable law or agreed to in writing, software√æ distributed under the License is distributed on an ""AS IS"" BASIS,√æ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ See the License for the specific language governing permissions and√æ limitations under the License."
jprante/elasticsearch-analysis-baseform,5069,26,4,9,User,False,Baseform lemmatization for Elasticsearch,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'yml': 1, 'txt': 1, 'md': 1, 'gradle': 2, 'bat': 1}",24,2,10,2,0,2436,True,6,7,0,0,2,2,0,0,6,0,0,0,0,0,0,0,114,,361,,"# Elasticsearch Analysis Baseform Plugin√æ√æBaseform is an analysis plugin for [Elasticsearch](http://github.com/elasticsearch/elasticsearch).√æ√æWith the baseform analysis, you can use a token filter for reducing word forms to their base form.√æ√æCurrently, only baseforms for german and english are implemented.√æ√æExample: the german base form of `zur√ºckgezogen` is `zur√ºckziehen`.√æ√æ## Versions√æ√æ| Plugin    | Elasticsearch   | Release date |√æ| --------- | --------------- | -------------|√æ| 2.2.1.1   | 2.2.1           | Jun 22, 2016 |√æ| 2.2.1.0   | 2.2.1           | Apr 23, 2016 |√æ| 1.4.0.0   | 1.4.0           | Feb 19, 2015 |√æ| 1.3.0.0   | 1.3.1           | Jul 30, 2014 |√æ√æ## Installation√æ√æ### Elasticsearch 2.x√æ√æ    ./bin/plugin install http://xbib.org/repository/org/xbib/elasticsearch/plugin/elasticsearch-analysis-baseform/2.2.1.1/elasticsearch-analysis-baseform-2.2.1.1-plugin.zip√æ√æ### Elasticsearch 1.x√æ√æ    ./bin/plugin -install analysis-baseform -url http://xbib.org/repository/org/xbib/elasticsearch/plugin/elasticsearch-analysis-baseform/1.4.0.0/elasticsearch-analysis-baseform-1.4.0.0-plugin.zip√æ√æDo not forget to restart the node after installing.√æ√æ## Project docs√æ√æThe Maven project site is available at [Github](http://jprante.github.io/elasticsearch-analysis-baseform)√æ√æ## Issues√æ√æAll feedback is welcome! If you find issues, please post them at [Github](https://github.com/jprante/elasticsearch-analysis-baseform/issues)√æ√æ## Example (german)√æ√æIn the settings, set up a token filter of type ""baseform"" and language ""de""::√æ√æ    {√æ     ""index"":{√æ        ""analysis"":{√æ            ""filter"":{√æ                ""baseform"":{√æ                    ""type"" : ""baseform"",√æ                    ""language"" : ""de""√æ                }√æ            },√æ            ""tokenizer"" : {√æ                ""baseform"" : {√æ                   ""type"" : ""standard"",√æ                   ""filter"" : [ ""baseform"" ]√æ                }√æ            }√æ        }√æ     }√æ    }√æ√æBy using such a tokenizer, the sentence√æ""Die Jahresfeier der Rechtsanwaltskanzleien auf dem Donaudampfschiff hat viel √ñkosteuer gekostet""√æwill be tokenized into√æ""Die"", ""Die"", ""Jahresfeier"", ""Jahresfeier"", ""der"", ""der"", ""Rechtsanwaltskanzleien"", ""Rechtsanwaltskanzlei"",√æ""auf"", ""auf"", ""dem"", ""der"", ""Donaudampfschiff"", ""Donaudampfschiff"", ""hat"", ""haben"", ""viel"", ""viel"",√æ""√ñkosteuer"", ""√ñkosteuer"", ""gekostet"", ""kosten""√æ√æIt is recommended to add the [Unique token filter](http://www.elasticsearch.org/guide/reference/index-modules/analysis/unique-tokenfilter.html) to skip tokens that occur more than once.√æ√æ## Example (english)√æ√æIn the settings, given this token filter of type ""baseform"" and language ""en"" has been set up::√æ√æ√æ    {√æ       ""index"" : {√æ          ""analysis"" : {√æ              ""filter"" : {√æ                  ""baseform"" : {√æ                      ""type"" : ""baseform"",√æ                      ""language"" : ""en""√æ                  }√æ              },√æ              ""analyzer"" : {√æ                  ""baseform"" : {√æ                      ""tokenizer"" : ""standard"",√æ                      ""filter"" : [ ""baseform"", ""unique"" ]√æ                  }√æ              }√æ          }√æ       }√æ    }√æ√æ√æThen, with the text::√æ√æ    ‚ÄúI have a dream that one day this nation will rise up, and live out the true meaning of its creed: ‚ÄòWe hold these truths to be self-evident: that all men are created equal.‚Äô√æ    I have a dream that one day on the red hills of Georgia the sons of former slaves and the sons of former slave owners will be able to sit down together at a table of brotherhood.√æ    I have a dream that one day even the state of Mississippi, a state sweltering with the heat of injustice and sweltering with the heat of oppression, will be transformed into an oasis of freedom and justice.√æ    I have a dream that my four little children will one day live in a nation where they will not be judged by the color of their skin but by the content of their character.√æ    I have a dream today!‚Äù√æ√æthis token stream will be produced::√æ√æ    ""I"",""have"",""a"",""dream"",""that"",""one"",""day"",""this"",""nation"",""will"",""rise"",""up"",""and"",""live"",""out"",√æ    ""the"",""true"",""meaning"",""mean"",""of"",""its"",""creed"",""We"",""hold"",""these"",""truths"",""truth"",""to"",""be"",√æ    ""self"",""evident"",""all"",""men"",""man"",""are"",""created"",""create"",""equal"",""on"",""red"",""hills"",""hill"",√æ    ""Georgia"",""sons"",""son"",""former"",""slaves"",""slave"",""owners"",""owner"",""able"",""sit"",""down"",""together"",√æ    ""at"",""table"",""brotherhood"",""even"",""state"",""Mississippi"",""sweltering"",""swelter"",""with"",""heat"",√æ    ""injustice"",""oppression"",""transformed"",""transform"",""into"",""an"",""oasis"",""freedom"",""justice"",""my"",√æ    ""four"",""little"",""children"",""child"",""in"",""where"",""they"",""not"",""judged"",""judge"",""by"",""color"",""their"",√æ    ""skin"",""but"",""content"",""character"",""today""√æ√æAs an alternative, separate dictionaries for `en-verbs` and `en-nouns` are available.√æ√æ# License√æ√æElasticsearch Baseform Analysis Plugin√æ√æCopyright (C) 2013 J√∂rg Prante√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ√æ# Credits√æ√æThe FSA for compiling the fullform/baseform table is taken from Dawid Weiss' morfologik project√æ√æhttps://github.com/morfologik/morfologik-stemming√æ√æThe german baseform file is a modified version of Daniel Nabers morphology file√æ√æhttp://www.danielnaber.de/morphologie/morphy-mapping-20110717.latin1.gz√æ√æand is distributed under CC-BY-SA http://creativecommons.org/licenses/by-sa/3.0/√æ√æThe english baseforms are a modified version of the english.dict file√æof http://languagetool.org/download/snapshots/LanguageTool-20131115-snapshot.zip√æwhich is licensed under LGPL http://www.fsf.org/licensing/licenses/lgpl.html#SEC1"
b3log/latke-demo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
tunitowen/DevDrawer,2835,160,15,53,User,False,Dev Drawer Android App,,,9,Java,"{'': 1, 'xml': 1, 'md': 1, 'properties': 2, 'txt': 1}",58,2,0,6,0,2696,True,10,8,0,0,2,18,0,0,6,0,0,0,0,0,0,0,13,,81,,"# DevDrawer√æ√æ** No longer maintained. Sorry I just don't have the time. **√æ** The code is disgusting in here, but if there's anything you want, feel free to take **√æ√æAn Android application by [Tony Owen](https://plus.google.com/111365666249481367719) designed to help developers by automatically adding their apps to a widget for easy launching / uninstalling / reinstalling etc.√æ√æRoot features such as one click uninstall, and clear cache added by [Ronald Ammann](https://plus.google.com/115926327659831685384/posts).√æ√æThis project needs a library dependency to [libsuperuser](https://github.com/Chainfire/libsuperuser).√æ√æ[Download DevDrawer in the Google Play Store](https://play.google.com/store/apps/details?id=com.owentech.DevDrawer)."
dogiant/cxf-demo,20,10,2,15,User,False,‰ΩøÁî® CXF ÂÆûÁé∞ WebService (JAX-WS‰∏éJAX-RS),,,3,Java,"{'md': 1, 'xml': 1}",11,3,1,1,0,1231,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,19,,1,,"---√ætitle: JAX-WS‰∏éJAX-RSÁöÑÂå∫Âà´√ædate: ""2017-02-07""√æ---√æ[release2.2.4](https://github.com/dogiant/cxf-demo/tree/release/2.2.4) ÂØπÂ∫îCXFÁâàÊú¨2.2.4,ÈõÜÊàêSpring2.5, jdk1.6+ √æ√æ###‰∏Ä„ÄÅÂêçÁß∞Ê¶ÇËø∞  √æJAX-WSÔºöÂÖ®Áß∞ÊòØJavaTM API forXML-Based Web Services  √æJAX-RS :ÂÖ®Áß∞ÊòØ JavaTM API forRESTful Web Services  √æ√æÂÖ≥‰∫éJAX-WS‰∏éJAX-RS‰∏§ËÄÖÊòØ‰∏çÂêåÈ£éÊ†ºÁöÑ[SOA](https://www.martinfowler.com/bliki/ServiceOrientedAmbiguity.html)Êû∂ÊûÑ„ÄÇ  √æÂâçËÄÖ‰ª•Âä®ËØç‰∏∫‰∏≠ÂøÉÔºåÊåáÂÆöÁöÑÊòØÊØèÊ¨°ÊâßË°åÂáΩÊï∞„ÄÇ  √æËÄåÂêéËÄÖ‰ª•ÂêçËØç‰∏∫‰∏≠ÂøÉÔºåÊØèÊ¨°ÊâßË°åÁöÑÊó∂ÂÄôÊåáÁöÑÊòØËµÑÊ∫ê„ÄÇ  √æ√æ###‰∫å„ÄÅJAX-WS‰∏éJAX-RSÁöÑÂå∫Âà´  √æ####JAX-RS√æ√æJAX-RSÊòØJAVA EE6 ÂºïÂÖ•ÁöÑ„ÄÇ√æ√æJAX-RSÂç≥Java API for RESTful Web ServicesÔºåÊòØ‰∏Ä‰∏™Java ÁºñÁ®ãËØ≠Ë®ÄÁöÑÂ∫îÁî®Á®ãÂ∫èÊé•Âè£ÔºåÊîØÊåÅÊåâÁÖßË°®Ëø∞ÊÄßÁä∂ÊÄÅËΩ¨Áßª[REST](https://en.wikipedia.org/wiki/Representational_state_transfer)Êû∂ÊûÑÈ£éÊ†ºÂàõÂª∫WebÊúçÂä°„ÄÇ√æ√æJAX-RS‰ΩøÁî®‰∫ÜJava SE5ÂºïÂÖ•ÁöÑJavaÊ†áÊ≥®Êù•ÁÆÄÂåñWebÊúçÂä°ÁöÑÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Á´ØÁöÑÂºÄÂèëÂíåÈÉ®ÁΩ≤„ÄÇ√æ√æJAX-RSÊèê‰æõ‰∫Ü‰∏Ä‰∫õÊ†áÊ≥®ÔºåÂ∞Ü‰∏Ä‰∏™ËµÑÊ∫êÁ±ªÔºå‰∏Ä‰∏™POJO JavaÁ±ªÔºåÂ∞ÅË£Ö‰∏∫WebËµÑÊ∫ê„ÄÇ√æ√æÊ†áÊ≥®ÂåÖÊã¨Ôºö√æ√æ@PathÔºåÊ†áÊ≥®ËµÑÊ∫êÁ±ªÊàñËÄÖÊñπÊ≥ïÁöÑÁõ∏ÂØπË∑ØÂæÑ√æ√æ@GETÔºå@PUTÔºå@POSTÔºå@DELETEÔºåÊ†áÊ≥®ÊñπÊ≥ïÊòØHTTPËØ∑Ê±ÇÁöÑÁ±ªÂûã„ÄÇ√æ√æ@ProducesÔºåÊ†áÊ≥®ËøîÂõûÁöÑMIMEÂ™í‰ΩìÁ±ªÂûã√æ√æ@ConsumesÔºåÊ†áÊ≥®ÂèØÊé•ÂèóËØ∑Ê±ÇÁöÑMIMEÂ™í‰ΩìÁ±ªÂûã√æ√æ@PathParamÔºå@QueryParamÔºå@HeaderParamÔºå@CookieParamÔºå@MatrixParamÔºå@FormParam,ÂàÜÂà´Ê†áÊ≥®ÊñπÊ≥ïÁöÑÂèÇÊï∞Êù•Ëá™‰∫éHTTPËØ∑Ê±ÇÁöÑ‰∏çÂêå‰ΩçÁΩÆ„ÄÇ√æ@PathParamÊù•Ëá™‰∫éURLÁöÑË∑ØÂæÑÔºå@QueryParamÊù•Ëá™‰∫éURLÁöÑÊü•ËØ¢ÂèÇÊï∞Ôºå@HeaderParamÊù•Ëá™‰∫éHTTPËØ∑Ê±ÇÁöÑÂ§¥‰ø°ÊÅØÔºå@CookieParamÊù•Ëá™‰∫éHTTPËØ∑Ê±ÇÁöÑCookie„ÄÇ√æ√æÂü∫‰∫éJAX-RSÂÆûÁé∞ÁöÑÊ°ÜÊû∂ÊúâJerseyÔºåRESTEasyÁ≠â„ÄÇËøô‰∏§‰∏™Ê°ÜÊû∂ÂàõÂª∫ÁöÑÂ∫îÁî®ÂèØ‰ª•ÂæàÊñπ‰æøÂú∞ÈÉ®ÁΩ≤Âà∞ServletÂÆπÂô®‰∏≠ÔºåÊØîÂ¶ÇTomcatÔºåJBossÁ≠â„ÄÇ√æÂÄºÂæó‰∏ÄÊèêÁöÑÊòØRESTEasyÊòØÁî±JBossÂÖ¨Âè∏ÂºÄÂèëÁöÑÔºåÊâÄ‰ª•Â∞ÜÁî®RESTEasyÊ°ÜÊû∂ÂÆûÁé∞ÁöÑÂ∫îÁî®ÈÉ®ÁΩ≤Âà∞JBossÊúçÂä°Âô®‰∏äÔºåÂèØ‰ª•ÂÆûÁé∞ÂæàÂ§öÈ¢ùÂ§ñÁöÑÂäüËÉΩ„ÄÇ  √æ√æ####JAX-WS  √æ√æJAX-WSËßÑËåÉÊòØ‰∏ÄÁªÑXML web servicesÁöÑJAVA APIÔºåJAX-WSÂÖÅËÆ∏ÂºÄÂèëËÄÖÂèØ‰ª•ÈÄâÊã©RPC-orientedÊàñËÄÖmessage-oriented Êù•ÂÆûÁé∞Ëá™Â∑±ÁöÑweb services„ÄÇ  √æ√æÂú® JAX-WS‰∏≠Ôºå‰∏Ä‰∏™ËøúÁ®ãË∞ÉÁî®ÂèØ‰ª•ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™Âü∫‰∫éXMLÁöÑÂçèËÆÆ‰æãÂ¶ÇSOAPÔºåÂú®‰ΩøÁî®JAX-WSËøáÁ®ã‰∏≠ÔºåÂºÄÂèëËÄÖ‰∏çÈúÄË¶ÅÁºñÂÜô‰ªª‰ΩïÁîüÊàêÂíåÂ§ÑÁêÜSOAPÊ∂àÊÅØÁöÑ‰ª£Á†Å„ÄÇ  √æJAX-WSÁöÑËøêË°åÊó∂ÂÆûÁé∞‰ºöÂ∞ÜËøô‰∫õAPIÁöÑË∞ÉÁî®ËΩ¨Êç¢Êàê‰∏∫ÂØπÂ∫îÁöÑSOAPÊ∂àÊÅØ„ÄÇ  √æ√æÂú®ÊúçÂä°Âô®Á´ØÔºåÁî®Êà∑Âè™ÈúÄË¶ÅÈÄöËøáJavaËØ≠Ë®ÄÂÆö‰πâËøúÁ®ãË∞ÉÁî®ÊâÄÈúÄË¶ÅÂÆûÁé∞ÁöÑÊé•Âè£SEIÔºàservice endpoint interfaceÔºâÔºåÂπ∂Êèê‰æõÁõ∏ÂÖ≥ÁöÑÂÆûÁé∞ÔºåÈÄöËøáË∞ÉÁî®JAX-WSÁöÑÊúçÂä°ÂèëÂ∏ÉÊé•Âè£Â∞±ÂèØ‰ª•Â∞ÜÂÖ∂ÂèëÂ∏É‰∏∫WebServiceÊé•Âè£„ÄÇ√æ√æÂú®ÂÆ¢Êà∑Á´ØÔºåÁî®Êà∑ÂèØ‰ª•ÈÄöËøáJAX-WSÁöÑAPIÂàõÂª∫‰∏Ä‰∏™‰ª£ÁêÜÔºàÁî®Êú¨Âú∞ÂØπË±°Êù•Êõø‰ª£ËøúÁ®ãÁöÑÊúçÂä°ÔºâÊù•ÂÆûÁé∞ÂØπ‰∫éËøúÁ®ãÊúçÂä°Âô®Á´ØÁöÑË∞ÉÁî®„ÄÇ√æ√æÂΩìÁÑ∂ JAX-WS ‰πüÊèê‰æõ‰∫Ü‰∏ÄÁªÑÈíàÂØπÂ∫ïÂ±ÇÊ∂àÊÅØËøõË°åÊìç‰ΩúÁöÑAPIË∞ÉÁî®Ôºå‰Ω†ÂèØ‰ª•ÈÄöËøáDispatch Áõ¥Êé•‰ΩøÁî®SOAPÊ∂àÊÅØÊàñXMLÊ∂àÊÅØÂèëÈÄÅËØ∑Ê±ÇÊàñËÄÖ‰ΩøÁî®ProviderÂ§ÑÁêÜSOAPÊàñXMLÊ∂àÊÅØ„ÄÇ√æ√æÈÄöËøáweb serviceÊâÄÊèê‰æõÁöÑ‰∫íÊìç‰ΩúÁéØÂ¢ÉÔºåÊàë‰ª¨ÂèØ‰ª•Áî®JAX-WSËΩªÊùæÂÆûÁé∞JAVAÂπ≥Âè∞‰∏éÂÖ∂‰ªñÁºñÁ®ãÁéØÂ¢ÉÔºà.netÁ≠âÔºâÁöÑ‰∫íÊìç‰Ωú„ÄÇ√æ√æ>JAX-WS‰∏éJAX-RPC‰πãÈó¥ÁöÑÂÖ≥Á≥ª√æ√æSunÊúÄÂºÄÂßãÁöÑweb servicesÁöÑÂÆûÁé∞ÊòØJAX-RPC 1.1 (JSR 101)„ÄÇ√æËøô‰∏™ÂÆûÁé∞ÊòØÂü∫‰∫éJavaÁöÑRPCÔºåÂπ∂‰∏çÂÆåÂÖ®ÊîØÊåÅschemaËßÑËåÉÔºåÂêåÊó∂Ê≤°ÊúâÂØπBindingÂíåParsingÂÆö‰πâÊ†áÂáÜÁöÑÂÆûÁé∞„ÄÇ√æ√æJAX-WS2.0 (JSR 224)ÊòØSunÊñ∞ÁöÑweb servicesÂçèËÆÆÊ†àÔºåÊòØ‰∏Ä‰∏™ÂÆåÂÖ®Âü∫‰∫éÊ†áÂáÜÁöÑÂÆûÁé∞„ÄÇ√æÂú®bindingÂ±ÇÔºå‰ΩøÁî®ÁöÑÊòØthe Java Architecture for XML Binding (JAXB, JSR 222)ÔºåÂú®parsingÂ±ÇÔºå‰ΩøÁî®ÁöÑÊòØthe Streaming API for XML (StAX, JSR 173)ÔºåÂêåÊó∂ÂÆÉËøòÂÆåÂÖ®ÊîØÊåÅschemaËßÑËåÉ„ÄÇ√æ√æÈôÑÔºöÁî®CXFÂÆûÁé∞‰∏§ËÄÖÁöÑ‰∏Ä‰∏™Demo√æhttps://github.com/dogiant/cxf-demo√æ√æ@(ÈöèÁ¨îËÆ∞ÂΩï)[JAX-WS, JAX-RS, WebService]√æ√æ "
xuxueli/xxl-code-generator,4712,261,26,130,User,False,üå± A distributed enterprise development platform.ÔºàÂàÜÂ∏ÉÂºè‰ºÅ‰∏öÂºÄÂèëÂπ≥Âè∞Ôºâ,http://www.xuxueli.com/xxl-deep/,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",8,Java,"{'': 3, 'md': 1, 'xml': 1}",53,2,1,3,0,782,True,11,3,0,0,3,4,1,1,9,0,1,9,43096,18075,0,0,13,,4,xuxueli/xxl-deep,"<p align=""center"">√æ    <img src=""https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg"" width=""150"">√æ    <h3 align=""center"">XXL-DEEP</h3>√æ    <p align=""center"">√æ        XXL-DEEP, a distributed enterprise development platform..√æ        <br>√æ        <a href2=""https://www.xuxueli.com/xxl-deep/""><strong>-- Home Page --</strong></a>√æ        <br>√æ        <br>√æ        <a href=""https://github.com/xuxueli/xxl-deep/releases"">√æ            <img src=""https://img.shields.io/github/release/xuxueli/xxl-deep.svg"" >√æ        </a>√æ        <a href=""http://www.gnu.org/licenses/gpl-3.0.html"">√æ            <img src=""https://img.shields.io/badge/license-GPLv3-blue.svg"" >√æ        </a>√æ        <a href=""https://www.xuxueli.com/page/donate.html"">√æ            <img src=""https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat-square"" >√æ        </a>√æ    </p>    √æ</p>√æ√æ√æ## Introduction√æ√æXXL-DEEP is a distributed enterprise development platform.√æ√æXXL-DEEP ÊòØ‰∏Ä‰∏™ÂàÜÂ∏ÉÂºè‰ºÅ‰∏öÂºÄÂèëÂπ≥Âè∞„ÄÇÂü∫‰∫é ‚ÄúSpringBoot+XXLÊäÄÊúØÊ†à‚Äù ËøõË°åÁ≥ªÁªüÊû∂ÊûÑ„ÄÇ√æÊèê‰æõÊï¥Â•óÂºÄÁÆ±Âç≥Áî®ÁöÑÂü∫Á°ÄÊ®°ÂùóÔºåÂåÖÊã¨ÔºöÊùÉÈôêÁÆ°ÁêÜ„ÄÅÁî®Êà∑ÁÆ°ÁêÜ„ÄÅ‰ª£Á†ÅÁîüÊàê„ÄÅÊúçÂä°Ê≤ªÁêÜ„ÄÅÈÖçÁΩÆ‰∏≠ÂøÉ„ÄÅË∞ÉÂ∫¶‰∏≠ÂøÉ‚Ä¶‚Ä¶Á≠âÔºåÂä™Âäõ‰∏∫‰∏≠Â∞èÂûã‰ºÅ‰∏öÊâìÈÄ†ÂºÄÁÆ±Âç≥Áî®ÁöÑÂàÜÂ∏ÉÂºè‰ºÅ‰∏öÂºÄÂèëËß£ÂÜ≥ÊñπÊ°à„ÄÇ√æ√æ## Documentation√æ- ‰∏≠ÊñáÊñáÊ°£[](https://www.xuxueli.com/xxl-deep/)√æ√æ## Features√æ- 1„ÄÅÊùÉÈôêÁÆ°ÁêÜÔºöÁÅµÊ¥ª„ÄÅÁªÜÁ≤íÂ∫¶ÊùÉÈôêÁÆ°ÊéßÔºõ√æ- 2„ÄÅÁî®Êà∑ÁÆ°ÁêÜÔºöÂú®Á∫ø„ÄÅÂ§öËßíËâ≤Áî®Êà∑ÁÆ°ÁêÜÔºõ√æ- 3„ÄÅ‰ª£Á†ÅÁîüÊàêÔºöËΩªÈáèÁ∫ß„ÄÅÂ§öÂ±Ç‰ª£Á†ÅËá™Âä®ÁîüÊàê ""controller/service/dao/mybatis/model"" ÔºåÂèÇ‰∏éÂà∞ÂºÄÂèëÂÖ®ÊµÅÁ®ãÔºõ√æ- 4„ÄÅÊúçÂä°Ê≤ªÁêÜÔºöÂàÜÂ∏ÉÂºèÊúçÂä°ÈÄöËÆØ‰∏éÊ≤ªÁêÜËÉΩÂäõÔºõ√æ- 5„ÄÅÈÖçÁΩÆ‰∏≠ÂøÉÔºöÂàÜÂ∏ÉÂºèÈÖçÁΩÆÁÆ°ÁêÜËÉΩÂäõÔºõ √æ- 6„ÄÅË∞ÉÂ∫¶‰∏≠ÂøÉÔºöÂàÜÂ∏ÉÂºè‰ªªÂä°Ë∞ÉÂ∫¶ËÉΩÂäõÔºõ√æ√æ## Communication    √æ- [Á§æÂå∫‰∫§ÊµÅ](https://www.xuxueli.com/page/community.html)√æ√æ√æ## Contributing√æContributions are welcome! Open a pull request to fix a bug, or open an [Issue](https://github.com/xuxueli/xxl-deep/issues/) to discuss a new feature or change.√æ√æÊ¨¢ËøéÂèÇ‰∏éÈ°πÁõÆË¥°ÁåÆÔºÅÊØîÂ¶ÇÊèê‰∫§PR‰øÆÂ§ç‰∏Ä‰∏™bugÔºåÊàñËÄÖÊñ∞Âª∫ [Issue](https://github.com/xuxueli/xxl-deep/issues/) ËÆ®ËÆ∫Êñ∞ÁâπÊÄßÊàñËÄÖÂèòÊõ¥„ÄÇ√æ√æ## Êé•ÂÖ•ÁôªËÆ∞√æÊõ¥Â§öÊé•ÂÖ•ÁöÑÂÖ¨Âè∏ÔºåÊ¨¢ËøéÂú® [ÁôªËÆ∞Âú∞ÂùÄ](https://github.com/xuxueli/xxl-deep/issues/1 ) ÁôªËÆ∞ÔºåÁôªËÆ∞‰ªÖ‰ªÖ‰∏∫‰∫Ü‰∫ßÂìÅÊé®Âπø„ÄÇ√æ√æ√æ## Copyright and License√æThis product is open source and free, and will continue to provide free community technical support. Individual or enterprise users are free to access and use.√æ√æ- Licensed under the GNU General Public License (GPL) v3.√æ- Copyright (c) 2015-present, xuxueli.√æ√æ‰∫ßÂìÅÂºÄÊ∫êÂÖçË¥πÔºåÂπ∂‰∏îÂ∞ÜÊåÅÁª≠Êèê‰æõÂÖçË¥πÁöÑÁ§æÂå∫ÊäÄÊúØÊîØÊåÅ„ÄÇ‰∏™‰∫∫Êàñ‰ºÅ‰∏öÂÜÖÈÉ®ÂèØËá™Áî±ÁöÑÊé•ÂÖ•Âíå‰ΩøÁî®„ÄÇ√æ√æ√æ## Donate√æNo matter how much the amount is enough to express your thought, thank you very much ÔºöÔºâ     [To donate](https://www.xuxueli.com/page/donate.html )√æ√æÊó†ËÆ∫ÈáëÈ¢ùÂ§öÂ∞ëÈÉΩË∂≥Â§üË°®ËææÊÇ®Ëøô‰ªΩÂøÉÊÑèÔºåÈùûÂ∏∏ÊÑüË∞¢ ÔºöÔºâ      [ÂâçÂæÄÊçêËµ†](https://www.xuxueli.com/page/donate.html )"
MrBW/chaos-monkey-spring-boot-demo,323,37,1,61,User,False,Demo of Chaos Monkey for Spring Boot ,,,18,Java,"{'': 1, 'png': 1, 'md': 1, 'yml': 1, 'xml': 1}",110,5,0,2,0,762,True,3,0,0,0,0,6,0,0,8,0,0,0,0,0,0,0,17,,38,,"# chaos-monkey-spring-boot-demo√æDemo of Chaos Monkey for Spring Boot √æ√æ## How to build√æ1. git clone https://github.com/MrBW/chaos-monkey-spring-boot-demo.git√æ2. git checkout chaostoolkit√æ3. docker-compose build docker-base-image√æ4. mvn clean package√æ5. docker-compose up√æ√æ## What you will find√æ  <img src=""ChaosEngineeringWebinar.png"">"
tranductrinh/user-management,68,0,17,5,User,False,User Management Demo Application,,,8,Java,"{'': 2, 'md': 1, 'cmd': 1, 'xml': 1}",1,3,0,0,0,593,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,3,,0,,"# User Management Demo Application√æ√æ## 1. How to build√æ√æRun the following commands to build:√æ√æ    $ cd user-management√æ    $ ./mvnw clean install√æ    √æOnly execute `clean` phase when you really need to, because `node_modules` will be deleted!√æThat makes build slower.√æ√æ## 2. How to run User Management Application on local√æ√æ### 2.1. Backend with H2 database (only for development purpose)√æ√æRun UserManagementApplication.√æ√æ    $ cd user-management√æ    $ cd backend√æ    $ java -jar target/backend-1.0.0.jar√æ√æNow, User Management is running on `http://localhost:8080`√æ√æ### 2.2. Static Frontend √æ√æIn case you want to faster see your change on frontend code, without building whole project again.√æ√æ    $ cd abccargo√æ    $ cd frontend√æ    $ npm start√æ    √æWebpack dev server will serve Static on `http://localhost:9000`"
zegelin/cassandra-exporter,8967,18,7,23,User,False,Personal fork of cassandra-exporter. See Instaclustr's repo for releases.,https://github.com/instaclustr/cassandra-exporter,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 1, 'txt': 1, 'md': 1, 'py': 1, 'sh': 1, 'xml': 1}",89,9,10,6,3,776,False,,,,,1,8,0,2,9,0,1,4,334,147,0,0,17,,9,,"# cassandra-exporter [![CircleCI](https://circleci.com/gh/instaclustr/cassandra-exporter.svg?style=svg)](https://circleci.com/gh/instaclustr/cassandra-exporter)√æ√æ*cassandra-exporter* is a Java agent (with optional standalone mode) that exports Cassandra metrics to [Prometheus](http://prometheus.io).√æ√æ*Project Status: beta*√æ√æ√æ## Introduction√æ√æ*cassandra-exporter* enables high performance collection of Cassandra metrics and follows the Prometheus best practices for metrics naming and labeling.√æ√æ![Benchamrk Results](doc/benchmark-results.png)√æ√æ*cassandra-exporter* is fast. In a worst-case benchmark, where the Cassandra schema contains 1000+ tables (resulting in ~174 thousand metrics),√æ*cassandra-exporter* completes exposition in ~140ms. Compared to the next-best, *jmx_exporter*, which completes exposition in _~8 seconds_.√æOther solutions can take _tens of seconds_, during which CPU time is consumed querying JMX and serialising values.√æ√æSee the [Exported Metrics](https://github.com/instaclustr/cassandra-exporter/wiki/Exported-Metrics) wiki page for a list of available metrics.√æ√æAll but a few select metrics exposed by *cassandra-exporter* are live with no caching involved.√æThe few that are cached are done so for performance reasons.√æ√æ√æ√æ√æ*cassandra-exporter* exports metric families, where the names, labels, metric types (gauge, counter, summary, etc), and value scales √æhave been hand-tuned to produce easy-to-query output.√æ√æFor example, the following PromQL query will return an estimate of the number of pending compactions per-keyspace, per-node.√æ√æ    sum(cassandra_table_estimated_pending_compactions) by (cassandra_node, keyspace)√æ√æ√æ## Compatibility√æ√æ*cassandra-exporter* is has been tested with:√æ√æ| Component       | Version       |√æ|-----------------|---------------|√æ| Apache Cassandra| 3.0.17 (experimental), 3.11.2, 3.11.3        |√æ| Prometheus      | 2.0 and later |√æ√æOther Cassandra and Prometheus versions will be tested for compatibility in the future.√æ√æ## Usage√æ√æ### Agent√æ√æDownload the [latest release](https://github.com/instaclustr/cassandra-exporter/releases/latest) and copy `cassandra-exporter-agent-<version>.jar` to `$CASSANDRA_HOME/lib` (typically `/usr/share/cassandra/lib` in most package installs).√æ√æThen edit `$CASSANDRA_CONF/cassandra-env.sh` (typically `/etc/cassandra/cassandra-env.sh`) and append the following:√æ√æ    JVM_OPTS=""$JVM_OPTS -javaagent:$CASSANDRA_HOME/lib/cassandra-exporter-agent-<version>.jar""√æ√æThen (re-)start Cassandra.√æ√æPrometheus metrics will now be available at <http://localhost:9500/metrics>.√æ√æ√æ### Standalone√æ√æWhile it is preferable to run *cassandra-exporter* as a Java agent for performance, it can instead be run as an external application if required.√æ√æDownload the [latest release](https://github.com/instaclustr/cassandra-exporter/releases/latest) and copy `cassandra-exporter-standalone-<version>.jar` to a location of your choosing.√æ√æThe exporter can be started via `java -jar /path/to/cassandra-exporter-standalone-<version>.jar`.√æ√æPrometheus metrics will now be available at <http://localhost:9500/metrics>.√æ√æIn this mode metrics will be queried via JMX which will incur a performance overhead.√æThe standalone mode was originally designed to assist with benchmarking and development of the exporter.√æ√æThe set of metrics available is close to that of the agent -- Gossiper related metrics are unavailable as these aren't readily available over JMX.√æ√æCurrently some additional metadata labels, such as the table type (table, index, view, etc) attached to the `cassandra_table_*` metrics, are√ænot available (this feature has yet to be written).√æ√æ√æ### Prometheus Configuration√æ√æConfigure Prometheus to scrape the endpoint by adding the following to `prometheus.yml`:√æ√æ    scrape_configs:√æ      ...√æ      √æ      - job_name: 'cassandra'√æ        static_configs:√æ          - targets: ['<cassandra node IP>:9500', '<cassandra node IP>:9500', '<cassandra node IP>:9500', ...]√æ√æSee the [Prometheus documentation](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#%3Cscrape_config%3E) for more details on configuring scrape targets.√æ√æTo view the raw, plain text metrics (in the Prometheus text exposition format), request the endpoint√æ(by default, <http://localhost:9500/metrics>) with a HTTP client such as a browser or cURL.√æ√æExperimental JSON output is also provided if the `Accept: application/json` header or `?x-accept=application/json` URL parameter is specified.√æThe format/structure of the JSON output is subject to change.√æ√æ√æ### Options√æ√æThe available command line options may be seen by passing `-h`/`--help`:√æ√æ    Usage: cassandra-exporter [-hV] [--enable-collector-timing]√æ                              [--enable-per-thread-cpu-times]√æ                              [--exclude-system-tables] [--no-fast-float]√æ                              [--no-global-labels] [--no-table-labels] [-v]...√æ                              [--cql-address=[ADDRESS][:PORT]]√æ                              [--cql-password=PASSWORD] [--cql-user=NAME]√æ                              [--family-help=VALUE] [--jmx-password=PASSWORD]√æ                              [--jmx-service-url=URL] [--jmx-user=NAME]√æ                              [--keyspace-metrics=FILTER] [--node-metrics=FILTER]√æ                              [--table-metrics=FILTER]√æ                              [--exclude-keyspaces=<excludedKeyspaces>]... [-g=LABEL√æ                              [,LABEL...]]... [-l=[ADDRESS][:PORT]]... [-t=LABEL[,√æ                              LABEL...]]... [-e=EXCLUSION...]...√æ      -g, --global-labels=LABEL[,LABEL...]√æ                                Select which global labels to include on all exported√æ                                  metrics. Valid options are: 'CLUSTER' (cluster name),√æ                                  'NODE' (node endpoint IP address), 'DATACENTER' (DC√æ                                  name), 'RACK' (rack name). The default is to include√æ                                  all global labels except HOST_ID. To disable all√æ                                  global labels use --no-global-labels.√æ      -t, --table-labels=LABEL[,LABEL...]√æ                                Select which labels to include on table-level metrics.√æ                                  Valid options are: 'TABLE_TYPE' (table, view or√æ                                  index), 'INDEX_TYPE' (for indexes -- keys, composites√æ                                  or custom), 'INDEX_CLASS' (the index class name for√æ                                  custom indexes),  'COMPACTION_STRATEGY_CLASS' (for√æ                                  tables & views, compaction-related metrics only). The√æ                                  default is to include all table labels. To disable all√æ                                  table labels use --no-table-labels.√æ          --table-metrics=FILTER√æ                                Select which table-level metrics to expose. Valid√æ                                  options are: 'ALL' (all metrics), 'HISTOGRAMS' (only√æ                                  histograms & summaries), 'NONE' (no metrics). The√æ                                  default is 'ALL'.√æ          --keyspace-metrics=FILTER√æ                                Select which keyspace-level aggregate metrics to expose.√æ                                  Valid options are: 'ALL' (all metrics), 'HISTOGRAMS'√æ                                  (only histograms & summaries), 'NONE' (no metrics).√æ                                  The default is 'HISTOGRAMS'.√æ          --node-metrics=FILTER Select which node-level aggregate metrics to expose.√æ                                  Valid options are: 'ALL' (all metrics), 'HISTOGRAMS'√æ                                  (only histograms & summaries), 'NONE' (no metrics).√æ                                  The default is 'HISTOGRAMS'.√æ          --enable-per-thread-cpu-times√æ                                Collect per-thread CPU times, where each thread gets its√æ                                  own time-series. (EXPERIMENTAL)√æ          --enable-collector-timing√æ                                Record the cumulative time taken to run each collector√æ                                  and export the results.√æ          --exclude-keyspaces=<excludedKeyspaces>√æ    √æ      -e, --exclude=EXCLUSION...√æ                                Exclude a metric family or MBean from exposition.√æ                                  EXCLUSION may be the full name of a metric family√æ                                  (wildcards or patterns not allowed) or the ObjectName√æ                                  of a MBean or a ObjectName pattern that matches√æ                                  multiple MBeans. ObjectNames always contain a colon√æ                                  (':'). See the ObjectName JavaDoc for details. If√æ                                  EXCLUSION is prefixed with an '@', it is interpreted√æ                                  (sans @ character) as a path to a file containing√æ                                  multiple EXCLUSION values, one per line. Lines√æ                                  prefixed with '#' are considered comments and are√æ                                  ignored. This option may be specified more than once√æ                                  to define multiple exclusions.√æ          --no-global-labels    Disable all global labels.√æ          --no-table-labels     Disable all table labels.√æ          --no-fast-float       Disable the use of fast float -> ascii conversion.√æ          --exclude-system-tables√æ                                Exclude system table/keyspace metrics.√æ      -l, --listen=[ADDRESS][:PORT]√æ                                Listen address (and optional port). ADDRESS may be a√æ                                  hostname, IPv4 dotted or decimal address, or IPv6√æ                                  address. When ADDRESS is omitted, 0.0.0.0 (wildcard)√æ                                  is substituted. PORT, when specified, must be a valid√æ                                  port number. The default port 9500 will be substituted√æ                                  if omitted. If ADDRESS is omitted but PORT is√æ                                  specified, PORT must be prefixed with a colon (':'),√æ                                  or PORT will be interpreted as a decimal IPv4 address.√æ                                  This option may be specified more than once to listen√æ                                  on multiple addresses. Defaults to '0.0.0.0:9500'√æ          --family-help=VALUE   Include or exclude metric family help in the exposition√æ                                  format. AUTOMATIC excludes help strings when the user√æ                                  agent is Prometheus and includes them for all other√æ                                  clients (cURL, browsers, etc). Currently Prometheus√æ                                  discards help strings. Excluding help strings saves√æ                                  bandwidth. Can be overridden with the ""?√æ                                  help=true|false"" URI query parameter. Valid values:√æ                                  INCLUDE, EXCLUDE, AUTOMATIC. Defaults to AUTOMATIC.√æ          --jmx-service-url=URL JMX service URL of the Cassandra instance to connect to√æ                                  and collect metrics. Defaults to 'service:jmx:rmi:√æ                                  ///jndi/rmi://localhost:7199/jmxrmi'√æ          --jmx-user=NAME       JMX authentication user name.√æ          --jmx-password=PASSWORD√æ                                JMX authentication password.√æ          --cql-address=[ADDRESS][:PORT]√æ                                Address/hostname and optional port for the CQL metadata√æ                                  connection. Defaults to 'localhost:9042'√æ          --cql-user=NAME       CQL authentication user name.√æ          --cql-password=PASSWORD√æ                                CQL authentication password.√æ      -v, --verbose             Enable verbose logging. Multiple invocations increase√æ                                  the verbosity.√æ      -h, --help                Show this help message and exit.√æ      -V, --version             Print version information and exit.√æ√æ√æ√æ√æOptions may also be provided via an `@`-file:√æ    √æ- *Standalone*√æ√æ      java -jar /path/to/cassandra-exporter-standalone-<version>.jar @/path/to/options/file√æ      √æ- *Agent*√æ√æ      JVM_OPTS=""$JVM_OPTS -javaagent:$CASSANDRA_HOME/lib/cassandra-exporter-agent-<version>.jar=@/path/to/options/file""√æ      √æ    `@$CASSANDRA_CONF/cassandra-exporter.options` is a good choice.√æ√æNote that `--jmx-service-url`, `--jmx-user`, `--jmx-password`, `--cql-address`, `--cql-user` and `--cql-password`√æare only applicable to the standalone version -- the agent does not use JMX or CQL connections.√æ√æTo protect the JMX password and prevent it from showing up in `ps`, `top` and other utilities, use an `@`-file that contains `--jmx-password=PASSWORD`.√æ√æWhen run as an agent, command line options must be provided as part of the `-javaagent` flag, with an equals sign (`=`) separating the JAR path and the agent options.√æMultiple options, or option arguments can be separated by commas (`,`) or spaces. Commas are preferred as the whitespace quoting rules of `cassandra-env.sh` are quite complex.√æOptions with values containing whitespace must be quoted appropriately. Alternatively use an `@`-file (see above).√æ√æFor example, to change the agent listening port to 1234 and exclude some metrics:√æ√æ    JVM_OPTS=""$JVM_OPTS -javaagent:$CASSANDRA_HOME/lib/cassandra-exporter-agent-<version>.jar=--listen=:1234,--exclude=@$CASSANDRA_CONF/prometheus-exclusions""√æ    √æ√æ### Endpoints√æ√æ- `/`√æ    √æ    Root document with links for convenience.√æ    √æ    *Content-type*: `text/html`√æ    √æ- `/metrics`√æ√æ    Metrics exposition.√æ    √æ    *Content-type*: `text/plain;version=0.0.4`, `text/plain`, `application/json`√æ    √æ    *URI parameters*:√æ    √æ    - `x-accept=<mime>` -- override `Accept` header for browsers (e.g, `?x-accept=application/json` will force JSON output)√æ    - `help=true|false` -- include/exclude per-metric family help in the output. Overrides `--family-help` CLI option. See above for more details.√æ√æ√æ## Features√æ√æ### Performance√æ√æJMX is *slow*, really slow. JMX adds significant overhead to every method invocation on exported MBean methods, even when those methods are called from within the same JVM.√æOn a 300-ish table Cassandra node, trying to collect all exposed metrics via JVM resulted in a collection time that was upwards of 2-3 *seconds*.√æFor exporters that run as a separate process there is additional overhead of inter-process communications and that time can reach the 10's of seconds.√æ√æ*cassandra-exporter* on the same node collects all metrics in 10-20 *milliseconds*.√æ√æ√æ### Best practices√æ√æThe exporter attempts to follow Prometheus' best practices for metric names, labels and data types.√æ√æCassandra has keyspace- and node-level metrics that are aggregates of the per-table metrics. By default, only a subset of these√æaggregate metrics, specifically histograms, are exposed by *cassandra-exporter*. All other keyspace- and node-level√æmetrics are skipped in favour of only exporting the per-table metrics. The rationale behind this is that apart from the histograms,√æthe aggregate metrics are essentially duplicates. If they are needed they may be computed on-the-fly via PromQL or√æonce, at scrape time, using Prometheus recording rules.  √æ√æ√æUnlike the metrics exported via JMX, where each table metric has a unique name, Cassandras metrics are coalesced when appropriate so they share the same exported metric family name, opting for *labels* to differentiate individual time series.√æFor example, each table level metric has a constant name and at minimum a `table` & `keyspace` label, which allows for complex PromQL queries.√æ√æFor example the `cassandra_table_operation_latency_seconds[_count|_sum]` summary metric combines read, write, range read, CAS prepare, CAS propose and CAS commit latency metrics together into a single metric family.√æA summary exposes percentiles (via the `quantile` label), a total count of recorded samples (via the `_count` metric),√æand (if available, `NaN` otherwise) an accumulated sum of all samples  (via the `_sum` metric).√æ√æIndividual time-series are separated by different labels. In this example, the operation type is exported as the `operation` label.√æThe source `keyspace`, `table`, `table_type` (table, view or index), `table_id` (CF UUID), and numerous other metadata labels are available.√æ√æ    cassandra_table_operation_latency_seconds_count{keyspace=""system_schema"",table=""tables"",table_type=""table"",operation=""read"",...}√æ    cassandra_table_operation_latency_seconds_count{keyspace=""system_schema"",table=""tables"",table_type=""table"",operation=""write"",...}√æ√æ    cassandra_table_operation_latency_seconds_count{keyspace=""system_schema"",table=""keyspaces"",table_type=""table"",operation=""read"",...}√æ    cassandra_table_operation_latency_seconds_count{keyspace=""system_schema"",table=""keyspaces"",table_type=""table"",operation=""write"",...}√æ√æThese metrics can then be queried:√æ√æ    sum(cassandra_table_operation_latency_seconds_count) by (keyspace, operation) # total operations by keyspace & type√æ√æ√æElement                                              | Value√æ---------------------------------------------------- |------√æ`{keyspace=""system"",operation=""write""}`              | 13989√æ`{keyspace=""system"",operation=""cas_commit""}`         | 0√æ`{keyspace=""system"",operation=""cas_prepare""}`        | 0√æ`{keyspace=""system"",operation=""cas_propose""}`        | 0√æ`{keyspace=""system"",operation=""range_read""}`         | 10894√æ`{keyspace=""system"",operation=""read""}`               | 74√æ`{keyspace=""system_schema"",operation=""write""}`       | 78√æ`{keyspace=""system_schema"",operation=""cas_commit""}`  | 0√æ`{keyspace=""system_schema"",operation=""cas_prepare""}` | 0√æ`{keyspace=""system_schema"",operation=""cas_propose""}` | 0√æ`{keyspace=""system_schema"",operation=""range_read""}`  | 75√æ`{keyspace=""system_schema"",operation=""read""}`        | 618√æ√æ√æ### Global Labels√æ√æThe exporter does attach global labels to the exported metrics.√æThese may be configured with the `--global-labels` (or disabled via `--no-global-labels`) CLI option.√æ√æThese labels are:√æ√æ- `cassandra_cluster`√æ√æ    The name of the cluster, as specified in `cassandra.yaml`.√æ    √æ- `cassandra_host_id`√æ√æ    The unique UUID of the node. _Not enabled by default_√æ    √æ- `cassandra_node`√æ√æ    The IP address of the node.√æ    √æ- `cassandra_datacenter`√æ√æ    The configured data center name of the node.√æ    √æ- `cassandra_rack`√æ√æ    The configured rack name of the node.√æ    √æThese labels allow aggregation of metrics at the cluster, data center and rack levels.√æ√æWhile these labels could be defined in the Prometheus scrape config, we feel that having these labels be automatically√æapplied simplifies things, especially when Prometheus is monitoring multiple clusters across numerous DCs and racks.√æ√æ√æ## Exported Metrics√æ√æSee the [Exported Metrics](https://github.com/instaclustr/cassandra-exporter/wiki/Exported-Metrics) wiki page for a list.√æ√æWe suggest viewing the metrics endpoint (e.g., <http://localhost:9500/metrics>) in a browser to get an understanding of what metrics√æare exported by your Cassandra node.√æ√æ√æ## Unstable, Missing & Future Features√æ√æSee the [project issue tracker](https://github.com/instaclustr/cassandra-exporter/issues) for a complete list.√æ√æ- Embedded HTML metrics viewer√æ√æ    Early versions supported outputting metrics as a HTML document for easier viewing in a browser.√æ    √æ    The format writer was complicated and we didn't want to add dependencies on a templating library (e.g. Freemarker) to make it simpler.√æ    Instead the JSON format writer has been improved and optimized with the intent that the data could be consumed by simple static JavaScript webapp. √æ√æ- Add some example queries√æ- Add Grafana dashboard templates√æ- Documentation improvements√æ- Improve standalone JMX exporter√æ    - Systemd service file√æ    - Package√æ    √æ- Packages for standard distributions (Debian, Fedora, Arch, etc) that install the JARs in the correct locations.√æ√æPlease see https://www.instaclustr.com/support/documentation/announcements/instaclustr-open-source-project-status/ for Instaclustr support status of this project."
shadowwang/ZxFootball,1207,9,2,6,User,False,Áü•ÊôìË∂≥ÁêÉ‚Äî‚ÄîÊúÄÊúâ‰ª∑ÂÄºÁöÑË∂≥ÁêÉÊï∞ÊçÆapp,,,11,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",162,1,0,1,0,984,True,3,0,1,0,0,0,0,0,8,0,0,0,0,0,0,0,18,,1,,# ZxFootball√æÁü•ÊôìË∂≥ÁêÉ‚Äî‚ÄîÊúÄÊúâ‰ª∑ÂÄºÁöÑË∂≥ÁêÉÊï∞ÊçÆapp
apache/mrunit,1038,37,10,23,Organization,False,Mirror of Apache MRUnit,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 1, 'txt': 6, 'rdf': 1, 'xml': 1}",234,10,8,10,1,4095,False,,,,,1,0,0,0,0,0,0,0,0,0,2264,0,2,869,,apache/attic-mrunit,
balzac-lang/balzac,4365,21,4,5,Organization,False,Balzac is a domain-specific language to write Bitcoin transactions. ,https://balzac-lang.xyz,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",22,Java,"{'': 3, 'yml': 1, 'md': 1}",617,2,22,3,0,1147,True,0,2,0,1,0,70,0,2,8,0,2,9,1296,2028,0,0,2,1,,,"[![Build Status](https://travis-ci.org/balzac-lang/balzac.svg?branch=master)](https://travis-ci.org/balzac-lang/balzac)√æ[![Coverage Status](https://coveralls.io/repos/github/balzac-lang/balzac/badge.svg)](https://coveralls.io/github/balzac-lang/balzac)√æ√æ# Balzac√æ√æA domain-specific language to write Bitcoin transactions, based on the paper√æ[A formal model of Bitcoin transactions](https://eprint.iacr.org/2017/1124.pdf) presented at [Financial Cryptography and Data Security 2018](http://fc18.ifca.ai/).√æ√æ**Online editor**:√æ√æ- [http://blockchain.unica.it/balzac/](http://blockchain.unica.it/balzac/)√æ- [http://balzac-lang.xyz](http://balzac-lang.xyz) (mirror)√æ√æ**Documentation**√æ√æ- online: [https://blockchain.unica.it/balzac/docs](https://blockchain.unica.it/balzac/docs)√æ- repository: [https://github.com/balzac-lang/balzac-doc](https://github.com/balzac-lang/balzac-doc)√æ√æ√æ√æ√æ## Setup√æ√æExecute the script `install-deps.sh` or alternatively follow these steps:√æ√æ**Install a customized version of BitcoindConnector4J**√æ```√æecho ""Cloning https://github.com/natzei/BitcoindConnector4J.git""√ægit -C $HOME clone https://github.com/natzei/BitcoindConnector4J.git√ægit -C $HOME/BitcoindConnector4J checkout release-0.16√ægradle -p $HOME/BitcoindConnector4J install√æ```√æ[Compare versions](https://github.com/SulacoSoft/BitcoindConnector4J/compare/master...natzei:master)√æ√æ**Install a customized version of BitcoinJ**√æ```√æecho ""Cloning https://github.com/natzei/bitcoinj.git""√ægit -C $HOME clone https://github.com/natzei/bitcoinj.git√ægit -C $HOME/bitcoinj checkout lib√ægradle -p $HOME/bitcoinj install -x test√æ```√æ[Compare versions](https://github.com/bitcoinj/bitcoinj/compare/master...natzei:lib)√æ√æ## Install√æ```√æmvn -f xyz.balzaclang.balzac.parent/ -U clean install√æ```√æ√æ## Run Balzac√æ√æIn order to run Balzac locally you can√æ√æ- build on your machine and run using Maven + Jetty√æ- build on your machine and load the war (saved into `xyz.balzaclang.balzac.web/target/`) inside any web container (e.g. Tomcat)√æ- build on your machine and run in Docker (see `docker/Dockerfile-slim` to create the image)√æ- build and run in Docker (see `docker/Dockerfile-build` to create the image)√æ- download from DockerHub and run in Docker√æ√æ### Maven + Jetty√æ√æ```√æmvn -f xyz.balzaclang.balzac.web/ jetty:run√æ```√æ√æ### Build with Maven, run with Docker√æ√æ```√ædocker build -f docker/Dockerfile-slim -t balzac:latest .√ædocker run -p 8080:8080 balzac:latest√æ```√æ√æ### Build and run with Docker√æ√æ```√ædocker build -f docker/Dockerfile-build -t balzac:latest .√ædocker run -p 8080:8080 balzac:latest√æ```√æ√æ### Prebuilt image√æ√æDockerHub: [balzaclang/balzac](https://hub.docker.com/r/balzaclang/balzac)√æ√æ```√ædocker pull balzaclang/balzac:latest√ædocker run -p 8080:8080 balzaclang/balzac:latest√æ```√æ√æ√æ## Development√æ√æThe project is currently developed using *Eclipse IDE for Java and DSL Developers* (generally the latest version).√æInstall it using the [Eclipse installer](http://www.eclipse.org/downloads/eclipse-packages/).√æ√æDependencies√æ- Xsemantics 1.17 ([update site](http://download.eclipse.org/xsemantics/milestones/1.17/))√æ- Jacoco (optional) (see [http://www.eclemma.org/installation.html](http://www.eclemma.org/installation.html))"
KyoriPowered/lunar,207,2,4,1,Organization,False,A collection of utilities.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",12,Java,"{'': 2, 'sh': 1, 'yml': 1, 'gradle': 2, 'bat': 1, 'txt': 2, 'md': 1}",74,3,7,2,1,1079,True,0,0,0,0,1,3,0,0,7,0,0,0,0,0,0,0,54,4,,,# lunar√æ√æ[![Build Status](https://travis-ci.org/KyoriPowered/lunar.svg?branch=master)](https://travis-ci.org/KyoriPowered/lunar)
AICP/packages_apps_LineageParts,7702,2,5,4,Organization,False,,,,6,Java,"{'mk': 1, 'xml': 1, 'flags': 1}",211,2,0,33,0,1388,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,573,0,,,
MarchLiu/jaskell,125,17,2,6,User,False,Rock Your Java!,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,Java,"{'': 4, 'clj': 1, 'md': 1}",69,1,0,1,0,1366,True,0,0,0,0,3,0,0,0,7,0,1,1,7,7,0,0,28,,718,,"# English√æ...√æ√æ# ‰∏≠ÊñáÁâà√æ√æ## ÂÆâË£ÖÂíå‰ΩøÁî®√æ√æ```$clojure√æ[liu.mars/jaskell ""0.3.0""]√æ```√æ√æ## ‰∏ªË¶ÅÂäüËÉΩ√æ√æ### Parsec ËßÑÂàôÂºïÊìé√æ√æ### SQL/JDBC ÊîØÊåÅ√æ√æÁºñÂÜô‰∏Ä‰∏™ËΩªÈáèÁ∫ßÁöÑ SQL ËæÖÂä©Â∑•ÂÖ∑Êù•ÁÆÄÂåñ JDBC ‰ΩøÁî®ÔºåÊúÄÂàùÊ∫êËá™ÊàëÂéªÂπ¥‰∏éÂêå‰∫ãÂºÄÂèëÂÅöÂ∏ÇÁ≠ñÁï•Êó∂ÁöÑÁªèÈ™å„ÄÇÂú®‰∏ç‰æùËµñ√æIOC Ê°ÜÊû∂Êàñ ORM ÁöÑÊÉÖÂÜµ‰∏ãÔºåJDBC ‰ΩøÁî®Ëµ∑Êù•Â§™‰∏çÊñπ‰æø‰∫ÜÔºåËøôÁªôÊàë‰ª¨Â∏¶‰∫Ü‰∫ÜÂæàÂ§ßÁöÑÈ∫ªÁÉ¶„ÄÇ√æ√æ‰ªäÂπ¥ÊöëÂÅáÊàëÂÜçÊ¨°ÈÅáÂà∞Ëøô‰∏™ÈóÆÈ¢òÊó∂ÔºåÂÜ≥ÂøÉÊåâËá™Â∑±ÂñúÊ¨¢ÁöÑÊñπÂºèÂà∂ÈÄ†‰∏Ä‰∏™Â∑•ÂÖ∑„ÄÇÊàëÂØπËøô‰∏™Â∑•ÂÖ∑ÁöÑÊúüÂæÖÊòØÔºö√æ√æ - Áî®ÂÆø‰∏ªËØ≠Ë®ÄÁöÑËØ≠Ê≥ïÊù•ÂÜô SQLÔºåÂØπ IDE Êàñ‰ª£Á†ÅÁºñËæëÂô®ÁöÑ‰ª£Á†ÅÂÆåÊàê/ÊèêÁ§∫Â∞ΩÂèØËÉΩÂèãÂ•Ω√æ - ‰ª£Á†ÅÁöÑÈòÖËØª‰ΩìÈ™åÂ∫îËØ•Â∞ΩÂèØËÉΩÊé•Ëøë SQLÔºåÂØπ IDE Êàñ‰ª£Á†ÅÁºñËæëÂô®ÁöÑÈ´ò‰∫ÆÂ∞ΩÂèØËÉΩÂèãÂ•Ω√æ - Ëøô‰∏™Â∫ì‰∏çÂ∫îËØ•‰æùËµñ‰ªª‰Ωï ioc ÊàñÈ¢ÑÁºñËØëÂ∑•ÂÖ∑ÔºåÂÆÉ‰ªÖ‰ªÖÊòØ‰∏™Â≠óÁ¨¶‰∏≤È≠îÊ≥ïÂ∞±Ë∂≥Â§ü‰∫Ü√æ - Âõ†‰∏∫‰ªÖ‰ªÖÊòØÂ≠óÁ¨¶‰∏≤È≠îÊ≥ïÔºåÂÆÉ‰∏çÂ∫îËØ•Â±ÄÈôê‰∫éÊüê‰∏Ä‰∏™Êï∞ÊçÆÂ∫ìÔºåËÄåÊòØÊääÂêàÊ≥ïÊÄßÈóÆÈ¢ò‰Ωú‰∏∫ÂèØÈÄâÈ°πÔºåÊàñÊïôÁªôË∞ÉÁî®ËÄÖËá™Â∑±√æ - JDBC ÂØπ SQL ÂèÇÊï∞ÁöÑÊîØÊåÅÂÆûÂú®Â§™ÁÆÄÈôã‰∫ÜÔºåË¶ÅËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò√æ - ÊîØÊåÅ Java Âíå Clojure√æ - ÈÄÇÂΩìÊîØÊåÅ‰∏Ä‰∫õ‰æøÊç∑ÂäüËÉΩ√æ - Â∞ΩÂèØËÉΩÁ±ªÂûãÂÆâÂÖ®√æ√æ‰∏∫‰∫ÜÂú®ÊúâÈôêÁöÑÊó∂Èó¥ÂÜÖÂÆûÁé∞‰∏Ä‰∏™Êñπ‰æø‰ΩøÁî®ÁöÑÂ∑•ÂÖ∑Á±ªÔºåËøôÁªÑÂ∑•ÂÖ∑Âπ∂Ê≤°ÊúâÁªèËøáÂæàÁ≤æÂ∑ßÁöÑËÆæËÆ°„ÄÇÂÖ∂‰æùËµñÂÖ≥Á≥ªÂíåÁ±ªÂûãÁ∫¶ÊùüÈÉΩ√æ‰∏çÊòØÂæà‰∏•Ë∞®ÔºåÊúâÂÜôÂú∞ÊñπÂæàÊ∑∑‰π±„ÄÇÊÄªÁöÑÊù•ËØ¥ÔºåÂ∫îÈÅµÂæ™ÂÖ∂‰ΩøÁî®ÊñπÊ≥ïÔºåËÄå‰∏çÊòØËÆæËÆ°ÂíåÂÆûÁé∞„ÄÇÂÆÉÁöÑÁõÆÊ†áÊòØÊèê‰æõËæÖÂä©ËÄå‰∏çÊòØ√æÂÆåÊï¥ÁöÑÂäüËÉΩÔºåÊâÄ‰ª•Âú®‰∏ÄÂÆöÁ®ãÂ∫¶‰∏äËøòÈúÄË¶Å‰æùËµñ‰ΩøÁî®ËÄÖÂØπ SQL ÁöÑÁÜüÁªÉÁ®ãÂ∫¶„ÄÇ√æ√æÊàëÊòØ‰∏Ä‰∏™ÊúâÂçÅÂÖ´Âπ¥ SQL ÁªèÈ™åÁöÑÁ®ãÂ∫èÂëòÔºåÂØπ‰∫éÂêÑÁßçÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÁöÑ SQL ËØ≠Ê≥ïÔºåÁâπÂà´ÊòØËØ≠Ë®ÄÂäüËÉΩÊØîËæÉÂº∫ÁöÑÊï∞ÊçÆÂ∫ì√æÂÆûÁé∞Ôºà‰æãÂ¶Ç PostgreSQL Êàñ MSSQLÔºâÊúâÁõ∏ÂΩìÁöÑËá™‰ø°„ÄÇjaskell.sql ÂØπÊàëËøô‰∏™Â§èÂ§©ÂºÄÂèëÂ∑•‰ΩúÂ∏¶Êù•‰∫ÜÂæàÂ§ßÁöÑ‰æø√æÂà©ÂíåÂø´‰πê„ÄÇÂ∏åÊúõÂÆÉ‰πüËÉΩÂØπ‰Ω†ÊúâÊâÄÂ∏ÆÂä©„ÄÇ√æ√æ#### Java ËØ≠Ë®Ä‰∏≠ÁöÑ jaskell.sql√æ√æÈ¶ñÂÖàÂÆö‰πâ‰∫Ü‰∏§‰∏™ËßÑËåÉÔºö√æ√æ - jaskell.script.Directive Êé•Âè£ÂÆö‰πâ‰∫ÜÂèØËß£ÊûêÂØπË±°ÔºåÂÆÉÂ∫îËØ•ÊîØÊåÅÔºö √æ  - script ÊñπÊ≥ïÔºåÁªôÂá∫ËÑöÊú¨ÁªìÊûú√æ  - parameters ÊñπÊ≥ïÔºåÁªôÂá∫ÂÜÖÂê´ÁöÑÂèÇÊï∞ÂàóË°®√æ - jaskell.script.Parameter Á±ªÂÆö‰πâ‰∫ÜÈªòËÆ§ÁöÑÂèÇÊï∞Á±ªÂûãÔºåÂÆÉÔºö√æ  - Ë¶ÅÊ±ÇË∞ÉÁî®ËÄÖÊèê‰æõÂç†‰ΩçÁ¨¶ÔºåËøô‰∏™Âç†‰ΩçÁ¨¶‰ºö‰Ωú‰∏∫ Parameter ÂØπË±° script ÊñπÊ≥ïÁöÑËøîÂõûÂÄº„ÄÇ√æ  - Parameter ÂØπË±°ÁöÑ parameters ÊñπÊ≥ïËøîÂõûÂåÖÂê´Ëá™Ë∫´ÁöÑ‰∏Ä‰∏™ÂçïÂÖÉÁ¥† List„ÄÇ√æ  - Parameter ÂèØ‰ª•ÈÄöËøáËÆæÂÆöÁ±ªÂûãÁöÑÊñπÂºèÔºåÂØπÂèÇÊï∞ÂÄºÂÅöÁ±ªÂûãÂÆâÂÖ®ÁöÑËØªÂÜô„ÄÇ√æ√æËøô‰∏§‰∏™ÂÆö‰πâÂú® jaskell.script ÂåÖÔºåÂõ†‰∏∫ÊàëÂ∏åÊúõÂ∞ÜÊù•ÂÆÉ‰ª¨Âú®Êõ¥ÂπøÊ≥õÁöÑÈ¢ÜÂüüÂèëÊå•‰ΩúÁî®„ÄÇ√æ√æÁÑ∂ÂêéÊòØ‰∏∫ JDBC Êèê‰æõÁöÑ Statement Âíå Query Á±ªÂûã„ÄÇStatement Á±ªÂûãÊèê‰æõ‰∫Ü √æprepare„ÄÅexecute„ÄÅsetParameter Á≠âÂäüËÉΩÔºåËÄå Query Ëøõ‰∏ÄÊ≠•Êèê‰æõ‰∫Ü query ÊñπÊ≥ï„ÄÇ√æËøô‰∫õÊñπÊ≥ïÂ∞ÅË£ÖÂπ∂ÁÆÄÂåñ‰∫Ü JDBC ÁöÑ‰ΩøÁî®ÂÆöÂºè„ÄÇ√æ√æÊàëÂæàÂñúÊ¨¢ ADO.net ‰∏≠ Commander ÂØπË±°ÁöÑ scalar ÊñπÊ≥ïÔºåÊâÄ‰ª•Âú® Query Á±ªÂûã‰∏≠‰πüÊèê‰æõ‰∫Ü√æscalar „ÄÇÂÆÉËøîÂõûÁªìÊûúÈõÜÁ¨¨‰∏ÄË°åÁ¨¨‰∏ÄÂàóÁöÑÂÄº„ÄÇÂ¶ÇÊûúÊàë‰ª¨‰ªÖÈúÄË¶ÅÊü•ËØ¢‰∏Ä‰∏™ÂÄºÔºå‰æãÂ¶Ç √æ`select max(id) from table` ËøôÁßçÔºåscalar Â∞±ÂæàÊñπ‰æø‰∫Ü„ÄÇÂÆÉÊ†πÊçÆ‰º†ÂÖ•ÁöÑ class ÁªôÂá∫√æÂØπÂ∫îÁ±ªÂûãÁöÑ Optional Â∞ÅË£Ö„ÄÇ√æ√æÊé•‰∏ãÊù•ÊòØ Insert„ÄÅ Delete„ÄÅUpdate Âíå Select Á±ªÂûãÔºåÂÆÉ‰ª¨ÊûÑÈÄ†‰∫ÜÂØπÂ∫îËØ≠Âè•ÁöÑËµ∑ÂßãÁâáÊÆµÔºå√æÈÄöËøáË∞ÉÁî®ÊàêÂëòÊñπÊ≥ïÔºåÂ∞±ÂèØ‰ª•ÈÄêÊ≠•ÁîüÊàêÂÆåÊï¥ÁöÑËØ≠Âè•„ÄÇÂΩì‰∏ÄÁªÑËØ≠Ê≥ïÂÖÉÁ¥†Ë∂≥Â§üÁªÑÊàê‰∏Ä‰∏™ÂêàÊ≥ïÁöÑÊâßË°åËØ≠√æÂè•Êó∂ÔºåÊàë‰ª¨ÂæóÂà∞ÁöÑ‰ºöÊòØ‰∏Ä‰∏™ Statement ÂØπË±°ÔºõÂΩìËøô‰∫õËØ≠Ê≥ïÂÖÉÁ¥†Ë∂≥Â§üÁªÑÊàê‰∏Ä‰∏™ÂêàÊ≥ïÁöÑÊü•ËØ¢Êó∂Ôºå√æÊàë‰ª¨‰ºöÂæóÂà∞‰∏Ä‰∏™ Query„ÄÇ√æ√æ‰∏∫‰∫Ü‰ΩøÁî®Êñπ‰æøÔºåÊàëÂºÄÂèë‰∫Ü jaskell.sql.SQL Á±ªÂûãÔºåÂÆÉÊèê‰æõ‰∫Ü‰∏ÄÁªÑÈùôÊÄÅÂáΩÊï∞ÔºåÊù•Â∞ÅË£ÖÂØπÂ∫îÁöÑ√æÂØπË±°ÊûÑÈÄ†Ôºå‰æãÂ¶Ç select/insert/update/delete  ÊñπÊ≥ï„ÄÇ√æ√æ#### Clojure ËØ≠Ë®Ä‰∏≠ÁöÑ jaskell.sql√æ√æClojure ËØ≠Ë®Ä‰∏≠ÁöÑ jaskell.sql ÊîØÊåÅÊØîËæÉÁÆÄÂçïÔºåÂÆÉÂ∞ΩÈáèÂà©Áî®java ÁöÑËµÑÊ∫êÔºåÂ∞ÅË£Ö‰∫ÜËá™Â∑±ÁöÑ√æ select„ÄÅupdate„ÄÅdelete„ÄÅinsert ÂáΩÊï∞ÔºåËøîÂõûÂØπÂ∫îÁöÑ Query Êàñ Statement„ÄÇparse√æÂáΩÊï∞ÊòØ‰∏ªË¶ÅÁöÑÂÜÖÈÉ®ÈÄªËæëÔºåÂÆÉÈÅµÂæ™Â¶Ç‰∏ãËßÑÂàôÔºö√æ √æ - Keyword Á±ªÂûãËøîÂõûÂÖ∂ name√æ - Â≠óÁ¨¶‰∏≤Á±ªÂûãËøîÂõûÂÖ∂Êú¨Ë∫´√æ - Directive ÂØπË±°ËøîÂõûÂÖ∂ script√æ - Âú®Ëøô‰∏™È°πÁõÆ‰∏≠ÔºåÊàë‰ª¨Â∞ÜÈúÄË¶ÅÈÄóÂè∑ËøûÊé•ÁöÑ‰∏ÄÁ≥ªÂàóÂÖÉÁ¥†ÁªüÁß∞‰∏∫‰∏ÄÁªÑÂÖÉÁ¥†ÔºåÈÇ£‰πàÔºö√æ  - Vector Ë¢´ÂΩì‰Ωú‰∏ÄÁªÑÂÖÉÁ¥†Ëß£Êûê√æ  - `(in ...)` ‰ºöË¢´Ëß£Êûê‰∏∫ `in (...)`ÔºåÂÖ∂ÂèÇÊï∞Ë¢´Ëß£Êûê‰∏∫‰∏ÄÁªÑ√æ  - `(into :t [...])` ‰ºöË¢´Ëß£Êûê‰∏∫ `into t(...)`ÔºåÂÖ∂ÂèÇÊï∞Ë¢´Ëß£Êûê‰∏∫‰∏ÄÁªÑ√æ  - `(values ...)` ‰ºöË¢´Ëß£Êûê‰∏∫ `values(...)`ÔºåÂÖ∂ÂèÇÊï∞Ë¢´Ëß£Êûê‰∏∫‰∏ÄÁªÑ√æ  - ÁªÑ‰∏≠ as ÔºàÁ≠âÂêå‰∫é :as) ÂèäÂÖ∂Â∑¶Âè≥ÁöÑÈ°πË¢´ËßÜ‰∏∫‰∏Ä‰∏™ÂÆö‰πâ‰∫ÜÂà´ÂêçÁöÑÂÖÉÁ¥†Ôºå√æ  `[:a :b as :yet :c]` ‰ºöË¢´Ëß£Êûê‰∏∫ `a, b as yet, c` √æ  - union Âíå union all ËøûÊé•ÁöÑÂ∫èÂàóÊåâÁÖß‰∏é as Á≠âÂêåÁöÑËßÑÂàôËß£ÊûêÔºå‰æãÂ¶Ç √æ  `[(select 1) union (select 2)]` ‰ºöË¢´Ëß£Êûê‰∏∫ `select 1 union select 2`√æ √æÁÑ∂ÂêéÔºåÊàë‰ª¨Â∞ÜÂá†‰πéÊâÄÊúâÂÖ∂ÂÆÉÂÖÉÁ¥†ÈÉΩÂÆö‰πâÊàê keyword ÔºåÂ∞±ÂèØ‰ª•‰∫´Âèó Clojure ÁöÑ‰æøÊç∑ËØ≠Ê≥ï‰∫ÜÔºå√æÂá†‰πé SQL Â∞±ÊòØÂΩ¢Â¶Ç `(select [:a :b :c] from :table where :id := :v)` ËøôÊ†∑ÁöÑÂΩ¢Âºè„ÄÇ√æÂá†‰∏™‰æãÂ§ñÁöÑÂ∑•ÂÖ∑ÂáΩÊï∞ÂåÖÂê´Ôºö√æ√æ - p ÂáΩÊï∞Ë°®Á§∫ parameter ÊûÑÈÄ†‰∏Ä‰∏™ JDBCParameter ÂØπË±°√æ - t ÂáΩÊï∞Ë°®Á§∫ text Ôºå‰ºöËß£Êûê‰∏∫‰∏ÄÊÆµÂçïÂºïÂè∑ÂåÖÂê´ÁöÑÊñáÊú¨ÔºåÊ≥®ÊÑèËøô‰∏™ÂáΩÊï∞‰ºöÂ∞ÜÊñáÊú¨‰∏≠ÁöÑÂçïÂºïÂè∑ËΩ¨‰πâ√æ - q ÂáΩÊï∞Ë°®Á§∫ quot Ôºå‰ºöÂ∞ÜÂÜÖÂÆπÁî®ÂèåÂºïÂè∑ÂåÖÂê´Ëµ∑Êù•„ÄÇÊ≥®ÊÑèËøô‰∏™ÂáΩÊï∞‰ºöÂ∞ÜÊñáÊú¨‰∏≠ÁöÑÂèåÂºïÂè∑ËΩ¨‰πâ√æ - br ÂáΩÊï∞Ë°®Á§∫ brackets Ôºå‰ºöÊûÑÈÄ†‰∏Ä‰∏™ Directive ÔºåÂÖ∂ script ËøîÂõûÁöÑÊòØÊã¨Âè∑ÂåÖÂõ¥ÁöÑÂèÇÊï∞Ëß£ÊûêÁªìÊûúÔºå√æ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂ¶ÇÊûúbrÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÊòØ select/insert/delete/update ‰∏≠ÁöÑ‰ªª‰∏Ä‰∏™Ôºåbr‰ºöÂ∞ÜÂèÇÊï∞Â∫èÂàó√æ ËßÜ‰Ωú‰∏Ä‰∏™Â≠êÊü•ËØ¢Êù•ÊûÑÈÄ†ÔºåÂπ∂‰∏î‰∏∫Ëøô‰∏™Â≠êÊü•ËØ¢Âä†‰∏äÊã¨Âè∑√æ - br ÂáΩÊï∞Ë°®Á§∫ brackets Ôºå‰ºöÊûÑÈÄ†‰∏Ä‰∏™ Directive ÔºåÂÖ∂ script ËøîÂõûÁöÑÊòØÊã¨Âè∑ÂåÖÂõ¥ÁöÑÔºåÁî®ÈÄóÂè∑ËøûÊé•√æ ÁöÑÂèÇÊï∞Ëß£ÊûêÁªìÊûúÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂ¶ÇÊûúbrÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÊòØ select/insert/delete/update ‰∏≠ÁöÑ‰ªª‰∏Ä‰∏™Ôºå√æ in ‰ºöÂ∞ÜÂèÇÊï∞Â∫èÂàóËßÜ‰Ωú‰∏Ä‰∏™Â≠êÊü•ËØ¢Êù•ÊûÑÈÄ†ÔºåÂπ∂‰∏î‰∏∫Ëøô‰∏™Â≠êÊü•ËØ¢Âä†‰∏äÊã¨Âè∑ÔºåËøôÊòØÂõ†‰∏∫Ôºåin ÁöÑÂè≥ËæπÊÄªÊòØ‰∏Ä‰∏™ÂÖÉÁ¥†√æ ÂèØÊØîËæÉÁöÑÈõÜÂêàÔºåÂÆÉË¶Å‰πàÊòØ‰∏Ä‰∏™Â≠êÊü•ËØ¢ÔºåË¶Å‰πàÊòØÁî®ÈÄóÂè∑Âàó‰∏æÁöÑ„ÄÇ√æ - f ÂáΩÊï∞Ë°®Á§∫ function ÔºåËøîÂõûÂáΩÊï∞Ë∞ÉÁî®√æ - select ÂáΩÊï∞ËøîÂõû‰∏Ä‰∏™ Query ÔºåÂ∞ÜÂèÇÊï∞ÊãºË£ÖÊàê‰∏ÄÊù° select Êü•ËØ¢√æ - insert/delete/update ËøîÂõûÂØπÂ∫îÁöÑ StatementÔºåÈúÄË¶ÅÊåáÂá∫ÁöÑÊòØÔºåÂ¶ÇÊûúËØ≠Âè•ÁöÑÊú´Â∞æÊòØ √æ `returning [...]`ÔºåÂæóÂà∞ÁöÑÊòØ‰∏Ä‰∏™ Query ÂØπË±°√æ - `(with [name0 as query0 name1 as query1...] statement)` ÂæóÂà∞ÂØπÂ∫îÁöÑ CTE Êü•ËØ¢ÔºåÈÄíÂΩí√æ Êü•ËØ¢ÂàôÊòØ `(with recursive [name0 as query0 name1 as query1...] statement)`√æ√æ### Clojure ÊîØÊåÅ√æ√æ## ÂæÖËß£ÂÜ≥ÁöÑÈóÆÈ¢ò√æ√æ## Êõ¥Êñ∞√æ√æ### 0.2.8√æ√æ - Â¢ûÂä†‰∫Ü function2 handle√æ√æ### 0.2.7√æ√æ - Â¢ûÂä† keywordize-it Â∑•ÂÖ∑ÂáΩÊï∞√æ√æ### 0.2.6√æ√æ - bugs fixed√æ√æ### 0.2.5√æ√æ - Êñ∞Â¢ûÂ∞èÊï∞ÊçÆÁâáÊÆµÁöÑ zip ÂéãÁº©Ëß£ÂéãÂ∑•ÂÖ∑ ZipHelper„ÄÇ√æ√æ### 0.2.4√æ√æ - Êñ∞Â¢ûÂåøÂêç multimethod ÊûÑÈÄ†ÊîØÊåÅ„ÄÇÂèØ‰ª•ÂÖºÂÆπÂÜÖÁΩÆÁöÑ multi ÊñπÊ≥ïÔºå‰æãÂ¶Ç default method√æ√æ### 0.2.3√æ√æ - Êñ∞Â¢û‰∫Ü limit specÔºåÊèê‰æõÂ≠óÂÖ∏ÈîÆÁöÑÊúâÈôêÁ∫¶ÊùüËßÑÂàô√æ√æ### 0.2.2√æ√æ - ÁÆÄÂåñ handle ÁöÑÂ∞ÅË£ÖÂΩ¢Âºè√æ√æ### 0.2.1√æ√æ - Â∞ÅË£Ö‰∫Ü Duration ÁöÑÊûÑÈÄ†ÊñπÊ≥ï√æ√æ### 0.2.0√æ√æ - Â¢ûÂä†‰∫Ü Levenshtein ÁºñËæëË∑ùÁ¶ªÁÆóÊ≥ïÁöÑ Clojure Âíå Java ÂÆûÁé∞ √æ - Â¢ûÂä†‰∫Ü java.util.Function Â∞ÅË£ÖÂÆè function√æ - Â¢ûÂä†‰∫Ü java.util.Supplier Â∞ÅË£ÖÂÆè supplier√æ - Â¢ûÂä†‰∫Ü java.lang.Runnable Â∞ÅË£ÖÂÆè runnable √æ - Â¢ûÂä†‰∫ÜÊó†ÂèÇÊï∞ÂΩ¢ÂºèÁöÑÂáΩÂ≠ê‰∫åÈò∂ÁîüÊàêÂÆè def-generator-0√æ - Â¢ûÂä†‰∫ÜÂçïÂèÇÊï∞ÂΩ¢ÂºèÁöÑÂáΩÂ≠ê‰∫åÈò∂ÁîüÊàêÂÆè def-generator-1√æ - Â¢ûÂä†‰∫ÜÂèåÂèÇÊï∞ÂΩ¢ÂºèÁöÑÂáΩÂ≠ê‰∫åÈò∂ÁîüÊàêÂÆè def-generator-2√æ√æ### 0.1.3√æ√æ - CR Â¢ûÂä† keyword ÊñπÊ≥ï√æ√æ### 0.1.2√æ√æ - Jaskell SQL Ê∑ªÂä† Coalesce ÊîØÊåÅ√æ√æ### 0.1.1 √æ√æ - Jaskell SQL ÊîØÊåÅ `select where` ÂΩ¢Âºè„ÄÇ√æ - Jaskell SQL ÊîØÊåÅ `not exists`√æ - Fixed a error in `insert into`√æ - Fixed a error in predicate compare √æ - Ddd JDBC parameter placeholder support"
only2dhir/spring-security-jwt,12,61,7,64,User,False,"In this article, we will be creating a sample REST CRUD APIs and provide JWT role based authorization using spring security to these APIs. We will be using spring boot 2.0 and JWT 0.9.0. In the DB, we will have two roles defined as ADMIN and USER with custom UserDetailsService implemented and based on these roles the authorization will be decided. We will be using spring data to perform our CRUD operations and spring provided annotations such as @PreAuthorize, @Secured and @EnableGlobalMethodSecurity for authorization.",http://www.devglan.com/spring-security/jwt-role-based-authorization,,3,Java,"{'md': 1, 'xml': 1}",3,1,0,1,0,770,True,1,1,0,0,0,0,0,0,8,0,0,0,0,0,0,0,54,,278,,# Spring Boot Security Jwt Authentication√æ√æThis is a sample project to provide example on how to add JWT token authentication in a spring boot application.√æThe example uses maven as a build tool and also sample script to run on application startup so that anybody can get started by simply running Application.java√æ √æThe complete explanation can be found on my blog here - [Spring Boot Security JWT Authentication](http://www.devglan.com/spring-security/spring-boot-jwt-auth)√æ## Technology Used√æ√æ 1. Spring Boot (1.5.8.RELEASE)√æ 2.  JWT (0.6.0)√æ 3.  Mysql√æ 4. Java 1.8√æ## Similar Post√æ√æYou may be interested in other spring security articles:√æ√æ[Spring Boot Security OAUTH2 Example](http://www.devglan.com/spring-security/spring-boot-security-oauth2-example).√æ√æ[Spring Boot Security Basic Authentication](http://www.devglan.com/spring-security/spring-boot-security-rest-basic-authentication)√æ√æ[Spring Boot Security Hibernate Login](http://www.devglan.com/spring-security/spring-boot-security-hibernate-login-example)√æ√æ[Securing Actuator Endpoints with Spring Security](http://www.devglan.com/spring-security/securing-spring-boot-actuator-endpoints-with-spring-security)
wso2/apim-test-integration,35944,0,81,28,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",19,Java,"{'': 2, 'md': 3, 'sh': 3, 'yaml': 1, 'txt': 1}",344,14,1,20,0,900,True,12,9,0,0,0,140,0,1,32,0,0,0,0,0,0,0,267,94,,,"## apim-test-integration√æAutomation scripts of the APIM business scenario implementation and the related artifacts are maintained in this repo.√æ√æ## List Of Scenarios√æ√æ| *#* | *Scenario* |√æ| --- | --- |√æ| 1 | API Development |√æ|   | * Managing Public, Partner vs Private APIs |√æ|   | * Ownership, permission and collaborative API development |√æ|   | * Developer Optimized APIs Development"" |√æ| 2 | API security |√æ|   | * Protecting Businesses by Anomaly Detection |√æ| 3 | App Development with APIs |√æ| 4 | API Lifecycle Management |√æ| 5 | API Versioning |√æ| 6 | API Governance |√æ| 7 | API Rate Limiting |√æ|   | * API Monetization |√æ| 8 | Manage the Value Chain for APIs |√æ|   | * Business Insights by API analytics |√æ| 9 | Developer Enablement and Community Building√æ| 10 | Support for API Types |√æ| 11 | Geographical Distributed wide API Management |√æ| 12 | API SLA |√æ| 13 | Micro API Gateway |√æ| 14 | Hybrid Cloud Pattern Support |"
b2ihealthcare/snow-owl,529120,174,10,11,Organization,False,":owl: Snow Owl - production ready, scalable terminology server (SNOMED CT, ICD-10, LOINC, dm+d, ATC and others)",https://docs.b2i.sg/snow-owl/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",31,Java,"{'yml': 3, '': 6, 'yaml': 1, 'md': 4, 'setup': 1, 'xml': 2}",10392,44,118,17,10,1991,True,13,49,10,15,3,529,3,104,14,0,9,725,151118,119645,0,0,11,6,,,
jpmorganchase/daytrader-example-portfoliosrepo,712,2,4,7,Organization,False,,,,5,Java,"{'': 1, 'MD': 1}",40,1,0,1,0,617,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,45,9,,,"# Portfolios Microservice√æ√æThe APIs to the portfolios business operations√æ√æ√æ## Monolithic Architecture√æ√æDayTrader is multi-tier application is built around the paradigm of an online stock trading system. Example business operations include√ælogin, register, view portfolio, lookup stock quotes, and buy or sell stock. DayTrader was originally developed by IBM and donated √æto the Apache Geronimo community in the 2005 timeframe. The DayTrader architecture is representitive of monolithic applications that √æmany businesses are still using. For that reason, we selected it to clarify the techniques for refactoring a monolith to microservices. √æFor the monolithic architecture, see [daytrader - a more complex application](http://geronimo.apache.org/GMOxDOC30/daytrader-a-more-complex-application.html). √æ√æ√æ√æ## Microservices Architecture√æ√æConsider the following microservices architecture diagram. In this architecture, the Web is responsible for the UI to the DayTrader business operations. It accepts √æincoming HTTPS requests from the browser and delegates them to the [Gateway Microservice](https://github.com/jpmorganchase/daytrader-example-gatewayrepo/). The √æGateway Microservice in turn redirects the request to the ([Accounts Microservice](https://github.com/jpmorganchase/daytrader-example-accountsrepo/), √æ[Portfolios Microservice](https://github.com/jpmorganchase/daytrader-example-portfoliosrepo/), or √æ[Quotes Microservice](https://github.com/jpmorganchase/daytrader-example-quotesrepo/); which implements that business operation. All of these components are Spring Boot applications.√æ√æ![Target-State-Architecture](images/Target-State-Architecture.JPG)√æ√æ√æ√æ## Prerequisites√æ√æ1.  [Install Java 8](http://www.oracle.com/technetwork/java/javase/downloads/index.html)√æ√æ2.  [Install Maven 3.3.9+](https://maven.apache.org/download.cgi)√æ√æ3.  [Install Docker](https://www.docker.com/get-docker)√æ    √æ4.  [Install Helm Client](https://github.com/helm/helm/blob/master/docs/install.md)√æ    √æ5.  [Create DockerHub Account](https://hub.docker.com/)√æ√æ√æ√æ## Configuration√æ√æMaven must be able to authenticate to your DockerHub account so it can push Docker images√æ√æ1.  In `daytrader-portfolios/pom.xml` change the ${user.name} to your DockerHub user name:√æ√æ    ```xml√æ    <docker.image.prefix>${user.name}</docker.image.prefix>√æ    ``` √æ√æ2.  In `daytrader-portfolios/env/external/k8s/portfolios-deployment.yaml`, change the image to your DockerHub username√æ√æ    ```yaml√æ    image: YOUR_DOCKERHUB_USERNAME/daytrader-portfolios:4.0.18√æ    ```√æ√æ3.  In `daytrader-portfolios/pom.xml`, you don't have to change the `<tag>`, but if you do, change the above version too.√æ        √æ    ```xml√æ    <tag>4.0.18</tag>√æ    ```√æ√æ4.  In `~/.m2/settings.xml`, add the following so Maven can push images to your DockerHub account√æ√æ    ```xml√æ    <servers>√æ        <server>√æ            <id>docker.io</id>√æ            <username>YOUR_DOCKERHUB_USERNAME</username>√æ            <password>YOUR_DOCKERHUB_PASSWORD</password>√æ        </server>√æ    </servers> √æ    ```√æ√æ√æ√æ## Setup√æ√æYou will need a cluster to run the application. If you already have a cluster with the NGINX Ingress Controller installed then feel free to use it. If not, we have provided instructions to help you setup a cluster on Minikube, Amazon EKS, Google Kubernetes Engine, and Azure Kubernetes Service. We have also tested the application on those platforms. For other platforms, see [Picking the right Solution](https://kubernetes.io/docs/setup/pick-right-solution/).√æ√æ1.  [Setup on Minikube](docs/SETUP-ON-MINIKUBE.MD)√æ√æ2.  [Setup on Amazon EKS](docs/SETUP-ON-EKS.MD)√æ√æ3.  [Setup on Google GKE](docs/SETUP-ON-GKE.MD)√æ√æ4.  [Setup on Azure AKS](docs/SETUP-ON-AKS.MD)√æ√æ√æ√æ## Build, Release, and Run√æ√æYou can run the application on Spring Boot or on the Kubernetes Cluser.√æ√æ1.  [Run on Spring Boot](docs/RUN-ON-SPRING-BOOT.MD)√æ√æ2.  [Run on Kubernetes](docs/RUN-ON-KUBERNETES.MD)√æ√æ**Notes** √æ√æ1.  The application code and build scripts were 100% portable across the Kubernetes platforms we tested.√æ√æ2.  This means you can write the code once and run it on any platform. This is great news for developers!√æ√æ√æ√æ## Migration Approach√æ√æIn this section we will take a look at how we migrated the Portfolios Spring Boot Application to Kubernetes. √æ√æ1.  [Generate the Docker Image](docs/GENERATE-DOCKER-IMAGE.MD)√æ√æ2.  [Create the Kubernetes Deployment](docs/CREATE-KUBERNETES-DEPLOYMENT.MD)√æ√æ3.  [Create the Kubernetes Service](docs/CREATE-KUBERNETES-SERVICE.MD)√æ√æ**Notes** √æ√æ1.  The application deployment scripts and commands were 100% portable across the Kubernetes platforms we tested. √æ√æ2.  This means you can write the scripts once and deploy to any Kubernetes platform. This is great news for DevOps!"
arjinmc/RecyclerViewDecoration,1492,106,3,17,User,False,"a common tool class for itemdecoration of RecyclerView,support ninepatch image.",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 2, 'md': 4}",103,5,0,1,1,1666,True,2,12,0,0,0,0,0,0,7,0,1,1,10,4,0,0,40,,54,,"# RecyclerViewDecoration√æa common tool class for decoration of RecyclerView,support ninepatch image.√æ√æ[‰∏≠ÊñáÁâà](README_CN.md)√æ√æ[Release Note](NEWS.md)  √æ√æDocuments are here [Wiki](https://github.com/arjinmc/RecyclerViewDecoration/wiki)  √æ√æYou can import this lib with gradle or maven because it exists on JCenter.√æ√æMore expandable useful methods will be shown in [ExpandRecyclerView](https://github.com/arjinmc/ExpandRecyclerView) lib. <strong>This lib will be combine into ExpandRecyclerView lib</strong>.   √æIf you don't want to use ExpandRecyclerView lib, no worry, you can still use this lib.√æ√æ## Import√æ√æ#### gradle√æ```code√æcompile 'com.arjinmc.android:recyclerviewdecoration:4.1'√æ```√æ#### maven√æ```code√æ<dependency>√æ  <groupId>com.arjinmc.android</groupId>√æ  <artifactId>recyclerviewdecoration</artifactId>√æ  <version>4.1</version>√æ  <type>pom</type>√æ</dependency>√æ```√æ√æ## Functions√æ√æAll built by Builer().  √æ√æ* RecyclerViewLinearItemDecoration√æ* RecyclerViewLinearSpaceItemDecoration√æ* RecyclerViewGridItemDecoration√æ* RecyclerViewGridSpaceItemDecoration√æ* RecyclerViewStickyHeadItemDecoration reference to [https://github.com/chenpengfei88/StickyItemDecoration](https://github.com/chenpengfei88/StickyItemDecoration)√æ√æ## Sample images√æ√æ![image](https://github.com/arjinmc/RecyclerViewDecoration/blob/master/images/device-2015-12-02-111504.png)  √æ![image](https://github.com/arjinmc/RecyclerViewDecoration/blob/master/images/device-2015-11-30-155050.png)√æ![image](https://github.com/arjinmc/RecyclerViewDecoration/blob/master/images/device-2015-11-30-154937.png)√æ![image](https://github.com/arjinmc/RecyclerViewDecoration/blob/master/images/device-2015-11-30-155157.png)"
ralscha/sse-eventbus,461,47,8,15,User,False,EventBus library for sending events from a Spring appliction to the web browser with SSE,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 4, 'md': 1, 'cmd': 1, 'xml': 2}",200,1,12,2,3,1317,True,1,13,1,1,0,1,0,0,7,0,1,18,170,117,13,0,63,,190,,"![Test Status](https://github.com/ralscha/sse-eventbus/workflows/test/badge.svg)√æ√æsse-eventbus is a Java library that sits on top of [Spring's Sever-Sent Event support](https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-ann-async-sse).   √æIt keeps track of connected clients and broadcasts events to them.√æ√æ## Usage√æ√æ√æ### Setup server√æ√æEnable support by adding ```@EnableSseEventBus``` to a Spring application.√æ```√æ@SpringBootApplication√æ@EnableSseEventBus√æpublic class Application {√æ  ...√æ}√æ```√æ√æCreate a controller that handles the SSE requests and returns a [SseEmitter](http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.html).√æEach client has to provide an id that identifies this client. √æThe controller then registers the client in the eventBus with the method ```registerClient``` and√æsubscribes it to events with the ```subscribe``` method.√æThe SseEventBus class contains a convenient method ```createSseEmitter``` that does all of this. √æ√æ```√æ@Controller√æpublic class SseController {√æ  private final SseEventBus eventBus;√æ  public SseController(SseEventBus eventBus) {√æ    this.eventBus = eventBus;√æ  }√æ√æ  @GetMapping(""/register/{id}"")√æ  public SseEmitter register(@PathVariable(""id"") String id) {√æ    SseEmitter emitter = new SseEmitter(180_000L);√æ    emitter.onTimeout(emitter::complete);√æ    this.eventBus.registerClient(id, emitter);√æ    this.eventBus.subscribe(id, SseEvent.DEFAULT_EVENT);√æ    return emitter;√æ√æ    //OR√æ    //return this.eventBus.createSseEmitter(id, SseEvent.DEFAULT_EVENT)√æ  }√æ}√æ```√æ√æ### Setup client√æ√æOn the client side an application interacts with the [EventSource](https://developer.mozilla.org/en/docs/Web/API/EventSource) object.√æThis object is responsible for sending the SSE request to the server and calling listeners√æthe application registered on this object. √æAs mentioned before the client has to send an id that should be unique among all the clients. √æA simple way is to use libraries like [node-uuid](https://github.com/kelektiv/node-uuid) that generates UUIDs.√æ√æ```√æconst uuid = uuid();√æconst eventSource = new EventSource(`/register/${uuid}`);√æeventSource.addEventListener('message', response => {√æ  //handle the response from the server√æ  //response.data contains the data line √æ}, false);√æ```√æ√æ√æ### Broadcasting events√æ√æTo broadcast an event to all connected clients a Spring application can either inject the SseEventBus √æsingleton and call the ```handleEvent``` method √æ√æ```√æ@Service√æpublic class DataEmitterService {√æ  private final SseEventBus eventBus;√æ  public DataEmitterService(SseEventBus eventBus) {√æ    this.eventBus = eventBus;√æ  }√æ√æ  public void broadcastEvent() {√æ    this.eventBus.handleEvent(SseEvent.ofData(""some useful data""));√æ  }√æ√æ}√æ√æ```√æ√æor use Spring's event infrastructure and publish a SseEvent√æ√æ```√æ@Service√æpublic class DataEmitterService {√æ  private final ApplicationEventPublisher eventPublisher;√æ  // OR: private final ApplicationContext ctx;√æ  // this class implements the ApplicationEventPublisher interface√æ  public DataEmitterService(ApplicationEventPublisher eventPublisher) {√æ    this.eventPublisher = eventPublisher;√æ  }√æ√æ  public void broadcastEvent() {√æ    this.eventPublisher.publishEvent(SseEvent.ofData(""some useful data""));√æ  }√æ}√æ```√æ√æ√æ## Maven√æThe library is hosted on the Central Maven Repository√æ```√æ  <dependency>√æ    <groupId>ch.rasc</groupId>√æ    <artifactId>sse-eventbus</artifactId>√æ    <version>1.1.9</version>√æ  </dependency>  √æ```√æ√æ## Demo√æSimple demo application:    √æhttps://github.com/ralscha/sse-eventbus-demo√æ√æIonic Demo Chat application:    √æhttps://github.com/ralscha/sse-eventbus-demo-chat√æ√æ√æ## More information√æArticles about Server-Sent Events    √æ* https://hpbn.co/server-sent-events-sse/   √æ* https://www.html5rocks.com/en/tutorials/eventsource/basics/√æ√æ√æ## Browser Support√æSSE is supported in most browsers. The notable exceptions are the browsers from Microsoft IE and Edge.   √æhttp://caniuse.com/#feat=eventsource√æ√æFortunately it is possible to polyfill the SSE support where it's missing. √æ√æ* **[EventSource](https://github.com/remy/polyfills/blob/master/EventSource.js)** by Remy Sharp√æ* **[jQuery.EventSource](http://github.com/rwldrn/jquery.eventsource)** by Rick Waldron√æ* **[EventSource](https://github.com/Yaffle/EventSource)** by Yaffle√æ* **[EventSource](https://github.com/amvtek/EventSource)** by AmvTek√æ√æ√æ## Changelog√æ√æ### 1.1.9 - February 18, 2020√æ  * Catch and log exceptions in event loop. Prevents the loop to terminate.√æ√æ√æ### 1.1.8 - December 21, 2019√æ  * Resolves [Issue #13](https://github.com/ralscha/sse-eventbus/issues/13): Add lifecycle hooks√æ  √æ  * Resolves [Issue #12](https://github.com/ralscha/sse-eventbus/issues/12): Hide ImmutableSseEvent completely from public API√æ√æ√æ### 1.1.7 - May 24, 2018√æ  * Resolves [Issue #8](https://github.com/ralscha/sse-eventbus/issues/8): Fix handling messages containing a new line character \n√æ  √æ  * Resolves [Issue #6](https://github.com/ralscha/sse-eventbus/issues/6): Make members of DefaultSseEventBusConfiguration protected for easier sub classing √æ  √æ√æ### 1.1.6 - March 21, 2018√æ  * Change client expiration job to fixed delay and add separate configuration for this delay. By default it is 1 day, you change this value by implementing√æ    `SseEventBusConfigurer.clientExpirationJobDelay` √æ√æ√æ### 1.1.5 - January 7, 2018√æ  * Extract subscription registry code out of the SseEventBus class into the interface SubscriptionRegistry and the class DefaultSubscriptionRegistry. √æ    This allows a project to customize the existing implementation or write their own implementation. To√æ  override the default implementation add a Spring managed bean of type SubscriptionRegistry to your project.   √æ√æ  Example:√æ  ```√æ  @Component√æ  public class CustomSubscriptionRegistry extends DefaultSubscriptionRegistry {√æ√æ    @Override√æ    public boolean isClientSubscribedToEvent(String clientId, String eventName) {√æ      return super.isClientSubscribedToEvent(clientId, eventName)√æ          || super.isClientSubscribedToEvent(clientId, ""*"");√æ    }√æ  }  √æ  ```√æ  √æ√æ### 1.1.4 - December 15, 2017√æ  * Resolves [Issue #2](https://github.com/ralscha/sse-eventbus/issues/2). Make sure that your project depends on Spring 4.3.13 or newer.√æ√æ√æ### 1.1.3 - September 12, 2017√æ  * Add the following public methods to the SseEventBus class to query events and subscribers.√æ     * Set<String> getAllClientIds()√æ     * Set<String> getAllEvents()√æ     * Map<String, Set<String>> getAllSubscriptions()√æ     * Set<String> getSubscribers(String event)√æ     * int countSubscribers(String event)√æ     * boolean hasSubscribers(String event)√æ√æ√æ### 1.1.2 - July 16, 2017√æ  * Add a workaround for the Microsoft Edge browser where the polyfill no longer work correctly.√æ  The createSseEmitter method supports an additional parameter that tells the library to complete (close) the connection after sending a message.√æ  This way the system behaves like long polling instead of http streaming.√æ  ```√æ  boolean completeAfterMessage = true;√æ  eventBus.createSseEmitter(""client1"", 180_000L, true, completeAfterMessage, ""event1"", ""event2"");√æ  ```√æ√æ√æ### 1.1.1 - July 8, 2017√æ  * Add support for automatic unregister clients from events during registering.√æ  ```SseEventBus.createSseEmitter``` supports an additional boolean parameter. If true the method√æ  subscribes the client to the provided events and unsubscribes it from all other currently subscribed events.√æ  √æ    ```eventBus.createSseEmitter(""client1"", 180_000L, true, ""event1"", ""event2"");```    √æ    After this call the client is only subscribed to ```event1``` and ```event2```.√æ  √æ    *...later in the application...*   √æ√æ    ```eventBus.createSseEmitter(""client1"", 180_000L, true, ""event1"");```    √æ    After this call the client is only subscribed to ```event1```. The method automatically unregistered the client from ```event2```.√æ√æ√æ### 1.1.0 - April 28, 2017√æ  * Add support for Jackson JSON View.√æ    ```SseEvent.builder().event(""eventName"").data(dataObj).jsonView(JsonViews.PUBLIC.class).build()```   √æ  To support that the interface ```ch.rasc.sse.eventbus.DataObjectConverter``` changed. √æ  Instead of the ```data``` object the two methods receive the ```SseEvent``` object.    √æ  ```1.0.x:  boolean supports(Object object);  String convert(Object object);```    √æ  ```1.1.x:  boolean supports(SseEvent event); String convert(SseEvent event);```    √æ  To get the data object your code can call ```event.data()```.√æ √æ√æ### 1.0.1 - March 31, 2017√æ  * Add support for excluding clients with the ```addExcludeClientId``` method.√æ    ``` √æ    SseEvent.builder().addExcludeClientId(""2"")√æ          .event(""eventName"")√æ          .data(""payload"")√æ          .build();√æ    ```√æ    √æ√æ### 1.0.0 - November 19, 2016√æ  * Initial release√æ√æ√æ## License√æCode released under [the Apache license](http://www.apache.org/licenses/)."
phenotips/clinical-text-analysis-extension,235142,1,9,6,Organization,False,An extension for Phenotips to extract HPO terms from free text.,,,11,Java,"{'': 2, 'md': 1, 'xml': 1}",97,4,5,7,0,2126,True,13,3,0,0,1,10,0,0,14,2,0,0,0,0,0,0,28,9,,,"# Clinical Text Analysis Extension for Phenotips√æ√æAn extension for Phenotips to extract HPO terms from free text. The default√æimplementation utilizes [Apache CTakes](http://ctakes.apache.org/);√æ√æTo install, `mvn install` phenotips-components first, then this extension, and finally phenotips-parent itself."
pmkramer/PolyElectives,5676,0,1,2,User,False,,,,10,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 2}",168,2,0,6,0,632,True,67,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,14,,1,,# PolyElectives√æ√æTo Run SONAR locally:√æ√æmvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar \√æ  -Dsonar.projectKey=Electives \√æ    -Dsonar.organization=307group \√æ      -Dsonar.host.url=https://sonarcloud.io \√æ        -Dsonar.login=25b54f1c1407f631d2555a2e71853e6aac98f658√æ√æTravis Site: https://travis-ci.org/pmkramer/PolyElectives√æ√æSonar Site: https://sonarcloud.io/organizations/307group/projects
eiffel-community/eiffel-intelligence,4497,9,12,41,Organization,False,Eiffel Intelligence is a real time data aggregation and analysis solution for Eiffel events. ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'yaml': 1, '': 4, 'yml': 1, 'md': 1, 'xml': 1}",568,2,33,24,1,1145,True,24,50,13,7,1,393,1,28,12,0,8,22,1842,1708,0,0,31,6,,,"<!---√æ   Copyright 2017-2018 Ericsson AB.√æ   For a full list of individual contributors, please see the commit history.√æ√æ   Licensed under the Apache License, Version 2.0 (the ""License"");√æ   you may not use this file except in compliance with the License.√æ   You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ   Unless required by applicable law or agreed to in writing, software√æ   distributed under the License is distributed on an ""AS IS"" BASIS,√æ   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ   See the License for the specific language governing permissions and√æ   limitations under the License.√æ--->√æ√æ<img src=""./images/eiffel-intelligence-logo.png"" alt=""Eiffel Intelligence"" width=""350""/>√æ√æ[![Build Status](https://travis-ci.org/eiffel-community/eiffel-intelligence.svg?branch=master)](https://travis-ci.org/eiffel-community/eiffel-intelligence)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8600a861b2aa4770901d12a45ace3535)](https://www.codacy.com/app/eiffel-intelligence-maintainers/eiffel-intelligence?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=eiffel-community/eiffel-intelligence&amp;utm_campaign=Badge_Grade)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/8600a861b2aa4770901d12a45ace3535)](https://www.codacy.com/app/eiffel-intelligence-maintainers/eiffel-intelligence?utm_source=github.com&utm_medium=referral&utm_content=eiffel-community/eiffel-intelligence&utm_campaign=Badge_Coverage)√æ[![](https://jitpack.io/v/eiffel-community/eiffel-intelligence.svg)](https://jitpack.io/#eiffel-community/eiffel-intelligence)√æ√æ# Eiffel Intelligence√æEiffel Intelligence is a real time data aggregation and analysis solution√æfor Eiffel events. While Eiffel represents an event based architecture,√æEiffel Intelligence addresses the need of stakeholders to view the current√æstate of the system by bridging the divide from immutable events to mutable√æstate representation. More information can be found in the below documentation links.√æ√æEiffel Intelligence consists of two components: the Eiffel Intelligence√æback-end (this repository) and the [Eiffel Intelligence front-end](https://github.com/eiffel-community/eiffel-intelligence-frontend),√æwhich is a graphical user interface.√æ√æ## About this repository√æThe contents of this repository are licensed under the [Apache License 2.0](./LICENSE).√æ√æTo get involved, please see [Code of Conduct](https://github.com/eiffel-community/.github/blob/master/CODE_OF_CONDUCT.md) and [contribution guidelines](https://github.com/eiffel-community/.github/blob/master/CONTRIBUTING.md).√æ√æ## About Eiffel√æThis repository forms part of the Eiffel Community. Eiffel is a protocol for technology agnostic machine-to-machine communication in continuous integration and delivery pipelines, aimed at securing scalability, flexibility and traceability. Eiffel is based on the concept of decentralized real time messaging, both to drive the continuous integration and delivery system and to document it.√æ√æVisit [Eiffel Community](https://eiffel-community.github.io) to get started and get involved.√æ√æ## Documentation√æ√æ1. [**What is Eiffel Intelligence?**](wiki/index.md)√æ2. [**Running Eiffel Intelligence**](wiki/running-eiffel-intelligence.md)√æ   - [**Prerequisites**](wiki/running-eiffel-intelligence.md#Prerequisites)√æ   - [**Configuration**](wiki/configuration.md)√æ   - [**Run in Docker**](wiki/docker.md)√æ3. [**Understanding subscriptions**](wiki/subscriptions.md)√æ   - [**REST POST notification**](wiki/subscription-with-REST-POST-notification.md)√æ   - [**HTTP POST notification to trigger parameterized Jenkins jobs**](wiki/triggering-jenkins-jobs.md)√æ   - [**Email notification**](wiki/subscription-with-email-notification.md)√æ   - [**Step by Step Subscription Notification**](wiki/step-by-step-subscription-notification.md)√æ4. [**Understanding rules**](wiki/rules.md)√æ   - [**What is JMESPath?**](wiki/rules.md#What-is-JMESPath?)√æ   - [**Rule set up**](wiki/rules.md#Rule-set-up)√æ   - [**MergeResolverRules**](wiki/merge-resolver-rules.md)√æ   - [**History Rules**](wiki/history-rules.md)√æ   - [**Example rules**](wiki/example-rules.md)√æ   - [**Mapping Rules To Aggregations**](wiki/mapping-rules-to-aggregations.md)√æ5. [**Step by Step Aggregation on Eiffel events**](wiki/step-by-step-aggregation.md)√æ   - [**ArtifactCreatedEvent Aggregation**](wiki/artifact-created-event-aggregation.md)√æ   - [**TestCaseTriggeredEvent Aggregation**](wiki/test-case-triggered-event-aggregation.md)√æ   - [**TestCaseStartedEvent Aggregation**](wiki/test-case-started-event-aggregation.md)√æ   - [**TestCaseFinishedEvent Aggregation**](wiki/test-case-finished-event-aggregation.md)√æ   - [**ArtifactPublishedEvent Aggregation**](wiki/artifact-published-event-aggregation.md)√æ   - [**ConfidenceLevelModifiedEvent Aggregation**](wiki/confidence-level-modified-event-aggregation.md)√æ6. [**REST API**](wiki/REST-API.md)√æ7. [**Compatibility**](wiki/compatibility.md)√æ8. [**Known limitations**](wiki/known-limitations.md)"
LatvianModder/YABBA,912,30,6,10,User,False,Yet Another Better Barrel Attempt Mod,,,9,Java,"{'': 2, 'md': 1, 'gradle': 1, 'properties': 1, 'bat': 1}",299,2,0,8,0,1294,True,29,106,3,0,0,8,0,0,2,0,0,0,0,0,0,0,55,,89,,# YABBA [![](http://cf.way2muchnoise.eu/yabba.svg) ![](https://cf.way2muchnoise.eu/packs/yabba.svg) ![](http://cf.way2muchnoise.eu/versions/yabba.svg)](https://www.curseforge.com/minecraft/mc-mods/yabba)
ARMmbed/java-coap,1183,40,12,18,Organization,False,CoAP Java library,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",14,Java,"{'': 2, 'md': 1, 'yml': 1, 'sh': 1, 'txt': 1, 'xml': 3}",284,7,4,11,6,2132,True,0,10,0,1,2,14,0,0,7,0,1,2,47,4,0,0,778,26,,,"mbed CoAP√æ=========√æ√æ![CircleCI](https://img.shields.io/circleci/project/github/ARMmbed/java-coap/master.svg)√æ[![License](https://img.shields.io/badge/license-Apache%202.0-brightgreen.svg)](LICENSE)√æ[![codecov](https://codecov.io/gh/ARMmbed/java-coap/branch/master/graph/badge.svg)](https://codecov.io/gh/ARMmbed/java-coap)√æ[![Known Vulnerabilities](https://snyk.io/test/github/armmbed/java-coap/badge.svg)](https://snyk.io/test/github/armmbed/java-coap)√æ√æIntroduction√æ------------√æ√æThis library makes it easy to integrate a Java SE enabled device with coap based services like [mbed Cloud](https://www.mbed.com/en/platform/cloud). √æIt can also help to emulate an embedded device for prototyping and testing purposes. √æ√æThe following features are supported by the library:√æ√æ* Complete CoAP support√æ    - The Constrained Application Protocol [RFC 7252](https://tools.ietf.org/html/rfc7252)√æ    - Observing Resources in the Constrained Application Protocol [RFC 7641](https://tools.ietf.org/html/rfc7641)√æ    - Block-Wise Transfers in the Constrained Application Protocol [RFC 7959](https://tools.ietf.org/html/rfc7959)√æ* CoRE Link Format processing API√æ    - Constrained RESTful Environments (CoRE) Link Format [RFC 6690](https://tools.ietf.org/html/rfc6690)√æ* CoAP server mode√æ* CoAP client mode√æ* Coap over tcp, tls [RFC 8323](https://tools.ietf.org/html/rfc8323)√æ    - excluding: websockets, observations with BERT blocks√æ* Network transports:√æ    - UDP (plain text)√æ    - TCP (plain text)√æ    - TLS√æ* LwM2M TLV and JSON data formats√æ√æRequirements√æ------------√æ√æ### Runtime:√æ√æ* JRE 8√æ* JRE 11√æ√æ### Development:√æ√æ* JDK 8√æ* maven 3.x√æ√æ√æUsing the Library√æ-----------------√æ√æAdd repository to build file:√æ√æ    <repositories>√æ  <repository>√æ      <id>jitpack.io</id>√æ      <url>https://jitpack.io</url>√æ  </repository>√æ </repositories>√æ√æAdd dependency into your `pom.xml`:√æ√æ    <dependency>√æ        <groupId>com.mbed.java-coap</groupId>√æ        <artifactId>coap-core</artifactId>√æ        <version>{VERSION}</version>√æ    </dependency>√æ√æ√æ### Creating a Server√æ√æ#### Initializing, starting and stopping the server√æ√æTo initialize a server, you must at minimum define the port number. You must set the server parameters before starting a server. √æ√æ    CoapServer server = CoapServer.builder().transport(5683).build();√æ    server.start();√æ√æTo stop a server, use the `stop()` method.√æ √æ    server.stop();√æ√æ√æ#### Adding request handlers√æ√æYou can add handlers before or while the server is running. There can be several URI paths assigned to the same handler. √æYou can also remove a handler at any time.√æ√æ    CoapHandler handler = new ReadOnlyCoapResource(""24"");√æ    server.addRequestHandler(""/temperature"", handler);√æ    √æ    server.removeRequestHandler(handler);√æ√æ√æ√æ#### Creating CoAP resources√æ√æTo create a CoAP resource, you must implement a `CoapHandler`. There is one abstract helper class `CoapResource` that can be extended. At minimum, implement the `get()` method. √æ√æThe following example overrides `get()` and `put()` and creates a simple CoAP resource:√æ√æ    public class SimpleCoapResource extends CoapResource {√æ        private String body=""Hello World"";√æ        √æ        @Override√æ        public void get(CoapExchange ex) throws CoapCodeException {√æ            ex.setResponseBody(""Hello World"");√æ            ex.setResponseCode(Code.C205_CONTENT);√æ            ex.sendResponse();√æ        }√æ        √æ        @Override√æ        public void put(CoapExchange ex) throws CoapCodeException {√æ          body = ex.getRequestBodyString();        √æ            ex.setResponseCode(Code.C204_CHANGED);√æ            ex.sendResponse();√æ        }√æ    }√æ√æ### Creating a client√æ√æ√æTo make a CoAP request, use the class `CoapClient`. It uses fluent API. The following is a simple example on the usage:√æ√æ    CoapClient client = CoapClientBuilder.newBuilder(new InetSocketAddress(""localhost"",5683)).build();√æ    √æ    CoapPacket coapResp = client.resource(""/s/temp"").sync().get();√æ    √æ    coapResp = client.resource(""/a/relay"").payload(""1"", MediaTypes.CT_TEXT_PLAIN).sync().put();√æ        √æ    //it is important to close connection in order to release socket√æ    client.close();√æ    √æ√æExample client√æ--------------√æ√æThis [example client](example-client) demonstrates how to build coap client.√æ√æ√æDevelopment√æ-----------√æ√æ### Build√æ√æ    mvn clean install√æ     √æ### Build with all checks enabled√æ     √æ    mvn clean install -P ci√æ√æ### Update license header√æ√æ    mvn com.mycila:license-maven-plugin:format√æ√æ√æContributions√æ-------------√æ√æAll contributions are Apache 2.0. Only submit contributions where you have authored all of the code. If you do this on work time make sure your employer is OK with this.√æ√æLicense√æ-------√æ√æUnless specifically indicated otherwise in a file, files are licensed under the Apache 2.0 license, √æas can be found in: [LICENSE](LICENSE)"
JavaMoney/jsr354-api,16159,243,48,70,Organization,False,JSR 354 - Money and Currency API,http://javamoney.org,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 1, 'yml': 1, 'txt': 1, 'md': 1, 'bnd': 1, 'xml': 2}",1180,9,13,15,10,2760,True,19,26,1,0,0,84,0,1,14,1,2,18,1692,1691,543,0,21,16,,,"JSR 354: Money and Currency API√æ===============================√æ√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/javax.money/money-api/badge.svg)](https://maven-badges.herokuapp.com/maven-central/javax.money/money-api)√æ[![Build Status](https://api.travis-ci.org/JavaMoney/jsr354-api.png?branch=master)](https://travis-ci.org/JavaMoney/jsr354-api)√æ[![Coverage Status](https://coveralls.io/repos/JavaMoney/jsr354-api/badge.svg?branch=master)](https://coveralls.io/r/JavaMoney/jsr354-api?branch=master)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/bfea0539add5419896d4df825bafbec6)](https://www.codacy.com/app/JavaMoney/jsr354-api?utm_source=github.com&utm_medium=referral&utm_content=JavaMoney/jsr354-api&utm_campaign=badger)√æ[![Stability: Maintenance](https://masterminds.github.io/stability/maintenance.svg)](https://masterminds.github.io/stability/maintenance.html)√æ[![Join the chat at https://gitter.im/JavaMoney/jsr354-api](https://badges.gitter.im/JavaMoney/jsr354-api.svg)](https://gitter.im/JavaMoney/jsr354-api?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)√æ√æJSR 354 provides an API for representing, transporting, and performing comprehensive calculations with Money and Currency. √æSee the home page for more details:√æhttp://jcp.org/en/jsr/detail?id=354√æ√æThis is the API module of JSR 354 licenced under √æ- the Apache License Version 2.0 (LICENCE.txt)√æ√æSee also:√æhttp://javamoney.github.io/√æ√æRelease Notes√æ-------------√æ√æ- *1.0*    API as defined by JSR 354 Spec.√æ- *1.0.1*  API as defined by JSR 354 Spec (Fix: building Java 7 API with Java 7)√æ- *1.0.2*  API as defined by JSR 354 Spec (Fix: built with Java 9) - dont use, use 1.0.3 instead!√æ- *1.0.3*  API as defined by JSR 354 Spec (Compatible with Java 8, full Java 9 module support)√æ√æ[![Built with Maven](http://maven.apache.org/images/logos/maven-feather.png)](http://maven.org/)"
leokongwq/springcloud-learn,85,0,1,6,User,False,spring-cloudÂ≠¶‰π†Á¨îËÆ∞,,,5,Java,"{'': 1, 'xml': 1}",11,1,0,1,0,838,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,142,,23,,
usethesource/rascal-eclipse,9660,13,21,14,Organization,False,"Eclipse IMP based IDE for the Rascal meta-programming language. See rascal project for Wiki, Issues and such.",http://www.rascal-mpl.org,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",10,Java,"{'': 4, 'md': 1, 'xml': 1}",2606,44,23,23,6,,False,,,,,1,9,1,0,6,0,3,122,2136,2660,0,0,15,10,,,
yu-linfeng/BlogRepositories,13070,6,3,21,User,False,CnBlogs' code repositories.,,,4,Java,{'md': 1},60,2,0,3,0,976,True,0,0,0,0,1,2,1,1,9,0,1,13,2162,248,0,0,36,,14,,"# [ÂçöÂÆ¢Âõ≠](yulinfeng.cnblogs.com)‰ª£Á†Å‰ªìÂ∫ì√æ√æ> Ê≠§‰ªìÂ∫ì‰∏∫ÂçöÂÆ¢‰∏≠ÊâÄÊ∂âÂèäÁöÑÂÆåÊï¥‰ª£Á†ÅÔºåÂùáÂèØÂÆåÊï¥‰∏ãËΩΩÂà∞Êú¨Âú∞„ÄÇÂçöÂÆ¢Âú∞ÂùÄ:[**https://yulinfeng.cnblogs.com**](https://yulinfeng.cnblogs.com)„ÄÇÂèØÂÖ≥Ê≥®ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑:**CoderBuff**ÔºåÂèäÊó∂Êî∂Âà∞‰ΩúËÄÖÁöÑÊúÄÊñ∞ÂçöÂÆ¢„ÄÇ√æ<div align=center><img width=""426"" height=""238"" src=""https://raw.githubusercontent.com/yu-linfeng/BlogRepositories/master/resources/img/coderbuff.png""/></div>√æ√æ# ÁõÆÂΩï√æ¬∑ 2017-10-23„ÄäSpring AOPÂàùÁ∫ß‚Äî‚ÄîÁÆÄÂçïÂ∫îÁî®„Äã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/Spring%20AOP%E5%88%9D%E7%BA%A7%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8)√æ[„ÄêÂçöÂÆ¢„Äë](http://www.cnblogs.com/yulinfeng/p/7719128.html)√æ√æ¬∑ 2017-10-31„ÄäSpring AOP‰∏≠Á∫ß‚Äî‚ÄîÂ∫îÁî®Âú∫ÊôØ„Äã [„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/Spring%20AOP%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF) [„ÄêÂçöÂÆ¢„Äë](http://www.cnblogs.com/yulinfeng/p/7719128.html)√æ√æ¬∑ 2017-11-15„ÄäSpring AOPÈ´òÁ∫ß‚Äî‚ÄîÊ∫êÁ†ÅÂÆûÁé∞Ôºà2ÔºâSpring AOP‰∏≠ÈÄöÁü•Âô®ÔºàAdvisorÔºâ‰∏éÂàáÈù¢ÔºàAspectÔºâ„Äã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/Spring%20AOP%E9%AB%98%E7%BA%A7%E2%80%94%E2%80%94%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%882%EF%BC%89Spring%20AOP%E4%B8%AD%E9%80%9A%E7%9F%A5%E5%99%A8%EF%BC%88Advisor%EF%BC%89%E4%B8%8E%E5%88%87%E9%9D%A2%EF%BC%88Aspect%EF%BC%89)[„ÄêÂçöÂÆ¢„Äë](http://www.cnblogs.com/yulinfeng/p/7841167.html)√æ√æ¬∑ 2017-11-22 SpringBootÂü∫Á°ÄÁ§∫‰æã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/Spring%20Boot%E5%9F%BA%E7%A1%80%E7%A4%BA%E4%BE%8B)√æ√æ¬∑ 2017-12-05 „ÄäJavaÈòªÂ°ûÂºèËæìÂÖ•ËæìÂá∫ÔºàBIOÔºâ„Äã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/%E9%98%BB%E5%A1%9E%E5%BC%8F%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%EF%BC%88BIO%EF%BC%89)[„ÄêÂçöÂÆ¢„Äë](https://www.cnblogs.com/yulinfeng/p/7995559.html)√æ√æ¬∑ 2019-01-06„ÄäËÆ©MongoDBÂú®Spring‰∏≠Ë∑ëËµ∑Êù•„Äã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/%E8%AE%A9Mongo%E5%9C%A8Spring%E4%B8%AD%E8%B7%91%E8%B5%B7%E6%9D%A5)[„ÄêÂçöÂÆ¢„Äë](https://www.cnblogs.com/yulinfeng/p/10230832.html)√æ√æ¬∑ 2019-05-31„ÄäÂâëÊåáOfferÁºñÁ®ãÈ¢ò1~6„Äã[„Äê‰ª£Á†Å„Äë](https://github.com/yu-linfeng/BlogRepositories/tree/master/repositories/sword)[„ÄêÂçöÂÆ¢„Äë](https://www.cnblogs.com/yulinfeng/p/10953039.html)"
xamarin/proguard,7802,2,46,3,Organization,False,*Unofficial* ProGuard hg import into git,http://hg.code.sf.net/p/proguard/code,,8,Java,{'': 3},24,10,10,2,0,2653,False,,,,,0,1,0,1,8,0,0,0,0,0,0,0,175,115,,,"ProGuard, Java class file shrinker, optimizer, obfuscator, and preverifier√æ==========================================================================√æ√æThis distribution contains the following directories:√æ√æ- bin          : simple wrapper scripts to run ProGuard, its GUI, and ReTrace√æ- lib          : the main jars, compiled and ready to use with ""java -jar ....""√æ- docs         : the complete documentation, licenses, etc. in html format√æ- examples     : some example configuration files√æ- src          : the source code√æ- buildscripts : various alternative build scripts√æ√æ√æThe best place to start is docs/index.html√æ√æ√æExample√æ-------√æ√æIf you want to give ProGuard a spin right away, try processing the ProGuard√æjar itself:√æ√æ    cd examples√æ    java -jar ../lib/proguard.jar @proguard.pro√æ√æThe resulting proguard_out.jar contains the same application, but it's a lot√æsmaller.√æ√æEnjoy!√æ√æhttp://proguard.sourceforge.net/√æ√æCopyright (c) 2002-2016 Eric Lafortune @ GuardSquare"
nwaldispuehl/interval-music-compositor,28114,4,1,3,User,False,"IntervalMusicCompositor, a multi-platform software for creating interval music compilations out of multiple sound files.",,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",29,Java,"{'': 4, 'yml': 1, 'md': 2, 'gradle': 2, 'bat': 1}",269,4,19,1,17,2366,True,9,44,1,0,0,7,0,0,11,4,0,0,0,0,0,0,14,,4,,"Interval Music Compositor√æ=========================√æ√æInterval Music Compositor, a multi-platform software for creating interval music compilations out of multiple sound files.√æ√æ![Interval Music Compositor screenshot](https://github.com/nwaldispuehl/interval-music-compositor/raw/master/intervalmusiccompositor.build/footage/imc_screenshot.png)√æ√æ√æ√æHow to download binary?√æ-----------------------√æ√æThere are pre-built distributions for the major operating systems to be found on the github releases page: [Interval Music Compositor releases](https://github.com/nwaldispuehl/interval-music-compositor/releases).√æA small user manual can be found on the Github [project page](http://nwaldispuehl.github.io/interval-music-compositor/).√æ√æ√æHow to build?√æ-------------√æ√æYou certainly need a Java 8 development kit installed on your system. Then, clone the repository and use the packaged gradle binary to either run the program,√æ√æ    $ ./gradlew run√æ  √æexecute its tests, √æ√æ    $ ./gradlew check√æ  √æor create the distributions:√æ√æ    $ ./gradlew distAll√æ  √æThe distribution archives are then to be found in the `intervalmusiccompositor.app/build/distributions/` folder.√æ√æ√æCurrent build status√æ--------------------√æ[![Build Status](https://travis-ci.org/nwaldispuehl/interval-music-compositor.png?branch=master)](https://travis-ci.org/nwaldispuehl/interval-music-compositor)"
peholmst/MVP4Vaadin,6191,19,3,8,User,False,A small Model-View-Presenter addon for Vaadin applications,,,5,Java,"{'': 1, 'md': 1, 'xml': 1, 'properties': 1}",106,2,0,3,0,3429,True,10,10,0,0,1,1,0,0,0,3,0,0,0,0,0,0,62,,122,,[![Published on Vaadin  Directory](https://img.shields.io/badge/Vaadin%20Directory-published-00b4f0.svg)](https://vaadin.com/directory/component/mvp4vaadin)√æ[![Stars on Vaadin Directory](https://img.shields.io/vaadin-directory/star/mvp4vaadin.svg)](https://vaadin.com/directory/component/mvp4vaadin)√æ√æMVP4Vaadin README√æ=================√æ√æMVP4Vaadin is a small Model-View-Presenter addon for Vaadin applications. √æIt is licensed under Apache 2.0.√æ√æDevelopers:√æ√æ Petter Holmstr√∂m (core addon)√æ Marcus Hellberg (demo application)√æ√æPlease see the project wiki (https://github.com/peholmst/MVP4Vaadin/wiki) for information about√æwhat MVP4Vaadin is and how it is used in applications.√æ√æOfficial releases are published in the Vaadin Directory (http://vaadin.com/addon/mvp4vaadin)
apache/commons-collections,19862,432,80,292,Organization,False,Mirror of Apache Commons Collections,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 1, 'yml': 1, 'md': 2, 'html': 2, 'txt': 3, 'xml': 1}",3395,8,49,51,1,7009,False,,,,,22,139,11,27,0,0,9,151,22663,12626,81209,0,2,869,,,"<!---√æ Licensed to the Apache Software Foundation (ASF) under one or more√æ contributor license agreements.  See the NOTICE file distributed with√æ this work for additional information regarding copyright ownership.√æ The ASF licenses this file to You under the Apache License, Version 2.0√æ (the ""License""); you may not use this file except in compliance with√æ the License.  You may obtain a copy of the License at√æ√æ      http://www.apache.org/licenses/LICENSE-2.0√æ√æ Unless required by applicable law or agreed to in writing, software√æ distributed under the License is distributed on an ""AS IS"" BASIS,√æ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ See the License for the specific language governing permissions and√æ limitations under the License.√æ-->√æ<!---√æ +======================================================================+√æ |****                                                              ****|√æ |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|√æ |****                    DO NOT EDIT DIRECTLY                      ****|√æ |****                                                              ****|√æ +======================================================================+√æ | TEMPLATE FILE: readme-md-template.md                                 |√æ | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |√æ +======================================================================+√æ |                                                                      |√æ | 1) Re-generate using: mvn commons-build:readme-md                    |√æ |                                                                      |√æ | 2) Set the following properties in the component's pom:              |√æ |    - commons.componentid (required, alphabetic, lower case)          |√æ |    - commons.release.version (required)                              |√æ |                                                                      |√æ | 3) Example Properties                                                |√æ |                                                                      |√æ |  <properties>                                                        |√æ |    <commons.componentid>math</commons.componentid>                   |√æ |    <commons.release.version>1.2</commons.release.version>            |√æ |  </properties>                                                       |√æ |                                                                      |√æ +======================================================================+√æ--->√æApache Commons Collections√æ===================√æ√æ[![Build Status](https://travis-ci.org/apache/commons-collections.svg)](https://travis-ci.org/apache/commons-collections)√æ[![Coverage Status](https://coveralls.io/repos/apache/commons-collections/badge.svg)](https://coveralls.io/r/apache/commons-collections)√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.apache.commons/commons-collections4/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.apache.commons/commons-collections4/)√æ[![Javadocs](https://javadoc.io/badge/org.apache.commons/commons-collections4/4.4.svg)](https://javadoc.io/doc/org.apache.commons/commons-collections4/4.4)√æ√æThe Apache Commons Collections package contains types that extend and augment the Java Collections Framework.√æ√æDocumentation√æ-------------√æ√æMore information can be found on the [Apache Commons Collections homepage](https://commons.apache.org/proper/commons-collections).√æThe [Javadoc](https://commons.apache.org/proper/commons-collections/apidocs) can be browsed.√æQuestions related to the usage of Apache Commons Collections should be posted to the [user mailing list][ml].√æ√æWhere can I get the latest release?√æ-----------------------------------√æYou can download source and binaries from our [download page](https://commons.apache.org/proper/commons-collections/download_collections.cgi).√æ√æAlternatively you can pull it from the central Maven repositories:√æ√æ```xml√æ<dependency>√æ  <groupId>org.apache.commons</groupId>√æ  <artifactId>commons-collections4</artifactId>√æ  <version>4.4</version>√æ</dependency>√æ```√æ√æContributing√æ------------√æ√æWe accept Pull Requests via GitHub. The [developer mailing list][ml] is the main channel of communication for contributors.√æThere are some guidelines which will make applying PRs easier for us:√æ+ No tabs! Please use spaces for indentation.√æ+ Respect the code style.√æ+ Create minimal diffs - disable on save actions like reformat source code or organize imports. If you feel the source code should be reformatted create a separate PR for this change.√æ+ Provide JUnit tests for your changes and make sure your changes don't break any existing tests by running ```mvn clean test```.√æ√æIf you plan to contribute on a regular basis, please consider filing a [contributor license agreement](https://www.apache.org/licenses/#clas).√æYou can learn more about contributing via GitHub in our [contribution guidelines](CONTRIBUTING.md).√æ√æLicense√æ-------√æThis code is under the [Apache Licence v2](https://www.apache.org/licenses/LICENSE-2.0).√æ√æSee the `NOTICE.txt` file for required notices and attributions.√æ√æDonations√æ---------√æYou like Apache Commons Collections? Then [donate back to the ASF](https://www.apache.org/foundation/contributing.html) to support the development.√æ√æAdditional Resources√æ--------------------√æ√æ+ [Apache Commons Homepage](https://commons.apache.org/)√æ+ [Apache Issue Tracker (JIRA)](https://issues.apache.org/jira/browse/COLLECTIONS)√æ+ [Apache Commons Twitter Account](https://twitter.com/ApacheCommons)√æ+ `#apache-commons` IRC channel on `irc.freenode.org`√æ√æ[ml]:https://commons.apache.org/mail-lists.html"
jsweet-candies/candy-leaflet,37,3,3,1,Organization,False,,,,5,Java,"{'': 1, 'md': 1, 'json': 1, 'xml': 1}",2,1,0,0,0,596,True,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,32,0,,,"# JSweet leaflet candy√æ√æ## Description√æ√æThis project is a Java bridge to the leaflet library, so that leaflet can be used from Java (thanks to the JSweet transpiler).√æ√æThis candy is used for compilation (typing and API checking) but does not contain any implementation, similarly to a C/C++ header file or to a TypeScript definition file. √æ√æ## How to install the candy√æ√æClone this project with git and install the JSweet candy in your local Maven repository (so that you can refer to it as a dependency in other Maven projects):√æ√æ```bash√æ> mvn install√æ```√æ√æTo deploy the candy to the [jsweet-candies](https://github.com/jsweet-candies) organization (please contact us to get an authorized access):√æ√æ```bash√æ> mvn deploy√æ```√æ√æNote: if you want to publish the candy in your own Maven repository, please refer to existing documentation on that particular topic.√æ√æ## Use from a Java/JSweet project√æ√æAdd the following dependency to the ``pom.xml``:√æ√æ```xml√æ<dependency>√æ <groupId>org.jsweet.candies.ext</groupId>√æ <artifactId>leaflet</artifactId>√æ <version>1.3.4-SNAPSHOT</version>√æ</dependency>√æ```√æ√æ## License√æ√æBy default, JSweet candies are published with the Apache 2 Open Source license. Since they are pure APIs, remember that it does not make sense to try to bind a JSweet candy to a commercial license (on contrary to the bridged JS library/framework, which can be distributed under a non-open source license).  "
twjitm/twjitm-core,2946,69,1,30,User,False,ÈááÁî®Netty‰ø°ÊÅØÂä†ËΩΩÂÆûÁé∞ÈïøËøûÊé•ÂÆûÊó∂ÈÄöËÆØÁ≥ªÁªüÔºåÂÆ¢Êà∑Á´ØÂèØ‰ª•ÂÄº‰ªª‰ΩïÂú∫ÊôØÔºåÊîØÊåÅÂÆûÊó∂httpÈÄöËÆØ„ÄÅwebSocketÈÄöËÆØ„ÄÅtcpÂçèËÆÆÈÄöËÆØ„ÄÅÂíåudpÂçèËÆÆÈÄöËÆØ„ÄÅÂπøÊí≠ÂçèËÆÆÁ≠â ÈÄöËøáhttpÂçèËÆÆÔºårpcÂçèËÆÆ„ÄÇ ÈááÁî®Ëá™ÂÆö‰πâÁΩëÁªúÊï∞ÊçÆÂåÖÁªìÊûÑÔºå ÂÆûÁé∞Ëá™ÂÆö‰πâÁΩëÁªúÊ†à„ÄÇ,,,7,Java,"{'': 1, 'md': 1, 'xml': 1}",110,1,0,1,12,798,True,0,1,0,0,0,0,0,0,8,0,0,0,0,0,0,0,105,,49,,"# twjitm-core√æ### Áõ∏ÂÖ≥‰∏öÂä°‰ªãÁªç√æ√æ###  NettyÁΩëÁªúÂü∫Á°ÄÊû∂ÊûÑÁ≥ªÁªü√æ√æÈááÁî®Netty‰ø°ÊÅØÂä†ËΩΩÂÆûÁé∞ÈïøËøûÊé•ÂÆûÊó∂ÈÄöËÆØÁ≥ªÁªüÔºåÂÆ¢Êà∑Á´ØÂèØ‰ª•ÂÄº‰ªª‰ΩïÂú∫ÊôØÔºåÊîØÊåÅÂÆûÊó∂httpÈÄöËÆØ„ÄÅwebSocketÈÄöËÆØ„ÄÅtcpÂçèËÆÆÈÄöËÆØ„ÄÅÂíåudpÂçèËÆÆÈÄöËÆØ„ÄÅÂπøÊí≠ÂçèËÆÆÁ≠â√æÈÄöËøáhttpÂçèËÆÆÔºårpcÂçèËÆÆ„ÄÇ√æÈááÁî®Ëá™ÂÆö‰πâÁΩëÁªúÊï∞ÊçÆÂåÖÁªìÊûÑÔºå√æÂÆûÁé∞Ëá™ÂÆö‰πâÁΩëÁªúÊ†à„ÄÇ√æ√æ1ÔºöÊîØÊåÅÂàÜÂ∏ÉÂºèzookeeperËøõË°åÊúçÂä°ËäÇÁÇπÈÖçÁΩÆ„ÄÇ\√æ2ÔºöÈááÁî®Ëá™ÂÆö‰πâÊ≥®Ëß£ÂΩ¢ÂºèÂÆûÁé∞nettyÁßÅÊúâÊ∂àÊÅØÂçèËÆÆÊ†à„ÄÇ\√æ3ÔºöÊîØÊåÅËøúÁ®ãRPCË∞ÉÁî®„ÄÇ\√æ4ÔºöÊîØÊåÅredis„ÄÇ\√æ5ÔºöÊîØÊåÅdbÂàÜÁ¶ª„ÄÇ\√æ6: ÊîØÊåÅÂêåÊ≠•ÂíåÂºÇÊ≠•Ê∂àÊÅØÂ§ÑÁêÜ\√æ7: ÊîØÊåÅkafkaÊ∂àÊÅØÈòüÂàóÊèê‰æõ/Ê∂àË¥π Ê®°ÂºèÊù•ÂÆûÁé∞ÂàÜÂ∏ÉÂºèÊ∂àÊÅØÈòüÂàó\√æ8: ÊîØÊåÅÊï∞ÊçÆÂä†ÂØÜ‰º†ËæìÔºå‰øùÈöúÊï∞ÊçÆÂÆâÂÖ®„ÄÇ\√æ9: ÊîØÊåÅÂàÜÂ∏ÉÂºè‰∫ãÂä°3pcÊèê‰∫§ÔºåÂºÇÂ∏∏ÂõûÊªö„ÄÇ√æ√æ# ‰∏ªË¶Å‰ΩøÁî®‰∏öÂä°Âú∫ÊôØ√æ√æ1:Ê∏∏ÊàèÊúçÂä°Âô®\√æ2:ÂÆûÊó∂ÈÄöËÆØÁ≥ªÁªü\√æ3:ÈáëËûçÊï∞ÊçÆÂ§ÑÁêÜÁ≥ªÁªü\√æ4:ÂØπÁΩëÁªúÂÆûÊó∂ÊÄßË¶ÅÊ±ÇËæÉÈ´òÁöÑÁ≥ªÁªü\√æ5:Â∏∏ËßÅ‰∫íËÅîÁΩëÁ≥ªÁªü√æ√æ### ÁõÆÂâçÂú®Êõ¥Êñ∞Èò∂ÊÆµ√æ√æÁã¨Á´ãÊï∞ÊçÆdbÊ®°ÂùóÔºåÁã¨Á´ã‰∫ãÂä°Ê®°ÂùóÔºåÁã¨Á´ãÁ∫øÁ®ãË∞ÉÂ∫¶Ê®°Âùó„ÄÇ‰ª•ÂæÆÊúçÂä°ÁöÑÂΩ¢ÂºèÊèê‰æõÁΩëÁªúÊúçÂä°„ÄÇ√æ√æ√æ### TCP ÈÄö‰ø°Ê®°Âºè√æ√ætcpÈÄöËÆØÔºåÈááÁî®nettyÂÆûÁé∞tcpÈÄöËÆØÔºåÈ°πÁõÆ‰∏≠ÂèØ‰ª•Âà©Áî® com\twjitm\core\start\GameService ,Â∞ÜÂêØÂä®Ê®°ÂºèÊîπ‰∏∫tcpÊúçÂä°Âô®ÂêØÂä®Ê®°Âºè√æÂèØ‰ª•Âà©Áî®test‰∏≠ÁöÑ\test\java\com\twjitm\ClientServiceTest ÂèØ‰ª•Ê®°ÊãüÂÆ¢Êà∑Á´ØËøõË°åËøûÊé•ÔºåÈúÄË¶ÅÂ∞ÜÁ´ØÂè£ÂíåÂú∞ÂùÄÊîπ‰∏∫tcpÊúçÂä°Âô®ËøõË°åËøûÊé•„ÄÇ√ætcpÊ∂àÊÅØÂ§ÑÁêÜÈááÁî®Ê∂àÊÅØÈòüÂàóÔºåÂ∞ÜÊâÄÊúâÂà∞Êù•ÁöÑÊ∂àÊÅØÊîæÂà∞ÈòüÂàó‰∏≠ÔºåÈÄöËøáÁ∫øÁ®ãÊ±†ÂåñÊäÄÊúØÊù•Â§ÑÁêÜÊ∂àÊÅØ„ÄÇ√æ√æ### UDP ÈÄö‰ø°Ê®°Âºè√æUDPËá™ÂÆö‰πâÁΩëÁªúÂçèËÆÆÊ†àÂíåtcpËá™ÂÆö‰πâÁΩëÁªúÂçèËÆÆÊ†àÊ†ºÂºèÂ∑Æ‰∏çÂ§öÔºå‰∏çÂêåÁöÑÊòØudp‰∏çÈúÄË¶ÅÂª∫Á´ãËøûÊé•Ôºå‰πüÂ∞±ÊòØÊó†Áä∂ÊÄÅÁöÑÈÄö‰ø°Ê®°ÂºèÔºåÂú®Ê∂àÊÅØÂ§ÑÁêÜÊ®°ÂùóÈááÁî®√ætcpËøûÊé•ÁöÑÊó∂ÂÄô‰øùÂ≠òÁöÑsessionÊù•Á°ÆÂÆöÊòØÂì™‰∏™ÂÆ¢Êà∑Á´ØÂèëÂá∫ÁöÑÊ∂àÊÅØÔºå‰ººÁöÑudpÂçèËÆÆËÉΩÂ§üÊ≠£Á°ÆÁöÑÂ§ÑÁêÜÔºåÈÄöËøá‰∏§Áßç‰∏çÂêåÁöÑÊ∂àÊÅØÂ§ÑÁêÜÊ®°ÂºèÔºåËøõË°åÈÄâÊã©Â§ÑÁêÜ√æÂÖ∂‰∏≠ÊúâÔºöÂêåÊ≠•ÈòüÂàóÊ®°ÂºèÔºõÁîü‰∫ßËÄÖ-Ê∂àË¥πËÄÖÊ®°Âºè„ÄÇ√æ√æ### HTTP ÈÄö‰ø°Ê®°Âºè√æHTTPÂçèËÆÆÂêåÊ†∑ÈááÁî®Ëá™ÂÆö‰πâÁΩëÁªúÂçèËÆÆÊ†àÂÆûÁé∞ÔºåÂíåtcpÔºåudpÂçèËÆÆÂ∑Æ‰∏çÂ§öÔºåÂè™‰∏çËøáÊï∞ÊçÆÂåÖ‰∏ç‰∏ÄÊ†∑ÔºåhttpÊòØÂª∫Á´ãÂú®tcpÁöÑÂ∫îÁî®Â±Ç‰∏äÁöÑÂçèËÆÆ„ÄÇ√æÈááÁî®ÂêåÊ≠•Â§ÑÁêÜÊñπÂºèÔºåÂΩìÊ∂àÊÅØÂà∞Êù•ÁöÑÊó∂ÂÄôÂèäÊó∂‰ΩúÂá∫Â§ÑÁêÜ„ÄÇ√æ√æ√æ### RPC ÈÄö‰ø°Ê®°Âºè√æRPCÊ®°ÂùóÂàÜ‰∏∫ÂêåÊ≠•Ë∞ÉÁî®ÂíåÂºÇÊ≠•Ë∞ÉÁî®ÔºåËøúÁ®ãÊúçÂä°Âô®Ë∞ÉÁî®ÔºåÂà©Áî®nettyÂÆûÁé∞ËΩªÈáèÁ∫ßrpcÊúçÂä°Âô®Ê°ÜÊû∂ÔºåÈÄöËøáËá™ÂÆö‰πâÁ∫øÁ®ãËÆ©Ê≠•Á≠ñÁï•„ÄÇÁªìÂêàÂä®ÊÄÅ‰ª£ÁêÜÁ≠â√æjavaÊêûÂü∫Áü•ËØÜÔºåÂÆûÁé∞rpcÊúçÂä°Âô®ÈÄöËÆØÊ®°Âùó„ÄÇÂà©Áî®xmlÊñáÊ°£ÈÖçÁΩÆrpcÊúçÂä°Âô®Âü∫Êú¨‰ø°ÊÅØÔºå‰ª•ËææÂà∞Âä®ÊÄÅÁöÑÊ∞¥Âπ≥Êâ©Â±ïÊúçÂä°Âô®„ÄÇ‰∏∫ÂàÜÂ∏ÉÂºèÊúçÂä°Âô®ÂÅöÂ•Ω√æÂü∫Á°ÄÂáÜÂ§á√æ√æ### zookeeper ÊúçÂä°√æ√æÈÄöËøáÊï¥ÂêàzookeeperÔºåÂä®ÊÄÅÁöÑÊ≥®ÂÜåÊúçÂä°ÔºåÂèëÁé∞ÊúçÂä°ÔºåÊï¥ÂêàrpcÈÄªËæëÔºåÂÆûÁé∞ÂàÜÂ∏ÉÂºèÊúçÂä°ÂèëÁé∞ÂíåÊ≥®ÂÜå„ÄÇ√æ√æ### kafkaÊúçÂä°√æ√æÈÄöËøáÊï¥ÂêàkafkaÊúçÂä°„ÄÇÂÆûÁé∞ÂàÜÂ∏ÉÂºèÊúçÂä°Âô®Ê∂àÊÅØÈòüÂàóÔºåËß£ËÄ¶Á≥ªÁªü‰∏≠ÁöÑÈÄªËæë„ÄÇ√æ√æ√æ### ÂÖ∂‰ªñ√æËøòÂú®‰ºòÂåñÔºå‰ºòÂåñÈ°πÁõÆ‰∏≠ÁöÑÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºåÁõ∏Â∫îÊó∂Èó¥ÔºåÂéãÊµãËÉΩÂäõÁ≠âÊÄßËÉΩ√æ√æ### springÂÆπÂô®ÁöÑ‰ΩøÁî®√æ√æÊú¨È°πÁõÆÂà©Áî®springÊù•Áªü‰∏ÄÁÆ°ÁêÜ‰∏Ä‰∫õbeanÔºåÂà©Áî®ÊúçÂä°Âô®ÂêØÂä®ÁöÑÊó∂ÂÄôÔºåÁªü‰∏ÄÂ∞ÜÂÆπÂô®ÂàùÂßãÂåñÊèê‰∫§ÁªôspringÔºåÂà©Áî®springÊèê‰æõÁöÑÊ≥®Ëß£ÔºåËΩªÊùæËé∑Âæó√æÊ≥®ÂÖ•Âà∞springÂÆπÂô®‰∏≠ÁöÑbeanÂØπË±°ÔºåÊèêÈ´ò‰ª£Á†ÅÁöÑÂèØËØªÊÄß„ÄÇ√æ√æ### ‰∫ã‰ª∂Êõ¥Êñ∞Âô®√æÈÄöËøáÁ∫øÁ®ãÁÆ°ÁêÜÔºåÊúçÂä°Âô®‰∫ã‰ª∂Êõ¥Êñ∞ÈááÁî®Áã¨Á´ãÊ®°ÂºèÊù•Êõ¥Êñ∞ÊúçÂä°Âô®‰∫ã‰ª∂ÔºåÈááÁî®ÈòüÂàóÊ®°ÂºèÊù•‰ΩøÂæó‰∫ã‰ª∂‰∏≤Ë°åÊâßË°å„ÄÇ√æ√æ‰ΩúËÄÖÔºöÂ•ΩÊòµÁß∞‰∏çÈöè‰æøËµ∑   twjitm    qqÔºö1089718215√æ√æÂçöÂÆ¢Âú∞ÂùÄhttps://blog.csdn.net/baidu_23086307√æ√æ‰∏™‰∫∫ÁΩëÁ´ôÂú∞ÂùÄ;https://twjitm.com"
gdutxiaoxu/TouchDemo,235,73,4,20,User,False,ËøôÊòØÂÖ≥‰∫éViewÊªëÂä®‰∫ã‰ª∂ÂÜ≤Á™ÅÁöÑdemoÔºåÈáåÈù¢ËÆ≤Ëß£ÊÄéÊ†∑Ëß£ÂÜ≥ViewÊªëÂä®ÂÜ≤Á™ÅÔºåÂåÖÊã¨ViewPagerÔºåScrollView  ÂµåÂ•óViewPagerÊªëÂä®ÂÜ≤Á™ÅËß£ÂÜ≥,,,10,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",14,1,0,1,0,1335,True,0,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,106,,91,,## ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑√æ√æ**Android ÊäÄÊúØ‰∫∫ÔºåÂ∏åÊúõËÆ©‰Ω†ÁúãÂà∞Á®ãÂ∫èÁåø‰∏çÂêåÁöÑ‰∏ÄÈù¢ÔºåÈô§‰∫ÜÂàÜ‰∫´ CodingÔºåÔºåËøòÊúâËÅåÂú∫ÂøÉÂæóÔºåÈù¢ËØïÁªèÈ™åÔºåÂ≠¶‰π†ÂøÉÂæóÔºå‰∫∫ÁîüÊÑüÊÇüÁ≠âÁ≠â„ÄÇÂ∏åÊúõÈÄöËøáËØ•ÂÖ¨‰ºóÂè∑ÔºåËÆ©Â§ßÂÆ∂ÁúãÂà∞ÔºåÊàë‰ª¨‰∏çÂè™‰ºöÊï≤‰ª£Á†ÅÔºåÊàë‰ª¨Ëøò‰ºö„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ**√æ√æ![Android ÊäÄÊúØ‰∫∫](http://upload-images.jianshu.io/upload_images/2050203-bf3eca3c1cf265e4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ√æ---√æ√æ√æ## ViewPagerÔºåScrollView  ÂµåÂ•óViewPagerÊªëÂä®ÂÜ≤Á™ÅËß£ÂÜ≥√æ√æËøôÁØáÂçöÂÆ¢‰∏ªË¶ÅËÆ≤Ëß£‰∏Ä‰∏ãÂá†‰∏™ÈóÆÈ¢ò√æ- Á≤óÁï•Âú∞‰ªãÁªç‰∏Ä‰∏ãViewÁöÑ‰∫ã‰ª∂ÂàÜÂèëÊú∫Âà∂√æ- Ëß£ÂÜ≥‰∫ã‰ª∂ÊªëÂä®ÂÜ≤Á™ÅÁöÑÊÄùË∑ØÂèäÊñπÊ≥ï√æ- ScrollView ÈáåÈù¢ÂµåÂ•óViewPagerÂØºËá¥ÁöÑÊªëÂä®ÂÜ≤Á™Å√æ- ViewPagerÈáåÈù¢ÂµåÂ•óViewPager ÂØºËá¥ÁöÑÊªëÂä®ÂÜ≤Á™Å√æ- ËΩÆÊí≠ÂõæÁöÑÂá†ÁßçÂÆûÁé∞ÊñπÂºè√æ√æ√æ**[ÊñáÁ´†È¶ñÂèëÂú∞ÂùÄCSDNÔºö](http://blog.csdn.net/gdutxiaoxu/article/details/52939127)http://blog.csdn.net/gdutxiaoxu/article/details/52939127**√æ√æ√æ## ÂÖàÁúã‰∏Ä‰∏ãÊïàÊûúÂõæ√æ√æ### ScrollViewÈáåÈù¢ÂµåÂ•óViewPager√æ![](http://ww2.sinaimg.cn/mw690/9fe4afa0gw1f9615gq6zzg208y0fenpd.gif)√æ√æ√æ### ViewPagerÈáåÈù¢ÂµåÂ•óViewPager√æ![](http://ww3.sinaimg.cn/mw690/9fe4afa0gw1f96165a98ug208y0feb2a.gif)√æ√æ---√æ√æÊõ¥Â§öËØ¶ÊÉÖÔºåËØ∑ÂèÇÁúã[ViewPagerÔºåScrollView ÂµåÂ•óViewPagerÊªëÂä®ÂÜ≤Á™ÅËß£ÂÜ≥](http://blog.csdn.net/gdutxiaoxu/article/details/52939127)
LineageOS/android_packages_apps_AudioFX,3770,12,7,17,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",9,Java,"{'': 3, 'mk': 1, 'xml': 2}",512,24,0,24,0,3286,False,,,,,0,2,0,0,7,0,1,5,71,87,0,0,2,89,,,
jenkinsci/shelve-project-plugin,493,4,118,17,Organization,False,Jenkins shelve-project-plugin plugin,http://jenkins-ci.org/,,8,Java,"{'': 2, 'adoc': 2, 'xml': 1}",157,3,18,6,1,3823,False,,,,,0,27,0,6,6,0,1,7,276,47,0,0,2,681,,,"= Shelve Project Plugin√æ√æimage:https://img.shields.io/jenkins/plugin/v/shelve-project-plugin.svg[link=https://plugins.jenkins.io/shelve-project-plugin]√æimage:https://img.shields.io/github/release/jenkinsci/shelve-project-plugin-plugin.svg?label=changelog[link=https://github.com/jenkinsci/shelve-project-plugin-plugin/releases/latest]√æimage:https://img.shields.io/jenkins/plugin/i/shelve-project-plugin.svg?color=blue[https://plugins.jenkins.io/shelve-project-plugin]√æ√æThis plugin lets you shelve projects so that they can easily be resurrected.√æ""Shelving a project"" is like deleting a project into a recycle bin.√æWhen you shelve a project, it will disappear from the list of projects and become inaccessible from Jenkins, just like how it goes√æwhen a project is deleted, with one difference ‚Äî instead of getting deleted, the data is archived into a tar file and stored on the server.√æThis allows the administrator to resurrect it later (aka unshelving), in an unlikely event that the job turned out to be necessary.√æ√æThis feature is convenient when you have lots of old jobs lying around, and you are 99% sure you won't need them but you can't rule out 1% possibility that you might find them necessary later.√æ√æ[[ShelveProjectPlugin-Usage]]√æ== Usage√æ√æWhen you install this plugin, you get ""shelve project"" in each job page,√æas follows: +√æimage:docs/images/shelve-project-action.png[image,width=400]√æ√æYou can click this icon and shelve the project.√æThe shelved projects can be resurrected from the Jenkins top page:√æ√æ* first click on the *Shelved Project* action:√æ√æimage:docs/images/unshelve-project-action.png[image,width=400]√æ√æ* Then choose the project you wish to unshelve:√æ√æimage:docs/images/unshelve-project-ui.png[image,width=800]√æ√æ[[ShelveProjectPlugin-Security]]√æ== Security√æ√æShelving a project requires the *DELETE* permission.√æUnshelving a project requires the *CREATE* permission.√æ√æ== Changelog√æifdef::env-github,env-browser[:outfilesuffix: .adoc]√æ√æFrom version 2.5 on, changelog is automatically generated using√æhttps://github.com/toolmantim/release-drafter[release-drafter]. See√ædirectly the https://github.com/jenkinsci/shelve-project-plugin/releases[GitHub√ærelease page for the plugin].√æ√æFor older releases, have a look to the <<CHANGELOG#,archive>>.√æ√æ[[ShelveProjectPlugin-Knownissueandworkaround]]√æ== Known issue and workaround√æ√æ=== Fixed in 2.5√æ√æNOTE: This issue has been fixed in release 2.5 of the plugin however all the√æshelves created using an earlier version of the plugin will have the√æissue and you'll need to apply the workaround.√æ√æThere is a currently a known issue in Core, making the tar function√æbreaking the symlinks.√æSadly, the Shelve Pipeline Plugin is using this tar function, and therefore the symlinks are lost during the shelving/unshelving process.√æ√æUp until Jenkins 2.90, this was mainly hidden from the end user, as√æJenkins was silently fixing the symlinks during a build.√æBut since this version, some changes made this issue visible.√æ√æThis means that, when you unshelve a job, you will see a stack trace like this in all your build logs:√æ√æ[source,syntaxhighlighter-pre]√æ----√æln builds/lastSuccessfulBuild ***/jenkins-home/jobs/toto/lastSuccessful failed√æjava.nio.file.DirectoryNotEmptyException: ***/jenkins-home/jobs/toto/lastSuccessful√æ    at sun.nio.fs.UnixFileSystemProvider.implDelete(UnixFileSystemProvider.java:242)√æ    at sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:108)√æ    at java.nio.file.Files.deleteIfExists(Files.java:1165)√æ    at hudson.Util.createSymlink(Util.java:1333)√æ    at hudson.model.Run.createSymlink(Run.java:1866)√æ    at hudson.model.Run.updateSymlinks(Run.java:1847)√æ    at hudson.model.Run.execute(Run.java:1725)√æ    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)√æ    at hudson.model.ResourceController.execute(ResourceController.java:97)√æ    at hudson.model.Executor.run(Executor.java:421)√æ----√æ√æWhile this won't affect the output of your build, this is far from convenient.√æA workaround for this issue is to manually delete the wrongly created files using a script.√æHere is an example:√æ√æ* First make a dry run to ensure the script is not deleting something it√æshouldn't:√æ√æ[source,shell]√æ----√æfind ${JENKINS_HOME}/jobs/ -type d \( -name lastFailedBuild -o -name lastSuccessfulBuild -o -name lastUnsuccessfulBuild -o -name lastStableBuild -o -name lastUnstableBuild -o -name lastFailed -o -name lastSuccessful -o -name lastUnsuccessful -o -name lastStable -o -name lastUnstable \)√æ----√æ√æ* Then, do the real cleaning:√æ√æ[source,shell]√æ----√æfind ${JENKINS_HOME}/jobs/ -type d \( -name lastFailedBuild -o -name lastSuccessfulBuild -o -name lastUnsuccessfulBuild -o -name lastStableBuild -o -name lastUnstableBuild -o -name lastFailed -o -name lastSuccessful -o -name lastUnsuccessful -o -name lastStable -o -name lastUnstable \) -exec rm -rfv ""{}"" \;√æ----√æ√æ== License√æ√æThe plugin follows Jenkins licensing (exception listed below).√æ√æFile manager icon (shelve-project-icon.png) was released into the public domain by the *Tango! Desktop Project*.√æThe original image can be found https://commons.wikimedia.org/wiki/File:System-file-manager.svg[here]."
xuexiangjys/XAOP,1606,464,10,49,User,False,üî•‰∏Ä‰∏™ËΩªÈáèÁ∫ßÁöÑAOP(Android)Â∫îÁî®Ê°ÜÊû∂„ÄÇÂõäÊã¨‰∫ÜÊúÄÂÆûÁî®ÁöÑAOPÂ∫îÁî®„ÄÇ,http://xuexiangjys.club/XAOP/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",20,Java,"{'': 3, 'gradle': 4, 'md': 1, 'properties': 1, 'bat': 1}",59,2,12,1,7,792,True,2,15,0,5,0,0,0,0,8,0,0,0,0,0,0,0,87,,407,,"# XAOP√æ‰∏Ä‰∏™ËΩªÈáèÁ∫ßÁöÑAOP(Android)Â∫îÁî®Ê°ÜÊû∂„ÄÇÂõäÊã¨‰∫ÜÊúÄÂÆûÁî®ÁöÑAOPÂ∫îÁî®„ÄÇ√æ√æ[![](https://jitpack.io/v/xuexiangjys/XAOP.svg)](https://jitpack.io/#xuexiangjys/XAOP)√æ[![api](https://img.shields.io/badge/API-14+-brightgreen.svg)](https://android-arsenal.com/api?level=14)√æ[![Issue](https://img.shields.io/github/issues/xuexiangjys/XAOP.svg)](https://github.com/xuexiangjys/XAOP/issues)√æ[![Star](https://img.shields.io/github/stars/xuexiangjys/XAOP.svg)](https://github.com/xuexiangjys/XAOP)√æ√æ## ÂÖ≥‰∫éÊàë√æ√æ[![github](https://img.shields.io/badge/GitHub-xuexiangjys-blue.svg)](https://github.com/xuexiangjys)   [![csdn](https://img.shields.io/badge/CSDN-xuexiangjys-green.svg)](http://blog.csdn.net/xuexiangjys)   [![ÁÆÄ‰π¶](https://img.shields.io/badge/ÁÆÄ‰π¶-xuexiangjys-red.svg)](https://www.jianshu.com/u/6bf605575337)   [![ÊéòÈáë](https://img.shields.io/badge/ÊéòÈáë-xuexiangjys-brightgreen.svg)](https://juejin.im/user/598feef55188257d592e56ed)   [![Áü•‰πé](https://img.shields.io/badge/Áü•‰πé-xuexiangjys-violet.svg)](https://www.zhihu.com/people/xuexiangjys)√æ√æ## XÁ≥ªÂàóÂ∫ìÂø´ÈÄüÈõÜÊàê√æ√æ‰∏∫‰∫ÜÊñπ‰æøÂ§ßÂÆ∂Âø´ÈÄüÈõÜÊàêXÁ≥ªÂàóÊ°ÜÊû∂Â∫ìÔºåÊàëÊèê‰æõ‰∫Ü‰∏Ä‰∏™Á©∫Â£≥Ê®°Áâà‰æõÂ§ßÂÆ∂ÂèÇËÄÉ‰ΩøÁî®: https://github.com/xuexiangjys/TemplateAppProject√æ√æ---√æ√æ## ÁâπÁÇπ√æ√æ* ÊîØÊåÅÂø´ÈÄüÁÇπÂáªÂàáÁâá`@SingleClick`ÔºåÊîØÊåÅËÆæÁΩÆÂø´ÈÄüÁÇπÂáªÁöÑÊó∂Èó¥Èó¥Èöî„ÄÇ√æ√æ* ÊîØÊåÅÂä®ÊÄÅÁî≥ËØ∑ÊùÉÈôêÂàáÁâá`@Permission`ÔºåÊîØÊåÅËá™ÂÆö‰πâÂìçÂ∫îÂä®‰Ωú„ÄÇ√æ√æ* ÊîØÊåÅ‰∏ªÁ∫øÁ®ãÂàáÁâá`@MainThread`„ÄÇ√æ√æ* ÊîØÊåÅIOÁ∫øÁ®ãÂàáÁâá`@IOThread`ÔºåÊîØÊåÅÂ§öÁßçÁ∫øÁ®ãÊ±†Á±ªÂûã„ÄÇ√æ√æ* ÊîØÊåÅÊó•ÂøóÊâìÂç∞ÂàáÁâá`@DebugLog`ÔºåÊîØÊåÅËá™ÂÆö‰πâÊó•ÂøóËÆ∞ÂΩïÊñπÂºè„ÄÇ√æ√æ* ÊîØÊåÅÂÜÖÂ≠òÁºìÂ≠òÂàáÁâá`@MemoryCache`ÔºåÊîØÊåÅËÆæÁΩÆÁºìÂ≠òÂ§ßÂ∞è„ÄÇ√æ√æ* ÊîØÊåÅÁ£ÅÁõòÁºìÂ≠òÂàáÁâá`@DiskCache`ÔºåÊîØÊåÅËá™ÂÆö‰πâÁ£ÅÁõòÁºìÂ≠òÔºåÁºìÂ≠òÊúâÊïàÊó∂Èó¥Á≠â„ÄÇ√æ√æ* ÊîØÊåÅËá™Âä®ÊçïËé∑ÂºÇÂ∏∏ÁöÑÊã¶Êà™ÂàáÁâá`@Safe`ÔºåÊîØÊåÅËÆæÁΩÆËá™ÂÆö‰πâÂºÇÂ∏∏Â§ÑÁêÜËÄÖ„ÄÇ√æ√æ* ÊîØÊåÅËá™ÂÆö‰πâÊã¶Êà™ÂàáÁâá`@Intercept`ÔºåÊîØÊåÅËá™ÂÆö‰πâÂàáÁâáÊã¶Êà™„ÄÇ√æ√æ* ÂÖºÂÆπKotlinËØ≠Ê≥ï„ÄÇ√æ√æ* ÊîØÊåÅandroidx„ÄÇ√æ√æ√æ---√æ√æ## 1„ÄÅÊºîÁ§∫ÔºàËØ∑starÊîØÊåÅÔºâ√æ√æ![](https://github.com/xuexiangjys/XAOP/blob/master/img/aop.gif)√æ√æ## 2„ÄÅÂ¶Ç‰Ωï‰ΩøÁî®√æÁõÆÂâçÊîØÊåÅ‰∏ªÊµÅÂºÄÂèëÂ∑•ÂÖ∑AndroidStudioÁöÑ‰ΩøÁî®ÔºåÁõ¥Êé•ÈÖçÁΩÆbuild.gradleÔºåÂ¢ûÂä†‰æùËµñÂç≥ÂèØ.√æ√æ### 2.1„ÄÅAndroid StudioÂØºÂÖ•ÊñπÊ≥ïÔºåÊ∑ªÂä†Gradle‰æùËµñ√æ√æ1.ÂÖàÂú®È°πÁõÆÊ†πÁõÆÂΩïÁöÑ build.gradle ÁöÑ repositories Ê∑ªÂä†:√æ```√æallprojects {√æ    repositories {√æ        ...√æ        maven { url ""https://jitpack.io"" }√æ    }√æ}√æ```√æ√æ2.ÂÜçÂú®È°πÁõÆÊ†πÁõÆÂΩïÁöÑ build.gradle ÁöÑ dependencies Ê∑ªÂä†xaopÊèí‰ª∂Ôºö√æ√æ```√æbuildscript {√æ    ¬∑¬∑¬∑√æ    dependencies {√æ        ¬∑¬∑¬∑√æ        classpath 'com.github.xuexiangjys.XAOP:xaop-plugin:1.0.5'√æ    }√æ}√æ```√æ√æ3.Âú®È°πÁõÆÁöÑ build.gradle ‰∏≠Â¢ûÂä†‰æùËµñÂπ∂ÂºïÁî®xaopÊèí‰ª∂√æ√æ```√æapply plugin: 'com.xuexiang.xaop' //ÂºïÁî®xaopÊèí‰ª∂√æ√ædependencies {√æ    ¬∑¬∑¬∑√æ    //Ê∑ªÂä†‰æùËµñ√æ    implementation 'com.github.xuexiangjys.XAOP:xaop-runtime:1.0.5'√æ    //Â¶ÇÊûú‰Ω†ÂçáÁ∫ßÂà∞androidxÔºåËØ∑‰ΩøÁî®‰∏ãÈù¢‰æùËµñ√æ    implementation 'com.github.xuexiangjys.XAOP:xaop-runtime:1.0.5x'√æ}√æ√æ```√æ4.Âú®Application‰∏≠ËøõË°åÂàùÂßãÂåñ√æ√æ```√æ√æXAOP.init(this); //ÂàùÂßãÂåñÊèí‰ª∂√æXAOP.debug(true); //Êó•ÂøóÊâìÂç∞ÂàáÁâáÂºÄÂêØ√æXAOP.setPriority(Log.INFO); //ËÆæÁΩÆÊó•ÂøóÊâìÂç∞ÁöÑÁ≠âÁ∫ß,ÈªòËÆ§‰∏∫0√æ√æ//ËÆæÁΩÆÂä®ÊÄÅÁî≥ËØ∑ÊùÉÈôêÂàáÁâá Áî≥ËØ∑ÊùÉÈôêË¢´ÊãíÁªùÁöÑ‰∫ã‰ª∂ÂìçÂ∫îÁõëÂê¨√æXAOP.setOnPermissionDeniedListener(new PermissionUtils.OnPermissionDeniedListener() {√æ    @Override√æ    public void onDenied(List<String> permissionsDenied) {√æ        ToastUtil.get().toast(""ÊùÉÈôêÁî≥ËØ∑Ë¢´ÊãíÁªù:"" + Utils.listToString(permissionsDenied));√æ    }√æ√æ});√æ√æ//ËÆæÁΩÆËá™ÂÆö‰πâÊã¶Êà™ÂàáÁâáÁöÑÂ§ÑÁêÜÊã¶Êà™Âô®√æXAOP.setInterceptor(new Interceptor() {√æ    @Override√æ    public boolean intercept(int type, JoinPoint joinPoint) throws Throwable {√æ        XLogger.d(""Ê≠£Âú®ËøõË°åÊã¶Êà™ÔºåÊã¶Êà™Á±ªÂûã:"" + type);√æ        switch(type) {√æ            case 1:√æ                //ÂÅö‰Ω†ÊÉ≥Ë¶ÅÁöÑÊã¶Êà™√æ                break;√æ            case 2:√æ                return true; //return trueÔºåÁõ¥Êé•Êã¶Êà™ÂàáÁâáÁöÑÊâßË°å√æ            default:√æ                break;√æ        }√æ        return false;√æ    }√æ});√æ√æ//ËÆæÁΩÆËá™Âä®ÊçïËé∑ÂºÇÂ∏∏ÁöÑÂ§ÑÁêÜËÄÖ√æXAOP.setIThrowableHandler(new IThrowableHandler() {√æ    @Override√æ    public Object handleThrowable(String flag, Throwable throwable) {√æ        XLogger.d(""ÊçïËé∑Âà∞ÂºÇÂ∏∏ÔºåÂºÇÂ∏∏ÁöÑflag:"" + flag);√æ        if (flag.equals(TRY_CATCH_KEY)) {√æ            return 100;√æ        }√æ        return null;√æ    }√æ});√æ√æ```√æ√æ### 2.2„ÄÅÂÖºÂÆπKotlinËØ≠Ê≥ïÈÖçÁΩÆ√æ√æ1.Âú®È°πÁõÆÊ†πÁõÆÂΩïÁöÑ build.gradle ÁöÑ dependencies Ê∑ªÂä†aspectjxÊèí‰ª∂Ôºö√æ√æ```√æbuildscript {√æ    ¬∑¬∑¬∑√æ    dependencies {√æ        ¬∑¬∑¬∑√æ        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'√æ    }√æ}√æ```√æ√æ2.Âú®È°πÁõÆÁöÑ build.gradle ‰∏≠Â¢ûÂä†‰æùËµñÂπ∂ÂºïÁî®aspectjxÊèí‰ª∂√æ√æ```√æapply plugin: 'android-aspectjx' //ÂºïÁî®aspectjxÊèí‰ª∂√æ√æ```√æ√æËØ¶ÁªÜ‰ΩøÁî®ÂèØÂèÇËßÅkotlin-testÈ°πÁõÆËøõË°å‰ΩøÁî®.√æ√æ## 3„ÄÅÂàáÁâáÁöÑ‰ΩøÁî®√æ√æ### 3.1„ÄÅÂø´ÈÄüÁÇπÂáªÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@SingleClick`Ê†áÊ≥®ÁÇπÂáªÁöÑÊñπÊ≥ï„ÄÇÊ≥®ÊÑèÁÇπÂáªÁöÑÊñπÊ≥ï‰∏≠‰∏ÄÂÆöË¶ÅÊúâÁÇπÂáªÊéß‰ª∂View‰Ωú‰∏∫ÊñπÊ≥ïÂèÇÊï∞ÔºåÂê¶ÂàôÂ∞Ü‰∏çËµ∑‰ΩúÁî®„ÄÇ√æ√æ2.ÂèØ‰ª•ËÆæÁΩÆÂø´ÈÄüÁÇπÂáªÁöÑÊó∂Èó¥Èó¥ÈöîÔºåÂçï‰Ωç:ms„ÄÇ‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§ÊòØ1000ms„ÄÇ√æ√æ```√æ@SingleClick(5000)√æpublic void handleOnClick(View v) {√æ    XLogger.e(""ÁÇπÂáªÂìçÂ∫îÔºÅ"");√æ    ToastUtil.get().toast(""ÁÇπÂáªÂìçÂ∫îÔºÅ"");√æ    hello(""xuexiangjys"", ""666666"");√æ}√æ√æ```√æ√æ### 3.2„ÄÅÂä®ÊÄÅÁî≥ËØ∑ÊùÉÈôêÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@Permission`Ê†áÊ≥®ÈúÄË¶ÅÁî≥ËØ∑ÊùÉÈôêÊâßË°åÁöÑÊñπÊ≥ï„ÄÇÂèØËÆæÁΩÆÁî≥ËØ∑‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÊùÉÈôê„ÄÇ√æ√æ2.‰ΩøÁî®`@Permission`Ê†áÊ≥®ÁöÑÊñπÊ≥ïÔºåÂú®ÊâßË°åÊó∂‰ºöËá™Âä®Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÁî≥ËØ∑ÊùÉÈôê„ÄÇ√æ√æ```√æ@SingleClick√æ@Permission({PermissionConsts.CALENDAR, PermissionConsts.CAMERA, PermissionConsts.LOCATION})√æprivate void handleRequestPermission(View v) {√æ√æ}√æ```√æ√æ### 3.3„ÄÅ‰∏ªÁ∫øÁ®ãÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@MainThread`Ê†áÊ≥®ÈúÄË¶ÅÂú®‰∏ªÁ∫øÁ®ã‰∏≠ÊâßË°åÁöÑÊñπÊ≥ï„ÄÇ√æ√æ2.‰ΩøÁî®`@MainThread`Ê†áÊ≥®ÁöÑÊñπÊ≥ïÔºåÂú®ÊâßË°åÊó∂‰ºöËá™Âä®ÂàáÊç¢Ëá≥‰∏ªÁ∫øÁ®ã„ÄÇ√æ√æ```√æ@MainThread√æprivate void doInMainThread(View v) {√æ    mTvHello.setText(""Â∑•‰ΩúÂú®‰∏ªÁ∫øÁ®ã"");√æ}√æ```√æ√æ### 3.4„ÄÅIOÁ∫øÁ®ãÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@IOThread`Ê†áÊ≥®ÈúÄË¶ÅÂú®ioÁ∫øÁ®ã‰∏≠ÊâßË°åÁöÑÊñπÊ≥ï„ÄÇÂèØËÆæÁΩÆÁ∫øÁ®ãÊ±†ÁöÑÁ±ªÂûã`ThreadType`Ôºå‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§ÊòØFixedÁ±ªÂûã„ÄÇ√æ√æÁ∫øÁ®ãÊ±†ÁöÑÁ±ªÂûãÂ¶Ç‰∏ã:√æ√æ* Single:ÂçïÁ∫øÁ®ãÊ±†√æ* Fixed:Â§öÁ∫øÁ®ãÊ±†√æ* Disk:Á£ÅÁõòËØªÂÜôÁ∫øÁ®ãÊ±†(Êú¨Ë¥®‰∏äÊòØÂçïÁ∫øÁ®ãÊ±†Ôºâ√æ* Network:ÁΩëÁªúËØ∑Ê±ÇÁ∫øÁ®ãÊ±†(Êú¨Ë¥®‰∏äÊòØÂ§öÁ∫øÁ®ãÊ±†Ôºâ√æ√æ2.‰ΩøÁî®`@IOThread`Ê†áÊ≥®ÁöÑÊñπÊ≥ïÔºåÂú®ÊâßË°åÊó∂‰ºöËá™Âä®ÂàáÊç¢Ëá≥ÊåáÂÆöÁ±ªÂûãÁöÑioÁ∫øÁ®ã„ÄÇ√æ√æ```√æ@IOThread(ThreadType.Single)√æprivate String doInIOThread(View v) {√æ    return ""ioÁ∫øÁ®ãÂêç:"" + Thread.currentThread().getName();√æ}√æ```√æ√æ### 3.5„ÄÅÊó•ÂøóÊâìÂç∞ÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@DebugLog`Ê†áÊ≥®ÈúÄË¶ÅÊâìÂç∞ÁöÑÊñπÊ≥ïÂíåÁ±ª„ÄÇÂèØËÆæÁΩÆÊâìÂç∞ÁöÑ‰ºòÂÖàÁ∫ßÔºå‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§‰ºòÂÖàÁ∫ß‰∏∫0„ÄÇÊ≥®ÊÑèÔºöÂ¶ÇÊûúÊâìÂç∞ÁöÑ‰ºòÂÖàÁ∫ßÊØî`XAOP.setPriority`ËÆæÁΩÆÁöÑ‰ºòÂÖàÁ∫ßÂ∞èÁöÑËØùÔºåÂ∞Ü‰∏ç‰ºöËøõË°åÊâìÂç∞„ÄÇ√æ√æ2.‰ΩøÁî®`@DebugLog`Ê†áÊ≥®ÁöÑÁ±ªÂíåÊñπÊ≥ïÂú®ÊâßË°åÁöÑËøáÁ®ã‰∏≠ÔºåÊñπÊ≥ïÂêç„ÄÅÂèÇÊï∞„ÄÅÊâßË°åÁöÑÊó∂Èó¥‰ª•ÂèäÁªìÊûúÈÉΩÂ∞Ü‰ºöË¢´ÊâìÂç∞„ÄÇ√æ√æ3.ÂèØË∞ÉÁî®`XAOP.setISerializer`ËÆæÁΩÆÊâìÂç∞Êó∂Â∫èÂàóÂåñÂèÇÊï∞ÂØπË±°ÁöÑÂ∫èÂàóÂåñÂô®„ÄÇ√æ√æ4.ÂèØË∞ÉÁî®`XAOP.setLogger`ËÆæÁΩÆÊâìÂç∞ÁöÑÂÆûÁé∞Êé•Âè£„ÄÇÈªòËÆ§Êèê‰æõÁöÑÊòØÁ™ÅÁ†¥4000ÈôêÂà∂ÁöÑlogcatÊó•ÂøóÊâìÂç∞„ÄÇ√æ√æ```√æ@DebugLog(priority = Log.ERROR)√æprivate String hello(String name, String cardId) {√æ    return ""hello, "" + name + ""! Your CardId is "" + cardId + ""."";√æ}√æ```√æ√æ### 3.6„ÄÅÂÜÖÂ≠òÁºìÂ≠òÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@MemoryCache`Ê†áÊ≥®ÈúÄË¶ÅÂÜÖÂ≠òÁºìÂ≠òÁöÑÊñπÊ≥ï„ÄÇÂèØËÆæÁΩÆÁºìÂ≠òÁöÑkeyÔºå‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§key‰∏∫`ÊñπÊ≥ïÂêç(ÂèÇÊï∞1Âêç=ÂèÇÊï∞1ÂÄº|ÂèÇÊï∞2Âêç=ÂèÇÊï∞2ÂÄº|...)`,ÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•‰øÆÊîπkeyÁöÑËá™Âä®ÁîüÊàêËßÑÂàôÔºå‰Ω†Âè™ÈúÄË¶ÅË∞ÉÁî®`XAOP.setICacheKeyCreator`Âç≥ÂèØ„ÄÇ√æ√æ2.Ê†áÊ≥®ÁöÑÊñπÊ≥ï‰∏ÄÂÆöË¶ÅÊúâËøîÂõûÂÄºÔºåÂê¶ÂàôÂÜÖÂ≠òÁºìÂ≠òÂàáÁâáÂ∞Ü‰∏çËµ∑‰ΩúÁî®„ÄÇ√æ√æ3.‰ΩøÁî®`@MemoryCache`Ê†áÊ≥®ÁöÑÊñπÊ≥ïÔºåÂèØËá™Âä®ÂÆûÁé∞ÁºìÂ≠òÁ≠ñÁï•„ÄÇÈªòËÆ§‰ΩøÁî®ÁöÑÂÜÖÂ≠òÁºìÂ≠òÊòØ`LruCache`„ÄÇ√æ√æ4.ÂèØË∞ÉÁî®`XAOP.initMemoryCache`ËÆæÁΩÆÂÜÖÂ≠òÁºìÂ≠òÁöÑÊúÄÂ§ßÊï∞Èáè„ÄÇÈªòËÆ§ÊòØ`Runtime.getRuntime().maxMemory() / 1024) / 8`√æ√æ```√æ@MemoryCache√æprivate String hello(String name, String cardId) {√æ    return ""hello, "" + name + ""! Your CardId is "" + cardId + ""."";√æ}√æ√æ```√æ√æ### 3.7„ÄÅÁ£ÅÁõòÁºìÂ≠òÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@DiskCache`Ê†áÊ≥®ÈúÄË¶ÅÁ£ÅÁõòÁºìÂ≠òÁöÑÊñπÊ≥ï„ÄÇÂèØËÆæÁΩÆÁºìÂ≠òÁöÑkeyÔºå‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§key‰∏∫`ÊñπÊ≥ïÂêç(ÂèÇÊï∞1Âêç=ÂèÇÊï∞1ÂÄº|ÂèÇÊï∞2Âêç=ÂèÇÊï∞2ÂÄº|...)`,ÂΩìÁÑ∂‰Ω†‰πüÂèØ‰ª•‰øÆÊîπkeyÁöÑËá™Âä®ÁîüÊàêËßÑÂàôÔºå‰Ω†Âè™ÈúÄË¶ÅË∞ÉÁî®`XAOP.setICacheKeyCreator`Âç≥ÂèØ„ÄÇ√æ√æ2.ÂèØËÆæÁΩÆÁ£ÅÁõòÁºìÂ≠òÁöÑÊúâÊïàÊúüÔºåÂçï‰Ωç:s„ÄÇ‰∏çËÆæÁΩÆÁöÑËØùÈªòËÆ§Ê∞∏‰πÖÊúâÊïà„ÄÇ√æ√æ3.Ê†áÊ≥®ÁöÑÊñπÊ≥ï‰∏ÄÂÆöË¶ÅÊúâËøîÂõûÂÄºÔºåÂê¶ÂàôÁ£ÅÁõòÁºìÂ≠òÂàáÁâáÂ∞Ü‰∏çËµ∑‰ΩúÁî®„ÄÇ√æ√æ4.‰ΩøÁî®`@DiskCache`Ê†áÊ≥®ÁöÑÊñπÊ≥ïÔºåÂèØËá™Âä®ÂÆûÁé∞ÁºìÂ≠òÁ≠ñÁï•„ÄÇÈªòËÆ§‰ΩøÁî®ÁöÑÁ£ÅÁõòÁºìÂ≠òÊòØJakeWhartonÁöÑ`DiskLruCache`„ÄÇ√æ√æ5.ÂèØË∞ÉÁî®`XAOP.initDiskCache`ËÆæÁΩÆÁ£ÅÁõòÁºìÂ≠òÁöÑÂ±ûÊÄß,ÂåÖÊã¨Á£ÅÁõòÂ∫èÂàóÂåñÂô®`IDiskConverter`ÔºåÁ£ÅÁõòÁºìÂ≠òÁöÑÊ†πÁõÆÂΩïÔºåÁ£ÅÁõòÁºìÂ≠òÁöÑÊúÄÂ§ßÁ©∫Èó¥Á≠â„ÄÇ√æ√æ```√æ@DiskCache√æprivate String hello(String name, String cardId) {√æ    return ""hello, "" + name + ""! Your CardId is "" + cardId + ""."";√æ}√æ√æ```√æ√æ### 3.8„ÄÅËá™Âä®ÊçïËé∑ÂºÇÂ∏∏ÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@Safe`Ê†áÊ≥®ÈúÄË¶ÅËøõË°åÂºÇÂ∏∏ÊçïËé∑ÁöÑÊñπÊ≥ï„ÄÇÂèØËÆæÁΩÆ‰∏Ä‰∏™ÂºÇÂ∏∏ÊçïËé∑ÁöÑÊ†áÂøóFlagÔºåÈªòËÆ§ÁöÑFlag‰∏∫ÂΩìÂâç`Á±ªÂêç.ÊñπÊ≥ïÂêç`„ÄÇ√æ√æ2.Ë∞ÉÁî®`XAOP.setIThrowableHandler`ËÆæÁΩÆÊçïËé∑ÂºÇÂ∏∏ÁöÑËá™ÂÆö‰πâÂ§ÑÁêÜËÄÖÔºåÂèØÂÆûÁé∞ÂØπÂºÇÂ∏∏ÁöÑÂº•Ë°•Â§ÑÁêÜ„ÄÇÂ¶ÇÊûú‰∏çËÆæÁΩÆÁöÑËØùÔºåÂ∞ÜÂè™ÊâìÂç∞ÂºÇÂ∏∏ÁöÑÂ†ÜÊ†à‰ø°ÊÅØ„ÄÇ√æ√æ3.‰ΩøÁî®`@Safe`Ê†áÊ≥®ÁöÑÊñπÊ≥ï,ÂèØËá™Âä®ËøõË°åÂºÇÂ∏∏ÊçïËé∑ÔºåÂπ∂Áªü‰∏ÄËøõË°åÂºÇÂ∏∏Â§ÑÁêÜÔºå‰øùËØÅÊñπÊ≥ïÂπ≥Á®≥ÊâßË°å„ÄÇ√æ√æ```√æ@Safe(TRY_CATCH_KEY)√æprivate int getNumber() {√æ    return 100 / 0;√æ}√æ```√æ√æ### 3.9„ÄÅËá™ÂÆö‰πâÊã¶Êà™ÂàáÁâá‰ΩøÁî®√æ√æ1.‰ΩøÁî®`@Intercept`Ê†áÊ≥®ÈúÄË¶ÅËøõË°åÊã¶Êà™ÁöÑÊñπÊ≥ïÂíåÁ±ª„ÄÇÂèØËÆæÁΩÆÁî≥ËØ∑‰∏Ä‰∏™ÊàñÂ§ö‰∏™Êã¶Êà™Á±ªÂûã„ÄÇ√æ√æ2.Â¶ÇÊûú‰∏çË∞ÉÁî®`XAOP.setInterceptor`ËÆæÁΩÆÂàáÁâáÊã¶Êà™ÁöÑÊã¶Êà™Âô®ÁöÑËØùÔºåËá™ÂÆö‰πâÊã¶Êà™ÂàáÁâáÂ∞Ü‰∏çËµ∑‰ΩúÁî®„ÄÇ√æ√æ3.‰ΩøÁî®`@Intercept`Ê†áÊ≥®ÁöÑÁ±ªÂíåÊñπÊ≥ïÔºåÂú®ÊâßË°åÊó∂Â∞ÜËá™Âä®Ë∞ÉÁî®`XAOP`ËÆæÁΩÆÁöÑÊã¶Êà™Âô®ËøõË°åÊã¶Êà™Â§ÑÁêÜ„ÄÇÂ¶ÇÊûúÊã¶Êà™Âô®Â§ÑÁêÜËøîÂõûtrueÁöÑËØùÔºåËØ•Á±ªÊàñÊñπÊ≥ïÁöÑÊâßË°åÂ∞ÜË¢´Êã¶Êà™Ôºå‰∏çÊâßË°å„ÄÇ√æ√æ4.‰ΩøÁî®`@Intercept`ÂèØ‰ª•ÁÅµÊ¥ªÂú∞ËøõË°åÂàáÁâáÊã¶Êà™„ÄÇÊØîÂ¶ÇÁî®Êà∑ÁôªÂΩïÊùÉÈôêÁ≠â„ÄÇ√æ√æ```√æ@SingleClick(5000)√æ@DebugLog(priority = Log.ERROR)√æ@Intercept(3)√æpublic void handleOnClick(View v) {√æ    XLogger.e(""ÁÇπÂáªÂìçÂ∫îÔºÅ"");√æ    ToastUtil.get().toast(""ÁÇπÂáªÂìçÂ∫îÔºÅ"");√æ    hello(""xuexiangjys"", ""666666"");√æ}√æ√æ@DebugLog(priority = Log.ERROR)√æ@Intercept({1,2,3})√æprivate String hello(String name, String cardId) {√æ    return ""hello, "" + name + ""! Your CardId is "" + cardId + ""."";√æ}√æ```√æ√æ„ÄêÊ≥®ÊÑè„ÄëÔºöÂΩìÊúâÂ§ö‰∏™ÂàáÁâáÊ≥®Ëß£‰øÆÈ•∞Êó∂Ôºå‰∏ÄËà¨ÊòØ‰ªé‰∏äËá≥‰∏ã‰æùÊ¨°È°∫Â∫èÊâßË°å„ÄÇ√æ√æ## 4„ÄÅÊ∑∑Ê∑ÜÈÖçÁΩÆ√æ√æ```√æ-keep @com.xuexiang.xaop.annotation.* class * {*;}√æ-keep class * {√æ    @com.xuexiang.xaop.annotation.* <fields>;√æ}√æ-keepclassmembers class * {√æ    @com.xuexiang.xaop.annotation.* <methods>;√æ}√æ```√æ√æ---√æ√æ## Â¶ÇÊûúËßâÂæóÈ°πÁõÆËøò‰∏çÈîôÔºåÂèØ‰ª•ËÄÉËôëÊâìËµè‰∏ÄÊ≥¢√æ√æ> ‰Ω†ÁöÑÊâìËµèÊòØÊàëÁª¥Êä§ÁöÑÂä®ÂäõÔºåÊàëÂ∞Ü‰ºöÂàóÂá∫ÊâÄÊúâÊâìËµè‰∫∫ÂëòÁöÑÊ∏ÖÂçïÂú®‰∏ãÊñπ‰Ωú‰∏∫Âá≠ËØÅÔºåÊâìËµèÂâçËØ∑Áïô‰∏ãÊâìËµèÈ°πÁõÆÁöÑÂ§áÊ≥®ÔºÅ√æ√æ![](https://github.com/xuexiangjys/Resource/blob/master/img/pay/alipay.jpeg) &emsp; ![](https://github.com/xuexiangjys/Resource/blob/master/img/pay/weixinpay.jpeg)√æ√æ## ËÅîÁ≥ªÊñπÂºè√æ√æ[![](https://img.shields.io/badge/ÁÇπÂáª‰∏ÄÈîÆÂä†ÂÖ•QQÁæ§-602082750-blue.svg)](http://shang.qq.com/wpa/qunwpa?idkey=9922861ef85c19f1575aecea0e8680f60d9386080a97ed310c971ae074998887)√æ√æ![](https://github.com/xuexiangjys/XPage/blob/master/img/qq_group.jpg)"
EBIvariation/variation-commons,2853,2,11,14,Organization,False,Library of core components used by multiple EBI Variation projects,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",613,6,10,11,0,1727,True,0,1,0,0,3,90,0,4,7,0,2,27,1456,744,0,0,30,1,,,# variation-commons [![Build Status](https://travis-ci.com/EBIvariation/variation-commons.svg?branch=master)](https://travis-ci.com/EBIvariation/variation-commons)√æLibrary of core components to be used from multiple EBI Variation projects
liuyangming/ByteTCC-sample,325,110,16,125,User,False,,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",5,Java,{'': 2},154,12,0,1,4,1329,True,8,2,1,1,9,0,9,0,9,0,0,0,0,0,0,0,10,,212,,
viavansi/documents-sdk-java,4253,0,31,2,Organization,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",7,Java,"{'': 2, 'md': 1, 'xml': 1, 'sh': 1}",102,3,0,5,0,1657,True,0,0,0,0,0,3,0,2,8,0,1,2,6130,3853,0,0,28,1,,,viafirma documents (Java)√æ=============================√æ√æEl objetivo de esta documentaci√≥n es facilitar la integraci√≥n con los servicios rest desde aplicaciones java.√æ√æHaciendo uso de estos ejemplos podr√° interactuar con facilidad con la funcionalidades disponibles en la Suite Viafirma Documents y sus aplicaciones m√≥viles.√æ√æPuede consultar la documentaci√≥n de este SDK en http://doc.viafirma.com/documents-sdk-java
gokuai/yunku-client-sdk-java,1293,2,10,1,Organization,False,,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 3, 'md': 1, 'gradle': 2, 'bat': 1}",56,2,12,3,0,1349,True,0,0,0,0,0,0,0,0,7,0,1,3,31,3,0,0,36,1,,,"# Â§üÂø´‰∫ëÂ∫ì3.0 Client SDK ‰ΩøÁî®ËØ¥Êòé√æ√æ[![](https://jitpack.io/v/gokuai/yunku-client-sdk-java.svg)](https://jitpack.io/#gokuai/yunku-client-sdk-java)√æ√æ##ÂÖºÂÆπ√æ* Java 7 ÊàñËÄÖÊõ¥È´ò√æ* ÊîØÊåÅ Android Á≥ªÁªü√æ√æ## ÂºïÁî®√æÂ∞Ü`[yunku-client-sdk-java].jar`Êñá‰ª∂ÂºïÁî®ËøõÈ°πÁõÆÔºåÊàñËÄÖÂ∞Ü`YunkuAPILibrary`ÂÅö‰∏∫‰æùËµñÈ°πÁõÆ„ÄÇ√æ√æÊàñËÄÖGradle :√æ√æ```groovy√æ allprojects {√æ  repositories {√æ   ...√æ   maven { url 'https://jitpack.io' }√æ  }√æ }√æ```√æ√æ```groovy√æ dependencies {√æ         compile 'com.github.gokuai.yunku-client-sdk-java:YunkuAPILibrary:4.3'√æ }√æ```√æÊàñËÄÖMavenÔºö√æ√æ```xml√æ <repositories>√æ  <repository>√æ      <id>jitpack.io</id>√æ      <url>https://jitpack.io</url>√æ  </repository>√æ </repositories>√æ```√æ√æ```xml√æ <dependency>√æ     <groupId>com.github.gokuai.yunku-client-sdk-java</groupId>√æ     <artifactId>YunkuAPILibrary</artifactId>√æ     <version>4.3</version>√æ </dependency>√æ```√æ√æ## ÂàùÂßãÂåñ√æ√æ‰ΩøÁî®‰∫ëÂ∫ì3.0ÁöÑÁî®Êà∑APIÔºåÈúÄÂêë‰Ω†ÁöÑ‰ºÅ‰∏öÁÆ°ÁêÜÂëòÊèêÂá∫ÂºÄÂèëÊéàÊùÉÁî≥ËØ∑, ÊàñËÅîÁ≥ªÊàë‰ª¨ 400-6110-860 ‰ª•Ëé∑ÂèñË∞ÉÁî®APIÁöÑ `client_id` Âíå `client_secret`√æ√æ**ÂàùÂßãÂåñÈÖçÁΩÆ**√æ√æ```√ænew ConfigHelper(clientId, secret)√æ                .webHost(""http://webhost"")√æ                .apiHost(""http://webhost/m-api"")√æ                .language(""zh-CN"")√æ                .config();√æ```√æ√æ* `clientId`Âíå`secret` ÊòØÂ§üÂø´ÂàÜÈÖçÁöÑÁî®Êà∑APIÊéàÊùÉ√æ* `webHost` ÊòØÁΩëÁ´ôÂú∞ÂùÄ, ÂÖ¨Êúâ‰∫ëÈªòËÆ§‰∏∫`http://yk3.gokuai.com`√æ* `apiHost` ÊòØAPIÂú∞ÂùÄ, ÂÖ¨Êúâ‰∫ëÈªòËÆ§‰∏∫`http://yk3.gokuai.com/m-api`√æ* `language` Â§öËØ≠Ë®ÄÁéØÂ¢É, `zh-CN`Ë°®Á§∫‰∏≠Êñá, `en-US`Ë°®Á§∫Ëã±Êñá√æ√æ## ÂèÇÊï∞‰ΩøÁî®√æ√æ‰ª•‰∏ã‰ΩøÁî®Âà∞ÁöÑÊñπÊ≥ï‰∏≠ÔºåÂ¶ÇÊûúÊòØstringÁ±ªÂûãÁöÑÈùûÂøÖË¶ÅÂèÇÊï∞ÔºåÂ¶ÇÊûúÊòØ‰∏ç‰º†ÔºåÂàô‰º†`null`√æ√æ## **‰∫ëÂ∫ìAPIÔºàYKHttpEngine.javaÔºâ**√æ√æ### ÊûÑÈÄ†ÊñπÊ≥ï√æ new YKHttpEngineÔºàClientId, ClientSecretÔºâ√æ√æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| ClientId | ÊòØ | string | Áî≥ËØ∑Â∫îÁî®Êó∂ÂàÜÈÖçÁöÑAppKey |√æ| ClientSecret | ÊòØ | string | Áî≥ËØ∑Â∫îÁî®Êó∂ÂàÜÈÖçÁöÑAppSecret |√æ√æ---√æ√æ### Ë¥¶Âè∑ÂØÜÁ†ÅÁôªÂΩï√æ loginSync(String account, String password)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| account | ÊòØ | string | Ë¥¶Âè∑ |√æ| password | ÊòØ | string | ÂØÜÁ†Å |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ        ""expires_in"":Access TokenÁöÑÊúâÊïàÊúüÔºå‰ª•Áßí‰∏∫Âçï‰Ωç,√æ        ""access_token"":Áî®‰∫éË∞ÉÁî®access_tokenÔºåÊé•Âè£Ëé∑ÂèñÊéàÊùÉÂêéÁöÑaccess token,√æ        ""refresh_token"":Áî®‰∫éÂà∑Êñ∞access_token ÁöÑ refresh_tokenÔºåÊúâÊïàÊúü7Â§©,√æ        ""device_count"":ËÆæÂ§áÂîØ‰∏ÄÂè∑,√æ        ""dateline"":Êó∂Èó¥Êà≥√æ    }√æ√æ---√æ√æ### ÂºÇÊ≠•ÁôªÂΩïÊñπÂºè√æ loginAsync(final String account, final String password, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| account | ÊòØ | string | Ë¥¶Âè∑ |√æ| password | ÊòØ | string | ÂØÜÁ†Å |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ        ""expires_in"":Access TokenÁöÑÊúâÊïàÊúüÔºå‰ª•Áßí‰∏∫Âçï‰Ωç,√æ        ""access_token"":Áî®‰∫éË∞ÉÁî®access_tokenÔºåÊé•Âè£Ëé∑ÂèñÊéàÊùÉÂêéÁöÑaccess token,√æ        ""refresh_token"":Áî®‰∫éÂà∑Êñ∞access_token ÁöÑ refresh_tokenÔºåÊúâÊïàÊúü7Â§©,√æ        ""device_count"":ËÆæÂ§áÂîØ‰∏ÄÂè∑,√æ        ""dateline"":Êó∂Èó¥Êà≥√æ    }√æ√æ---√æ√æ### ‰ºÅ‰∏ö‰∏ÄÁ´ôÂºèÁôªÂΩï√æ ssoLogin(String account, String clientId, String clientSecret)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| account | ÊòØ | string | Ë¥¶Âè∑ |√æ| clientId | ÊòØ | string | Áî≥ËØ∑Â∫îÁî®Êó∂ÂàÜÈÖçÁöÑAppKey |√æ| clientSecret | ÊòØ | string | Áî≥ËØ∑Â∫îÁî®Êó∂ÂàÜÈÖçÁöÑAppSecret |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ        ""gkkey"":ÈúÄË¶ÅÈ™åËØÅÁöÑgkkey√æ    }√æ√æ---√æ√æ### Á¨¨‰∏âÊñπÁôªÂΩï√æ otherMethodToLogin(String key)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| key | ÊòØ | string | ÈúÄË¶ÅÈ™åËØÅÁöÑgkkey |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ     access_token:Áî®‰∫éË∞ÉÁî®access_tokenÔºåÊé•Âè£Ëé∑ÂèñÊéàÊùÉÂêéÁöÑaccess token√æ     expires_in:access_tokenÁöÑÊúâÊïàÊúüÔºåunixÊó∂Èó¥Êà≥√æ     refresh_token:Áî®‰∫éÂà∑Êñ∞access_token ÁöÑ refresh_tokenÔºåÊúâÊïàÊúü1‰∏™Êúà, ‰ºÅ‰∏öÊéàÊùÉËØ•ÂÄº‰∏∫null√æ }√æ√æ---√æ√æ### ÂçïÁÇπÁôªÂΩïË∞ÉÁî®√æ exchangeToken(String exchangeToken)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| exchangeToken | ÊòØ | string | ‰ΩøÁî®Á¨¨‰∏âÊñπtokenÊç¢ÂèñÂ§üÂø´token |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ     access_token:Áî®‰∫éË∞ÉÁî®access_tokenÔºåÊé•Âè£Ëé∑ÂèñÊéàÊùÉÂêéÁöÑaccess token√æ     expires_in:access_tokenÁöÑÊúâÊïàÊúüÔºåunixÊó∂Èó¥Êà≥√æ     refresh_token:Áî®‰∫éÂà∑Êñ∞access_token ÁöÑ refresh_tokenÔºåÊúâÊïàÊúü1‰∏™Êúà, ‰ºÅ‰∏öÊéàÊùÉËØ•ÂÄº‰∏∫null√æ }√æ√æ---√æ√æ## **Ë¥¶Âè∑API**√æ√æ### Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØ√æ getAccountInfo()√æ √æ#### ÂèÇÊï∞√æ√æ(Êó†)√æ√æ#### ËøîÂõûÁªìÊûú√æ    {√æ        uuid:√æ        member_id: Áî®Êà∑ÁºñÂè∑√æ        member_email: Áî®Êà∑ÈÇÆÁÆ±√æ        member_name: Áî®Êà∑Âêç√æ        member_phone: ÊâãÊú∫Âè∑Á†Å√æ        member_account: √æ        avatar: Â§¥ÂÉèÂú∞ÂùÄ√æ        language: ËØ≠Èü≥√æ        validate: √æ        settings: ‰∏™‰∫∫ËÆæÁΩÆ,ËøîÂõûÊâÄÊúâÂ≠òÂÇ®Âú® gk_member_auth ‰∏≠ÁöÑ‰ø°ÊÅØ√æ        {√æ            favorite_names: Êî∂ËóèÂ§πÂêÑÁßçÊòüÊ†áÁöÑÁî®Êà∑Ëá™ÂÆö‰πâÂêçÁß∞ÂàóË°®√æ        },√æ        favorite_names:{√æ            ""1"":""ÊòüÂΩ¢"",√æ            ""2"":""Êúà‰∫Æ"",√æ            ...√æ        },√æ        isvip: ÊòØÂê¶VIPÁî®Êà∑√æ        product_id: ‰∫ßÂìÅID√æ        product_name: ‰∫ßÂìÅÂêçÁß∞√æ        yunku_count:√æ        oauths:[√æ            ""dingding"",√æ            ""email""√æ        ],√æ        property:{√æ            ""edit_password"" : ""1"" //Âº∫Âà∂‰øÆÊîπÂØÜÁ†Å√æ            ...√æ        }√æ    }√æ√æ---√æ√æ### Ê≥®ÂÜå√æ registerAsync(final DataListener listener, final String name, final String email, final String password)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| name | ÊòØ | string | Áî®Êà∑Âêç |√æ| email | ÊòØ | string | ÈÇÆÁÆ± |√æ| password | ÊòØ | string | ÂØÜÁ†Å |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ        member_id:123√æ    }√æ√æ---√æ√æ### ÊâæÂõûÂØÜÁ†Å√æ findPassword(DataListener listener, String email)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| email | ÊòØ | string | ÈÇÆÁÆ± |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### ÊâæÂõûÂØÜÁ†Å√æ findPassword(final DataListener listener, final String email)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| email | ÊòØ | string | ÈÇÆÁÆ± |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Êõ¥ÊîπÁî®Êà∑ÊòæÁ§∫Âêç√æ uploadUserName(final DataListener listener, final String name)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| name | ÊòØ | string | Áî®Êà∑ÂêçÁß∞ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ{√æ    member_name:string //Áî®Êà∑ÂêçÁß∞√æ    avatar_url:string //Â§¥ÂÉèÂú∞ÂùÄ√æ}√æ√æ---√æ√æ### Êõ¥ÊîπÁî®Êà∑ËÅîÁ≥ªÁîµËØù√æ uploadUserPhone(final DataListener listener, final String mobile)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| mobile | ÊòØ | string | Áî®Êà∑ËÅîÁ≥ªÁîµËØù |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ{√æ    member_name:string //Áî®Êà∑ÂêçÁß∞√æ    avatar_url:string //Â§¥ÂÉèÂú∞ÂùÄ√æ}√æ√æ---√æ√æ### Ëé∑ÂèñÂ∫ìÂàóË°®√æ getMountsInfo()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {'list':√æ        [√æ            {√æ                ent_id:√æ                org_id,√æ                org_name,√æ                member_count,√æ                subscribe_count,√æ                org_logo_url,√æ                org_background,√æ                org_find,√æ                member_id,√æ                member_name,√æ                member_type,√æ                mount_id,√æ                storage_point,√æ                storage_cache,√æ                storage_ethernet,√æ                compare,√æ                size_org_total,√æ                size_org_use,√æ                product_id,√æ                product_name,√æ                remain_days,√æ                auths:{√æ                    allow_find_org: 1 // ÂÖÅËÆ∏ÂèëÁé∞√æ                    allow_visit_website: 1 // ÂÖÅËÆ∏ÁΩëÈ°µËÆøÈóÆ√æ                },√æ                property:{√æ                    permissions:[""ent_org"",...]√æ                }√æ                addtime,√æ                add_dateline√æ            },√æ            ...√æ        ]√æ    }√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|---|---|---|√æ|ent_id|int|‰ºÅ‰∏öÂîØ‰∏ÄID|√æ|org_id|int|Âõ¢ÈòüÂîØ‰∏ÄID|√æ|org_name|string|Âõ¢ÈòüÂêçÁß∞|√æ|member_count|int|ÊàêÂëòÊÄªÊï∞|√æ|subscribe_count|int|ËÆ¢ÈòÖÊàêÂëòÊÄªÊï∞|√æ|org_logo_url|string|Âõ¢ÈòüÂõæÊ†áÂú∞ÂùÄ|√æ|org_background|string|Âõ¢ÈòüËÉåÊôØ|√æ|org_find|int|Âõ¢ÈòüÂèØÂèëÁé∞ 0:‰∏çÂèØÂèëÁé∞,1:ÂèØÂèëÁé∞|√æ|member_id|int|Áî®Êà∑ÂîØ‰∏ÄID|√æ|member_name|string|Áî®Êà∑ÂêçÁß∞|√æ|member_type|int|0ÔºöË∂ÖÁ∫ßÁÆ°ÁêÜÂëò 1ÔºöÊôÆÈÄöÁÆ°ÁêÜÂëòÊàê 2ÔºöÊôÆÈÄöÊàêÂëò|√æ|mount_id|int|mount_id|√æ|storage_point|string|Â≠òÂÇ®ÁÇπ|√æ|storage_cache|int|ÊòØÂê¶ÂºÄÂêØcache|√æ|storage_ethernet|int|ÊòØÂê¶ÂÖÅËÆ∏Â§ñÁΩëËÆøÈóÆ|√æ|compare|int|ÂÆ¢Êà∑Á´ØÊòØÂê¶ÂêåÊ≠•Êï∞ÊçÆ|√æ|size_org_total|bigint|Âõ¢ÈòüÁ©∫Èó¥ÊÄªÂ§ßÂ∞è|√æ|size_org_use|bigint|Âõ¢ÈòüÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è|√æ|product_id|int|‰∫ßÂìÅID|√æ|product_name|string|‰∫ßÂìÅÂêçÁß∞|√æ|remain_days|int|Ââ©‰ΩôÂ§©Êï∞, Âà∞ÊúüÂàô‰∏∫0, -1Ë°®Á§∫Ê∞∏‰∏çÂà∞Êúü|√æ|property|string|jsonÊ†ºÂºèÂ≠óÊÆµ,Áî®Êà∑ÊùÉÈôê-permissionsÔºåÊòØÂê¶ÈöêËóè-hide|√æ|addtime|string|Âä†ÂÖ•Êó∂Èó¥|√æ|add_dateline|int|Âä†ÂÖ•Êó∂Èó¥Êà≥|√æ√æ---√æ√æ### Ëé∑Âèñ‰ºÅ‰∏öÂàóË°®√æ getEntInfo()√æ √æ#### ÂèÇÊï∞√æ√æ(Êó†)√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {'list':√æ        [√æ          {√æ           ent_id,√æ           ent_name,√æ           addtime,√æ           add_dateline,`√æ           roles,√æ           trial,√æ           is_expired,√æ           member_count,√æ           modules,√æ           property√æ          },√æ         ...√æ        ]√æ    }√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|---|---|---|√æ|ent_id|int|‰ºÅ‰∏öID|√æ|ent_name|string|‰ºÅ‰∏öÂêçÁß∞|√æ|addtime|string|Âä†ÂÖ•Êó∂Èó¥|√æ|add_dateline|int|Âä†ÂÖ•Êó∂Èó¥Êà≥|√æ|roles|array|‰ºÅ‰∏öËßíËâ≤ÂàóË°®|√æ|trial|bool|ÊòØÂê¶ËØïÁî®|√æ|is_expired|bool|ÊòØÂê¶ËøáÊúü|√æ|member_count|int|ÊÄª‰∫∫Êï∞|√æ|modules|array|ÂºÄÈÄöÁöÑÊ®°Âùó|√æ|property|string|Â±ûÊÄß |√æ√ærolesÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   id:ËßíËâ≤ID(int),√æ   name:ËßíËâ≤Âêç(string)√æ   admin:ÊòØÂê¶Á≥ªÁªüÁÆ°ÁêÜÂëò(int),√æ   org_admin:ÊòØÂê¶Â∫ìÁÆ°ÁêÜÂëò(int),√æ   description:ÊèèËø∞(string),√æ   permissions:ÊùÉÈôêÂàóË°®(string),√æ   default_role:ÊòØÂê¶ÈªòËÆ§ËßíËâ≤(int)√æ  },√æ  ...√æ ]√æ√æpropertyÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ {√æ  ent_admin:Áî®Êà∑ÊòØÂê¶‰ºÅ‰∏öÁÆ°ÁêÜÂëò,√æ  ent_super_admin:ÊòØÂê¶ÂÖÅËÆ∏ÁÆ°ÁêÜ‰ºÅ‰∏ö‰ø°ÊÅØ√æ  enable_manage_groups:ÂÖÅËÆ∏ÁÆ°ÁêÜÁöÑÈÉ®Èó®(string) #‰ª• ""|"" Á¨¶Âè∑ÂàÜÂâ≤ÔºåÂ¶Ç |0|1|2|√æ  enable_create_org:ÊòØÂê¶ÂÖÅËÆ∏ÂàõÂª∫Â∫ì√æ  enable_publish_notice:ÊòØÂê¶ÂÖÅËÆ∏ÂèëÂ∏ÉÂÖ¨Âëä√æ }  √æ  √æ---√æ√æ### Êõ¥ÊîπËÆæÂ§áÁä∂ÊÄÅ√æ changeDeviceState(final DataListener listener, final int deviceId, final int state)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| deviceId | ÊòØ | int | ËÆæÂ§áID |√æ| state | ÊòØ | int | Áä∂ÊÄÅ 1/0 |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Êõ¥ÊîπËÆæÂ§áÂêçÁß∞√æ setDeviceInfo(final DataListener listener, final String device, final String info)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| device | ÊòØ | string | ËÆæÂ§á |√æ| info | ÊòØ | string | ËÆæÂ§á‰ø°ÊÅØ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Âà†Èô§ËÆæÂ§á√æ delDevice(final DataListener listener, final int deviceId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| deviceId | ÊòØ | int | ËÆæÂ§áID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### ÊòØÂê¶Á¶ÅÊ≠¢Êñ∞ËÆæÂ§áÁôªÂΩï√æ changeNewDeviceState(final DataListener listener, final int state)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| state | ÊòØ | int | Áä∂ÊÄÅ 1/0 |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Ëé∑ÂèñÊúçÂä°Âô®√æ getServerSite(String type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| type | ÊòØ | string | ÊúçÂä°Á±ªÂûã |√æ√æ#### ÂèÇÊï∞typeÂÄºËØ¥Êòé√æ√æyunku2.0:√æ√æ* chat:ËÅäÂ§©ÊúçÂä°Âô®√æ* upload:‰∏ä‰º†ÊúçÂä°Âô®√æ* download: ‰∏ãËΩΩÊúçÂä°Âô®√æ* docÔºöOfficeÊñáÊ°£ËΩ¨Êç¢ÊúçÂä°Âô®√æ* cad: CADËΩ¨Êç¢ÊúçÂä°Âô®√æ* notify2: Êñá‰ª∂ÂêåÊ≠•ÈÄöÁü•√æ* dialogÔºö‰ºöËØùÊ∂àÊÅØÊúçÂä°Âô®√æ* note: Á¨îËÆ∞ÊúçÂä°Âô®√æ√æyunku3.0:√æ√æ* upload3: ‰∏ä‰º†ÊúçÂä°Âô®√æ* download: ‰∏ãËΩΩÊúçÂä°Âô®√æ* docÔºöOfficeÊñáÊ°£ËΩ¨Êç¢ÊúçÂä°Âô®√æ* cad: CADËΩ¨Êç¢ÊúçÂä°Âô®√æ* dialog3: ‰ºöËØùÊ∂àÊÅØÊúçÂä°Âô®√æ* notify3: Êñá‰ª∂ÂêåÊ≠•ÈÄöÁü•√æ* note3: Á¨îËÆ∞ÊúçÂä°Âô®√æ* m-dialog: ‰ºöËØùÊ∂àÊÅØÊúçÂä°Âô®ÔºàÁªü‰∏ÄÂüüÂêçÁî®Ôºâ√æ* m-notify: Êñá‰ª∂ÂêåÊ≠•ÈÄöÁü•ÔºàÁªü‰∏ÄÂüüÂêçÁî®Ôºâ√æ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ [√æ  {√æ   host:Âú∞ÂùÄ(string) //deprecated,√æ   hostname:Âú∞ÂùÄ(string),√æ   hostname-in:ÂÜÖÁΩëÂú∞ÂùÄ(string),√æ   port:Á´ØÂè£(string),√æ   https:ÊòØÂê¶ÊîØÊåÅhttps, √æ    0Ë°®Á§∫‰∏çÊîØÊåÅ, √æ    1Ë°®Á§∫ÂèØ‰ª•‰ΩøÁî®443ËøûÊé•, √æ    Êï∞Â≠óË°®Á§∫httpsÁ´ØÂè£(string)√æ   path:Ë∑ØÂæÑ(string),√æ   sign:Á≠æÂêçkey(string),√æ   dateline:Êó∂Èó¥Êà≥(int) dialogÁ±ªÂûã‰ºöËøîÂõû√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### Ëé∑ÂèñË¥¶Âè∑ËÆæÁΩÆ√æ getAccountSetting()√æ √æ#### ÂèÇÊï∞√æ√æ(Êó†)√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ËÆæÁΩÆ |√æ√ælistËØ¥ÊòéÔºö√æ √æ [√æ  {√æ   setting:ËÆæÁΩÆÂêçÁß∞(string),√æ   value:ÂÄº(int),√æ   property:Êâ©Â±ïÂ±ûÊÄß(string json)√æ  },√æ  ...√æ ]√æ √æ---√æ√æ## **Â∫ìAPI**√æ√æ### Ëé∑ÂèñÂ≠òÂÇ®ÁÇπÂàóË°®√æ getStoragePoint(final DataListener listener, final int endId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| endId | ÊòØ | int | ‰ºÅ‰∏öID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    id:Â≠òÂÇ®ÁÇπID(int),√æ    storage_point: Â≠òÂÇ®ÁÇπ(string),√æ    allocate_capacity: ÂÖÅËÆ∏ÂàõÂª∫Â∫ìÂ§ßÂ∞è(bit), //0Ë°®Á§∫Êó†ÈôêÂà∂√æ    name: Â≠òÂÇ®ÁÇπÂêçÁß∞(string)√æ   },√æ   ......√æ  ]√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÈªòËÆ§Â∫ìÂõæÊ†áÂàóË°®√æ getDefaultLibLogos()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    url:ÂõæÊ†áÂú∞ÂùÄ(string),√æ    description: ÂõæÊ†áÊèèËø∞(string),√æ    value: ‰øùÂ≠òÊó∂ÁöÑÂõæÊ†áÁöÑÂÄº(string)√æ   },√æ   ......√æ  ]√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÂ∫ì‰ø°ÊÅØ√æ getLibInfo(int id, int orgId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | Â∫ìMOUNTID |√æ| orgId | ÊòØ | int | Â∫ìID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      group_count: Â∫ìÈÉ®Èó®Êï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string),√æ      file_count: Êñá‰ª∂Êï∞Èáè(int),√æ            folder_count: Êñá‰ª∂Â§πÊï∞Èáè(int)√æ     }√æ√æ---√æ√æ### ÊêúÁ¥¢Â∫ìÊàêÂëò√æ searchLibraryMembers(final int orgId, final int start, final String keyWord,√æ                                           final int size, final boolean withInfo, final boolean withGroup)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| keyWord | Âê¶ | string | Êü•ËØ¢ÂÖ≥ÈîÆËØçÔºåÈÇÆÁÆ±,ÂêçÁß∞ÊàñÊãºÈü≥È¶ñÂ≠óÊØç |√æ| size | Âê¶ | int | Êï∞ÈáèÔºå‰∏ç‰º†ÊãøÂÖ®ÈÉ® |√æ| withInfo | Âê¶ | boolean | ÊòØÂê¶ËøîÂõûÊàêÂëò‰ø°ÊÅØ |√æ| withGroup | Âê¶ | boolean | ÊòØÂê¶ËøîÂõûÂåÖÂê´Â≠êÈÉ®Èó®ÊàêÂëò |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      list: [√æ       {√æ        org_id:Â∫ìID(int),√æ            mount_id:Â∫ìMOUNTID(int),√æ             ent_id:‰ºÅ‰∏öID(int),√æ             member_id:ÊàêÂëòID(int),√æ             member_name: ÊàêÂëòÂêç(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_letter: ÊàêÂëòÈ¶ñÂ≠óÊØç(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_email: ÊàêÂëòÈÇÆÁÆ±(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_type:ÊàêÂëòÁ±ªÂûã(int),//0:Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò;1:ÁÆ°ÁêÜÂëò;2:ÊàêÂëò ‰ºÅ‰∏öÂ∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ             role_id:ÊàêÂëòÂ∫ì‰∏äËßíËâ≤(int),//‰∏™‰∫∫Â∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ             role_ids: [√æ              ËßíËâ≤ID(int),//ÊâÄÊúâËßíËâ≤ÔºåÈ°ªwith_infoÂèÇÊï∞‰º†1√æ              ......√æ             ],√æ             is_stand:ÊòØÂê¶Áã¨Á´ãÊ∑ªÂä†(int),//ÊòØÂê¶Ë¢´Áã¨Á´ãÊ∑ªÂä†Âà∞Â∫ì‰∏äÁöÑÔºåÈ°ªwith_infoÂèÇÊï∞‰º†1√æ             state:ÊàêÂëòÂú®Â∫ì‰∏äÁä∂ÊÄÅ(bool),//0:Á¶ÅÁî® 1:Ê≠£Â∏∏√æ             addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp)√æ       },√æ       ......√æ      ],√æ      count: ÊÄªÊï∞(int)√æ     }√æ√æ---√æ√æ### Ëé∑ÂèñÊàêÂëòÂÖ≥Á≥ª√æ getMemberRelative(int orgId, int start, boolean withInfo, boolean withGroup)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| withInfo | Âê¶ | boolean | ÊòØÂê¶ËøîÂõûÊàêÂëò‰ø°ÊÅØ |√æ| withGroup | Âê¶ | boolean | ÊòØÂê¶ËøîÂõûÂåÖÂê´Â≠êÈÉ®Èó®ÊàêÂëò |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      list: [√æ       {√æ        org_id:Â∫ìID(int),√æ            mount_id:Â∫ìMOUNTID(int),√æ             ent_id:‰ºÅ‰∏öID(int),√æ             member_id:ÊàêÂëòID(int),√æ             member_name: ÊàêÂëòÂêç(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_letter: ÊàêÂëòÈ¶ñÂ≠óÊØç(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_email: ÊàêÂëòÈÇÆÁÆ±(string),//È°ªwith_infoÂèÇÊï∞‰º†1√æ             member_type:ÊàêÂëòÁ±ªÂûã(int),//0:Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò;1:ÁÆ°ÁêÜÂëò;2:ÊàêÂëò ‰ºÅ‰∏öÂ∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ             role_id:ÊàêÂëòÂ∫ì‰∏äËßíËâ≤(int),//‰∏™‰∫∫Â∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ             role_ids: [√æ              ËßíËâ≤ID(int),//ÊâÄÊúâËßíËâ≤ÔºåÈ°ªwith_infoÂèÇÊï∞‰º†1√æ              ......√æ             ],√æ             is_stand:ÊòØÂê¶Áã¨Á´ãÊ∑ªÂä†(int),//ÊòØÂê¶Ë¢´Áã¨Á´ãÊ∑ªÂä†Âà∞Â∫ì‰∏äÁöÑÔºåÈ°ªwith_infoÂèÇÊï∞‰º†1√æ             state:ÊàêÂëòÂú®Â∫ì‰∏äÁä∂ÊÄÅ(bool),//0:Á¶ÅÁî® 1:Ê≠£Â∏∏√æ             addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp)√æ       },√æ       ......√æ      ],√æ      count: ÊÄªÊï∞(int)√æ     }√æ√æ---√æ√æ### Ëé∑ÂèñÈÉ®Èó®ÂÖ≥Á≥ª√æ getGroupRelative(int orgId, boolean withInfo)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| withInfo | Âê¶ | boolean | ÊòØÂê¶ËøîÂõûÈÉ®Èó®‰ø°ÊÅØ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      list: [√æ       {√æ        org_id:Â∫ìID(int),√æ        name: ÈÉ®Èó®ÂêçÁß∞(string),//ÈúÄË¶Åwith_infoÂèÇÊï∞‰º†1√æ        count: ÈÉ®Èó®ÊàêÂëòÊï∞(int),//ÈúÄË¶Åwith_infoÂèÇÊï∞‰º†1√æ            mount_id:Â∫ìMOUNTID(int),√æ             ent_id:‰ºÅ‰∏öID(int),√æ             group_id:ÈÉ®Èó®ID(int),√æ             role_id:ÈÉ®Èó®Â∫ì‰∏äËßíËâ≤(int),//‰∏™‰∫∫Â∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ             addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ             path:ÈÉ®Èó®ÂÆåÊï¥Ë∑ØÂæÑ(string)√æ       },√æ       ......√æ      ]√æ     }√æ√æ---√æ√æ### Ê∑ªÂä†Â∫ìÈÉ®Èó®√æ addLibraryGroup(final int entId, final int orgId,final int groupId, final int roleId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®ID |√æ| roleId | ÊòØ | int | ËßíËâ≤ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id:Â∫ìID(int),√æ      mount_id:Â∫ìMOUNTID(int),√æ      ent_id:‰ºÅ‰∏öID(int),√æ      group_id:ÈÉ®Èó®ID(int),√æ      role_id:ÈÉ®Èó®Â∫ì‰∏äËßíËâ≤(int),√æ      addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ      path:ÈÉ®Èó®ÂÆåÊï¥Ë∑ØÂæÑ(string)√æ     }√æ√æ---√æ√æ### ‰øÆÊîπÂ∫ìÈÉ®Èó®√æ updateLibraryGroup(final int entId, final int orgId,final int groupId, final int roleId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®ID |√æ| roleId | ÊòØ | int | ËßíËâ≤ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  org_id:Â∫ìID(int),√æ  mount_id:Â∫ìMOUNTID(int),√æ  ent_id:‰ºÅ‰∏öID(int),√æ  group_id:ÈÉ®Èó®ID(int),√æ  role_id:ÈÉ®Èó®Â∫ì‰∏äËßíËâ≤(int),√æ  addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ  path:ÈÉ®Èó®ÂÆåÊï¥Ë∑ØÂæÑ(string)√æ }√æ√æ---√æ√æ### ÁßªÈô§Â∫ìÈÉ®Èó®√æ delLibraryGroup(final int entId, final int orgId,final int groupId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Ê∑ªÂä†Â∫ìÊàêÂëò√æ addLibraryMember(final int orgId, final String memberids,final int roleId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| memberids | ÊòØ | string | ÊàêÂëòID,‰ª•ÈÄóÂè∑ÂàÜÈöî |√æ| roleId | ÊòØ | int | ËßíËâ≤ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    org_id:Â∫ìID(int),√æ        mount_id:Â∫ìMOUNTID(int),√æ         ent_id:‰ºÅ‰∏öID(int),√æ         member_id:ÊàêÂëòID(int),√æ         member_type:ÊàêÂëòÁ±ªÂûã(int),//0:Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò;1:ÁÆ°ÁêÜÂëò;2:ÊàêÂëò ‰ºÅ‰∏öÂ∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ         role_id:ÊàêÂëòÂ∫ì‰∏äËßíËâ≤(int),//‰∏™‰∫∫Â∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ         state:ÊàêÂëòÂú®Â∫ì‰∏äÁä∂ÊÄÅ(bool),//0:Á¶ÅÁî® 1:Ê≠£Â∏∏√æ         addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp)√æ   },√æ   ......√æ  ],√æ  error_list: [√æ   {√æ         member_id:ÊàêÂëòID(int),√æ         member_name:ÊàêÂëòÂêçÁß∞(string),√æ         error_code: ÈîôËØØÁ†Å(int),√æ         error_msg: ÈîôËØØ‰ø°ÊÅØ(string)√æ        },√æ   ......√æ  ]√æ }√æ√æ---√æ√æ### ‰øÆÊîπÂ∫ìÊàêÂëòËßíËâ≤√æ changeLibraryMemberRole(final int orgId, final String memberids, final int roleId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| memberids | ÊòØ | string | ÊàêÂëòID,‰ª•ÈÄóÂè∑ÂàÜÈöî |√æ| roleId | ÊòØ | int | ËßíËâ≤ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ  list: [√æ   {√æ    org_id:Â∫ìID(int),√æ        mount_id:Â∫ìMOUNTID(int),√æ         ent_id:‰ºÅ‰∏öID(int),√æ         member_id:ÊàêÂëòID(int),√æ         member_type:ÊàêÂëòÁ±ªÂûã(int),//0:Ë∂ÖÁ∫ßÁÆ°ÁêÜÂëò;1:ÁÆ°ÁêÜÂëò;2:ÊàêÂëò ‰ºÅ‰∏öÂ∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ         role_id:ÊàêÂëòÂ∫ì‰∏äËßíËâ≤(int),//‰∏™‰∫∫Â∫ìËØ∑Ëá™Âä®ÂøΩÁï•√æ         state:ÊàêÂëòÂú®Â∫ì‰∏äÁä∂ÊÄÅ(bool),//0:Á¶ÅÁî® 1:Ê≠£Â∏∏√æ         addtime:Ê∑ªÂä†Êó∂Èó¥(timestamp)√æ   },√æ   ......√æ  ]√æ }√æ√æ---√æ√æ### ÁßªÈô§Â∫ìÊàêÂëò√æ delLibraryMember(final int orgId, final String memberids)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| memberids | ÊòØ | string | ÊàêÂëòID,‰ª•ÈÄóÂè∑ÂàÜÈöî |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    id:Â≠òÂÇ®ÁÇπID(int),√æ    storage_point: Â≠òÂÇ®ÁÇπ(string),√æ    allocate_capacity: ÂÖÅËÆ∏ÂàõÂª∫Â∫ìÂ§ßÂ∞è(bit), //0Ë°®Á§∫Êó†ÈôêÂà∂√æ    name: Â≠òÂÇ®ÁÇπÂêçÁß∞(string)√æ   },√æ   ......√æ  ]√æ }√æ√æ---√æ√æ### ÂàõÂª∫Â∫ì√æ createLibrary(final String name, int entId,final String description, √æ                         final String logo, final String storagePoint, long capacity)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| name | ÊòØ | string | Â∫ìÂêçÁß∞ |√æ| entId | Âê¶ | int | ‰ºÅ‰∏öIDÔºå‰∏™‰∫∫Â∫ìÂàô‰∏çÈúÄË¶Å‰º† |√æ| description | Âê¶ | string | Â∫ìÊèèËø∞ |√æ| logo | Âê¶ | string | Â∫ìÁöÑLOGOÂú∞ÂùÄ,Ê≥®:‰∏çÂ∏¶httpÁöÑÂú∞ÂùÄ |√æ| storagePoint | Âê¶ | string | Â≠òÂÇ®ÁÇπÔºå‰∏ç‰º†Êàñ‰º†Á©∫Âàô‰∏∫ÂÖ¨Êúâ‰∫ë, ‰ºÅ‰∏öÂ∫ì‰∏ìÁî® |√æ| capacity | Âê¶ | long | Â∫ìÁ©∫Èó¥, -1Ë°®Á§∫Â§ßÂ∞èÊó†Èôê, ‰ºÅ‰∏öÂ∫ì‰∏ìÁî® |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string)√æ     }√æ√æ---√æ√æ### ÊîπÂèòÂõ¢ÈòüÂõæÊ†áÊìç‰Ωú√æ changeCLoudLogo(final DataListener listener,√æ                                      final int orgId, final String logoUrl)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| logoUrl | ÊòØ | string | Â∫ìÁöÑLOGOÂú∞ÂùÄ,Ê≥®:‰∏çÂ∏¶httpÁöÑÂú∞ÂùÄ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string)√æ     }√æ√æ---√æ√æ### ÊîπÂèòÂõ¢ÈòüÂêçÁß∞Êìç‰Ωú√æ changeOrgName(final DataListener listener,√æ                                    final int orgId, final String name)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| name | ÊòØ | string | Â∫ìÂêçÁß∞ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string)√æ     }√æ√æ---√æ√æ### ÊîπÂèòÂõ¢ÈòüÊèèËø∞Êìç‰Ωú√æ changeCLoudDesc(final DataListener listener,√æ                                      final int orgId, final String desc)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| desc | ÊòØ | string | Â∫ìÊèèËø∞ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string)√æ     }√æ√æ---√æ√æ### ÊîπÂèòÂõ¢ÈòüÁ©∫Èó¥Â§ßÂ∞èÊìç‰Ωú√æ changeCLoudSpace(final DataListener listener,√æ                                       final int orgId, final int capacity)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| capacity | ÊòØ | string | Â∫ìÁ©∫Èó¥, -1Ë°®Á§∫Â§ßÂ∞èÊó†Èôê, ‰ºÅ‰∏öÂ∫ì‰∏ìÁî® |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ      org_id: Â∫ìID(int),√æ      mount_id: Â∫ìMOUNTID(int),√æ      ent_id: ‰ºÅ‰∏öID(int),√æ      member_id: ÂàõÂª∫ËÄÖID(int),√æ      storage_point: Â≠òÂÇ®ÁÇπ(string),√æ      storage_cahce: ÊòØÂê¶ÂºÄÂêØcacheÊúçÂä°Âô®(int),√æ      org_name: Â∫ìÂêçÁß∞(string),√æ      org_description: Â∫ìÊèèËø∞(string),√æ      org_logo: Â∫ìÂõæÊ†á(string),√æ      org_logo_url: Â∫ìÂõæÊ†áÂú∞ÂùÄ(string),√æ      size_use: Â∫ìÂ∑≤‰ΩøÁî®Á©∫Èó¥Â§ßÂ∞è(int),√æ      size_total: Â∫ìÁ©∫Èó¥Â§ßÂ∞è(int),√æ      member_limit: Â∫ìÊàêÂëòÊï∞‰∏äÈôê(int), //-1‰∏∫Êó†ÈôêÂà∂√æ      member_count: Â∫ìÊàêÂëòÊï∞(int),√æ      add_dataline: Â∫ìÂàõÂª∫Êó∂Èó¥Êà≥(string),√æ      can_manage: ÊòØÂê¶ÂÖÅËÆ∏‰øÆÊîπÂ∫ì‰ø°ÊÅØÊàñÁÆ°ÁêÜÂ∫ì(bool),√æ      can_quit: ÊòØÂê¶ÂÖÅËÆ∏ÈÄÄÂá∫Â∫ì(bool),√æ      can_delete: ÊòØÂê¶ÂÖÅËÆ∏Âà†Èô§Â∫ì(bool),√æ      collection: {√æ       show: ÊòØÂê¶ÈôêÂà∂Êî∂ÈõÜÂ∫ì‰ø°ÊÅØ(bool),√æ       url: Êî∂ÈõÜÂ∫ìÂú∞ÂùÄ(string),√æ       state: Êî∂ÈõÜÂ∫ìÁä∂ÊÄÅ(bool), //1:ÂºÄÂêØ; 0:ÂÖ≥Èó≠√æ      },√æ      unique_code: Êî∂ÈõÜÂ∫ìÈ™åËØÅÁ†Å(string),√æ      property: ÂÖ∂‰ªñÂ±ûÊÄß(string)√æ     }√æ√æ---√æ√æ### Âà†Èô§Â∫ì√æ deleteLib(final DataListener listener, final int orgId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | Â∫ìID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### ÈÄÄÂá∫Â∫ì√æ quitLib(final DataListener listener, final int orgId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| orgId | ÊòØ | int | Â∫ìID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ Ê≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ√æ## **Êñá‰ª∂API**√æ√æ### ÈîÅÂÆöÊñá‰ª∂√æ lock(final String fullpath, final int id, int lock)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ| id | ÊòØ | int | Â∫ìÁ©∫Èó¥ID |√æ| lock | ÊòØ | int | ÈîÅÂÆöÊàñËß£ÈîÅÁöÑÊ†áÁ§∫Ôºå""lock""ÔºöÈîÅÂÆöÔºå""unlock"":Ëß£ÈîÅ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Êñá‰ª∂ÊúÄËøëÊõ¥Êñ∞ÂàóË°®√æ getFileUpdates(int id, long msdateline, int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | Â∫ìÁ©∫Èó¥id |√æ| msdateline | ÊòØ | int | Êü•ËØ¢ÂΩìÂâçÊó∂Èó¥Êà≥(ÊØ´Áßí)‰πãÂâçÁöÑÊñá‰ª∂, Á¨¨‰∏ÄÊ¨°0 |√æ| size | Âê¶ | int | Ëé∑ÂèñÊï∞Èáè, ÈªòËÆ§500 |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ | Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ    | --- | --- | --- |√æ    | dateline | int | Êó∂Èó¥Êà≥Ôºà13‰ΩçÁ≤æÁ°ÆÂà∞ÊØ´ÁßíÔºâ |√æ    | list | Array | Ê†ºÂºèËßÅ‰∏ã |√æ    √æ    | Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ    | --- | --- | --- |√æ    | hash | string | Ë∑ØÂæÑhash |√æ    | dir | int | ÊòØÂê¶Êñá‰ª∂Â§π |√æ    | fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ    | filehash | string | Êñá‰ª∂hash |√æ    | filesize | bigint | Êñá‰ª∂Â§ßÂ∞è |√æ    | last_member_id | int | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ    | last_dateline | int | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ    | property | string | Â±ûÊÄß, discuss:ËÆ®ËÆ∫Êï∞ |√æ√æ---√æ√æ### Ëé∑ÂèñÊñá‰ª∂ÂàÜ‰∫´ÈìæÊé•√æ getFileLink(String fullpath, int id, final String deadline,√æ                                  final String auth, final String password, final String scope, final String day)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| fullpath | ÊòØ | string | fullpath |√æ| id | ÊòØ | int | mount_id |√æ| deadline | Âê¶ | string | ËøáÊúüÁöÑÊó∂Èó¥Êà≥,-1 Ë°®Á§∫Ê∞∏‰∏çÂ§±Êïà Ôºå‰∏ç‰º†ÈªòËÆ§ËøáÊúüÊó∂Èó¥2Â§© |√æ| auth | Âê¶ | string | ËßÅ‰∏ãË°® Ôºå‰∏ç‰º†Ë°®Á§∫Êó†ÊùÉÈôê |√æ| password | Âê¶ | string | ÊòØÂê¶ÈúÄË¶ÅÂØÜÁ†ÅÔºå‰∏ç‰º†Ë°®Á§∫‰∏çËÆæÁΩÆÂØÜÁ†Å |√æ| scope | Âê¶ | string | 0 Ë°®Á§∫ÊâÄÊúâ‰∫∫ÈÉΩÂèØËÆøÈóÆ; 1 Ë°®Á§∫Âè™ÂÖÅËÆ∏‰ºÅ‰∏öÊàêÂëòËÆøÈóÆ |√æ| day | Âê¶ | string | ËøáÊúüÂ§©Êï∞ 0‰∏∫Ëá™ÂÆö‰πâÊó∂Èó¥;ËøáÊúüÊó∂Èó¥‰∏ç‰ºöÊåâËøô‰∏™ËÆ°ÁÆóÔºåËøô‰∏™Áî®‰∫éËÆæÁΩÆÊó∂ÁöÑÂõûÊòæ |√æ√æ| ÈúÄË¶Å‰º†ÁöÑÂÄº | È¢ÑËßà | ‰∏ãËΩΩ | ‰∏ä‰º† |√æ| --- | --- | --- | --- |√æ| 100 | O | X | X |√æ| 110 | O | O | X |√æ| 111 | O | O | O |√æ| 101 | O | X | O |√æ| 001 | X | X | O |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| code | string | ÈìæÊé•ÂîØ‰∏Äcode |√æ| link | string | ‰ª•http://ÂºÄÂ§¥ÁöÑÊñá‰ª∂ÈìæÊé•URL |√æ| qr_url | string | ‰ª•http://ÂºÄÂ§¥ÁöÑ‰∫åÁª¥Á†ÅÂõæÁâáÈìæÊé•ÔºåÂêéÈù¢ÂèØ‰ª•ÈôÑÂä†'&width=250' |√æ√æ---√æ√æ### ËÆæÁΩÆÊñá‰ª∂ÊèèËø∞√æ setFileKeyWord(int id, String fullpath, String keywords)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ| keywords | ÊòØ | string | ÂÖ≥ÈîÆÂ≠ó |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Ëé∑ÂèñÊî∂ËóèÂ§π‰ø°ÊÅØ(Êñá‰ª∂)√æ getFavoriteInfo(int type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| type | ÊòØ | int | ÊòüÊ†áÁ±ªÂûã |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | Array | Ê†ºÂºèËßÅ‰∏ã |√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| mount_id | string | mount_id |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | string | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| filehash | string | Êñá‰ª∂hash(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| uri | string | ‰∏ãËΩΩÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| preview | string | È¢ÑËßàÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| thumbnail | string | Áº©Áï•ÂõæÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ√æ---√æ√æ### Ê∑ªÂä†Êî∂Ëóè(Êñá‰ª∂)√æ addFavorities(final int mountid, final String fullpath, final int type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| mount_id | ÊòØ | int | MOUNT_ID |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| favorite_type | Âê¶ | int | ÊòüÊ†áÁ±ªÂûã |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Âà†Èô§Êî∂Ëóè(Êñá‰ª∂)√æ delFavorities(final int mountid, final String fullpath, final int type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| mount_id | ÊòØ | int | MOUNT_ID |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| favorite_type | Âê¶ | int | ÊòüÊ†áÁ±ªÂûã |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Ê∏ÖÁ©∫Êî∂Ëóè(Êñá‰ª∂)√æ clearFavorities()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Ëé∑Âèñ24Â∞èÊó∂ÂÜÖ‰øÆÊîπÁöÑÊñá‰ª∂√æ getFileRecentModified()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÂêåËé∑ÂèñÊñá‰ª∂ÂàóË°®√æ√æ---√æ√æ### Ëé∑ÂèñÈîÅÂÆöÊñá‰ª∂‰ø°ÊÅØ√æ getFileLocked()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | Array | Ê†ºÂºèËßÅ‰∏ã |√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| mount_id | string | mount_id |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | string | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| filehash | string | Êñá‰ª∂hash(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| uri | string | ‰∏ãËΩΩÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| preview | string | È¢ÑËßàÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| thumbnail | string | Áº©Áï•ÂõæÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ√æ---√æ√æ### Ëé∑ÂèñÂØπÂ∫îË∑ØÂæÑÁöÑÊùÉÈôê√æ getPermissionOfList(int id, String fullpath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÂêåËé∑ÂèñÊñá‰ª∂ÂàóË°®√æ√æ---√æ√æ### Ëé∑ÂèñÊñá‰ª∂ÂàóË°®√æ getFileListSync(final int id, final String fullpath, int start, int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | int | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ| start | Âê¶ | int | ÂºÄÂßãÊù°Êï∞ |√æ| size | Âê¶ | int | Ëé∑ÂèñÊï∞Èáè(ÈªòËÆ§100) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| count | int | Êñá‰ª∂ÊÄªÊï∞ |√æ| list | Array | Ê†ºÂºèËßÅ‰∏ã |√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| mount_id | int | mount id |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | int | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| filehash | string | Êñá‰ª∂hash |√æ| filesize | bigint | Êñá‰ª∂Â§ßÂ∞è |√æ| publish | int | ÊòØÂê¶ÂÖ¨ÂºÄ |√æ| create_member_name | string | Êñá‰ª∂ÂàõÂª∫‰∫∫ |√æ| create_dateline | int | Êñá‰ª∂ÂàõÂª∫Êó∂Èó¥Êà≥ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | int | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| thumbnail | string | Êñá‰ª∂Â∞èÁº©Áï•Âõæ |√æ| property | array | Ê†ºÂºèËßÅ‰∏ã |√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| permisson | array | Êñá‰ª∂ÊùÉÈôêÊï∞ÁªÑ,ËßÅÊùÉÈôêËØ¥Êòé |√æ| discuss | int | Êñá‰ª∂ËÆ®ËÆ∫Êï∞ |√æ| tag | string | Êñá‰ª∂Ê†áÁ≠æÔºåÂàÜÂè∑ÂàÜÂâ≤ |√æ| collection_type | string | Êî∂ÈõÜÂ∫ìÁ±ªÂûã: public / private |√æ√æ#### Êñá‰ª∂/Â∫ì‰∏äÁöÑÊùÉÈôêËØ¥Êòé√æ| ÊùÉÈôê | ËØ¥Êòé |√æ| --- | --- |√æ| file_sync | Êñá‰ª∂ÂêåÊ≠•ÔºåÂ§áÊ≥® Áî®‰∫éÂà§Êñ≠ÊòØÂê¶ÂÖÅËÆ∏Â∫ìÂêåÊ≠• |√æ| file_read | Êñá‰ª∂ËØªÂèñÔºåÂ§áÊ≥® Áî®‰∫éÂà§Êñ≠ÂèØÂê¶‰∏ãËΩΩÔºåÂ§çÂà∂ÔºåÁºìÂ≠ò |ÔºàÂâ™ÂàáÂäüËÉΩ‰∏çÂèóËøô‰∏™ÂäüËÉΩÊùÉÈôêÂΩ±ÂìçÔºâ√æ| file_write | Êñá‰ª∂ÂÜôÂÖ•ÔºåÂ§áÊ≥® Áî®‰∫éÂà§Êñ≠Â∫ìÊàñÊñá‰ª∂Â§πÂèØÂê¶‰∏ä‰º†Êñá‰ª∂Ôºå‰ª•ÂèäÈáçÂëΩÂêçÔºåÊñ∞Âª∫ÔºåÁ≤òË¥¥ |√æ| file_preview | Êñá‰ª∂È¢ÑËßàÔºå Â§áÊ≥® Áî®Êà∑Âà§Êñ≠ÂèØÂê¶È¢ÑËßàÊñá‰ª∂ÔºõpsÔºöÂ¶ÇÈÅáÊó†ËØ•ÊùÉÈôêËÄåÊúâfile_readÊùÉÈôêÔºåÂàôÈªòËÆ§Êã•ÊúâËØ•ÊùÉÈôê |√æ| file_delete | Êñá‰ª∂Âà†Èô§Ôºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÂèØÂê¶Âà†Èô§Êñá‰ª∂ÔºåÂâ™Âàá |√æ| file_recycle | Êü•ÁúãÂõûÊî∂Á´ôÔºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÂèØÂê¶Êü•ÁúãÂõûÊî∂Á´ô |√æ| file_delete_com | Êñá‰ª∂ÂΩªÂ∫ïÂà†Èô§Ôºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÂèØÂê¶ÂΩªÂ∫ïÂà†Èô§Êñá‰ª∂ |√æ| file_history | Êñá‰ª∂ÂéÜÂè≤ÁâàÊú¨Ôºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÂèØÂê¶Êü•ÁúãÔºåÊÅ¢Â§çÔºåÂéÜÂè≤ÁâàÊú¨ |√æ| file_link | Êñá‰ª∂Â§ñÈìæÔºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÊòØÂê¶Êã•ÊúâÂ§ñÈìæ/‰∫ëÈôÑ‰ª∂ÁöÑÂàÜ‰∫´ÊùÉÈôê |√æ| ent_org | Â∫ìÁÆ°ÁêÜÔºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÊòØÂê¶ÂÖÅËÆ∏ÁÆ°ÁêÜÂ∫ìÊàêÂëò |√æ| org_create | ÂàõÂª∫Â∫ìÊùÉÈôêÔºå Â§áÊ≥® Áî®Êà∑Âà§Êñ≠ÊòØÂê¶ÂÖÅËÆ∏ÂàõÂª∫Â∫ì |√æ| ent_group | ÁªÑÁªáÊû∂ÊûÑËäÇÁÇπÁÆ°ÁêÜÔºå Â§áÊ≥® Áî®‰∫éÂà§Êñ≠ÊòØÂê¶ÂÖÅËÆ∏ÁÆ°ÁêÜÁªÑÁªáÊû∂ÊûÑ |√æ√æ---√æ√æ### Âà∂ÂÆöhashÊñá‰ª∂√æ getFileListByHashs(int id, int start, int size, String[] hashs)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| start | Âê¶ | int | ÂºÄÂßãÊù°Êï∞  |√æ| size | Âê¶ | int | Ëé∑ÂèñÊï∞Èáè(ÈªòËÆ§100) |√æ| hashs | ÊòØ | string[] | jsonÂ≠óÁ¨¶‰∏≤(Ëé∑ÂèñÊåáÂÆöhashÊñá‰ª∂) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÂêåËé∑ÂèñÊñá‰ª∂ÂàóË°®√æ√æ---√æ√æ### ‰∏ä‰º†Êñá‰ª∂√æ uploadFile(int id, String fullpath, String opName, String localPath, boolean overWrite)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| opName | Âê¶ | string | ‰∏ä‰º†‰∫∫ÂêçÁß∞ |√æ| localPath | ÊòØ | string | Êú¨Âú∞Ë∑ØÂæÑ |√æ| overWrite | ÊòØ | boolean | ÊòØÂê¶ÈáçÂÜô |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|------|------|------|√æ| hash | string | Ë∑ØÂæÑhash |√æ| fullpath | string | Êñá‰ª∂Â§πÁöÑË∑ØÂæÑ |√æ| filehash | string | Êñá‰ª∂ÁöÑsha1ÂÄº |√æ| filesize | bigint | Êñá‰ª∂ÁöÑÂ§ßÂ∞è |√æ√æ---√æ √æ### Êñá‰ª∂ÂàÜÂùó‰∏ä‰º†√æ uploadByBlock(int id, String fullpath, String localFilePath,√æ                                            int rangSize, UploadCallBack callBack)√æ#### ÂèÇÊï∞ √æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé | √æ|------|------|------|------|√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| localFilePath | ÊòØ | string | Êñá‰ª∂Êú¨Âú∞Ë∑ØÂæÑ |√æ| rangSize | Âê¶ | int | ÂàÜÂùó‰∏ä‰º†Â§ßÂ∞èÔºå‰∏ç‰º†ÈªòËÆ§‰∏∫512K |√æ| callBack | ÊòØ | UploadCallBack | Êñá‰ª∂‰∏ä‰º†ÂõûË∞É |√æ√æ---√æ√æ### Êï∞ÊçÆÊµÅÂàÜÂùó‰∏ä‰º†√æ uploadByBlock(int id, String fullpath, InputStream localFilePath,√æ                                            int rangSize, UploadCallBack callBack)√æ#### ÂèÇÊï∞ √æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé | √æ|------|------|------|------|√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| inputStream | ÊòØ | InputStream | ÊµÅÊï∞ÊçÆ |√æ| rangSize | Âê¶ | int | ÂàÜÂùó‰∏ä‰º†Â§ßÂ∞èÔºå‰∏ç‰º†ÈªòËÆ§‰∏∫512K |√æ| callBack | ÊòØ | UploadCallBack | Êñá‰ª∂‰∏ä‰º†ÂõûË∞É |√æ√æ---  √æ√æ### ÊâπÈáèÂà†Èô§Êñá‰ª∂Êñá‰ª∂Â§π√æ batchDeleteFileAsync(final int id, final ArrayList<String> fullPaths)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullPaths | ÊòØ | ArrayList | Êñá‰ª∂Ë∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Êñá‰ª∂Â§çÂà∂√æ fileBatchCopy(final int id, final ArrayList<String> fullPaths,√æ                                    final int targetMountId, final String targetFullPath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullPaths | ÊòØ | ArrayList | Êñá‰ª∂Ë∑ØÂæÑ |√æ| targetMountId | ÊòØ | int | Â§çÂà∂Âà∞ÁöÑmount_id |√æ| targetFullPath | ÊòØ | string | Â§çÂà∂Âà∞ÁöÑË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ<table class=""table table-bordered table-striped"">√æ   <tr>√æ      <td>Â≠óÊÆµ</td>√æ      <td>Á±ªÂûã</td>√æ      <td>ËØ¥Êòé </td>√æ   </tr>√æ   <tr>√æ      <td>hash</td>√æ      <td>string</td>√æ      <td>Â§çÂà∂ÂêéÊñá‰ª∂(Â§π)ÁöÑË∑ØÂæÑhash</td>√æ   </tr>√æ   <tr>√æ      <td>fullpath</td>√æ      <td>string</td>√æ      <td>Â§çÂà∂ÂêéÊñá‰ª∂(Â§π)ÁöÑË∑ØÂæÑ</td>√æ   </tr>√æ   <tr>√æ      <td>filehash</td>√æ      <td>string</td>√æ      <td>Êñá‰ª∂ÁöÑsha1ÂÄº(‰ªÖÂ§çÂà∂Êñá‰ª∂ËøîÂõû)</td>√æ   </tr>√æ   <tr>√æ      <td>filesize</td>√æ      <td>bigint</td>√æ      <td>Êñá‰ª∂ÁöÑÂ§ßÂ∞è(‰ªÖÂ§çÂà∂Êñá‰ª∂ËøîÂõû)</td>√æ   </tr>√æ</table>√æ√æ---√æ√æ### Êñá‰ª∂ÁßªÂä®√æ fileBatchMove(final int id, final ArrayList<String> fullPaths,√æ                                    final int targetMountId, final String targetFullPath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullPaths | ÊòØ | ArrayList | Êñá‰ª∂Ë∑ØÂæÑ |√æ| targetMountId | ÊòØ | int | Â§çÂà∂Âà∞ÁöÑmount_id |√æ| targetFullPath | ÊòØ | string | Â§çÂà∂Âà∞ÁöÑË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### ÊîπÂèòÊî∂ËóèÂ§πÂêçÁß∞Êìç‰Ωú√æ changeFavoritesName(final int type, final String name)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| type | ÊòØ | int | Êï∞Â≠ó1-6‰ª£Ë°®ÂêÑÁßçÁ±ªÂûã |√æ| name | ÊòØ | string | ÂêçÁß∞ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Ëé∑ÂèñÊî∂ËóèÂ§πÂêçÁß∞√æ getFavoritesName()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ|favorite_names|Array|Êî∂ËóèÂ§πÂêÑÁßçÊòüÊ†áÁöÑÁî®Êà∑Ëá™ÂÆö‰πâÂêçÁß∞ÂàóË°®|√æ√æ---√æ√æ### Ê†πÊçÆÊñá‰ª∂filehashËé∑ÂèñÊñá‰ª∂Ë∑ØÂæÑ√æ getDownloadFileUrlByFileHash(int id, String filehash)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| filehash | ÊòØ | string | filehash |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| filesize| bigint | Êñá‰ª∂Â§ßÂ∞è |√æ| urls | Array | ÂåÖÂê´URLÁöÑÊï∞ÁªÑ |√æ√æ---√æ√æ### Ê†πÊçÆfilehashËé∑ÂèñÊñá‰ª∂√æ getUrlByFileHash(final int id, final String fileHash, final String net, √æ                                     final boolean isOpen, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| filehash | ÊòØ | string | filehash |√æ| net | Âê¶| string | ËøîÂõû‰∏ãËΩΩÂú∞ÂùÄÂÖ¨ÁΩë/ÂÜÖÁΩë(in-ÂÜÖÁΩëÔºå‰∏ç‰º†ÈªòËÆ§ÂÖ¨ÁΩë) |√æ| isOpen | Âê¶ | string | ÊòØÂê¶ÊâìÂºÄÊîπÊñá‰ª∂(‰∏ç‰º†ÈªòËÆ§false) |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| filesize| bigint | Êñá‰ª∂Â§ßÂ∞è |√æ| urls | Array | ÂåÖÂê´URLÁöÑÊï∞ÁªÑ |√æ√æ---√æ√æ### ËÆæÁΩÆÊñá‰ª∂ÊùÉÈôê√æ setFilePermission(final int id, final String fullpath, √æ                                     final String permission, final boolean isGroup)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂fullpath |√æ| isGroup | Âê¶ | string | ÊòØÂê¶‰∏∫ËÆæÁΩÆÈÉ®Èó®ÊùÉÈôê, 1:ÊòØ;0:Âê¶ |√æ| permission | Âê¶ | json | Ê†ºÂºèÂ¶Ç‰∏ã |√æ√æ#### ÊùÉÈôêÊ†ºÂºè‰æãÂ≠ê√æ  {√æ   ÊàêÂëòID|ÈÉ®Èó®ID(int): [√æ    ÊùÉÈôê1(string),√æ    ...√æ   ],√æ   ...√æ  }√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ#### Ê≥®ÊÑè‰∫ãÈ°π√æ* ÈùûÂ∫ìÁÆ°ÁêÜÂëòÂè™ÂÖÅËÆ∏Êü•ÁúãÔºå‰∏çËÉΩËÆæÁΩÆ√æ* Êã•ÊúâÂêåÊ≠•ÊùÉÈôêÁöÑÊó∂ÂÄôÔºåÈ¢ÑËßàÔºåËØªÂèñÔºåÁºñËæë‰∏éÂà†Èô§ÈÉΩ‰∏çÂÖÅËÆ∏ËÆæÁΩÆ√æ* ËØªÂèñÊùÉÈôêÈúÄË¶ÅÈ¢ÑËßàÊùÉÈôêÔºåÁºñËæëÊùÉÈôêÈúÄË¶ÅËØªÂèñ‰∏éÈ¢ÑËßàÊùÉÈôê√æ√æ---√æ√æ### Ëé∑ÂèñÊàêÂëòÁöÑÊñá‰ª∂Â§πÊùÉÈôê√æ getMemberFolderPermission(final int id, final String fullpath, int start, int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂fullpath |√æ| start | Âê¶ | int | start |√æ| size | Âê¶ | int | ËøîÂõûÂ§ßÂ∞è |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: {√æ   member_id: ÊàêÂëòID(int),√æ   member_name: ÊàêÂëòÂêçÁß∞(string),√æ   member_email: ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   fullpath: Êñá‰ª∂fullpath(string),√æ   permissions: [ //ÊàêÂëòÂú®Êñá‰ª∂‰∏äÊùÉÈôê√æ    ÊùÉÈôê1(string),√æ    ...√æ   ],√æ   permission_str: [ //ÊàêÂëòÂú®Â∫ì‰∏äÁöÑÊùÉÈôêÂêç√æ    ÊùÉÈôêÂêçÁß∞1(string),√æ    ...√æ   ]√æ  }√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÈÉ®Èó®Êñá‰ª∂Â§πÊùÉÈôê√æ getGroupFolderPermission(final int id, final String fullpath, int start, int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂fullpath |√æ| start | Âê¶ | int | start |√æ| size | Âê¶ | int | ËøîÂõûÂ§ßÂ∞è |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: {√æ   group_id: ÈÉ®Èó®ID(int),√æ   group_name: ÈÉ®Èó®ÂêçÁß∞(string),√æ   fullpath: Êñá‰ª∂fullpath(string),√æ   permissions: [ //ÈÉ®Èó®Âú®Êñá‰ª∂‰∏äÊùÉÈôê√æ    ÊùÉÈôê1(string),√æ    ...√æ   ],√æ   permission_str: [ //ÈÉ®Èó®Âú®Â∫ì‰∏äÁöÑÊùÉÈôêÂêç√æ    ÊùÉÈôêÂêçÁß∞1(string),√æ    ...√æ   ]√æ  }√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÂçïÊñá‰ª∂Êï∞ÊçÆ√æ getFileInfoSync(final String fullpath, int id, String hid)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| fullpath | ÊòØ | int | Êñá‰ª∂Ë∑ØÂæÑ |√æ| id | ÊòØ | string | mount_id |√æ| hid | Âê¶ | string | ÁâàÊú¨ID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | string | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| filehash | string | Êñá‰ª∂hash(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| uri | string | Êñá‰ª∂‰∏ãËΩΩÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| preview | string | È¢ÑËßàÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| thumbnail | string | Áº©Áï•ÂõæÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ√æ---√æ√æ### Ê†πÊçÆhashËé∑ÂèñÊñá‰ª∂‰ø°ÊÅØ√æ getFileInfoByHash(String hash, int id)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| hash | ÊòØ | string | Ë∑ØÂæÑhash |√æ| id | ÊòØ | int | mount_id |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | string | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| filehash | string | Êñá‰ª∂hash(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è(‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| uri | string | Êñá‰ª∂‰∏ãËΩΩÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| preview | string | È¢ÑËßàÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ| thumbnail | string | Áº©Áï•ÂõæÂú∞ÂùÄ (‰ªÖÊñá‰ª∂ËøîÂõû) |√æ√æ---√æ√æ### Ëé∑ÂèñÊñá‰ª∂Â§πÂ±ûÊÄß√æ getFolderAttribute(int id, String fullpath, String hash)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ| hash | ÊòØ | string | Ë∑ØÂæÑhash |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| file_count | int | Êñá‰ª∂Êï∞Èáè |√æ| folder_count | int | Êñá‰ª∂Â§πÊï∞Èáè |√æ√æ---√æ√æ### ÊâìÂºÄÊñá‰ª∂√æ getDownloadFileUrlByPath(final int id, final String fullpath, String hid)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ| hid | Âê¶ | string | ÁâàÊú¨ID(ËØ•ÁâàÊú¨Êñá‰ª∂ÊòØÂê¶Â≠òÂú®) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| hash | string | Ë∑ØÂæÑhash |√æ| filehash | string | Êñá‰ª∂hash |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è |√æ| dateline | long | Êó∂Èó¥Êà≥(ÊØ´Áßí)|√æ| lock | int | ÈîÅÂÆöÁä∂ÊÄÅ|√æ| lock_member_id | int | ÈîÅÂÆö‰∫∫ID |√æ| uris | string | Êñá‰ª∂‰∏ãËΩΩÂ§öÂú∞ÂùÄ |√æ√æ---√æ√æ### Êñá‰ª∂ÊòØÂê¶Â≠òÂú®√æ fileExistByHash(final String hash, final int id)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| hash | ÊòØ | string | Ë∑ØÂæÑhash |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| hash | string | Ë∑ØÂæÑhash |√æ| fullpath | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ√æ  fileExistByFullPath(final String fullpath, final int id)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| hash | string | Ë∑ØÂæÑhash |√æ| fullpath | string | Êñá‰ª∂ÁöÑË∑ØÂæÑ |√æ   √æ---√æ√æ### ÂàõÂª∫Êñá‰ª∂Â§π√æ createFolder(int id, String fullpath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|------|------|------|√æ| hash | string | Ë∑ØÂæÑhash |√æ| fullpath | string | Êñá‰ª∂Â§πÁöÑË∑ØÂæÑ |√æ√æ---√æ√æ### Êñ∞Âª∫Êñá‰ª∂„ÄÅÊñá‰ª∂Â§π√æ addFile(int id, String fullpath, String filehash, long filesize)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filehash | ÊòØ | string | Êñá‰ª∂hash |√æ| filesize | ÊòØ | long | Êñá‰ª∂Â§ßÂ∞è |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|------|------|------|√æ| state | int | ÊòØÂê¶ÈúÄË¶Å‰∏ä‰º†(0-ÈúÄË¶ÅÔºå1-‰∏çÈúÄË¶Å) |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dateline | long | ÂêåÊ≠•Êó∂Èó¥Êà≥ |√æ| version | int | ÁâàÊú¨ |√æ| fullpath | string | Êñá‰ª∂Â§πÁöÑË∑ØÂæÑ |√æ| filehash | string|Êñá‰ª∂hash|√æ| filesize | int |Êñá‰ª∂Â§ßÂ∞è|√æ| servers | array | ‰∏ä‰º†ÊúçÂä°Âô®Âú∞ÂùÄ **deprecated** |√æ| cache_servers | array |ÁºìÂ≠ò‰∏ä‰º†ÊúçÂä°Âô®Âú∞ÂùÄ **deprecated** |√æ| uploads | array | ‰∏ä‰º†ÊúçÂä°Âô® [hostname,hostname-in,port,https,path] |√æ| cache_uploads | array | ÁºìÂ≠ò‰∏ä‰º†ÊúçÂä°Âô® [hostname,hostname-in,port,https,path] |√æ√æ---√æ√æ### Á¶ªÁ∫ø‰∏ãËΩΩ√æ createOffline(int id, String path, String fileName, String downloadUrl, √æ                                         String token, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| path | ÊòØ | string | ‰∏äÁ∫ßÊñá‰ª∂Â§πË∑ØÂæÑ |√æ| fileName | ÊòØ | string | Êñá‰ª∂ÂêçÁß∞ |√æ| downloadUrl | ÊòØ | string | Ë¶ÅÁ¶ªÁ∫øÁöÑÊñá‰ª∂url |√æ| token | ÊòØ | string | ÊéàÊùÉÊàêÂäüÂêéËé∑ÂèñÁöÑaccess_token |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÈÄöËøásocketÈÄöÁü•(Â∞èÈ≤∏Âä©Êâã[sys:member_id])√æ√æ {√æ  act:offline,√æ  metadata:{√æ   mount_id,√æ   hash,√æ   fullpath,√æ   filehash,√æ   filesize,√æ   state:1-ÊàêÂäü,0-Â§±Ë¥•,√æ   error:ÈîôËØØÊèèËø∞(Â§±Ë¥•ÊâçÊúâ)√æ  }√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÊñá‰ª∂ÔºàÂ§πÔºâÊìç‰ΩúÂéÜÂè≤√æ getHistory(final int id, final String fullpath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ```√æ    {√æ       count:ÂéÜÂè≤ÊÄªÊï∞√æ       list:[√æ           {√æ             hid://ÂéÜÂè≤ÁâàÊú¨ID√æ                 mount_id: 123,√æ                 fullpath: ""Êñá‰ª∂Ë∑ØÂæÑ"",√æ                 type: 1, // Êñá‰ª∂Êìç‰ΩúÁ±ªÂûãÔºàÊñá‰ª∂‰øÆÊîπ„ÄÅÊñá‰ª∂ËÆ®ËÆ∫Ôºâ√æ                 act: 1, // ÂÖ∑‰ΩìÊñá‰ª∂Êìç‰ΩúÁ±ªÂûã√æ                 filesize:123,√æ                 member_id: 123, // Êìç‰Ωú‰∫∫√æ                 dateline: 123456789 // Êó∂Èó¥Êà≥√æ           }√æ           ...√æ         ]√æ    }√æ```√æ---√æ√æ### ÊÅ¢Â§çÊñá‰ª∂√æ revert(final String fullpath, final int id, final String hid)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | Â∫ìÁ©∫Èó¥id |√æ| hid | ÊòØ | int | Ë¶ÅËøòÂéüÁöÑÁâàÊú¨ID |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ HTTP 200√æ√æ---√æ√æ### Êñá‰ª∂ËΩ¨Â≠ò√æ fileSave(int id, String fullpath, String fileName, String fileHash,√æ long fileSize, int targetMountId, String targetFullPath, String dialogId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | Ë¶ÅËΩ¨Â≠òÁöÑmount_id |√æ| fullpath | Âê¶ | string | Ë¶ÅËΩ¨Â≠òÊñá‰ª∂fullPath(ËΩ¨Â≠òÊñá‰ª∂Â§πÊó∂) |√æ| fileName | ÊòØ | string | Ë¶ÅËΩ¨Â≠òÊñá‰ª∂ÂêçÁß∞ |√æ| fileHash | Âê¶ | string | Ë¶ÅËΩ¨Â≠òÊñá‰ª∂hash(ËΩ¨Â≠òÊñá‰ª∂Êó∂) |√æ| fileSize | Âê¶ | int | Ë¶ÅËΩ¨Â≠òÊñá‰ª∂Â§ßÂ∞è(ËΩ¨Â≠òÊñá‰ª∂Êó∂) |√æ| targetMountId | ÊòØ | string | ËΩ¨Â≠òÂà∞ÁöÑmount_id |√æ| targetFullPath | ÊòØ | string | ËΩ¨Â≠òÂà∞ÁöÑË∑ØÂæÑ |√æ| dialogId | Âê¶ | string | ‰ºöËØùID(ËΩ¨Â≠òÊñá‰ª∂Â§πÊó∂) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  hash:Êñ∞ÁöÑhash√æ }√æ√æ√æ---√æ√æ### ÊêúÁ¥¢Êñá‰ª∂√æ fileSearch(final String keyword, final int id)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| keyword | ÊòØ | string | ÂÖ≥ÈîÆÂ≠ó |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ ÂêåËé∑ÂèñÊñá‰ª∂Â§πÂàóË°®√æ ÂÖ®ÊñáÊêúÁ¥¢Êó∂ÔºåcontentËøîÂõûÂÖ®ÊñáÂåπÈÖçÈ´ò‰∫ÆÂÜÖÂÆπ√æ√æ---√æ√æ### Êñá‰ª∂Ê∑ªÂä†Â§áÊ≥®√æ addFileRemark(final int id, final String fullpath, final String message)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ| message | ÊòØ | string | Â§áÊ≥®ÂÜÖÂÆπ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Êñá‰ª∂Â§áÊ≥®ÂàóË°®√æ getFileRemarkList(final int id, final String fullpath, final int start, final int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ| start | Âê¶ | int | ÂºÄÂßãÊù°Êï∞ |√æ| size | Âê¶ | int | Ëé∑ÂèñÊï∞Èáè(ÈªòËÆ§20) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ```√æ{√æ  count:ÊÄªÊï∞√æ  list:[√æ      {√æ            mount_id: 123,√æ            fullpath: ""Êñá‰ª∂Ë∑ØÂæÑ"",√æ            type: 1, // Êñá‰ª∂Êìç‰ΩúÁ±ªÂûãÔºàÊñá‰ª∂‰øÆÊîπ„ÄÅÊñá‰ª∂ËÆ®ËÆ∫Ôºâ√æ            act: 1, // ÂÖ∑‰ΩìÊñá‰ª∂Êìç‰ΩúÁ±ªÂûã√æ            filesize:123,√æ            member_id: 123, // Êìç‰Ωú‰∫∫√æ            dateline: 123456789 // Êó∂Èó¥Êà≥√æ      }√æ      ...√æ    ]√æ}√æ```√æ√æ---√æ√æ## **Áî®Êà∑API**√æ√æ### Ëé∑ÂèñÁî®Êà∑ÊúÄËøëËÆøÈóÆÊñá‰ª∂√æ getLastVisitFile(final DataListener listener, final int size)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| size | ÊòØ | int | Ëé∑ÂèñÊù°Êï∞ÔºàÈªòËÆ§20Ôºâ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | Array | Ê†ºÂºèËßÅ‰∏ã |√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| mount_id | string | mount_id |√æ| hash | string | Ë∑ØÂæÑhash |√æ| dir | string | ÊòØÂê¶Êñá‰ª∂Â§π |√æ| fullpath | string | Êñá‰ª∂Ë∑ØÂæÑ |√æ| filename | string | Êñá‰ª∂ÂêçÁß∞ |√æ| create_member_name | string | Êñá‰ª∂ÂàõÂª∫‰∫∫ |√æ| last_member_name | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπ‰∫∫ |√æ| last_dateline | string | Êñá‰ª∂ÊúÄÂêé‰øÆÊîπÊó∂Èó¥Êà≥(10‰ΩçÁ≤æÁ°ÆÂà∞Áßí) |√æ| filehash | string | Êñá‰ª∂hash |√æ| filesize | string | Êñá‰ª∂Â§ßÂ∞è |√æ√æ---√æ√æ### Ê∑ªÂä†Âø´Êç∑ÊñπÂºè√æ addShortCuts(final DataListener listener,final int value, final int type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| value | ÊòØ | int | ÂÄº(ÂèØ‰ª•ÊòØfavorite_typeÊàñmount_idÁöÑÂÄº) |√æ| type | ÊòØ | int | Á±ªÂûã(1-Êô∫ËÉΩÊñá‰ª∂Â§π,2-Â∫ì,3-Êñá‰ª∂Â§π) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ    {√æ     type,//Á±ªÂûã(1-Êô∫ËÉΩÊñá‰ª∂Â§π,2-Â∫ì,3-Êñá‰ª∂Â§π)√æ     value,//ÂÄº(ÂèØ‰ª•ÊòØfavorite_typeÊàñmount_idÁöÑÂÄº)√æ     hash,//Êñá‰ª∂Â§πhash√æ     dateline//Âä†ÂÖ•Êó∂Èó¥√æ },√æ√æ---√æ√æ### Ëé∑ÂèñÂø´Êç∑ÊñπÂºèÂàóË°®√æ getShortCuts()√æ √æ#### ÂèÇÊï∞√æ√æÔºàÊó†Ôºâ√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list |array |ÂàóË°® |√æ    √æ  {√æ     'list':√æ         [√æ          {√æ           type,//Á±ªÂûã(1-Êô∫ËÉΩÊñá‰ª∂Â§π,2-Â∫ì,3-Êñá‰ª∂Â§π)√æ           value,//ÂÄº(ÂèØ‰ª•ÊòØfavorite_typeÊàñmount_idÁöÑÂÄº)√æ           hash,//Êñá‰ª∂Â§πhash√æ           dateline//Âä†ÂÖ•Êó∂Èó¥√æ          },√æ          ...√æ         ]√æ    }√æ---√æ√æ### Âà†Èô§Âø´Êç∑ÊñπÂºè√æ delShortCuts(final DataListener listener,final int value, final int type)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ| value | ÊòØ | int | ÂÄº(ÂèØ‰ª•ÊòØfavorite_typeÊàñmount_idÁöÑÂÄº) |√æ| type | ÊòØ | int | Á±ªÂûã(1-Êô∫ËÉΩÊñá‰ª∂Â§π,2-Â∫ì,3-Êñá‰ª∂Â§π) |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ## **ÈÄöËÆØÂΩïAPI**√æ√æ### Ëé∑ÂèñÈÉ®Èó®‰∏≠ÁöÑÈÉ®Èó®√æ getGroupFromGroup(int entId, int groupId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®IDÔºå‰∏∫0ÁöÑÊó∂ÂÄôÔºåÊãøÁ¨¨‰∏ÄÂ±ÇÈÉ®Èó® |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÈÉ®Èó®ÂàóË°® |√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   id:ÈÉ®Èó®ID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   ent_id: ‰ºÅ‰∏öID(int), √æ   name:ÈÉ®Èó®ÂêçÁß∞(string),√æ   parent_id:Áà∂Á∫ßÈÉ®Èó®ID(int),//0‰∏∫Ê†πËäÇÁÇπ√æ   state:ÈÉ®Èó®Áä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏0‰∏∫Á¶ÅÁî®√æ   child:Âê´ÊúâÂ≠êÈÉ®Èó®ÁöÑÊï∞Èáè(int),√æ   code:ÈÉ®Èó®code(string),√æ   count: ÈÉ®Èó®ÊàêÂëò‰ª•ÂèäÂ≠êÈÉ®Èó®ÊàêÂëò‰∏™Êï∞(int),√æ   checked:ÊòØÂê¶ÈÄâ‰∏≠(int)//1‰∏∫ÊòØ,0‰∏∫Âê¶√æ  },√æ  ...√æ ]√æ √æ---√æ√æ### ÊêúÁ¥¢ËÅîÁ≥ª‰∫∫-ÈÉ®Èó®√æ searchContactGroups(int entId, String keyWord)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| keyWord | ÊòØ | string | ÈÉ®Èó®ÂêçÁöÑÂÖ≥ÈîÆÂ≠ó |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÈÉ®Èó®ÂàóË°® |√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   id:ÈÉ®Èó®ID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   ent_id: ‰ºÅ‰∏öID(int), √æ   name:ÈÉ®Èó®ÂêçÁß∞(string),√æ   parent_id:Áà∂Á∫ßÈÉ®Èó®ID(int),//0‰∏∫Ê†πËäÇÁÇπ√æ   state:ÈÉ®Èó®Áä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏0‰∏∫Á¶ÅÁî®√æ   child:Âê´ÊúâÂ≠êÈÉ®Èó®ÁöÑÊï∞Èáè(int),√æ   code:ÈÉ®Èó®code(string),√æ   count: ÈÉ®Èó®ÊàêÂëò‰ª•ÂèäÂ≠êÈÉ®Èó®ÊàêÂëò‰∏™Êï∞(int)√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### Ëé∑ÂèñÈÉ®Èó®ÊàêÂëòÂàóË°®√æ getMemberFromGroup(int entId, int groupId, int start, int order, String key, int showChild)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | Âê¶ | int | ÊâÄÂú®ÈÉ®Èó®ID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| order | Âê¶ | int | ÊéíÂ∫èÔºåÈªòËÆ§ desc |√æ| key | Âê¶ | string | Êü•ËØ¢ÂÖ≥ÈîÆËØçÔºåÈÇÆÁÆ±ÊàñÊàêÂëòÂêç |√æ| showChild | Âê¶ | int | ÊòØÂê¶ÊòæÁ§∫Â≠êÈÉ®Èó®ÊàêÂëò |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÊàêÂëòÂàóË°® |√æ| count | int | ÊàêÂëòÊï∞Èáè |√æ√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   ent_id: ‰ºÅ‰∏öID(int),√æ   member_id: ÊàêÂëòID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   user_id: Â∏êÂè∑ID(string),√æ   member_name:ÊàêÂëòÂêçÁß∞(string),√æ   member_title:ÊàêÂëòËÅå‰Ωç(string),√æ   member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ   member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ   state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### Ëé∑ÂèñÊàêÂëò‰ø°ÊÅØ√æ getMemberInfo(int entId, int memberId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| memberId | ÊòØ | int | ÊàêÂëòID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  is_super_admin: ÊòØÂê¶‰∏∫Ë∂ÖÁÆ°ÊàêÂëò(bool), //1‰∏∫ÊòØ, 0‰∏∫Âê¶√æ  name: ÊàêÂëò‰∏™‰∫∫ÂêçÁß∞(string),√æ  phone: ÊàêÂëò‰∏™‰∫∫ËÅîÁ≥ªÁîµËØù(string),√æ  email: ÊàêÂëò‰∏™‰∫∫ËÅîÁ≥ªÈÇÆÁÆ±(string)Ôºå√æ  member_id:ÊàêÂëòID(int),√æ  out_id: Â§ñÈÉ®ID(string),√æ  user_id: Â∏êÂè∑ID(string),√æ  ent_id: ‰ºÅ‰∏öID(int),√æ  wechat_id: ‰ºÅ‰∏öÂæÆ‰ø°ID(int), //Êú™ÁªëÂÆö‰ºÅ‰∏öÂæÆ‰ø°ÂàôËøîÂõûNULL√æ  member_name:ÊàêÂëòÂêçÁß∞(string),√æ  member_title:ÊàêÂëòËÅå‰Ωç(string),√æ  member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ  member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ  member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ  disable_new_device: ÊòØÂê¶Á¶ÅÁî®Êñ∞ËÆæÂ§á(int), //1‰∏∫ÊòØ, 0‰∏∫Âê¶√æ  state: ÊàêÂëòÁä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏,0‰∏∫Á¶ÅÁî®√æ  addtime: Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ  expire: ‰∏¥Êó∂ÊàêÂëòËøáÊúüÊó∂Èó¥(timestamp), //Èùû‰∏¥Êó∂ÊàêÂëòËøîÂõû‰∏∫''√æ  enable_create_org: ÂàõÂª∫Â∫ìÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ  enable_publish_notice: ÂèëÂ∏ÉÂÖ¨ÂëäÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ  enable_manage_groups: ÂÖÅËÆ∏ÁÆ°ÁêÜÁöÑÈÉ®Èó®(string) #‰ª• ""|"" Á¨¶Âè∑ÂàÜÂâ≤ÔºåÂ¶Ç |0|1|2|√æ  member_groups: ÊàêÂëòÊâÄÂ±ûÊâÄÊúâÈÉ®Èó®(array) //ËøîÂõûÁªìÊûÑÂ¶Ç„ÄêËé∑ÂèñÊàêÂëòÊâÄÂ±ûÈÉ®Èó®„Äë√æ }√æ√æ---√æ√æ### Ëé∑ÂèñÊàêÂëòÊâÄÂ±ûÈÉ®Èó®ÂàóË°®√æ getContactMemberGroups(final int entId, final int memberId, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| memberId | ÊòØ | int | ÊàêÂëòID |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÈÉ®Èó®ÂàóË°® |√æ√ælistÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   id:ÈÉ®Èó®ID(int),√æ   name: ÈÉ®Èó®ÂêçÁß∞(string),√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### Ê∑ªÂä†ÈÄöËÆØÂΩïÈÉ®Èó®√æ addContactGroup(final int entId, final int groupId, final String name, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | string | Áà∂Á∫ßÈÉ®Èó®IDÔºåÊ†πÈÉ®Èó®‰∏∫0 |√æ| name | ÊòØ | string | ÈÉ®Èó®ÂêçÁß∞ |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  id:ÈÉ®Èó®ID(int),√æ  out_id: Â§ñÈÉ®ID(string),√æ  name: ÈÉ®Èó®ÂêçÁß∞(string),√æ  parent_id: Áà∂Á∫ßÈÉ®Èó®ID(int),√æ  code: ÈÉ®Èó®CODE(string),√æ  state: ÈÉ®Èó®Áä∂ÊÄÅ(int)√æ }√æ√æ---√æ√æ### ÊîπÂèòÈÄöËÆØÂΩï‰∏≠ÈÉ®Èó®ÂêçÂ≠ó√æ changeContactGroupName(final int entId, final int groupId,√æ                                             final String name, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | string | ÈÉ®Èó®ID |√æ| name | Âê¶ | string | ÈÉ®Èó®ÂêçÁß∞Ôºå‰∏ç‰º†Âàô‰øùÊåÅ‰∏çÂèò |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  id:ÈÉ®Èó®ID(int),√æ  out_id: Â§ñÈÉ®ID(string),√æ  name: ÈÉ®Èó®ÂêçÁß∞(string),√æ  parent_id: Áà∂Á∫ßÈÉ®Èó®ID(int),√æ  code: ÈÉ®Èó®CODE(string),√æ  state: ÈÉ®Èó®Áä∂ÊÄÅ(int)√æ }√æ√æ---√æ√æ### Âà†Èô§ÈÄöËÆØÂΩïÁöÑÈÉ®Èó®√æ delContactGroup(final int entId, final int groupId, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | string | ÈÉ®Èó®ID |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æÊ≠£Â∏∏ËøîÂõû HTTP 200√æ√æ---√æ√æ### Ê∑ªÂä†ÈÄöËÆØÂΩïÊàêÂëò√æ addContactMember(final int entId, final String name, final String groupId, final String email,√æ                                       final String phone, final String password, final int publishNotice, √æ                                            final int createOrg, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| name | ÊòØ | int | ÊòæÁ§∫Âêç |√æ| groupId | Âê¶ | string | ÈÉ®Èó®ID,‰∏ç‰º†ÈªòËÆ§Ê∑ªÂä†Âà∞Ê†πÈÉ®Èó®,‰∏çÊ∑ªÂä†Âà∞‰ªª‰ΩïÈÉ®Èó®‰º†-1 |√æ| email | Âê¶ | string | ÈÇÆÁÆ±Âú∞ÂùÄ |√æ| phone | Âê¶ | string | ËÅîÁ≥ªÁîµËØù  |√æ| password | Âê¶ | string | Áî®Êà∑ÁôªÂΩïÂØÜÁ†Å,ÂØπ‰∫éÊú™Ê≥®ÂÜåÁöÑÁî®Êà∑ÊúâÁî® |√æ| publishNotice | Âê¶ | int | ÊòØÂê¶ÂÖÅËÆ∏ÂèëÂÖ¨Âëä 1:ÂÖÅËÆ∏; 0:Á¶ÅÊ≠¢ |√æ| createOrg | Âê¶ | int | ÊòØÂê¶ÂÖÅËÆ∏ÂàõÂª∫Â∫ì 1:ÂÖÅËÆ∏; 0:Á¶ÅÊ≠¢ |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ√æ {√æ  member_id:ÊàêÂëòID(int),√æ  out_id: Â§ñÈÉ®ID(string),√æ  user_id: Â∏êÂè∑ID(string),√æ  ent_id: ‰ºÅ‰∏öID(int),√æ  wechat_id: ‰ºÅ‰∏öÂæÆ‰ø°ID(int), //Êú™ÁªëÂÆö‰ºÅ‰∏öÂæÆ‰ø°ÂàôËøîÂõûNULL√æ  member_name:ÊàêÂëòÂêçÁß∞(string),√æ  member_title:ÊàêÂëòËÅå‰Ωç(string),√æ  member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ  member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ  member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ  disable_new_device: ÊòØÂê¶Á¶ÅÁî®Êñ∞ËÆæÂ§á(int), //1‰∏∫ÊòØ, 0‰∏∫Âê¶√æ  state: ÊàêÂëòÁä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏,0‰∏∫Á¶ÅÁî®√æ  addtime: Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ  expire: ‰∏¥Êó∂ÊàêÂëòËøáÊúüÊó∂Èó¥(timestamp), //Èùû‰∏¥Êó∂ÊàêÂëòËøîÂõû‰∏∫''√æ  enable_create_org: ÂàõÂª∫Â∫ìÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ  enable_publish_notice: ÂèëÂ∏ÉÂÖ¨ÂëäÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ  enable_manage_groups:ÂÖÅËÆ∏ÁÆ°ÁêÜÁöÑÈÉ®Èó®(string) #‰ª• ""|"" Á¨¶Âè∑ÂàÜÂâ≤ÔºåÂ¶Ç |0|1|2|√æ }√æ√æ---√æ√æ### Êõ¥Êñ∞ÈÄöËÆØÂΩï‰∏≠ÊàêÂëò‰ø°ÊÅØ√æ updateContactMember(final int entId, final String memberIds,√æ                                          final String groupIds, final int enablePublishNotice,√æ                                          final int enableCreateOrg, final String memberPhone, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| memberIds | ÊòØ | int | ÈúÄË¶Å‰øÆÊîπÁöÑÁî®Êà∑ID,‰ª•ÈÄóÂè∑ÂàÜÈöî;Êúâ‰∫õÈùûÂÖ¨ÂÖ±Â±ûÊÄßÂØπ‰∫é‰øÆÊîπÂ§ö‰∏™Êó†Êïà |√æ| groupIds | Âê¶ | string | ÊâÄÂ±ûÁöÑÊâÄÊúâÈÉ®Èó®IDÔºå‰ª•ÈÄóÂè∑ÂàÜÈöî |√æ| enablePublishNotice | Âê¶ | int | ÊòØÂê¶ÂÖÅËÆ∏ÂèëÂÖ¨Âëä 1:ÂÖÅËÆ∏; 0:Á¶ÅÊ≠¢ |√æ| enableCreateOrg | Âê¶ | int | ÊòØÂê¶ÂÖÅËÆ∏ÂàõÂª∫Â∫ì 1:ÂÖÅËÆ∏; 0:Á¶ÅÊ≠¢ |√æ| memberPhone | Âê¶ | string | ËÅîÁ≥ªÁîµËØù  |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list :{√æ   member_id: {√æ    member_id:ÊàêÂëòID(int),√æ    out_id: Â§ñÈÉ®ID(string),√æ    user_id: Â∏êÂè∑ID(string),√æ    ent_id: ‰ºÅ‰∏öID(int),√æ    wechat_id: ‰ºÅ‰∏öÂæÆ‰ø°ID(int), //Êú™ÁªëÂÆö‰ºÅ‰∏öÂæÆ‰ø°ÂàôËøîÂõûNULL√æ    member_name:ÊàêÂëòÂêçÁß∞(string),√æ    member_title:ÊàêÂëòËÅå‰Ωç(string),√æ    member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ    member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ    member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ    disable_new_device: ÊòØÂê¶Á¶ÅÁî®Êñ∞ËÆæÂ§á(int), //1‰∏∫ÊòØ, 0‰∏∫Âê¶√æ    state: ÊàêÂëòÁä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏,0‰∏∫Á¶ÅÁî®√æ    addtime: Ê∑ªÂä†Êó∂Èó¥(timestamp),√æ    expire: ‰∏¥Êó∂ÊàêÂëòËøáÊúüÊó∂Èó¥(timestamp), //Èùû‰∏¥Êó∂ÊàêÂëòËøîÂõû‰∏∫''√æ    enable_create_org: ÂàõÂª∫Â∫ìÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ    enable_publish_notice: ÂèëÂ∏ÉÂÖ¨ÂëäÊùÉÈôê(int), //1‰∏∫ÂºÄÂêØ,0‰∏∫ÂÖ≥Èó≠√æ    enable_manage_groups:ÂÖÅËÆ∏ÁÆ°ÁêÜÁöÑÈÉ®Èó®(string) #‰ª• ""|"" Á¨¶Âè∑ÂàÜÂâ≤ÔºåÂ¶Ç |0|1|2|√æ   }√æ   ......√æ  }√æ }√æ√æ---√æ√æ### Âà†Èô§ÈÄöËÆØÂΩïÊàêÂëò√æ delContactMember(final int entId, final String removeMemberIds, final int transferMemberId, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| removeMemberIds | ÊòØ | int | ÈúÄË¶ÅÁßªÈô§ÁöÑÁî®Êà∑ID,‰ª•ÈÄóÂè∑ÂàÜÈöî |√æ| transferMemberId | Âê¶ | int | ËΩ¨ÁßªË¢´Âà†Èô§ÊàêÂëòÊã•ÊúâÁöÑ‰ºÅ‰∏öÂ∫ìÂà∞ËØ•ÊàêÂëò  |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ [√æ  Âõ†ÂêåÊ≠•Â∏êÂè∑ËÄåÊó†Ê≥ïÂà†Èô§ÁöÑmember_id(int),√æ  ......√æ ]√æ√æ---√æ√æ### Ëé∑ÂèñÂ∫ìÊàêÂëò√æ getOrgMembersList(int orgId, int entId, int start)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| orgId | ÊòØ | int | Â∫ìID |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    org_id:Â∫ìID(int),√æ        mount_id:Â∫ìMOUNTID(int),√æ         ent_id:‰ºÅ‰∏öID(int),√æ         member_id:ÊàêÂëòID(int),√æ    out_id: Â§ñÈÉ®ID(string),√æ    user_id: Â∏êÂè∑ID(string),√æ    member_name:ÊàêÂëòÂêçÁß∞(string),√æ    member_title:ÊàêÂëòËÅå‰Ωç(string),√æ    member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ    member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ    member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ    state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ   },√æ   ......√æ  ],√æ  count: ÊÄªÊï∞(int)√æ }√æ√æ---√æ√æ### Ëé∑Âèñ‰ºÅ‰∏öÊâÄÊúâÈÉ®Èó®√æ getGroupTable(int entId, int start)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    id:ÈÉ®Èó®ID(int),√æ    out_id: Â§ñÈÉ®ID(string),√æ    ent_id: ‰ºÅ‰∏öID(int), √æ    name:ÈÉ®Èó®ÂêçÁß∞(string),√æ    parent_id:Áà∂Á∫ßÈÉ®Èó®ID(int),//0‰∏∫Ê†πËäÇÁÇπ√æ    state:ÈÉ®Èó®Áä∂ÊÄÅ(int),//1‰∏∫Ê≠£Â∏∏0‰∏∫Á¶ÅÁî®    code:ÈÉ®Èó®code(string),√æ    count: ÈÉ®Èó®ÊàêÂëò‰ª•ÂèäÂ≠êÈÉ®Èó®ÊàêÂëò‰∏™Êï∞(int),√æ    addtime: ÈÉ®Èó®Ê∑ªÂä†Êó∂Èó¥(timestamp)√æ    member_ids: [√æ     ÈÉ®Èó®ÊàêÂëòID(int),√æ     ...√æ    ]√æ   },√æ   ...√æ  ],√æ  count: ÈÉ®Èó®ÊÄªÊï∞√æ }√æ√æ---√æ√æ### Ëé∑Âèñ‰ºÅ‰∏öÊàêÂëò√æ getEntMembers(int entId, int start, String keyWord)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| keyWord | Âê¶ | string | Êü•ËØ¢ÂÖ≥ÈîÆËØçÔºåÈÇÆÁÆ±ÊàñÊòæÁ§∫Âêç |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÊàêÂëòÂàóË°® |√æ| count | int | ÊàêÂëòÊï∞Èáè |√æ√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   ent_id: ‰ºÅ‰∏öID(int),√æ   member_id: ÊàêÂëòID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   user_id: Â∏êÂè∑ID(string),√æ   member_name:ÊàêÂëòÂêçÁß∞(string),√æ   member_title:ÊàêÂëòËÅå‰Ωç(string),√æ   member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ   member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ   state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### Ê†πÊçÆidÊï∞ÊçÆËé∑ÂèñÊàêÂëò√æ getEntMembersByIds(int entId, int start, String memberIdsStr)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| memberIdsStr | Âê¶ | string | Êü•ËØ¢ÁöÑmember_ids,Áî®ÈÄóÂè∑ÂàÜÂâ≤ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÊàêÂëòÂàóË°® |√æ| count | int | ÊàêÂëòÊï∞Èáè |√æ√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   ent_id: ‰ºÅ‰∏öID(int),√æ   member_id: ÊàêÂëòID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   user_id: Â∏êÂè∑ID(string),√æ   member_name:ÊàêÂëòÂêçÁß∞(string),√æ   member_title:ÊàêÂëòËÅå‰Ωç(string),√æ   member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ   member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ   state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### ÊêúÁ¥¢ÈÄöËÆØÂΩïÊàêÂëò√æ searchEntMember(int entId, int start, String keyWord)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| keyWord | Âê¶ | string | Êü•ËØ¢ÂÖ≥ÈîÆËØçÔºåÈÇÆÁÆ±ÊàñÊòæÁ§∫Âêç |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÊàêÂëòÂàóË°® |√æ| count | int | ÊàêÂëòÊï∞Èáè |√æ√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   ent_id: ‰ºÅ‰∏öID(int),√æ   member_id: ÊàêÂëòID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   user_id: Â∏êÂè∑ID(string),√æ   member_name:ÊàêÂëòÂêçÁß∞(string),√æ   member_title:ÊàêÂëòËÅå‰Ωç(string),√æ   member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ   member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ   state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### ÊêúÁ¥¢ÈÄöËÆØÂΩïËÅîÁ≥ª‰∫∫√æ searchContactMembers(final int entId, final int start, final String keyWord,√æ                                           final int size, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| start | Âê¶ | int | ÂºÄÂßã‰ΩçÁΩÆ |√æ| size | Âê¶ | int | Êï∞ÈáèÔºå‰∏ç‰º†ÊãøÂÖ®ÈÉ® |√æ| keyWord | Âê¶ | string | Êü•ËØ¢ÂÖ≥ÈîÆËØçÔºåÈÇÆÁÆ±ÊàñÊòæÁ§∫Âêç |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| ÂêçÁß∞ | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- |√æ| list | array | ÊàêÂëòÂàóË°® |√æ| count | int | ÊàêÂëòÊï∞Èáè |√æ√ælistÁöÑÊï∞ÊçÆÁªìÊûÑ√æ√æ [√æ  {√æ   ent_id: ‰ºÅ‰∏öID(int),√æ   member_id: ÊàêÂëòID(int),√æ   out_id: Â§ñÈÉ®ID(string),√æ   user_id: Â∏êÂè∑ID(string),√æ   member_name:ÊàêÂëòÂêçÁß∞(string),√æ   member_title:ÊàêÂëòËÅå‰Ωç(string),√æ   member_letter:ÊàêÂëòÈ¶ñÂ≠óÊØçÊãºÈü≥(string),√æ   member_email:ÊàêÂëòÈÇÆÁÆ±Âú∞ÂùÄ(string),√æ   member_phone:ÊàêÂëòËÅîÁ≥ªÁîµËØù(string),√æ   state: ÊàêÂëòÁä∂ÊÄÅ(bool)//1:Ê≠£Â∏∏;0:Á¶ÅÁî®√æ  },√æ  ...√æ ]√æ√æ---√æ√æ### memberId ËΩ¨ outId ÂêåÊ≠•ÊñπÊ≥ï√æ getOutIdFromMemberIdSync(int[] memberIds, int entId)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| memberIds | ÊòØ | int[] | ÈúÄË¶ÅËΩ¨Êç¢ÁöÑÊàêÂëòIDÔºå‰ª•ÈÄóÂè∑ÈöîÂºÄ |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    ent_id: ‰ºÅ‰∏öID(int),√æ    member_id: ÊàêÂëòID(int),√æ    member_name: ÊàêÂëòÂêçÁß∞(string),√æ    out_id: Â§ñÈÉ®ID(string),√æ    user_id: Â∏êÂè∑ID(string)√æ   },√æ   ...√æ  ]√æ }√æ√æ---√æ√æ### outId ËΩ¨ memberId √æ getMemberIdFromOutId(final int[] outIds, final int entId, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| outIds | ÊòØ | int[] | ÈúÄË¶ÅËΩ¨Êç¢ÁöÑÊàêÂëòOUTIDÔºå‰ª•ÈÄóÂè∑ÈöîÂºÄ |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ {√æ  list: [√æ   {√æ    ent_id: ‰ºÅ‰∏öID(int),√æ    member_id: ÊàêÂëòID(int),√æ    member_name: ÊàêÂëòÂêçÁß∞(string),√æ    out_id: Â§ñÈÉ®ID(string)√æ   },√æ   ...√æ  ],√æ  error_list: [√æ   {√æ    out_id: Â§ñÈÉ®ID(string)√æ   },√æ   ...√æ  ]√æ }√æ√æ---√æ√æ### Ê£ÄÊµãÊàêÂëòÊòØÂê¶Â∑≤Â≠òÂú®√æ checkExistMember(final int entId, final String memberEmail, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| memberEmail | ÊòØ | string | ÈÇÆÁÆ±Âú∞ÂùÄ |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ√æ {√æ  is_member: ÊòØÂê¶Â∑≤ÁªèÊòØÊàêÂëò(bool),√æ  is_exist: ÊòØÂê¶Â∑≤Ê≥®ÂÜåÂ§üÂø´(bool)√æ }√æ√æ---√æ√æ### Ê∑ªÂä†ÈÉ®Èó®ÊàêÂëò√æ addGroupMember(final int entId, final int groupId, final String memberIds, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®ID |√æ| memberIds | ÊòØ | string | Ë¢´ÁßªÈô§ÁöÑÊàêÂëòIDÔºåÁî®ÈÄóÂè∑ÂàÜÂâ≤ |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ [√æ  Ê∑ªÂä†ÊàêÂäüÁöÑÊàêÂëòID(int)√æ ]√æ√æ---√æ√æ### ÁßªÈô§ÈÉ®Èó®ÊàêÂëò√æ removeGroupMember(final int entId, final int groupId, final String memberIds, final DataListener listener)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| entId | ÊòØ | int | ‰ºÅ‰∏öID |√æ| groupId | ÊòØ | int | ÈÉ®Èó®ID |√æ| memberIds | ÊòØ | string | Ë¢´ÁßªÈô§ÁöÑÊàêÂëòIDÔºåÁî®ÈÄóÂè∑ÂàÜÂâ≤ |√æ| listener | ÊòØ | DataListener | ‰ªéÊúçÂä°Âô®Ëé∑ÂæóÊï∞ÊçÆÂêéÁöÑÂõûË∞É |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ [√æ  ÁßªÈô§ÊàêÂäüÁöÑÊàêÂëòID(int)√æ ]√æ√æ---√æ√æ### ÂàõÂª∫Êñá‰ª∂Â§π√æ createFolder(int id, String fullpath)√æ √æ#### ÂèÇÊï∞√æ√æ| ÂèÇÊï∞ | ÂøÖÈ°ª | Á±ªÂûã | ËØ¥Êòé |√æ| --- | --- | --- | --- |√æ| id | ÊòØ | int | mount_id |√æ| fullpath | ÊòØ | string | Êñá‰ª∂Â§πË∑ØÂæÑ |√æ√æ#### ËøîÂõûÁªìÊûú√æ√æ| Â≠óÊÆµ | Á±ªÂûã | ËØ¥Êòé |√æ|------|------|------|√æ| hash | string | Ë∑ØÂæÑhash |√æ| fullpath | string | Êñá‰ª∂Â§πÁöÑË∑ØÂæÑ |√æ√æ---√æ√æ## Â∏∏ËßÅÈóÆÈ¢ò√æ### ÁºñÁ†ÅÈóÆÈ¢ò√æ#### Áé∞Ë±°√æ* Windows ËøêË°åÁéØÂ¢ÉÔºå‰∏≠ÊñáÊñá‰ª∂ÂêçÂèÇÊï∞ÂèØËÉΩ‰ºöÂØºËá¥ÔºåËøîÂõûÁ≠æÂêçÁöÑÊä•Èîô‰ø°ÊÅØ„ÄÇ√æ√æ#### Ëß£ÂÜ≥ÊñπÊ≥ï√æ**ÊñπÊ°à1:** Êõ¥Êç¢ËøêË°åÁéØÂ¢ÉÔºå‰ΩøÁî® Linux ÊúçÂä°Âô®  √æ**ÊñπÊ°à2:** Â¶ÇÊûúÊòØÂëΩ‰ª§Ë°åÊâßË°å jar Êñá‰ª∂ÔºåÁªàÁ´Ø‰∏äÊâßË°å‰ª•‰∏ãÂëΩ‰ª§Âç≥ÂèØ √æ √æ java -Dfile.encoding=utf-8 XX.jar  √æ**ÊñπÊ°à3:** Â¶ÇÊûú‰ΩøÁî®ÁöÑÊòØ Apache TomatcatÔºåÂú® Java Options ‰∏äÔºåÊ∑ªÂä† -Dfile.encoding=utf-8 Âç≥ÂèØ„ÄÇ√æ√æ<img src=https://repo.gokuai.cn/app/ImageResourceForMD/raw/master/YunkuJavaSDK/encoding.png alt=""Apache Tomatcat"" title=""Apache Tomatcat"" width=""50%"" height=""50%"" />  √æ√æ### ËØ≠Ë®ÄÈóÆÈ¢ò√æ#### Áé∞Ë±°√æ* ‰º†ÂÖ•‰∏≠ÊñáÂ≠óÊÆµËøîÂõûËã±ÊñáÂ≠óÊÆµ√æ√æ#### Ëß£ÂÜ≥ÂäûÊ≥ï√æ* Êõ¥ÊîπÊé•Âè£ÁöÑËØ≠Ë®ÄÁéØÂ¢ÉÔºå‰ª£Á†ÅÂ¶Ç‰∏ã√æ```√æ Locale locale = new Locale(""zh-CN"");√æ Locale.setDefault(locale);√æ```"
mesosphere/marathon-client,213,15,104,10,Organization,False,Java Integration Library for Mesosphere Marathon,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",8,Java,"{'': 4, 'yml': 1, 'md': 1, 'xml': 1}",227,11,11,20,0,2316,True,10,4,1,0,1,8,0,2,9,0,1,2,7,10,19,0,311,31,,,"# marathon-client√æ√æThis project is a Java library for communicating with Marathon API. At this point this library supports version v2 of Marathon API, please refer to the [docs](https://mesosphere.github.io/marathon/docs/rest-api.html) for more details.√æ√æ## Using marathon-client in your maven project√æ√æAdd marathon-client as a dependency:√æ√æFor Marathon v1.x:√æ√æ```√æ<dependency>√æ  <groupId>com.mesosphere</groupId>√æ  <artifactId>marathon-client</artifactId>√æ  <version>0.6.0</version>√æ</dependency>√æ```√æ√æFor Marathon v0.x:√æ√æ```√æ<dependency>√æ  <groupId>com.mesosphere</groupId>√æ  <artifactId>marathon-client</artifactId>√æ  <version>0.2.1</version>√æ</dependency>√æ```√æ√æ## Usage√æ√æ### Initialization√æ√æThe following piece of code initializes the client. ```MarathonClient.getInstance()``` method expects the endpoint for marathon:√æ√æ```√æString endpoint = ""<Marathon's endpoint>"";√æMarathon marathon = MarathonClient.getInstance(endpoint);√æ```√æ√æ### Getting all applications√æ√æThe following will return all the applications that have been created:√æ√æ```√æGetAppsResponse appsResponse = marathon.getApps();√æ```√æ√æ### Create a new application√æ√æThe following example demonstrates how a new application can be created:√æ```√æApp app = new App();√æapp.setId(""echohisleepbye-app"");√æapp.setCmd(""echo hi; sleep 10; echo bye;"");√æapp.setCpus(1.0);√æapp.setMem(16.0);√æapp.setInstances(1);√æmarathon.createApp(app);√æ```√æ√æ### Get details about an existing application√æ√æThe following example, demostrates how to get details about an already created application:√æ√æ```√æGetAppResponse appGet = marathon.getApp(""echohisleepbye-app"");√æ```√æ√æ### Delete an application√æ√æThe following example demostrate, how one can delete an existing application:√æ```√æmarathon.deleteApp(""echohisleepbye-app"");√æ```√æ√æ## Building√æ√æThis project is built using [Apache Maven](http://maven.apache.org/).√æ√æRun the following command from the root of repository, to build the client JAR:√æ√æ```√æ$ mvn clean install√æ```√æ√æ## Debugging / Logging√æ√æFeign is used as the underlying REST library.  Sometimes it is useful to see the low level JSON and responses.   It is possible to setup debug without directed to stdout or to a log file.√æThis is simplified by set the environment variable `DEBUG_JSON_OUTPUT` to either a file name `debug.log` or to `System.out`.√æ√æ√æ## Bugs√æ√æBugs can be reported using Github issues."
di-unipi-socc/FogTorchPI,5008,15,9,10,Organization,False,A probabilistic prototype for deployment of Fog applications.,http://pages.di.unipi.it/throughthefog/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",8,Java,"{'': 1, 'txt': 1, 'md': 1, 'xml': 1}",81,4,0,1,13,1277,True,0,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,42,4,,,"<img src=""https://github.com/di-unipi-socc/FogTorchPI/blob/master/img/logoftpi.PNG"" width=""300"">√æ√æ_A tool for probabilistic QoS-assurance and resource consumption estimation of eligible deployments of Fog applications._√æ√æ**Note**: the newest and extended version of FogTorchŒ† which estimates monthly deployment cost and runs multiple threads to perform the MonteCarlo simulation is available [here](https://github.com/di-unipi-socc/FogTorchPI/tree/multithreaded).√æ√æA complete overview of FogTorchŒ† and of the usefulness of predictive analysis to perform Fog application deployment can be found here:√æ√æ> [Antonio Brogi](http://pages.di.unipi.it/brogi), [Stefano Forti](http://pages.di.unipi.it/forti), [Ahmad Ibrahim](http://pages.di.unipi.it/ibrahim) <br>√æ> **[Predictive Analysis to Support Fog Application Deployment](http://pages.di.unipi.it/forti/pdf/chapters/2018/C09_Predictive%20Analysis%20to%20Support%20Fog%20Application%20Deployment_PP.pdf)** <br>√æ> in [Fog and Edge Computing: Principles and Paradigms](https://www.wiley.com/en-it/Fog+and+Edge+Computing:+Principles+and+Paradigms-p-9781119524984), Rajkumar Buyya and Satish N. Srirama (eds.), <br>√æ> Wiley, 2019.√æ√æFogTorchŒ† is based upon the work described in:√æ√æ> [Antonio Brogi](http://pages.di.unipi.it/brogi), [Stefano Forti](http://pages.di.unipi.it/forti), [Ahmad Ibrahim](http://pages.di.unipi.it/ibrahim) <br>√æ> **[How to best deploy your Fog applications, probably.](http://pages.di.unipi.it/forti/pdf/conferences/2017/icfec17.pdf)** <br>√æ> in Proceedings of the [1st IEEE International Conference on Fog and Edge Computing (ICFEC‚Äô2017)](http://fec-conf.gforge.inria.fr/index.html), <br>√æ> O. Rana, R. Buyya, and A. Anjum, Eds., 2017, May 2017, Madrid, Spain.√æ√æThe cost model exploited by the tool is described in√æ√æ> [Antonio Brogi](http://pages.di.unipi.it/brogi), [Stefano Forti](http://pages.di.unipi.it/forti), [Ahmad Ibrahim](http://pages.di.unipi.it/ibrahim) <br>√æ> **[Deploying Fog applications: How much does it cost, by the way?](http://pages.di.unipi.it/forti/pdf/conferences/2018/closer18.pdf)** <br>√æ> in Proceedings of the [8th International Conference on Cloud Computing and Services Science (CLOSER‚Äô18)](http://closer.scitevents.org/), <br>√æ> March 2018, Funchal, Madeira, Portugal.√æ√æIf you wish to reuse source code in this repo, please consider citing the above mentioned articles.√æ√æMore details about the theoretical model used by FogTorchŒ† can be found in:√æ√æ> Antonio Brogi and Stefano Forti <br>√æ> [**QoS-aware Deployment of IoT Applications Through the Fog.**](http://ieeexplore.ieee.org/document/7919155/) <br>√æ>  in _IEEE Internet of Things Journal_ , vol. 4, no. 5, pp. 1185-1192, Oct. 2017.√æ√æ### Other FogTorchŒ† Projects√æ√æFogTorchŒ† has been also extended and used to simulate mobile task offloading in the context of Edge, as described in√æ√æ- Vincenzo De Maio and Ivona Brandic. _""First Hop Mobile Offloading of DAG Computations.""_, to appear in CCGRID'18. [Code](https://bitbucket.org/vindem/fogtorchpi-extended).√æ√æ## Intro√æ√æ**FogTorchŒ†** is an open source prototype, developed in Java, based on a model for Fog computing infrastructures and applications.√æ√æIt takes into account non-functional parameters within the model (i.e., hardware, software, latency and bandwidth) to determine, compare and contrast different eligible deployments of a given application over a Fog infrastructure.√æ√æIn the case of hardware capabilities, it considers CPU cores, RAM and storage available at a given node or required by a given software component. √æ√æSoftware capabilities are represented by a list of software names (operating system, programming languages, frameworks etc).√æ√æIt considers latency, and both download and upload bandwidths as QoS attributes. Latency is measured in milliseconds (ms), while bandwidth is given in Megabits per second (Mbps). √æ√æ## Quick User Guide√æFogTorchŒ† can be run by importing the project in any IDE (e.g., NetBeans or Eclipse).√æ√æTo start with FogTorchŒ†, simply create a main file and declare a new Fog infrastructure and application:√æ√æ``` java√æInfrastructure I = new Infrastructure();√æApplication A = new Application();√æ```√æ√æStarting by the infrastructure, one can add Fog and Cloud nodes (which are assumed to have unbounded hardware capabilities) as shown below:√æ√æ``` java√æ// parameters: node_id, software capabilities, latitude, longitude√æI.addCloudDatacentre(""cloud1"", asList(""linux"", ""php"", ""mySQL"", ""python""), 52.195097, 3.0364791);√æI.addCloudDatacentre(""cloud2"", asList(""linux"", ""php"", ""mySQL"", ""java""), 44.123896, -122.781555);√æ// parameters: node_id, software capabilities, hardware capabilities latitude, longitude√æI.addFogNode(""fog1"", asList(""linux"", ""php"", ""mySQL""), new Hardware(2, 2, 32), 43.740186, 10.364619);√æI.addFogNode(""fog2"", asList(""linux"", ""php""), new Hardware(2, 2, 32), 43.7464449, 10.4615923);√æI.addFogNode(""fog3"", asList(""linux"", ""mySQL""), new Hardware(4,2,64), 43.7381285, 10.4552213);√æ```√æ√æCommunication links in the infrastructure are instantiated by specifying (or by sampling) their QoS profile in terms of latency and bandwidth. In the main file, one can specify a sampling function, for instance:√æ√æ``` java√æ//Bernoulli sampling function.√æpublic static Random rnd = new Random();√æpublic static QoSProfile samplingFunction(double probability, QoSProfile q1, QoSProfile q2) {√æ    double rand = rnd.nextDouble();√æ    if (probability == 1) {√æ        return q1;√æ    }√æ    if (rand < probability) {√æ        return q1;√æ    } else {√æ        return q2;√æ    }√æ}√æ```√æ√æThen, links are added to the infrastructure as shown in the (partial) example below.√æ√æ``` java√æ// QoSprofile(int latency, double bandwidth)√æQoSProfile fogtoCloudDownload = samplingFunction(0.98, new QoSProfile(40, 10.5), new QoSProfile(Integer.MAX_VALUE, 0.0));√æQoSProfile fogtoCloudUpload = samplingFunction(0.98, new QoSProfile(40, 4.5), new QoSProfile(Integer.MAX_VALUE, 0.0));√æ// parameters: endpoint1, endpoint2, bandwidth2->1, bandwidth1->2√æI.addLink(""fog1"", ""cloud1"", fogtoCloudDownload, fogtoCloudUpload);√æI.addLink(""fog1"", ""cloud2"", fogtoCloudDownload, fogtoCloudUpload);√æ``` √æ√æThings to the infrastructure are added as follows:√æ√æ``` java√æ//parameters: thing_id, type, latitude, longitude, directly connected Fog node√æI.addThing(""water0"", ""water"", 43.7464449, 10.4615923, ""fog1"");√æ            I.addThing(""video0"", ""video"", 43.7464449, 10.4615923, ""fog1"");√æ            I.addThing(""moisture0"", ""moisture"", 43.7464449, 10.4615923, ""fog1"");√æ            I.addThing(""temperature0"", ""temperature"", 43.7464449, 10.4615923, ""fog3"");√æ``` √æ√æNow let's go back to the application. Suppose component A requires to exploit some Things in the infrastructure. We specify them as:√æ√æ``` java√æ//parameters: identifier, type, latitude, longitude, directly connected Fog node√æArrayList<ThingRequirement> neededThings = new ArrayList<>();√æ//parameters: thing_id, needed fog-to-thing QoS, needed thing-to-Fog QoS√æneededThings.add(new ExactThing(""moisture0"", new QoSProfile(500,0.1), new QoSProfile(500, 0.1))); // 0.5 s and 1 Mbps√æneededThings.add(new ExactThing(""temperature0"", new QoSProfile(65,0.1), new QoSProfile(65, 0.1))); // 110 ms and 1 Mbps√æ``` √æAnd then component A is specified as follows (with other components).√æ√æ``` java√æ//parameters: id, software requirements, hardware requirements, (neededThingsList)*√æA.addComponent(""A"", asList(""linux""), new Hardware(1, 1.2, 8), neededThings);√æA.addComponent(""B"", asList(""linux"", ""mySQL""), new Hardware(1, Bram, Bstorage)); //cores ram storage√æA.addComponent(""C"", asList(""linux"", ""php""), new Hardware(2, 0.7, 4));√æ```√æ√æLinks in between components are specified as:√æ√æ``` java√æ//parameters: endpoint1, endpoint2, latency, bandwidth2->1, bandwidth1->2√æA.addLink(""A"", ""B"", 160, 0.5, 3.5);√æA.addLink(""A"", ""C"", 140, 0.4, 1.1);√æA.addLink(""B"", ""C"", 100, 0.8, 1);√æ```√æTo look for eligible deployments of A over I, the class ``` java Search``` is instantiated, adding (if needed) the list of nodes upon which a component can be deployed (i.e., business policies).√æ√æ``` java√æ//parameters: id, software requirements, hardware requirements, (neededThingsList)*√æSearch s = new Search(A, I);√æs.addBusinessPolicies(""C"", asList(""cloud2"", ""cloud1""));√æ```√æ√æFinally, to start the search:√æ√æ``` java√æs.findDeployments(true); // true is to perform exhaustive search instead of heuristics√æ``` √æ√æTo repeat FogTorchŒ† execution and perform Monte Carlo simulations, one may simply insert the previous code in the for-loop of our class ``` Main.java```. The output is a CSV file where each line represents an eligible deployment along with its QoS-assurance, average position in the list of returned deployment (√æ``` heuristic rank``` ), consumed RAM and storage in the Fog layer, sum of the last two.√æ√æ``` √æDeployment, QoS-assurance, Heuristic Rank, Consumed RAM, Consumed HDD, Sum Hardware√æ[A->fog2][B->cloud2][C->cloud1];99.122;54.75732778;0.2;0.0625;0.13125√æ[A->fog2][B->cloud2][C->cloud2];99.122;59.73526667;0.2;0.0625;0.13125√æ[A->fog2][B->cloud1][C->cloud2];99.122;44.80145;0.2;0.0625;0.13125√æ[A->fog2][B->cloud1][C->cloud1];99.122;39.82351111;0.2;0.0625;0.13125√æ[A->fog3][B->cloud1][C->fog2];99.122;94.14406111;0.316666667;0.09375;0.205208333√æ[A->fog2][B->cloud2][C->fog2];99.122;49.77938889;0.316666667;0.09375;0.205208333√æ[A->fog3][B->cloud2][C->fog2];99.122;99.122;0.316666667;0.09375;0.205208333√æ[A->fog2][B->cloud1][C->fog2];99.122;34.84557222;0.316666667;0.09375;0.205208333√æ[A->fog1][B->cloud2][C->fog2];95.191;76.1528;0.316666667;0.09375;0.205208333√æ[A->fog1][B->cloud1][C->fog2];95.191;71.39325;0.316666667;0.09375;0.205208333√æ[A->fog2][B->fog3][C->cloud2];99.122;29.86763333;0.366666667;0.125;0.245833333√æ[A->fog2][B->fog3][C->cloud1];99.122;24.88969444;0.366666667;0.125;0.245833333√æ[A->fog2][B->fog3][C->fog1];100;20.35075556;0.483333333;0.15625;0.319791667√æ[A->fog1][B->fog3][C->fog2];100;70.34964444;0.483333333;0.15625;0.319791667√æ[A->fog1][B->fog3][C->fog1];100;65.26195556;0.483333333;0.15625;0.319791667√æ[A->fog2][B->fog3][C->fog2];100;15.26306667;0.483333333;0.15625;0.319791667√æ[A->fog2][B->fog1][C->fog1];100;10.17537778;0.483333333;0.15625;0.319791667√æ[A->fog2][B->fog1][C->fog2];100;5.087688889;0.483333333;0.15625;0.319791667√æ[A->fog3][B->fog1][C->fog2];100;90.04412222;0.483333333;0.15625;0.319791667√æ[A->fog3][B->fog1][C->fog1];100;84.95643333;0.483333333;0.15625;0.319791667√æ√æ``` √æ√æTo specify upon which Fog nodes QoS-assurance and resources consumption are evaluated, it is sufficient to add the line:√æ√æ``` java√æs.addKeepLightNodes(asList(""fog1"", ""fog2""));√æ``` √æ# Example√æA full example is in file [Main.java](https://github.com/di-unipi-socc/FogTorchPI/blob/master/src/main/Main.java) and related results can be found in [resultsplotwithHD.xlsx](https://github.com/di-unipi-socc/FogTorchPI/tree/master/results)."
opendaylight/packetcable,7876,4,5,1,Organization,False,Mirror of the OpenDaylight packetcable gerrit project,,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",12,Java,"{'': 3, 'xml': 1}",242,10,35,19,0,2268,False,,,,,0,0,0,0,7,0,0,0,0,0,0,0,100,5,,,
comtel2000/mokka7,356,21,4,12,User,False,Mokka7 is native port of Snap7 core in pure Java (fork of moka7 http://snap7.sourceforge.net) and parts of Sharp7.,,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",11,Java,"{'': 2, 'yml': 1, 'md': 1, 'html': 1, 'xml': 1}",22,2,2,1,8,1210,True,0,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,22,,23,,"# Mokka7√æ[![Build status](https://travis-ci.org/comtel2000/mokka7.svg?branch=master)](https://travis-ci.org/comtel2000/mokka7)√æ[![Codacy Badge](https://api.codacy.com/project/badge/grade/6f9977dc35fc4eb1b51328539c7515ea)](https://www.codacy.com/app/comtel2000/mokka7)√æ√æ## About√æMokka7/Snap7 is an open source, 32/64 bit, multi-platform Ethernet communication suite for interfacing natively with Siemens S7 PLCs. The new CPUs 1200/1500, the old S7200, the small LOGO 0BA7/0BA8 and SINAMICS Drives are also partially supported.√æMokka7 is native port of Snap7 core written in pure Java (fork of moka7 http://snap7.sourceforge.net/) and parts of Sharp7.√æ√æMoka7 features:√æ* Native port of Snap7 core in pure Java, no DLL√æ* No dependencies with external libraries√æ* Packed protocol headers to improve performances√æ√æadditional Mokka7 (fork) features (alpha state):√æ* DataTypes support (Bit)√æ* MultiVars Read/Write√æ* Enhanced API (Java8 required)√æ√æ## UI Client√æ√æ![si](https://github.com/comtel2000/mokka7/blob/master/doc/sys_info.png ""System Info"")√æ√æ![rw](https://github.com/comtel2000/mokka7/blob/master/doc/read_write.png ""Read and Write"")√æ√æ![chart](https://github.com/comtel2000/mokka7/blob/master/doc/chart.png ""Chart View"")√æ√æ√æ## Roadmap√æ* Async non blocking read/write√æ* MultiVars as collections (automatic slit size)√æ√æ## Maven Modules√æ√æ### Mokka7 core (core lib)√æ```xml√æ<dependency>√æ    <groupId>org.comtel2000</groupId>√æ    <artifactId>mokka7-core</artifactId>√æ    <version>[LATEST]</version>√æ</dependency>√æ```√æ√æ### Mokka7 metrics (metrics support)√æ```xml√æ<dependency>√æ    <groupId>org.comtel2000</groupId>√æ    <artifactId>mokka7-metrics</artifactId>√æ    <version>[LATEST]</version>√æ</dependency>√æ```√æ√æ### Mokka7 client (UI client interface)√æ```xml√æ<dependency>√æ    <groupId>org.comtel2000</groupId>√æ    <artifactId>mokka7-client</artifactId>√æ    <version>[LATEST]</version>√æ</dependency>√æ```√æ√æ### Mokka7 samples (sample read/writes)√æ```xml√æ<dependency>√æ    <groupId>org.comtel2000</groupId>√æ    <artifactId>mokka7-sample</artifactId>√æ    <version>[LATEST]</version>√æ</dependency>√æ```√æ√æ# License√æEclipse Public License - v 1.0√æ√æTrademarks:√æ√æStep7, TIA Portal, S7300, S7400, WinAC, S71200/1500, Sinamics are trademarks of Siemens AG. Other trademarks and logos are the property of their respective owners.√æ√æThis project is an unofficial pice of software and has nothing in common with the companies above.√æ√æTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.√æ√æ# Special thanks to√æ* Dave Nardella for initial API and implementation [Snap7, Moka7, Sharp7](http://snap7.sourceforge.net)"
tmyroadctfig/com.realityinteractive.imageio.tga,4253,6,1,3,User,False,A copy of com.realityinteractive.imageio.tga's ImageIO TGA code.,,"{'key': 'lgpl-2.1', 'name': 'GNU Lesser General Public License v2.1', 'spdx_id': 'LGPL-2.1', 'url': 'https://api.github.com/licenses/lgpl-2.1', 'node_id': 'MDc6TGljZW5zZTEx'}",12,Java,"{'': 2, 'md': 1, 'gradle': 2, 'xml': 1, 'iml': 1, 'bat': 1, 'txt': 1}",26,1,0,4,0,2947,True,2,0,0,0,0,5,0,0,6,0,0,0,0,0,0,0,42,,37,,"## Copy of Reality Interactive's ImageIO TGA library√æ√æ### Building√æ√æ`ant build`√æ√æ### Usage√æSimply register the plugin with ImageIO:√æ√æ``` java√æIIORegistry registry = IIORegistry.getDefaultInstance();√æregistry.registerServiceProvider(new com.realityinteractive.imageio.tga.TGAImageReaderSpi());√æ```√æ√æFor performance reasons, when using this spi use ImageIO methods that use File as argument not Streams√æ√æ``` java√æ// do not use√æImageIO.read(new BufferedInputStream(new FileInputStream(path.toFile())));√æ// use√æImageIO.read(path.toFile());√æ```"
nuxeo/nuxeo-shibboleth-invitation,192,0,46,4,Organization,False,Nuxeo Shibboleth Invitation Addon,,,1,,{'md': 1},74,24,143,13,0,1784,False,,,,,1,26,0,0,7,0,0,0,0,0,0,0,109,1,,nuxeo-archives/nuxeo-shibboleth-invitation,This repository has been merged into https://github.com/nuxeo/nuxeo
ContaAzul/api-examples,76,21,24,13,Organization,False,Exemplos de c√≥digo para consumo das APIs do ContaAzul. Para mais detalhes sobre as APIs consulte https://developers.contaazul.com,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 2, 'md': 2}",66,1,0,5,2,955,True,2,0,1,0,0,14,0,0,8,0,0,0,0,0,0,0,32,5,,,# ContaAzul API Examples√æSimple examples that demonstrate:√æ1) how to use OAuth 2.0 to authorize an application to access user's resources;√æ2) how to execute CRUD operations on some of the resources exposed by the ContaAzul API.√æ√æEach language-specific directory contains the samples along with instructions to run them.√æ√æFurther documentation of the API can be found at https://developers.contaazul.com.
pantojacamilla/GestaoHoteleira,731,2,0,3,User,False,Trabalho da disciplina de POO I,,,4,Java,"{'': 1, 'md': 1}",96,1,0,3,1,608,True,0,0,0,0,0,15,0,0,8,0,0,0,0,0,0,0,11,,10,,# GestaoHoteleira√æTrabalho oficial da disciplina de POO I.√æ√æ√æParticipantes:√æ√æ-Camilla√æ√æ-Davi√æ√æ-Milena
xujiaji/HappyBubble,3964,357,11,64,User,False,":thought_balloon:BubbleLayoutÈöèÊÑèÂèòÂåñÁöÑÊ∞îÊ≥°Â∏ÉÂ±ÄÔºåBubbleDialogÊ†πÊçÆÁÇπÂáªViewÁöÑ‰ΩçÁΩÆÂÆö‰ΩçÂÆÉÁöÑ‰ΩçÁΩÆÔºåBubbleDialogÂèØÂÆöÂà∂ÊñπÂêëÁ≠âÔºÅ(BubbleLayout changes freely,BubbleDialog click on the location of View positioning its location,BubbleDialog can be customized directions.)",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",79,1,11,1,7,933,True,5,17,1,3,0,1,0,0,8,0,1,5,78,46,0,0,37,,75,,"# HappyBubble√æ[![GitHub release](https://img.shields.io/badge/Download-demo--apk-brightgreen.svg)](https://github.com/xujiaji/HappyBubble/releases/tag/demoApk) [![maven](https://img.shields.io/badge/bintray-1.1.9-brightgreen.svg)](https://bintray.com/xujiaji/maven/happy-bubble/1.1.9)√æ√æ![bubble](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/img5.png)√æ√æBubble layout change at will;√æ√æDialog according to click View position display;√æ√æ[‰∏≠ÊñáÊñáÊ°£](https://blog.xujiaji.com/post/happy-bubble)√æ√æ [Old READMEÔºàÊóßÊñáÊ°£Ôºâ](README-old.md)√æ## update√æ- 1.1.9: fix init position offset; feat: show dialog by clicked position√æ- 1.1.8: fix status light mode when call 'setTransParentBackground'√æ- 1.1.7: fix position error, fix `autoPosition` invalid ... [#13](https://github.com/xujiaji/HappyBubble/issues/13) [#11](https://github.com/xujiaji/HappyBubble/issues/11) [#10](https://github.com/xujiaji/HappyBubble/issues/10)√æ- 1.1.6:√æ<br>[feat position priority: #9](https://github.com/xujiaji/HappyBubble/issues/9)√æ- 1.1.5: √æ<br>[fix: #8](https://github.com/xujiaji/HappyBubble/issues/8)√æ- 1.1.4:√æ<br>‚ë†New method `setLayout(int width, int height, int margin)`ÔºåwidthÔºàset the width of the bubbleÔºâ„ÄÅheightÔºàset the height of the bubbleÔºâ„ÄÅmarginÔºàset the distance from the screen edge, only valid if you set width or height to MATCH_PARENTÔºâ.√æ<br>‚ë°`autoPosition(true)`method is ready to be deprecated Ôºàand can be used nowÔºâÔºå using the new method `autoPosition(Auto)`.If both are used, `autoPosition(Auto)` is used directly. Please refer to the ""Method Reference Table"" below.√æ√æ- 1.1.3:<br>‚ë†By calling setClickedView can be directly updated the current location of the dialog.<br>‚ë°Add a new setRelativeOffset (int) method that sets the offset of the dialog relative to the view being clicked (Negative value: Offset to the center of the view being clicked; Positive value: Offset to the outside of the view being clicked).√æ<br>‚ë¢[Test page:SetClickedViewTestActivity.java](app/src/main/java/com/xujiaji/happybubbletest/SetClickedViewTestActivity.java)√æ√æ![1.1.3.gif](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/1.1.3.gif)√æ√æ- 1.1.2: Fix default values does not adaptation screen.√æ√æ- 1.1.1:Repair the size of the change, there is no response to change the location; repair contact offset the top of the problem;√æ√æ- 1.1.0:<br>‚ë† Dialog interactive events passed to the Activity to achieve not without closing the dialog box,can opreate Activity.<br>‚ë° Add automatically according to click the distance from the edge of the screen to determine the location of the dialog box.<br>‚ë¢Added ""autoPosition"" and ""setThroughEvent"" methods, please refer to ""BubbleDialog method reference table""√æ![1.1.0.gif](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/1.1.0.gif)√æ√æ- 1.0.3:Continue to optimize the click outside the bubble will be dismiss; fix some Dialog around Dialog can not dismiss;√æ√æ- 1.0.2:Fix click on the dialog edge can not be canceled.√æ√æ## Which apps use it ?√æ|Todo|√æ|-|√æ|[![Todo](https://raw.githubusercontent.com/xujiaji/Todo/master/app/src/main/res/mipmap-hdpi/ic_launcher.png)](https://www.coolapk.com/apk/211388)|√æ√æ## How to get started?√æAdd HappyBubble dependency into your build.gradle√æ```√æimplementation 'com.github.xujiaji:happy-bubble:1.1.9'√æ```√æ√æ## How to use HappyBubble-BubbleDialog?√æ> Method reference table√æ√æ|Method|Param|Description|√æ|:-|:-:|:-|√æ|addContentView|View|Fill content view|√æ|setClickedView|View|Clicked view|√æ|setPosition|enum ... BubbleDialog.Position:LEFT, TOP, RIGHT, BOTTOM|BubbleDialog relative to the location of the view being clicked. If you pass in multiple locations, the higher the priority of the front position|√æ|setOffsetX|int|If you are not satisfied with the x position, you need to adjust.|√æ|setOffsetY|int|If you are not satisfied with the y position, you need to adjust.|√æ|setBubbleLayout|BubbleLayout|Custom BubbleLayout|√æ|setTransParentBackground|-|Transparent background|√æ|softShowUp|-|When EditText gets the focus, you want it to move up.|√æ|show|-|display|√æ|autoPosition| enum <br>`ÔºàAuto:AROUNDÔºåUP_AND_DOWNÔºåLEFT_AND_RIGHTÔºâ`|The position function is automatically determined to show the maximum space at the edge of the screen when the View is clicked.When turned on, the ‚ÄúsetPosition‚Äù function is disabled.<br>AROUNDÔºöClicked around the View; <br>UP_AND_DOWNÔºöClicked View is displayed above and below; <br>LEFT_AND_RIGHTÔºöClicked around the View to display;|√æ|setThroughEvent|boolean, boolean|The first parameter, ""isThroughEvent"", sets whether or not to penetrate the Dialog gesture interaction. <br>The second argument, ""cancelable"", clicks whether the blank can cancel Dialog, only valid if ""isThroughEvent = false"".|√æ|setRelativeOffset|int|Set the dialog relative to the offset of the View being clicked (negative: Offset to the center of the view being clicked; Positive: Offset to the outside of the clicked view). This setting directly affects the setOffsetX and setOffsetY methods.|√æ|setLayout|intÔºåintÔºåint|Set the width and height of the bubble and the distance from the edge of the screen.<br>The first parameter: width (set the width of the bubble);<br>The second parameter: height (set the height of the bubble);<br>he third parameter: margin (sets the distance from the edge of the screen, only if you set width or height to MATCH_PARENT).<br>Width Height is px or MATCH_PARENT|√æ√æ### The easiest to achieve.√æ|||√æ|-|-|√æ|![exampel1](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/img_example1.png)|![exampel2](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/img_example2.png)|√æ√æ``` java√ænew BubbleDialog(this)√æ        .addContentView(LayoutInflater.from(this).inflate(R.layout.dialog_view3, null))√æ        .setClickedView(mButton)√æ        .show();√æ```√æ### Off 8dp down.√æ![exampel3](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/img_example3.png)√æ``` java√ænew BubbleDialog(this)√æ        .addContentView(LayoutInflater.from(this).inflate(R.layout.dialog_view3, null))√æ        .setClickedView(mButton4)√æ        .setPosition(mPosition)√æ        .setOffsetY(8)√æ        .show();√æ```√æ### When the input box is covered by the keyboard.√æ![exampel4](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/gif_example4.gif)√æ``` java√ænew BubbleDialog(this)√æ        .addContentView(LayoutInflater.from(this).inflate(R.layout.dialog_view, null))√æ        .setClickedView(mButton12)√æ        .setPosition(mPosition)√æ        .softShowUp()√æ        .show();√æ```√æ### Custom BubbleLayout.√æ![exampel5](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/20190407164631.png)√æ√æ``` java√æBubbleLayout bl = new BubbleLayout(this);√æbl.setBubbleColor(Color.YELLOW);√æbl.setShadowColor(Color.RED);√æbl.setLookLength(Util.dpToPx(this, 18));√æbl.setLookWidth(Util.dpToPx(this, 24));√æbl.setBubbleRadius(Util.dpToPx(this, 3));√ænew BubbleDialog(this)√æ        .addContentView(LayoutInflater.from(this).inflate(R.layout.dialog_view5, null))√æ        .setClickedView(mButton8)√æ        .setPosition(mPosition)√æ        .setBubbleLayout(bl)√æ        .show();√æ```√æ### Custom BubbleDialog, actionable BubbleDialog.√æ![exampel6](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/gif_example6.gif)√æ> 1.layout√æ√æ``` xml√æ<?xml version=""1.0"" encoding=""utf-8""?>√æ<LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""√æ    android:layout_width=""160dp""√æ    android:layout_height=""match_parent""√æ    android:orientation=""vertical"">√æ√æ    <Button√æ        android:id=""@+id/button13""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""wrap_content""√æ        android:text=""Button1"" />√æ√æ    <Button√æ        android:id=""@+id/button14""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""wrap_content""√æ        android:text=""Button2"" />√æ√æ    <Button√æ        android:id=""@+id/button15""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""wrap_content""√æ        android:text=""Button3"" />√æ√æ</LinearLayout>√æ```√æ> 2.Custom BubbleDialog√æ√æ``` java√æ√æ/**√æ * Ëá™ÂÆö‰πâÂèØÊìç‰ΩúÊÄßdialog√æ * Created by JiajiXu on 17-12-11.√æ */√æ√æpublic class CustomOperateDialog extends BubbleDialog implements View.OnClickListener√æ{√æ    private ViewHolder mViewHolder;√æ    private OnClickCustomButtonListener mListener;√æ√æ    public CustomOperateDialog(Context context)√æ    {√æ        super(context);√æ        setTransParentBackground();√æ        setPosition(Position.TOP);√æ        View rootView = LayoutInflater.from(context).inflate(R.layout.dialog_view4, null);√æ        mViewHolder = new ViewHolder(rootView);√æ        addContentView(rootView);√æ        mViewHolder.btn13.setOnClickListener(this);√æ        mViewHolder.btn14.setOnClickListener(this);√æ        mViewHolder.btn15.setOnClickListener(this);√æ    }√æ√æ    @Override√æ    public void onClick(View v)√æ    {√æ        if (mListener != null)√æ        {√æ            mListener.onClick(((Button)v).getText().toString());√æ        }√æ    }√æ√æ    private static class ViewHolder√æ    {√æ        Button btn13, btn14, btn15;√æ        public ViewHolder(View rootView)√æ        {√æ            btn13 = rootView.findViewById(R.id.button13);√æ            btn14 = rootView.findViewById(R.id.button14);√æ            btn15 = rootView.findViewById(R.id.button15);√æ        }√æ    }√æ√æ    public void setClickListener(OnClickCustomButtonListener l)√æ    {√æ        this.mListener = l;√æ    }√æ√æ    public interface OnClickCustomButtonListener√æ    {√æ        void onClick(String str);√æ    }√æ}√æ√æ```√æ√æ> 3.display√æ√æ``` java√æCustomOperateDialog codDialog = new CustomOperateDialog(this)√æ        .setPosition(mPosition)√æ        .setClickedView(mButton10);√æcodDialog.setClickListener(new CustomOperateDialog.OnClickCustomButtonListener()√æ{√æ    @Override√æ    public void onClick(String str)√æ    {√æ        mButton10.setText(""ÁÇπÂáª‰∫ÜÔºö"" + str);√æ    }√æ});√æcodDialog.show();√æ```√æ### See more code.√æ[TestDialogActivity code](app/src/main/java/com/xujiaji/happybubbletest/TestDialogActivity.java)√æ√æ### Code advice√æAccording to [@hm](https://juejin.im/user/57bda1ada633bd005d4bc2a9) the friend in the [article](https://juejin.im/post/5a333f0af265da431523f408) feedback, multiple clicks Show BubbleDialog, the location is not correct problem. Due to multiple settings BappyDialog lead, it is recommended that the following wording. (Of course, if you need to set a different clicked control to repeatedly call the setClickedView () method to update the location, you need to write it out.)√æ√æ``` java√æif(mBubbleDialog == null)√æ{√æ    mBubbleDialog = new BubbleDialog(this)√æ        .addContentView(LayoutInflater.from(this).inflate(R.layout.dialog_view3, null))√æ        .setClickedView(mButton4)√æ        .setPosition(mPosition)√æ        .setOffsetY(8);√æ}√æmBubbleDialog.show();√æ```√æ√æ√æ---√æ√æ√æ## How to use HappyBubble-BubbleLayout?√æ### Define attributes in XML code.√æ> Attributes reference table√æ√æ|Attrs|Value|Description|√æ|:-|:-:|:-|√æ|lookAt|left, top, right, bottom|Arrow pointing|√æ|lookLength|dimension|Arrow length|√æ|lookPosition|dimension|Arrow relative x or y axis position|√æ|lookWidth|dimension|Arrow width|√æ|bubbleColor|color|Bubble color|√æ|bubbleRadius|dimension|Bubble arc|√æ|bubblePadding|dimension|Bubble border to 'BubbleLayout' border distance|√æ|shadowRadius|dimension|Shadow radius|√æ|shadowX|dimension|Shading offset in the x-axis|√æ|shadowY|dimension|Shading offset in the y-axis|√æ|shadowColor|color|Shades of color|√æ√æ> xml example√æ√æ``` xml√æ    <com.xujiaji.happybubble.BubbleLayout√æ        xmlns:app=""http://schemas.android.com/apk/res-auto""√æ        android:id=""@+id/bubbleLayout""√æ        android:layout_width=""match_parent""√æ        android:layout_height=""200dp""√æ        android:layout_margin=""16dp""√æ        app:lookAt=""left""√æ        app:lookLength=""16dp""√æ        app:lookPosition=""20dp""√æ        app:lookWidth=""16dp"" />√æ```√æ√æ### Define attributes in java code.√æ> BubbleLayout by calling the 'set + Attr' method and invalidate method.As follows.√æ√æ``` java√æmBubbleLayout.setLook(BubbleLayout.Look.LEFT);√æ```√æ> See more√æ√æ[MainActivity Code](app/src/main/java/com/xujiaji/happybubbletest/MainActivity.java)√æ√æ![GIF](https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/github/HappyBubble/en/gif1.gif)√æ√æ### demo download.√æ[![Download Demo](https://img.shields.io/badge/Download-demo--apk-brightgreen.svg)](https://github.com/xujiaji/HappyBubble/releases)√æ√æ---√æ√æ# License√æ```√æ   Copyright 2016 XuJiaji√æ√æ   Licensed under the Apache License, Version 2.0 (the ""License"");√æ   you may not use this file except in compliance with the License.√æ   You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ   Unless required by applicable law or agreed to in writing, software√æ   distributed under the License is distributed on an ""AS IS"" BASIS,√æ   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ   See the License for the specific language governing permissions and√æ   limitations under the License.√æ```"
wacxt/netty-private-protocol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
pydio/pydio-sdk-java-v2,1063,3,6,12,Organization,False,Rewrite of the java SDK,http://pyd.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",7,Java,"{'': 2, 'md': 1, 'gradle': 1, 'properties': 1, 'iml': 1}",245,2,0,1,0,1928,True,3,0,0,0,1,0,0,0,6,0,1,3,137,183,0,0,59,7,,,"# Getting started√æThe pydio java sdk provides a Java implementation of features for communicating with a Pydio server Cells and Pydio 8+ versions. Most of the functions are wrapped into the <em>com.pydio.sdk.core.Client</em> class that contains methods to easily manage your files on a Pydio server.√æ√æ## Configure and resolve a pydio server:√æ√æGiven an URL, we create a ServerNode object to load the server info√æ``` java√æString url = ""https://demo.pydio.com"";√æServerNode node = new ServerNode();√æError error = node.resolve();√æif (error != null) {√æ    // error.code could be√æ    //Code.ssl_error or√æ    //Code.pydio_server_not_supported or√æ    //Code.pydio_server_not_supported or√æ    //Code.con_failed or√æ    //Code.ssl_certificate_not_signed or√æ    System.out.println(""failed to resolve server"");√æ    return;√æ}√æ√æSystem.out.println(""version: "" + server.getVersion());√æSystem.out.println(""version name: "" + server.getVersionName());√æ```√æ√æ## Working with the pydio client:√æ√æ### Instantiate a Pydio Client√æ√æTo create a client pass the resolved server to the client factory√æ√æ``` java√æClient client = Client.get(node);√æ```√æ√æ√æ### Setting user credentials√æ√æ``` java√æCredentials credentials = new DefaultCredentials(""login"", ""password"");√æclient.setCredentials(credentials);√æ```√æ√æ√æ### Performing folder list√æ√æ``` java√æ//listing root of ""My Files"" workspace√ætry {√æ    client.ls(""my-files"", ""/"", (n) -> {√æ        System.out.println(n.label());√æ    });√æ} catch(SDKexception e) {√æ    e.printStackTrace();√æ    Error error = Error.fromException(e)√æ    // error.code could be√æ    //Code.ssl_error or√æ    //Code.pydio_server_not_supported or√æ    //Code.pydio_server_not_supported or√æ    //Code.con_failed or√æ    //Code.ssl_certificate_not_signed or√æ}√æ```√æ√æ## Examples√æFind more examples [here](https://github.com/pydio/pydio-sdk-java-v2/tree/master/src/main/java/com/pydio/sdk/examples)"
eleybourn/Book-Catalogue,112710,321,63,188,User,False,A book cataloging tool for Android phones. ,https://github.com/eleybourn/Book-Catalogue/wiki,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",22,Java,"{'': 4, 'zip': 1, 'xml': 4, 'apk': 1, 'txt': 1, 'gradle': 1, 'properties': 1}",1367,2,84,21,0,3715,True,259,408,4,1,6,161,2,0,13,2,1,5,1805,300,0,0,2,,35,,"#√æ# BOOK CATALOGUE√æ#√æ# @copyright 2010 Evan Leybourn√æ# @license GNU General Public License√æ# √æ# This file is part of Book Catalogue.√æ#√æ# Book Catalogue is free software: you can redistribute it and/or modify√æ# it under the terms of the GNU General Public License as published by√æ# the Free Software Foundation, either version 3 of the License, or√æ# (at your option) any later version.√æ#√æ# Book Catalogue is distributed in the hope that it will be useful,√æ# but WITHOUT ANY WARRANTY; without even the implied warranty of√æ# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the√æ# GNU General Public License for more details.√æ#√æ# You should have received a copy of the GNU General Public License√æ# along with Book Catalogue.  If not, see <http://www.gnu.org/licenses/>.√æ#√æ√æThis is an open source Android application. Please feel free to fork, bug fix √æand commit back. √æ√æThis is a simple book catalogue application, to store a list of your books. √æBooks can be added either manually, by ISBN, or by barcode. √æ√æFeatures include;√æ* The obvious; you can add, edit, and display a list of books√æ* Books can be sorted by Author or Title. √æ* Books can be automatically added by typing in the ISBN or scanning the √æ  barcode. It will search Google Books for details (and download a thumbnail). √æ  It will search more sites as I add them. √æ* Multiple Books lists (or bookshelves). For example I like to keep my Doctor Who√æ  books separate from my normal fiction books. √æ* You can search for a book by title, author or series.√æ* When adding or editing books author, series and publisher should display a √æ  suggestion list√æ* When downloading book information, authors and titles are converted to proper√æ  case. e.g. ""The murder on the links"" becomes ""Murder on the Links, The""√æ* Using ISBN or Barcode scanning will also download a thumbnail (if available)√æ√ænew in 5.2.0√æ* Greek translation (Dimitris Klisiaris)√æ* Locale-specific capitalization (de, fr)√æ* User-selectable locale√æ* Improvements to search√æ* Bug fixes to date display√æ√ænew in 5.1.0√æ* Italian translation (Eugenio Davolio)√æ* Spanish translation (JosÔøΩ M. Galdo)√æ* Turkish translations (Emir Sari)√æ* Ability to archive only new/updated books and to exclude covers (or books)√æ* Better thumbnail size in lists for high density screens√æ* Added options to see books by author/series at Amazon√æ* Many bug fixes√æ√ænew in 5.0.5√æ* Style 'Added date' is now in descending order for Android 2.2+√æ* Performance improvements for Android 2.2+√æ* pass all book details to editor even if some required details not found√æ* Bug fixes√æ√ænew in 5.0.4√æ* New field: Language√æ* Translation updates (Imkal)√æ* Code cleanups√æ* Scanner info sent in 'Help'->'Send Info'√æ√ænew in 5.0.3√æ* Bug fix: 'duplicate' series no longer incorrectly causing errors√æ* Bug fix: Prevent editing series and formats in list if empty√æ* Bug fix: Ensure default bookshelf is really set when adding books√æ* Bug fix: Handle broken android versions that do not accept null number format for progress dialogs√æ* French Translation update (Imkal)√æ√ænew in 5.0.1/2√æ* Bug fix: Author text in 'Search Internet' now correct colour√æ* Bug fix: goodreads sync no longer causes crash if not registered√æ* Updated icons to match marketplace images√æ√ænew in 5.0.0√æ* A non-editable view of book details, with 'fling' support! (See ""Other Preferences"") (Nick Silin)√æ* Archiving (Backup & Import) of entire catalogue, including books, covers, preferences and styles√æ* Updated interface with Action Bar support for usability and to work better on devices without menu buttons√æ* Support for pic2shop scanner (better for fixed focus, low light and in front-facing cameras)√æ* goodreads now appears in main menu if you authorize it√æ* Check internet connection earlier when trying to scan books√æ* Add greater granularity to book list header info preference√æ* Better ASIN search support√æ* More French translation updates (Imkal & Djiko)√æ* More German translation updates (Robert Wetzlmayr)√æ* More Russian translation updates (Nick Silin)√æ* Internal changes in anticipation of an improved tablet interface√æ* Bug fixes√æ√ænew in 4.2.3√æ* Improve handling of invalid ISBNs when sending to goodreads√æ* Other minor bug fixes√æ√ænew in 4.2.2√æ* Fix tiling of background image for some Android versions√æ* Better handling of incompatible scanner apps√æ* Send more details on crash or when asking for help√æ* Cleanup of layouts (Nick Silin)√æ* Bug fixes√æ√ænew in 4.2.1√æ* Fix crash when expanding list items and using 'Expand All'√æ√ænew in 4.2√æ* Date-Picker that supports dates down to 0AD as well as partial dates√æ* HTML descriptions display correctly with click to edit√æ* Preference for pre-selecting whole image when cropping√æ* Preference for auto-rotating images from camera√æ* Preference to use external cropping tool (experimental)√æ* Added more options to the options menus√æ* More reliable date handling on import/export/sync√æ* French translation updates (Imkal)√æ* German translation updates (Robert Wetzlmayr)√æ* Russian translation updates (Nick Silin)√æ* Updated OK/Cancel button positions to conform to current Android standards√æ* Fix handling of duplicate anthology titles√æ* Full keyboard available when entering ASINs√æ* Keeps 5 previous export files√æ* Better detection of 'changes' when editing books√æ* Support for a wider range of Gallery and file browsers√æ* Various import bugs fixed√æ* Various code cleanups and NPEs fixed√æ* Internal: prep for fragments by separating message delivery from activities√æ* Internal: one database connection for all activities and threads√æ√ænew in 4.1.5√æ* improved import robustness√æ* fixed bug introduced by 'comma-in-bookshelf' bug fix√æ√ænew in 4.1.4√æ* minor bug fix in bookshelf maintenance√æ√ænew in 4.1.3√æ* fix for long-standing bug during rotation while editing a book√æ* fix for  for long-standing bug in date parsing when in non-english locales√æ√ænew in 4.1.2√æ* Translation updates (Robert Wetzlmayr)√æ* Bug fix for 'read' date import from goodreads√æ√ænew in 4.1.1√æ* Fix bug relating to commas in bookshelf names creating extra shelves√æ* Removed use of onBackPressed to ensure compatible with Android 1.6√æ* Clarified strings in 'back' code√æ√ænew in 4.1√æ* new style options: location and date read√æ* sharing can now send via any app that advertises the interface (eg. mail)√æ* if fields have been edited, and 'back' is pressed, ask the user for confirmation√æ* assume book is read when importing from goodreads if the user has rated it√æ* change install location to avoid problems with encrypted SD cards√æ* changes to French translations√æ* bug fixes in file import and data import√æ√ænew in 4.0.7√æ* Fix bug in Google Books URL causing wrong books to be returned√æ* Re-prioritize data sources based on reliability and the data returned√æ* Make Comments field auto-resize√æ* Show recent authors in author pop-down list√æ* Minor bug fixes√æ√ænew in 4.0.6√æ* When adding books, scanning or typing an existing ISBN allows you the option to edit the book.√æ* Allow ASINs to be manually entered as well as ISBNs√æ* German translation updates√æ* Bug fixes when cropping cover images√æ√ænew in 4.0.5√æ* fix bug when updating books√æ√ænew in 4.0.4√æ* search now searches series and anthology data√æ* allows non-numeric data entry in series position√æ* better sorting of leading numerics in series position√æ* various esoteric bugs fixed√æ√ænew in 4.0.3√æ* ISBNs are now validated when searching or scanning (new beep sound and related preference)√æ* Loaned & Not Loaned list now includes all books√æ* Added preference to hide list headers (for small phones) √æ* Restored functionality to use current bookshelf when adding book√æ* FastScroller sizing improved√æ* Fixed various bugs√æ√ænew in 4.0.2√æ* Fixed: Tiled backgrounds now tile correctly. Really.√æ* Fixed: Crash when rapidly scrolling very large book lists√æ* Fixed: Crash resulting from intermittent android bug in android 2.2-2.3.√æ* Fixed: Blank screen in classic view that occurs after prior FC√æ√ænew in 4.0.1√æ* Added: preference to completely disable background bitmap√æ* Added: book counts to book lists√æ* Fixed: crash when expanding/collapsing empty lists√æ* Fixed: tiled background bitmap is no longer stretched in some android versions√æ* Fixed: crash in classic book list if certain fields were hidden√æ* Fixed: crash when dragging only author or series above top of list√æ* Fixed: problem with goodreads and UNICODE characters in bookshelf names√æ* Fixed: problem caused by using old shortcuts to start app√æ* Fixed: rare crash when returning from scanning or adding books√æ* Fixed: rare crash when interacting with goodreads√æ* Fixed: rare crash when returning to Task list from other application√æ√ænew in 4.0√æ* goodreads support including√æ  - import√æ  - export√æ  - search√æ* new front screen√æ* new catalogue view which:√æ  - is much faster for large libraries√æ  - has many new list styles√æ  - allows user-defined list styles√æ* a 'hints' system (not available everywhere yet)√æ* Better text searching using FTS√æ  - allows for searches like 'food -apples' to search for any book mentioning 'food' but not 'apples'√æ* Thumbnail cache√æ* Smoother scrolling of lists with thumbnails√æ* More bug fixes√æ* More bugs introduced√æ* email bug reports after application crashes √æ√æTODO: goodreads IMPORT√æTODO: Disable thumbnail cache if no external media?√æTODO: User preference to disable thumbnail cache√æ√æ√ænew in v3.8.1√æ* Italian translation added√æ* Crash during searching fixed√æ* Crash when entering locations fixed√æ√æNew in v3.8√æ* Fixed several defects (including multiple author's and author prefix/suffix's)√æ* Fixed issue with thumbnail resolutions from LibraryThing√æ* Changed the ""Add Book"" menu options to be submenu√æ* The database backup has been renamed for clarity√æ√æNew in v3.7√æHint: The export function will create an export.csv file on the sdcard√æ* You can crop cover thumbnails (both from the menu and after taking a camera image)√æ* You can tweet about a book directly from the book edit screen.√æ* Sort by Date Published added√æ* Will check for network connection prior to searching for details (new permission required)√æ* Fixed crash when opening search results√æ√æNew in v3.6.2√æ* Optionally restrict ""Sort By Author"" to only the first Author (where there are multiple listed)√æ* Minor bug fixes√æ√æNew in v3.6 / v3.6.1√æ* The LibraryThing Key will be verified when added√æ* When entering ISBN's manually, each button with vibrate the phone slightly√æ* When automatically updating fields click on each checkbox twice will give you the option to override existing fields (rather than populate only blank fields)√æ* Fixed a crash when exporting over 2000 books√æ* Orphan loan records will now be correctly managed √æ* The Amazon search will now look for English, French, German, Italian and Japanese versions√æ* Fixed several reports defects√æ* Fixed bug in moving to SD Card√æ√æNew in v3.5.6√æ* Fixed bug in moving to SDcard (2.2 and above only)√æ* Fixed defect in the ""All Books"" bookshelf (French version only)√æ√æNew in v3.5.5√æ* Add by ISBN also works to Amazon ASIN (use the android keyboard not the onscreen buttons) √æ√æNew in v3.5.4√æ* French translation available√æ* There is an option to create a duplicate book (requested by Vinika)√æ* Fixed errors caused by failed upgrades√æ* Fixed errors caused by trailing spaces in bookshelf names√æ√æNew in v3.5.3√æ* Fixes for honeycomb tablets√æ* Fixes several reported crashes√æ√æNew in v3.5√æ* Sorting by Author has been fixed (it will correctly sort series)√æ* A new sort option ""Sort by Author Given Name"" has been added√æ* You can delete books directly from the edit book screen.√æ* Minor fixes to the import process√æ√æNew in v3.4 - Most updates courtesy of Grunthos√æ* Multiple Authors per book (Editing a book now displays an author button which takes the user to a new activity for managing the authors of this book.)√æ* Multiple Series per book (Editing a book now displays an series button which takes the user to a new activity for managing the series of this book.)√æ* Fetches series (and other stuff) from LibraryThing√æ* Can now make global changes to Author and Series (Access this feature via the catalogue screen; long-click on an author or series name Editing can also be accessed while editing series or authors in an individual books.)√æ* Can replace a cover thumbnail from a different edition via LibraryThing. (Access this via long-clicking the cover while editing the book. It will display a gallery of thumbnails; clicking on the small thumbnail will display a larger version. Clicking on the larger version will select it.)√æ* Does concurrent ISBN searches at Amazon, Google and LibraryThing (it's faster)√æ* Displays a progress dialog while searching for a book on the internet.√æ* Adding by Amazon's ASIN is supported on the ""Add by ISBN"" page√æ* Duplicate books allowed, with a warning message√æ* User-selectable fields when reloading data from internet (eg. just update authors).√æ* Unsaved edits are retained when rotating the screen.√æ* Changed the ISBN data entry screen when the device is in landscape mode.√æ* Displays square brackets around the series name when displaying a list of books.√æ* Suggestions available when searching√æ* Removed the need for contacts permission. Though it does mean you will need to manually enter everyone you want to loan to.√æ* Preserves *all* open groups when closing application.√æ* The scanner and book search screens remain active after a book has been added or a search fails. It was viewed that this more closely represents the work-flow of people adding or scanning books.√æ* Import & Export improvements√æ* Bug fixes for the 'collapse/expand' button, series selection/de-selection√æ* Bug fixes for sorting of book titles, series and authors.√æ* Ensure that search results can now be sorted correctly. Expanding, eg, an author name in search results will just show matching books.√æ√æNew in v3.3 - Updates courtesy of Grunthos√æ* The application should be significantly faster now - Fixed a bug with database index creation√æ* The thumbnail can be rotated in both directions now√æ* You can zoom in the thumbnail to see full detail√æ* The help page will redirect to the, more frequently updated, online wiki√æ* Dollar signs in the text fields will no longer FC on import/export  √æ√æNew in v3.2√æ* Books can now be automatically added by searching for the author name and book title√æ* Updating thumbnails, genre and description fields will also search by author name and title is the isbn does not exist√æ* Expand/Collapse all bug fixed√æ* The search query will be shown at the top of all search screens√æ√æNew in v3.1√æ* The audiobook checkbox has been replaced with a format selector (inc. paperback, hardcover, companion etc)√æ* When adding books the current bookshelf will be selected as the default bookshelf√æ* Genre/Subject and Description fields have been added (Requested by Tosh) and will automatically populate based on Google Books and Amazon information√æ* The save button will always be visible on the edit book screen√æ* Searching for a single space will clear the search results page√æ* The Date Picker will now appear in a popup in order to save space on the screen (Requested by several people)√æ* To improve speed when sorting by title, the titles will be broken up by the first character. Remember prefixes such as ""the"" and ""a"" are listed after the title, e.g. ""The Trigger"" becomes ""Trigger, The""√æ√æNew in v3.0.1√æ* Export bug fixed√æ* Further enhancements to the new ISBN screen√æ* Filtering by bookshelf on title view is now fixed√æ* There is now an <Empty Series> when sorting by Series (thanks Vinikia)√æ* App will now search all fields (Thanks Michael)√æ√æNew in v3.0√æ* Added app2sd support (2.2 users only)√æ* You can now assign books to multiple bookshelves (requested by many people)√æ* A .nomedia file will be automatically created which will stop the thumbnails showing up in the gallery (thanks Brandon)√æ* The ""Add Book by ISBN"" page has been redesigned to be simpler and more stable (thanks Vinikia)√æ* The export file is now formatted correctly (.csv) (thanks glohr)√æ* You will be prompted to backup your books on a regular basis √æ√æNew in v2.9√æTip: If you long click on a book title on the main list you can delete it√æTip: If you want to see all books, change the bookshelf to ""All Books""√æTip: You can find the correct barcode for many modern paperbacks on the inside cover√æ* There is now a ""Sort by Unread"" option, as well as a ""read"" icon on the main list (requested by Angel)√æ* If you long click on the (?) thumbnail you can now select a new thumbnail from the gallery (requested by Giovanni)√æ* Bookshelves, loaned books and anthology titles will now import correctly√æ√æNew in v2.8√æDon't forget you can hide any of the new fields that you do not want to see. √æ* Fixed several crashing defects when adding books√æ* Added Autocompleting Location Field (For Cam)√æ* Added Read Start & Read End Fields (For Robert)√æ* Added an Audiobook Checkbox Field (For Ted)√æ* Added a Book Signed Checkbox Field (For me)√æ* Series Number now support decimal figures (Requested by Beth)√æ* List price now support decimal figures (Requested by eleavings)√æ* Fixed Import Crashes (Thanks Roydalg) √æ* Fixed several defects for Android 1.6 users - I do not have a 1.6 device to √æ  test on so please let me know if you discover any errors√æ√æNew in v2.7√æ* Minor enhancements√æ* Online help has been written√æ* Thumbnails can now be hidden just like any other field (Thanks Martin)√æ* You can also rotate thumbnails; useful for thumbnails taken with the camera√æ* Bookshelves will appear in the menu immediately (Thanks Martin/Julia)√æ√æNew in v2.6√æ* There is now support to record books as anthologies and it's titles.√æ* There is experimental support to automatically populate the anthology titles√æ* You can now take photos for the book cover (long click on the thumbnail in edit)√æ√æNew in v2.5√æ* There is a new Admin option (Field Visibility) to hide unused fields√æ* ""All Books"" should now be saved as a bookshelf preference correctly√æ* When adding books the bookshelf will default to your currently selected √æ  bookshelf (Thanks Martin)√æ√æNew in v2.4.2√æ* You can now delete individual thumbnails by holding on the image and √æ  selecting delete.√æ√æNew in v2.4√æ* Adding books will now (finally) search Amazon√æ* A field for list price has been included (Requested by Brenda)√æ* You can bulk update the thumbnails for all books with ISBN's from the Admin √æ  page√æ√æNew in v2.3√æ* The book thumbnail now appears in the list view√æ* Emailing the developer now works from the admin page√æ* The Change Bookshelf option is now more obvious (Thanks Mike)√æ* The exports have been renamed to csv, use the correct published date and are √æ  now unicode safe (Thanks Mike)√æ√æNew in v2.2.√æ* There are two additional sort functions, by series and by loaned (Request from N4ppy)√æ* Your bookshelf and current location will be saved when you exit (Feedback from Martin)√æ* Minor interface improvements when sorting by title √æ√æNew in v2.1√æ* Your sort order will be automatically saved when to close the √æ  application (Requested by Martin)√æ* There is a new ""about this app"" view available from the administration √æ  tabs (Also from Martin)√æ√æNew in v2.0√æ* There is a new tabbed ""edit"" interface to simplify editing books. √æ* The new comments tab also includes a notes field where you can add personal √æ  notes for any book (Requested by Luke).√æ* The new loaned books tab allows you to record books loaned to friends. This √æ  will lookup your phone contacts to pre-populate the list (Requested by Luke)√æ* Scanned books that already exist in the database (based on ISBN) will no √æ  longer be added (Identified by Colin)√æ* After adding a book, the main view will now scroll to a appropriate location. √æ* Searching has been made significantly faster.√æ√æNew in v1.10√æ* Fixed a crash on the phone (SQL Exception) √æ√æNew in v1.09√æ* Amazon unfortunately doesn‚Äôt allow using their web services (search) on any √æ  mobile devices, so this has been disabled until I can come up with a work-around.√æ√æNew in v1.08√æ* Add by ISBN will now search Amazon as well as Google Books (thanks Sue)√æ* The series field will attempt to guess the value based on Amazon data √æ* Fixed an issue for books where the date of publication is just a year√æ√æNew in v1.07√æ* Fixes a crash if zxing (barcode scanner) if not installed (as found by Jesse)√æ* Adds a book count number to the main page (as requested by Keridel)√æ* The administration page now has a paypal donation link. Please use :-)√æ√æNew in v1.06√æ* Import / Export and Manage Bookshelves have been moved to an admin page.√æ* Bug fixes in the Sort by Title view√æ* The options menu has been enhanced√æ√æNew in v1.04√æ* There is now an option in the main menu to export all data to the SDCard. √æ  This will be saved as a tab separated file in the bookCatalogue directory.√æ* There is now an option in the main menu to import data from the SDCard. √æ  The import function, expects a file in the same format, location and name√æ  as the export function created. √æ* Improvements have been made to the search results screen to make it more √æ  obvious√æ√æNew in v1.03√æ* Authors like ""Marianne De Pierres"" and ""Ursula Le Guin"" are now listed √æ  correctly. They will list as;√æ De Pierres, Marianne√æ Le Guin, Ursula√æ√æNew in v1.02√æ* The, An, and A should be listed after the title. e.g. ""The Trigger"" becomes√æ  ""Trigger, The""√æ* Books lists should sort by Series, Series #, then Author (or Title)"
StannyBing/ZXUtils,25156,37,2,13,User,False,‰∏Ä‰∏™Â∏∏Áî®ÁöÑAndroidÂ∑•ÂÖ∑Â∫ì,http://blog.csdn.net/stanny_bing/article/details/77197331,,15,Java,"{'': 2, 'md': 2, 'apk': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",7,1,68,1,0,67,True,0,1,0,0,0,0,0,0,7,0,1,7,83833,77,0,0,11,,9,,"# ZXUtils√æ![](https://github.com/StannyBing/ZXUtils/blob/master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png)<br>√æ[Ëã±ÊñáÁâàReadme](https://github.com/StannyBing/ZXUtils/blob/master/README-English.md)<br>√æ√æ√æZXUtilsÁé∞Âú®Â∑≤ÂºÄÂßãÈÄêÊ≠•Âä†ÂÖ•ÂêÑÁßçÂ•ΩÁúãÁöÑÁ¨¨‰∏âÊñπUIÊéß‰ª∂ÔºåÂÖ®Èù¢Ë∑®ÂÖ•2.0.0ÁâàÊú¨„ÄÇ<br>√æ‰∏∫Êõ¥Â•ΩÁöÑ‰ΩøÁî®Â∑•ÂÖ∑Â∫ìÔºå‰ªçÁÑ∂ÈááÁî®ZXÂºÄÂ§¥ÁöÑÊ®°Âºè„ÄÇ<br>√æ‰ªéËøô‰∏™ÁâàÊú¨Ëµ∑ÔºåZXUtils‰ºöÈÄêÊ∏êÂä†ÂÖ•Êõ¥Â§öÔºåÊõ¥ÂÖ®ÔºåÊõ¥Â•ΩÁöÑÂ∑•ÂÖ∑‰ª•ÂèäUIÊéß‰ª∂<br>√æ‰ΩÜÂêåÊó∂ÂèØËÉΩ‰ºöÂØπÂéüÊúâÁöÑÈÉ®ÂàÜuiËøõË°åÂà†Èô§Á≠âÊìç‰ΩúÔºåÊúõ‰ΩìË∞Ö<br>√æ√æ//2018-7-10<br>√æÂºïÁî®Ôºö[Êù•Ëá™‰∫éCymChadÁöÑBaseRecyclerViewAdapterHelper,ÂèØ‰ΩøÁî®ZXQuickAdapter„ÄÅZXMultiItemQucikAdapterÁ≠âËøõË°å‰ΩøÁî®](https://github.com/CymChad/BaseRecyclerViewAdapterHelper)<br>√æ√æ//2018-8-22<br>√æÂºïÁî®Ôºö[Êù•Ëá™‰∫émancjÁöÑSlideUp-Android,ÂèØ‰ΩøÁî®ZXSlideUp„ÄÅZXSlideUpBuilderÁ≠âËøõË°å‰ΩøÁî®](https://github.com/mancj/SlideUp-Android)<br>√æ√æÂ¶ÇÂú®‰ª•‰∏äÂºïÁî®‰∏≠ÔºåZXUtils‰æµÁäØ‰∫ÜÊÇ®ÁöÑÊùÉÁõäÔºåËØ∑ËÅîÁ≥ªÊàëÔºåÊàëÂ∞ÜÁ´ãÂç≥ÁßªÈô§Áõ∏ÂÖ≥Â∑•ÂÖ∑ÔºåÂπ∂ËØöÊåöÈÅìÊ≠â„ÄÇ<br>√æ√æ<br>√æÂ§ßÂÆ∂ÂèØÁÇπÂáª‰∏ãÈù¢ÁöÑÈìæÊé•ËøõË°å‰∏ãËΩΩ<br>√æ[ÁÇπÂáª‰∏ãËΩΩÊºîÁ§∫Demo](https://github.com/StannyBing/ZXUtils/blob/master/ZXUtilÊºîÁ§∫Demo.apk?raw=true)<br>√æPS:Demo‰∏≠ÁöÑÂäüËÉΩÂè™ÂåÖÊã¨‰∫ÜÈÉ®ÂàÜÂäüËÉΩÁöÑÂ±ïÁ§∫ÔºåÁî±‰∫éÊúâ‰∫õÂ∑•ÂÖ∑ÁöÑÊñπÊ≥ïÂ§™Â§öÔºåÂ∞±Âè™ÊåëÈÄâ‰∫ÜÈÉ®ÂàÜËøõË°åÊºîÁ§∫<br>√æ<br>√æA commonly used tool library for Android<br>√æÊú¨Â∫ìÂåÖÂê´Â∏∏Áî®androidÂºÄÂèëÊâÄÈúÄÁöÑÊâÄÊúâÂ∑•ÂÖ∑Á±ª+ÁΩëÁªúËØ∑Ê±Ç+Â∏∏Áî®view(2.2.0‰ª•ÂêéÁßªÈô§‰∫ÜÁΩëÁªúËØ∑Ê±ÇÂ∫ì)<br>√æÊâÄÊúâÁöÑÂ∑•ÂÖ∑Á≠âÈÉΩÊòØ‰ª•ZX..ÂºÄÂ§¥ÔºåÂ¶ÇZXDialogUtil„ÄÅZXFileUtil„ÄÅZXSystemUtil<br>√æÊâÄÊúâÊ∂âÂèäÂà∞viewÁöÑÊØîÂ¶ÇËá™ÂÆö‰πâviewÂèädialogÁ≠âÈÉΩÊòØÂü∫‰∫éMaterial DesignËøõË°åËÆæËÆ°ÔºåÂπ∂ÈÉΩÊèê‰æõ‰∫ÜËá™ÂÆö‰πâÁöÑÂäüËÉΩÔºåÊñπ‰æøËÆæËÆ°<br>√æ<br>√æÈÉ®ÂàÜÊà™ÂõæÂ¶Ç‰∏ã(ËØ•Êà™Âõæ‰∏∫2018-8-22ÊâÄÊà™ÔºåÂêéÊúüÂèØËÉΩ‰ºö‰∫ßÁîüÈÉ®ÂàÜÂèòÂåñ)Ôºö<br>√æ<div align=center><img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_1.jpg""/>√æ                  <img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_2.jpg""/></div><br><br>√æ<div align=center><img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_3.jpg""/>√æ                  <img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_4.jpg""/></div><br><br>√æ<div align=center><img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_5.jpg""/>√æ                  <img width=""324"" height=""576"" src=""https://github.com/StannyBing/ZXUtils/blob/master/image/Screenshot_6.jpg""/></div><br><br>√æ### 1.Â∑•ÂÖ∑Â∫ìÂåÖÂê´‰ª•‰∏ãÔºö<br>√æ„ÄÄ„ÄÄZXHttpTool ÁΩëÁªúËØ∑Ê±ÇÁõ∏ÂÖ≥<br>√æ„ÄÄ„ÄÄZXAnimUtil Âä®ÁîªÊñπÊ≥ïÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXAppUtil AppÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXBitmapUtil bitmapÂ§ÑÁêÜÂ∑•ÂÖ∑Á±ªÔºåÂåÖÂê´‰∫ÜdrawableÁ≠â<br>√æ„ÄÄ„ÄÄZXClipboardUtil Ââ™Ë¥¥ÊùøÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXCrashUtil Â¥©Ê∫ÉÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXDataBaseUtil Êï∞ÊçÆÂ∫ìÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXDialogUtil ‰∏ìÁî®‰∫édialogÁöÑÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXFileUtil Êñá‰ª∂Áõ∏ÂÖ≥util<br>√æ„ÄÄ„ÄÄZXFormatCheckUtil Ê†ºÂºèÊ£ÄÊµãÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXFragmentUtil FragmentÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXImageLoaderUtil ÂõæÁâáÂä†ËΩΩÂ∑•ÂÖ∑Á±ªÔºàÂü∫‰∫éGlideÂ∞ÅË£ÖÔºâ<br>√æ„ÄÄ„ÄÄZXIntentUtil IntentÁõ∏ÂÖ≥Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXJsonUtil jsonÂ§ÑÁêÜÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXLogUtil LogÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXMD5Util MD5Âä†ÂØÜÂíåÁºñÁ†ÅÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXNetWorkUtil ÁΩëÁªúÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXnotifyUtil ÈÄöÁü•Ê†èÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXPermissionUtil ÊùÉÈôêÁî≥ËØ∑Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXPinyinUtil ÊãºÈü≥Áõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXProcessUtil ËøõÁ®ãÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXRegexUtil Ê≠£ÂàôÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª(‰ΩøÁî®Ê≠£ÂàôÊ£ÄÊü•ÊâãÊú∫Âè∑Á≠â)<br>√æ„ÄÄ„ÄÄZXScreenUtil Â±èÂπïÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXServiceUtil ÊúçÂä°Áõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXSharedPreUtil ËΩªÈáèÂ≠òÂÇ®ÁöÑÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXStringUtil Â≠óÁ¨¶‰∏≤Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXSystemUtil Á≥ªÁªüÁõ∏ÂÖ≥Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXTimeUtil Êó•ÊúüÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXToastUtil ‰∏ìÁî®‰∫éToastÂèäSnackBarÁöÑÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXUniqueIdUtil ÂîØ‰∏ÄÁ†ÅÂ∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXUnZipRarUtil Ëß£ÂéãÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXWindowUtil Á™óÂè£Â∑•ÂÖ∑Á±ª<br>√æ„ÄÄ„ÄÄZXRecordUtil ÂΩïÈü≥ÂèäÊí≠ÊîæÁ±ª<br>√æ„ÄÄ„ÄÄZXDeviceUtil ÂΩïÈü≥ÂèäÊí≠ÊîæÁ±ª<br>√æ„ÄÄ„ÄÄZXQuickAdapter Âø´ÈÄüÂ∞ÅË£ÖÈÄÇÈÖçÂô®<br>√æ„ÄÄ„ÄÄZXLightUtil ‰∫ÆÂ∫¶ÊéßÂà∂Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXLocationUtil ÂÆö‰ΩçÁõ∏ÂÖ≥Â∑•ÂÖ∑<br>√æ<br>√æ### 2.ÂÖ∂‰ªñÁõ∏ÂÖ≥Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXThreadPool Á∫øÁ®ãÊ±†Â∑•ÂÖ∑ÔºåÁî®‰∫éÂª∫Á´ãÁ∫øÁ®ãÊ±†<br>√æ„ÄÄ„ÄÄZXBroadCastManager Â∞ÅË£ÖÂπøÊí≠broadcastreceiver<br>√æ„ÄÄ„ÄÄZXInScrollRecylerManager ÂèØ‰ª•ÂµåÂ•óËøõScrollView‰∏≠ÁöÑRecylerviewÁöÑManager<br>√æ„ÄÄ„ÄÄZXItemClickSupport recylerviewÁöÑÁÇπÂáª‰∫ã‰ª∂Ôºå‰∏çÈúÄË¶ÅÂÜçadapter‰∏≠ÂÜçÈÄÇÈÖçÁõëÂê¨Âô®<br>√æ„ÄÄ„ÄÄZXOnDoubleClickListener ÂèåÂáª‰∫ã‰ª∂ÁõëÂê¨Âô®<br>√æ  <br>√æ### 3.view<br>√æ„ÄÄ„ÄÄZXBubbleView Ê∞îÊ≥°ÂºπÂá∫Ê°Üview<br>√æ„ÄÄ„ÄÄZXSeekBar Â∏¶ÂàªÂ∫¶ÁöÑSeekbar<br>√æ„ÄÄ„ÄÄZXBarChar„ÄÅZXLineChart„ÄÅZXPieChart ÁªüËÆ°ÂõæÁõ∏ÂÖ≥<br>√æ„ÄÄ„ÄÄZXPhotoPickerView ‰ªøÂæÆ‰ø°ÁöÑÂõæÁâáÈÄâÊã©Âô®<br>√æ„ÄÄ„ÄÄZXRecyclerDeleteHelper recyclerÁöÑÂ∑¶ÊªëÂà†Èô§Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXSlidingRootNavBuilder ‰æßËæπÊ†èÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXSwipeBackHelper ÊªëÂä®ÈÄÄÂá∫Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXSwipeRecycler SwipeRefreshLayout+RecyclerViewÁöÑÁªÑÂêàview<br>√æ„ÄÄ„ÄÄZXTableView Ë°®Ê†ºview<br>√æ„ÄÄ„ÄÄZXTabViewPager TabLayout+ViewPagerÁöÑÁªÑÂêàview<br><br>√æ„ÄÄ„ÄÄZXNoScrollGridView ‰∏ç‰ºöÊªöÂä®ÁöÑGridView<br>√æ„ÄÄ„ÄÄZXNoScrollListView ‰∏ç‰ºöÊªöÂä®ÁöÑListView<br>√æ„ÄÄ„ÄÄZXPhotoView ÂèØÊîæÂ§ßÁº©Â∞èÁöÑÂõæÁâáÊéß‰ª∂<br>√æ„ÄÄ„ÄÄZXSpinner Spinnerview<br>√æ„ÄÄ„ÄÄZXStatusBarCompat ÈÄèÊòéÁä∂ÊÄÅÊ†è<br>√æ„ÄÄ„ÄÄZXCameraView ‰ªøÂæÆ‰ø°ÂΩïÂÉèÁÖßÁõ∏<br>√æ„ÄÄ„ÄÄZXSlideUp ÊªëÂä®Êéß‰ª∂Â∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄZXShadowLayout Èò¥ÂΩ±ÊïàÊûú<br>√æ  <br>√æ### 4.‰ΩøÁî®ÊñπÊ≥ï<br>√æ√æ    ÂÖàÂØºÂÖ•‰æùËµñÂåÖ<br>√æ    √æ    ```√æ    implementation 'com.github.StannyBing:ZXUtils:2.3.5'√æ    Â¶ÇASÊèêÁ§∫‰æùËµñÂÜ≤Á™ÅÔºåÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ãÊñπÂºè√æ    implementation ('com.github.StannyBing:ZXUtils:2.3.5'){√æ            exclude group: 'com.android.support'√æ            exclude group: 'com.squareup.okhttp3'√æ        }√æ    ZXUtils‰∏≠ÈõÜÊàê‰∫Üokhttp3ÔºåÂàõÂª∫‰∫ÜÁÆÄÊòìÁöÑÁΩëÁªúËØ∑Ê±ÇÂ∑•ÂÖ∑ÔºåÂ¶ÇÊûúÊÇ®È°πÁõÆ‰∏≠Â∑≤‰ΩøÁî®ÔºåÂèØ‰ª•ÊéíÈô§Êéâ√æ    In zxutils, okhttp3 is integrated and a simple network request tool is created. If you have used it in your project, you can exclude it√æ    ```√æ    √æ    Ê≥®ÊÑèÈúÄË¶ÅÂú®È°πÁõÆÁöÑbuildÈáåÈù¢Ê∑ªÂä†‰ª•‰∏ã‰ª£Á†Å<br>√æ    √æ    ```√æ    maven {√æ            url ""https://jitpack.io""√æ        }√æ    ```√æ√æ„ÄÄ„ÄÄÂú®‰Ω†ÁöÑApplicationÁöÑonCreate‰∏≠Ê∑ªÂä†‰ª•‰∏ã‰ª£Á†Å<br>√æ„ÄÄ„ÄÄ`ZXApp.init(this, true);`<br>√æ„ÄÄ„ÄÄÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÊòØÊåáÊòØÂê¶‰∏∫debugÊ®°ÂºèÔºåÂ¶ÇÊûú‰∏∫falseÔºåÂ∞ÜÂÅúÊ≠¢Â∑•ÂÖ∑Á±ª‰∏≠ÁöÑlogËæìÂá∫ÔºåÂêåÊó∂ÂºÄÂßãÁ∫øÁ®ãÂ¥©Ê∫ÉÂ§ÑÁêÜÂ∑•ÂÖ∑<br>√æ„ÄÄ„ÄÄ‰∏∫trueÂàô‰ª£Ë°®Ê≠§Êó∂‰∏∫debugÊ®°ÂºèÔºåÂ¶ÇÊûúÈÅáÂà∞Â¥©Ê∫ÉÂ∞ÜÁõ¥Êé•ÊäõÂá∫ÔºåÊñπ‰æøÂÆö‰ΩçÈîôËØØ„ÄÇ<br>"
RiskyKen/Armourers-Workshop,17452,91,20,42,User,False,Minecraft armour customization mod.,,,13,Java,"{'': 2, 'md': 1, 'gradle': 1, 'properties': 1, 'bat': 1}",2648,6,92,7,4,2163,True,41,262,8,17,1,22,0,2,19,2,1,170,30358,26490,0,0,17,,33,,# Armourer's Workshop√æ√æMinecraft armour customization mod.√æ√æDownload Armourer's Workshop from CurseForge [http://minecraft.curseforge.com/projects/armourers-workshop/files](http://minecraft.curseforge.com/projects/armourers-workshop/files)√æ√æ## Build Server√æ√æ### 1.12.2 Stable√æ*tree/master*<br/>√æ[![Jenkins Master](https://img.shields.io/jenkins/s/http/plushie.moe:8080/job/Armourers-Workshop-1.12.2.svg)](http://plushie.moe:8080/job/Armourers-Workshop-1.12.2/)<br/>√æ[http://plushie.moe:8080/job/Armourers-Workshop-1.12.2/](http://plushie.moe:8080/job/Armourers-Workshop-1.12.2/)√æ√æ### 1.12.2 Dev√æ*tree/develop*<br/>√æ[![Jenkins Develop](https://img.shields.io/jenkins/s/http/plushie.moe:8080/job/Armourers-Workshop-1.12.2-Dev.svg)](http://plushie.moe:8080/job/Armourers-Workshop-1.12.2-Dev/)<br/>√æ[http://plushie.moe:8080/job/Armourers-Workshop-1.12.2-Dev/](http://plushie.moe:8080/job/Armourers-Workshop-1.12.2-Dev/)√æ√æ### 1.7.10 Stable√æ*tree/1.7.10*<br/>√æ[![Jenkins 1.7.10](https://img.shields.io/jenkins/s/http/plushie.moe:8080/job/Armourers-Workshop-1.7.10.svg)](http://plushie.moe:8080/job/Armourers-Workshop-1.7.10/)<br/>√æ[http://plushie.moe:8080/job/Armourers-Workshop-1.7.10/](http://plushie.moe:8080/job/Armourers-Workshop-1.7.10/)√æ√æ### 1.7.10 Dev√æ*tree/develop-1.7.10*<br/>√æ[![Jenkins 1.7.10](https://img.shields.io/jenkins/s/http/plushie.moe:8080/job/Armourers-Workshop-1.7.10-Dev.svg)](http://plushie.moe:8080/job/Armourers-Workshop-1.7.10-Dev/)<br/>√æ[http://plushie.moe:8080/job/Armourers-Workshop-1.7.10-Dev/](http://plushie.moe:8080/job/Armourers-Workshop-1.7.10-Dev/)√æ√æ## Donate√æ[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/K3K3WVTZ)√æ√æ## License√æ![](https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png)  √æArmourer's Workshop by RiskyKen is licensed under a [Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License](https://creativecommons.org/licenses/by-nc-sa/3.0/)
yangchong211/YCUpdateApp,803,373,7,52,User,False,ËΩªÈáèÁ∫ßÁâàÊú¨Êõ¥Êñ∞ÂºπÁ™óÔºåÂºπÁ™ó‰∏äÊîØÊåÅÊõ¥Êñ∞ËøõÂ∫¶Êù°ÔºåÂèØ‰ª•ËÆæÁΩÆÊôÆÈÄöÊõ¥Êñ∞ÊàñËÄÖÂº∫Âà∂Êõ¥Êñ∞„ÄÇËß£ÂÜ≥8.0‰ª•‰∏äÈÄöÁü•Ê†è‰∏çÊòæÁ§∫ÈóÆÈ¢òÔºåËß£ÂÜ≥7.0‰ª•‰∏äÂÆâË£ÖapkÂºÇÂ∏∏Ôºå‰∏ãËΩΩÂÆåÊàêÂàô‰ºöËá™Âä®ÊèêÁ§∫ÂÆâË£ÖÔºõ‰∏ãËΩΩÂºÇÂ∏∏ÔºåÂ§±Ë¥•ÔºåÈîôËØØÁ≠âÁä∂ÊÄÅÔºåÊîØÊåÅÈáçÂêØ‰∏ãËΩΩ‰ªªÂä°ÔºõËøòÊîØÊåÅËá™ÂÆö‰πâ‰∏ãËΩΩË∑ØÂæÑ„ÄÇ‰ª£Á†ÅÈáèÂ∞ëÔºåË∞ÉÁî®ÁÆÄÂçï‚Ä¶‚Ä¶,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",22,1,0,1,0,1090,True,4,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,52,,1,,"# Ëá™ÂÆö‰πâÁâàÊú¨Êõ¥Êñ∞ÂºπÁ™ó√æ#### ÁõÆÂΩï‰ªãÁªç√æ- 1.Êú¨Â∫ì‰ºòÂäø‰∫ÆÁÇπ√æ- 2.‰ΩøÁî®‰ªãÁªç√æ- 3.Ê≥®ÊÑèË¶ÅÁÇπ√æ- 4.ÊïàÊûúÂ±ïÁ§∫√æ- 5.ÂÖ∂‰ªñ‰ªãÁªç√æ√æ√æ√æ### 1.Êú¨Â∫ì‰ºòÂäø‰∫ÆÁÇπ√æ- ÊîØÊåÅÂêéÂè∞‰∏ãËΩΩÔºåÊîØÊåÅÊñ≠ÁÇπ‰∏ãËΩΩ„ÄÇÊîØÊåÅÁõëÂê¨‰∏ãËΩΩËøáÁ®ãÔºå‰∏ãËΩΩÊàêÂäüÔºåÂ§±Ë¥•ÔºåÂºÇÂ∏∏Ôºå‰∏ãËΩΩ‰∏≠ÔºåÊöÇÂÅúÁ≠âÂ§öÁßçÁä∂ÊÄÅ√æ- Áî®Êà∑ÂèØ‰ª•ËÆæÁΩÆÊòØÂê¶ÊîØÊåÅÂº∫Âà∂Êõ¥Êñ∞ÔºåËøòÊîØÊåÅÁî®Êà∑ËÆæÁΩÆÁâàÊú¨Êõ¥Êñ∞ÂÜÖÂÆπÔºåÂΩìÂÜÖÂÆπËøáÈïøÔºåÂèØ‰ª•ÂÆûÁé∞ÊªöÂä®Ê®°Âºè√æ- ÊîØÊåÅËøõÂ∫¶Êù°ÊòæÁ§∫ÔºåÂØπËØùÊ°ÜËøõÂ∫¶Êù°ÔºåÂπ∂‰∏î‰∏ãËΩΩ‰∏≠ÊîØÊåÅÈÄöÁü•Ê†èËøõÂ∫¶Êù°Â±ïÁ§∫ÔºåËß£ÂÜ≥8.0ÈÄöÁü•Ê†è‰∏çÊòæÁ§∫ÈóÆÈ¢ò√æ- Áî±‰∫é‰∏ãËΩΩapkÂà∞Êú¨Âú∞ÈúÄË¶ÅÊùÉÈôêÔºåÂõ∫Âú®lib‰∏≠Â∑≤ÁªèÂ§ÑÁêÜËøô‰∏™ÈÄªËæëÔºåÂè™ÊúâÂΩìÊúâËØªÂÜôÊùÉÈôêÊó∂Êâç‰ºö‰∏ãËΩΩÊñá‰ª∂ÔºåÊ≤°ÊúâÊùÉÈôêÂàôË∑≥ËΩ¨ËÆæÁΩÆÈ°µÈù¢ÊâìÂºÄÊùÉÈôê√æ- Ë∞ÉÁî®ÂçÅÂàÜÁÆÄÂçïÔºåÁõ∏ÊØîAppUpdateÔºåCheckVersionLibÁ≠âÂ∫ìÁöÑÁâπÁÇπÊòØ‰∏çÁî®ËÆæÁΩÆhttpÁöÑgetÊàñËÄÖpostËØ∑Ê±ÇÔºåÂè™ÈúÄË¶Å‰º†ÂÖ•‰∏ãËΩΩÈìæÊé•Â∞±ÂèØ‰ª•√æ- Áõ∏ÊØîGitHub‰∏äÂá†‰∏™‰∏ªÊµÅÁöÑÁâàÊú¨Êõ¥Êñ∞Â∫ìÔºåÊàëËøô‰∏™lib‰ª£Á†ÅÈáèÂ∞ëÂæàÂ§öÔºåÊàëËßâÂæóÊúÄÂ∞ëÊúÄÁ≤æÁÆÄÁöÑ‰ª£Á†ÅÂÆåÊàêÈúÄË¶ÅÁöÑÂäüËÉΩÂ∞±ÊúÄÂ•Ω√æ- ÈÄÇÈÖç Android 7.0 FileProviderÔºåÂ§ÑÁêÜ‰∫Ü7.0‰ª•‰∏äÂÆâË£ÖapkÂºÇÂ∏∏ÈóÆÈ¢òÔºåÂú®lib‰∏≠Â∑≤ÁªèÈÖçÁΩÆ‰∫ÜfileProviderÔºåÁõ¥Êé•‰ΩøÁî®Â∞±ÂèØ‰ª•√æ- ‰ΩøÁî®dialogFragmentÊõøÊç¢‰∫ÜdialogÔºåÂ§ÑÁêÜ‰∫ÜÈáçÂª∫ÂêéÈÄªËæëÔºå[dialogFragmentÊ∑±ÂÖ•ÂàÜÊûêÂçöÂÆ¢](https://www.jianshu.com/p/e4b213a07415)√æ- ‰∏ãËΩΩÂÆåÊàêÂêéËá™Âä®ÂÆâË£ÖÔºåÂØπ‰∫éÈîôËØØÁöÑ‰∏ãËΩΩÈìæÊé•Âú∞ÂùÄÔºå‰ºö‰∏ãËΩΩÂºÇÂ∏∏Ôºå‰πüÂèØ‰ª•Êü•ÁúãÂºÇÂ∏∏ÁöÑÊó•Âøó√æ- ÂΩì‰∏ãËΩΩÂÆåÊàêÂêéÔºåÂÜçÊ¨°ÂºπÁ™óÔºåÂàô‰ºöÂÖàÂà§Êñ≠Êú¨Âú∞ÊòØÂê¶Â∑≤Áªè‰∏ãËΩΩÔºåÂ¶ÇÊûú‰∏ãËΩΩÂàôÁõ¥Êé•ÊèêÁ§∫ÂÆâË£Ö√æ- ÊîØÊåÅËÆæÁΩÆËá™ÂÆö‰πâ‰∏ãËΩΩÊñá‰ª∂Ë∑ØÂæÑÔºåÂ¶ÇÊûú‰∏çËÆæÁΩÆÔºåÂàôÁõ¥Êé•‰ΩøÁî®lib‰∏≠ÁöÑË∑ØÂæÑ„Äêsd/apk/downApkÁõÆÂΩï‰∏ã„Äë√æ- ÂΩìapk‰∏ãËΩΩÂ§±Ë¥•ÔºåÂºÇÂ∏∏ÔºåÈîôËØØÁ≠âÁä∂ÊÄÅÔºåÊîØÊåÅÈáçÂêØ‰∏ãËΩΩ‰ªªÂä°„ÄÇÂäüËÉΩÂçÅÂàÜÂº∫Â§ßÔºåÂ∑≤ÁªèÁî®‰∫éÊ≠£ÂºèappÂ§öÊó∂Ôºå‰Ω†ÈááÁî®ÊãøÊù•‰∏ª‰πâ‰ΩøÁî®Âç≥ÂèØÔºåÊ¨¢ËøéÊèêÂá∫ÈóÆÈ¢ò„ÄÇ√æ- ÂºπÁ™óDialogFragmentÂºÇÂ∏∏Êó∂Ë∞ÉÁî®onSaveInstanceState‰øùÂ≠òÁä∂ÊÄÅÔºåÈáçÂêØÊó∂ÂèñÂá∫Áä∂ÊÄÅ√æ√æ√æ√æ### 2.‰ΩøÁî®‰ªãÁªç√æ#### 2.1 ÂÖ≥‰∫éÂ∫ìÂØºÂÖ•√æ- ÂèØ‰ª•Áõ¥Êé•ÂºïÂÖ•libÂ∫ì√æ√æ√æ#### 2.2 ‰ΩøÁî®ËØ¥Êòé√æ- ‰ª£Á†ÅÂ¶Ç‰∏ãÊâÄÁ§∫ÔºåÂ∞±ÊòØËøô‰πàÁÆÄÂçï√æ```√æ//ËÆæÁΩÆËá™ÂÆö‰πâ‰∏ãËΩΩÊñá‰ª∂Ë∑ØÂæÑ√æUpdateUtils.APP_UPDATE_DOWN_APK_PATH = ""apk"" + File.separator + ""downApk"";√æString  desc = getResources().getString(R.string.update_content_info);√æ/*√æ * @param isForceUpdate             ÊòØÂê¶Âº∫Âà∂Êõ¥Êñ∞√æ * @param desc                      Êõ¥Êñ∞ÊñáÊ°à√æ * @param url                       ‰∏ãËΩΩÈìæÊé•√æ * @param apkFileName               apk‰∏ãËΩΩÊñá‰ª∂Ë∑ØÂæÑÂêçÁß∞√æ * @param packName                  ÂåÖÂêç√æ */√æUpdateFragment.showFragment(MainActivity.this,√æ        false,firstUrl,apkName,desc,BuildConfig.APPLICATION_ID);√æ```√æ√æ#### 2.3 libÂ∫ì‰∏≠Ëß£ÂÜ≥‰∫Ü‰ª£Á†Å‰∏≠ÂÆâË£Ö APKÊñá‰ª∂ÂºÇÂ∏∏ÈóÆÈ¢ò„ÄêÊ≥®ÊÑèlibÂ∑≤ÁªèËß£ÂÜ≥ËØ•ÈóÆÈ¢ò„Äë√æ- Áõ¥Êé•Ë∞ÉÁî®Â∑•ÂÖ∑Á±ªUpdateUtils.installNormalÊñπÊ≥ï√æ- ÂÖ≥‰∫éÂú®‰ª£Á†Å‰∏≠ÂÆâË£Ö APK Êñá‰ª∂ÔºåÂú® Android N ‰ª•ÂêéÔºå‰∏∫‰∫ÜÂÆâÂçìÁ≥ªÁªü‰∏∫‰∫ÜÂÆâÂÖ®ËÄÉËôëÔºå‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆËΩØ‰ª∂ÔºåÈúÄË¶Å‰ΩøÁî® fileProvider Êú∫Âà∂Êù•ËÆøÈóÆ„ÄÅÊâìÂºÄ APK Êñá‰ª∂„ÄÇÈáåÈù¢if ËØ≠Âè•ÔºåÂ∞±ÊòØÂå∫ÂàÜËΩØ‰ª∂ËøêË°åÂπ≥Âè∞ÔºåÊù•ÂØπ intent ËÆæÁΩÆ‰∏çÂêåÁöÑÂ±ûÊÄß„ÄÇ√æ√æ```√æ/**√æ * ÂÖ≥‰∫éÂú®‰ª£Á†Å‰∏≠ÂÆâË£Ö APK Êñá‰ª∂ÔºåÂú® Android N ‰ª•ÂêéÔºå‰∏∫‰∫ÜÂÆâÂçìÁ≥ªÁªü‰∏∫‰∫ÜÂÆâÂÖ®ËÄÉËôëÔºå‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆËΩØ‰ª∂√æ * ÈúÄË¶Å‰ΩøÁî® fileProvider Êú∫Âà∂Êù•ËÆøÈóÆ„ÄÅÊâìÂºÄ APK Êñá‰ª∂„ÄÇ√æ * ÊôÆÈÄöÂÆâË£Ö√æ * @param context                   ‰∏ä‰∏ãÊñá√æ * @param apkPath                   pathÔºåÊñá‰ª∂Ë∑ØÂæÑ√æ * @param pathName                  ‰Ω†ÁöÑÂåÖÂêç√æ */√æpublic static void installNormal(Context context, String apkPath , String pathName) {√æ    if(apkPath==null || pathName==null){√æ        return;√æ    }√æ    Intent intent = new Intent(Intent.ACTION_VIEW);√æ    File apkFile = new File(apkPath);√æ    // Áî±‰∫éÊ≤°ÊúâÂú®ActivityÁéØÂ¢É‰∏ãÂêØÂä®Activity,ËÆæÁΩÆ‰∏ãÈù¢ÁöÑÊ†áÁ≠æ√æ    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);√æ    //ÁâàÊú¨Âú®7.0‰ª•‰∏äÊòØ‰∏çËÉΩÁõ¥Êé•ÈÄöËøáuriËÆøÈóÆÁöÑ√æ    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {√æ        //ÂèÇÊï∞1 ‰∏ä‰∏ãÊñá, ÂèÇÊï∞2 Provider‰∏ªÊú∫Âú∞ÂùÄ ÂíåÈÖçÁΩÆÊñá‰ª∂‰∏≠‰øùÊåÅ‰∏ÄËá¥   ÂèÇÊï∞3  ÂÖ±‰∫´ÁöÑÊñá‰ª∂√æ        Uri apkUri = FileProvider.getUriForFile(context, pathName+"".fileProvider"", apkFile);√æ        //Ê∑ªÂä†Ëøô‰∏ÄÂè•Ë°®Á§∫ÂØπÁõÆÊ†áÂ∫îÁî®‰∏¥Êó∂ÊéàÊùÉËØ•UriÊâÄ‰ª£Ë°®ÁöÑÊñá‰ª∂√æ        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);√æ        intent.setDataAndType(apkUri, ""application/vnd.android.package-archive"");√æ    } else {√æ        Uri uri = Uri.fromFile(apkFile);√æ        intent.setDataAndType(uri, ""application/vnd.android.package-archive"");√æ    }√æ    context.startActivity(intent);√æ}√æ```√æ√æ- Ê∏ÖÂçïÊñá‰ª∂Ê∑ªÂä†‰ª£Á†ÅÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö√æ√æ```√æ<provider√æ    android:name="".VersionFileProvider""√æ    android:authorities=""${applicationId}.provider""√æ    android:exported=""false""√æ    android:grantUriPermissions=""true"">√æ    <meta-data√æ        android:name=""android.support.FILE_PROVIDER_PATHS""√æ        android:resource=""@xml/file_paths"" />√æ</provider>√æ```√æ√æ- Âú®res/xml‰∏ãÂ¢ûÂä†Êñá‰ª∂Ôºöfile_paths.xml√æ√æ```√æ<?xml version=""1.0"" encoding=""utf-8""?>√æ<paths>√æ        <external-path√æ            name=""external_files""√æ            path=""."" />√æ        <root-path√æ            name=""root_path""√æ            path=""."" />√æ</paths>√æ```√æ√æ√æ### 3.Ê≥®ÊÑèË¶ÅÁÇπ√æ- Ê≥®ÊÑèÈúÄË¶ÅÁî≥ËØ∑ËØªÂÜôÊùÉÈôêÔºåÂ¶ÇÊûú‰Ω†Ë¶Å‰ΩøÁî®ÔºåÂèØ‰ª•Ëá™ÂÆöÂÆö‰πâÈÄöÁü•Ê†è‰∏ãËΩΩUIÂ∏ÉÂ±ÄÔºåÂèØ‰ª•Ëá™Â∑±ËÆæÁΩÆÂºπÁ™óUI„ÄÇËøôÈáåÂ∞±‰∏çÈÄÇÁî®Ê≠£ÂºèÈ°πÁõÆ‰∏≠ÁöÑUIÂíåÂõæÊ†áÔºåÂõæÊ†áÊòØ‰ΩøÁî®Âà´‰∫∫ÁöÑÔºåËØ∑ÂãøÂïÜÁî®„ÄÇ√æ- ÈíàÂØπ8.0‰ª•ÂêéÂ∑≤ÁªèËß£ÂÜ≥‰∫ÜÈÄöÁü•Ê†è‰∏çÊòæÁ§∫ÈóÆÈ¢òÔºå[NotificationÂ∞ÅË£ÖÂ∫ì](https://github.com/yangchong211/YCNotification)ÔºåNotificationÈÄöÁü•Ê†èÁî®Ê≥ï‰ªãÁªçÂèäÈÉ®ÂàÜÊ∫êÁ†ÅËß£ÊûêÔºåhttps://blog.csdn.net/m0_37700275/article/details/78745024√æ- ÁõÆÂâçÈíàÂØπ‰∏ãËΩΩ‰∏≠ÁöÑÁä∂ÊÄÅÔºåÊúâÂæàÂ§öÁßçÔºåËøôÈáåÊàëÂè™ÊòØÈÄâÁî®‰∫ÜÂá†Áßç‰∏ªË¶ÅÁöÑÁä∂ÊÄÅÂ§ÑÁêÜÁâàÊú¨Êõ¥Êñ∞ÈÄªËæë„ÄÇÂÖ≥‰∫é‰∏ãËΩΩÊõ¥Â§öÈÄªËæëÔºåÂèØ‰ª•ÂèÇËÄÉËøô‰∏™‰∏ãËΩΩÂ∫ìÔºö[FileDownloader√æ](https://github.com/lingochamp/FileDownloader)√æ    ```√æ     * ‰∏ãËΩΩÁä∂ÊÄÅ√æ     * START            ÂºÄÂßã‰∏ãËΩΩ√æ     * UPLOADING.       ‰∏ãËΩΩ‰∏≠√æ     * FINISH           ‰∏ãËΩΩÂÆåÊàêÔºåÂèØ‰ª•ÂÆâË£Ö√æ     * ERROR            ‰∏ãËΩΩÈîôËØØ√æ     * PAUSED           ‰∏ãËΩΩÊöÇÂÅú‰∏≠ÔºåÁªßÁª≠√æ    ```√æ- ÂÖ≥‰∫éÊñ≠ÁÇπ‰∏ãËΩΩÈÄªËæë„ÄÇÁî±‰∫éÂâçÈ°πÁõÆ‰∏ªË¶ÅÊòØÂÆûÁé∞ÁâàÊú¨Êõ¥Êñ∞ÁöÑÈÄªËæëÔºåÊó∂Èó¥‰∫∫ÂäõÊúâÈôêÔºåÂõ†Ê≠§Áõ¥Êé•‰ΩøÁî®FileDownloaderÂ∫ìÔºåÊó†ÊØîÂº∫Â§ß„ÄÇ√æ√æ√æ### 4.ÊïàÊûúÂ±ïÁ§∫√æ#### 4.1 ÁâàÊú¨Êõ¥Êñ∞ÊµÅÁ®ãÂõæÔºåÊ≠£ÂºèÈ°πÁõÆÁöÑÊµÅÁ®ãÔºå‰ªÖ‰æõÂèÇËÄÉ√æ![image](https://upload-images.jianshu.io/upload_images/4432347-e7ba321e3201564c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ√æ√æ#### 4.2 ÊïàÊûúÂõæÂ±ïÁ§∫√æ![image](https://upload-images.jianshu.io/upload_images/4432347-e1d32a7fd02832f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ![image](https://upload-images.jianshu.io/upload_images/4432347-1879cbf17fbe05fd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ![image](https://upload-images.jianshu.io/upload_images/4432347-3ea6614052d7e54f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ![image](https://upload-images.jianshu.io/upload_images/4432347-5ac2ce1fbc538880.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ![image](https://upload-images.jianshu.io/upload_images/4432347-06b8bed3d839ae0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ![image](https://upload-images.jianshu.io/upload_images/4432347-6ddebd88af2947b8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ√æ√æ√æ### 5.ÂÖ∂‰ªñ‰ªãÁªç√æ#### ÂÖ≥‰∫éÂÖ∂‰ªñÂÜÖÂÆπ‰ªãÁªç√æ![image](https://upload-images.jianshu.io/upload_images/4432347-7100c8e5a455c3ee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)√æ√æ√æ#### ÁâàÊú¨Êõ¥Êñ∞ËØ¥Êòé√æ- v1.0.0 Êõ¥Êñ∞‰∫é2017Âπ¥8Êúà13Êó•√æ- v1.0.1 Êõ¥Êñ∞‰∫é2017Âπ¥12Êúà9Êó•√æ- v1.0.2 Êõ¥Êñ∞‰∫é2018Âπ¥11Êúà21Êó•√æ    - ÈíàÂØπÂºπÁ™óÊòØDialogFragmentÔºåÂõ†Ê≠§ÂΩìÂÆø‰∏ªactivityÂºÇÂ∏∏ÈáçÂêØÊó∂Ôºå‰ºöÂØºËá¥ÂºπÁ™óÂÅ∂ÂèëÊÄßÂ¥©Ê∫É„ÄÇÁî®commitAllowingStateLossÊõøÊç¢commitÊñπÊ≥ï√æ    - ÂºÇÂ∏∏Êó∂Ë∞ÉÁî®onSaveInstanceState‰øùÂ≠òÁä∂ÊÄÅÔºåÈáçÂêØÊó∂ÂèñÂá∫Áä∂ÊÄÅ√æ    - ÂΩì‰∏ãËΩΩÂ§±Ë¥•ÔºåÂºÇÂ∏∏ÔºåÈîôËØØÊó∂ÔºåÁÇπÂáªÊåâÈíÆÈáçÊñ∞ÂàõÂª∫‰∏ãËΩΩ‰ªªÂä°√æ√æ√æ√æ#### ÂÖ≥‰∫éÂçöÂÆ¢Ê±áÊÄªÈìæÊé•√æ- 1.[ÊäÄÊúØÂçöÂÆ¢Ê±áÊÄª](https://www.jianshu.com/p/614cb839182c)√æ- 2.[ÂºÄÊ∫êÈ°πÁõÆÊ±áÊÄª](https://blog.csdn.net/m0_37700275/article/details/80863574)√æ- 3.[ÁîüÊ¥ªÂçöÂÆ¢Ê±áÊÄª](https://blog.csdn.net/m0_37700275/article/details/79832978)√æ- 4.[ÂñúÈ©¨ÊãâÈõÖÈü≥È¢ëÊ±áÊÄª](https://www.jianshu.com/p/f665de16d1eb)√æ- 5.[ÂÖ∂‰ªñÊ±áÊÄª](https://www.jianshu.com/p/53017c3fc75d)√æ√æ√æ#### ÂÖ∂‰ªñÊé®Ëçê√æ- ÂçöÂÆ¢Á¨îËÆ∞Â§ßÊ±áÊÄª„Äê15Âπ¥10ÊúàÂà∞Ëá≥‰ªä„ÄëÔºåÂåÖÊã¨JavaÂü∫Á°ÄÂèäÊ∑±ÂÖ•Áü•ËØÜÁÇπÔºåAndroidÊäÄÊúØÂçöÂÆ¢ÔºåPythonÂ≠¶‰π†Á¨îËÆ∞Á≠âÁ≠âÔºåËøòÂåÖÊã¨Âπ≥Êó∂ÂºÄÂèë‰∏≠ÈÅáÂà∞ÁöÑbugÊ±áÊÄªÔºåÂΩìÁÑ∂‰πüÂú®Â∑•‰Ωú‰πã‰ΩôÊî∂ÈõÜ‰∫ÜÂ§ßÈáèÁöÑÈù¢ËØïÈ¢òÔºåÈïøÊúüÊõ¥Êñ∞Áª¥Êä§Âπ∂‰∏î‰øÆÊ≠£ÔºåÊåÅÁª≠ÂÆåÂñÑ‚Ä¶‚Ä¶ÂºÄÊ∫êÁöÑÊñá‰ª∂ÊòØmarkdownÊ†ºÂºèÁöÑÔºÅÂêåÊó∂‰πüÂºÄÊ∫ê‰∫ÜÁîüÊ¥ªÂçöÂÆ¢Ôºå‰ªé12Âπ¥Ëµ∑ÔºåÁßØÁ¥ØÂÖ±ËÆ°47ÁØá[Ëøë20‰∏áÂ≠ó]ÔºåËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§ÑÔºåË∞¢Ë∞¢ÔºÅ√æ- ÈìæÊé•Âú∞ÂùÄÔºöhttps://github.com/yangchong211/YCBlogs√æ- Â¶ÇÊûúËßâÂæóÂ•ΩÔºåÂèØ‰ª•star‰∏Ä‰∏ãÔºåË∞¢Ë∞¢ÔºÅÂΩìÁÑ∂‰πüÊ¨¢ËøéÊèêÂá∫Âª∫ËÆÆÔºå‰∏á‰∫ãËµ∑‰∫éÂøΩÂæÆÔºåÈáèÂèòÂºïËµ∑Ë¥®ÂèòÔºÅ√æ√æ√æ#### ÂÖ≥‰∫éLICENSE√æ```√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ   http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
Vantiv/cnp-sdk-for-java,87807,2,24,6,Organization,False,Java SDK to ease XML integrations with the Vantiv eCommerce platform,https://vantiv.github.io,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",13,Java,"{'': 4, 'md': 1, 'gradle': 2, 'yml': 1, 'iml': 1, 'properties': 1, 'sh': 1}",772,8,21,41,0,3035,True,0,3,0,0,0,11,0,7,8,0,6,24,5323,5305,0,0,28,1,,,
EBISPOT/goci,147332,15,10,16,Organization,False,GWAS Catalog Ontology and Curation Infrastructure,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",16,Java,"{'': 2, 'txt': 1, 'md': 1, 'xml': 1, 'properties': 1, 'sh': 1}",6279,76,186,15,0,3111,True,35,32,35,31,1,20,1,4,15,0,2,187,13384,8480,0,0,90,0,,,
SensorInput/BusbunchingServer,97,0,5,1,Organization,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",6,Java,"{'': 2, 'iml': 1, 'xml': 1}",40,1,0,1,0,926,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,13,2,,,
adorsys/oauth2-pkce,1175,10,6,5,Organization,False,Libraries for OAUTH2 PKCE,,,14,Java,"{'': 3, 'sh': 1, 'yml': 4, 'md': 1, 'json': 1}",114,5,23,4,0,776,True,6,3,0,0,3,14,2,2,9,0,1,2,8615,7035,0,0,105,4,,,# spring-oauth2 example√æ√æ## Requirements√æ√æ* maven√æ* angular√æ* docker√æ√æ## Build it√æ√æ```√ædocker-compose --file build.docker-compose.yml down --remove-orphans && docker-compose --file build.docker-compose.yml up --build√æ```√æ√æ## Run it√æ√æ```√ædocker-compose down --remove-orphans && docker-compose up --build√æ```√æ√æ## Links√æ√æ| URL | Description |√æ|-----|-------------|√æ| http://localhost:8888 | spring-oauth2 endpoint |√æ| http://localhost:80 | angular-oauth2 endpoint |√æ| http://localhost:8080/auth/ | local keycloak endpoint |
mishaninss/bdd_analyzer,37,1,1,3,User,False,,,,4,Java,"{'': 1, 'md': 1, 'xml': 1}",11,2,0,1,0,998,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,14,,2,,# bdd_analizer
huannan/AndroidReview,1329,115,5,13,User,False,Â∞èÊ•†ÊÄªÁöÑAndroidÈù¢ËØïÂ§ç‰π†,,,20,Java,"{'': 2, 'md': 6, 'xmind': 3, 'mdj': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",128,1,0,1,0,777,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,48,,24,,Â§ßÁ∫≤Ôºö√æ√æ* [Java](https://github.com/huannan/AndroidReview/blob/master/Java.md)√æ* [Android](https://github.com/huannan/AndroidReview/blob/master/Android.md)√æ* [ËÆ°ÁÆóÊú∫ÁΩëÁªú](https://github.com/huannan/AndroidReview/blob/master/ËÆ°ÁÆóÊú∫ÁΩëÁªú.md)√æ* [ÁÆóÊ≥ï](https://github.com/huannan/AndroidReview/blob/master/ÁÆóÊ≥ï.md)√æ* [ËÆæËÆ°Ê®°Âºè‰∏éÊû∂ÊûÑ](https://github.com/huannan/AndroidReview/blob/master/ËÆæËÆ°Ê®°Âºè‰∏éÊû∂ÊûÑ.md)
atxarib99/PitSoftware,9018,1,5,6,Organization,False,This is an application that reads live telemetry from the car as well as shows the logged data in charts for data analysis.,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",17,Java,"{'': 4, 'md': 1, 'py': 2, 'py~': 1, 'xml': 1, 'txt': 1, 'mf': 1}",58,5,0,3,0,639,True,0,0,0,0,0,10,0,1,8,0,0,0,0,0,0,0,5,1,,DallasFormulaRacing/PitSoftware,"# PitSoftware√æThis is an application that reads live telemetry from the car as well as shows the logged data in charts for data analysis.√æ√æFind the jar executable here: https://github.com/atxarib99/PitSoftware/blob/master/dist/PitSoftware.jar√æFind the python script here: https://github.com/atxarib99/PitSoftware/blob/master/Writer.py√æ√æUse an editor to modify the python script file. Modify '/dev/cu.usbmodem144401' with where your serial device is connected.√æ√æLaunch the jar executable. √æIn the top right there will be a File menu. Open up that menu and press ""Find Python File""√æA window will launch with the file directory of your system. Find the python file downloaded above.√æPress START to start receiving and logging data. Press STOP to stop.√æUnder the File menu, there will also be a Export Data menu item. Press this to save the data."
TxMQ/aviator-zoo-demo,751,7,3,1,Organization,False,Demo application for the Aviator core framework running on Swirlds Hashgraph consensus,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",7,TypeScript,"{'': 2, 'md': 1, 'yml': 1}",58,6,1,2,0,644,True,0,0,0,0,4,2,3,1,9,0,1,17,7243,9257,0,0,11,0,,,
BasisHub/components,39974,7,21,7,Organization,False,BASIS Components,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",7,Java,"{'': 1, 'yml': 1, 'MD': 1, 'md': 2, 'xml': 1}",1423,58,0,17,0,2563,True,25,109,2,11,0,48,0,5,12,2,0,0,0,0,0,0,24,1,,,"components√æ==========√æ√æThe BASIS Components project, a Java library that is meant to build a bridge between a Java environment - like JDBC data sources, REST web services etc - and BBj.√æ√æbuilding√æ--------√æTo set up the components project in your IDE, you will need some dependencies. The simplest way is to grab a current build ob BBj and use the lib folder:√æ√æ1. download BBj here: http://www.basis.com/bbj-download (the latest development build will be fine for the master branch, or the according  release matching the branch name in this repository)√æ2. install it to C:/bbj/ or /opt/bbj on linux√æ3. Import the Project as Mavan Project. select the Maven profile you want to use (winbbjlib/unixbbjlib) if your bbj installation is on a different part change the pom.xml profile, but make sure not to commit this change.√æ5. Use https://github.com/BasisHub/components/issues to report and track your issues. We're looking forward to your pull requests!√æ√æconventions√æ--------√æ1. From now on commits should be written as [conventional commits](https://www.conventionalcommits.org/en/v1.0.0-beta.2/)√æ2. The branching should be done via [git flow](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)√æ√æJavaDoc√æ-------√æhttps://basishub.github.io/components/javadoc/"
spring-petclinic/spring-framework-petclinic,1327,198,32,826,Organization,False,"A Spring Framework application based on JSP, Spring MVC, Spring Data JPA, Hibernate and JDBC",,,9,Java,"{'': 3, 'yml': 1, 'cmd': 1, 'xml': 1, 'md': 1}",592,2,2,31,11,2721,True,0,8,0,0,0,15,0,4,8,0,3,19,306,182,0,0,12,1,,,"# Spring PetClinic Sample Application√æ√æ[![Build Status](https://travis-ci.org/spring-petclinic/spring-framework-petclinic.svg?branch=master)](https://travis-ci.org/spring-petclinic/spring-framework-petclinic/) √æ[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=spring-petclinic_spring-framework-petclinic&metric=alert_status)](https://sonarcloud.io/dashboard?id=spring-petclinic_spring-framework-petclinic)√æ[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=spring-petclinic_spring-framework-petclinic&metric=coverage)](https://sonarcloud.io/dashboard?id=spring-petclinic_spring-framework-petclinic)√æ√æApproved by the Spring team, this repo is a fork of the [spring-projects/spring-petclinic](https://github.com/spring-projects/spring-petclinic).√æIt allows the Spring community to maintain a Petclinic version with a plain old **Spring Framework configuration**√æand with a **3-layer architecture** (i.e. presentation --> service --> repository).√æThe ""canonical"" implementation is now based on Spring Boot, Thymeleaf and [aggregate-oriented domain]([https://github.com/spring-projects/spring-petclinic/pull/200). √æ√æ√æ## Understanding the Spring Petclinic application with a few diagrams√æ√æ[See the presentation here](http://fr.slideshare.net/AntoineRey/spring-framework-petclinic-sample-application) (2017 update)√æ√æ## Running petclinic locally√æ√æ### With Maven command line√æ```√ægit clone https://github.com/spring-petclinic/spring-framework-petclinic.git√æcd spring-framework-petclinic√æ./mvnw jetty:run-war√æ# For Windows : ./mvnw.cmd jetty:run-war√æ```√æ√æ### With Docker√æ```√ædocker run -p 8080:8080 springcommunity/spring-framework-petclinic√æ```√æ√æYou can then access petclinic here: [http://localhost:8080/](http://localhost:8080/)√æ√æ<img width=""1042"" alt=""petclinic-screenshot"" src=""https://cloud.githubusercontent.com/assets/838318/19727082/2aee6d6c-9b8e-11e6-81fe-e889a5ddfded.png"">√æ√æ## In case you find a bug/suggested improvement for Spring Petclinic√æ√æOur issue tracker is available here: https://github.com/spring-petclinic/spring-framework-petclinic/issues√æ√æ√æ## Database configuration√æ√æIn its default configuration, Petclinic uses an in-memory database (HSQLDB) which√ægets populated at startup with data.√æA similar setups is provided for MySQL and PostgreSQL in case a persistent database configuration is needed.√æTo run petclinic locally using persistent database, it is needed to run with profile defined in main pom.xml file.√æ√æFor MySQL database, it is needed to run with 'MySQL' profile defined in main pom.xml file.√æ√æ```√æ./mvnw jetty:run-war -P MySQL√æ```√æ√æBefore do this, would be good to check properties defined in MySQL profile inside pom.xml file.√æ√æ```√æ<properties>√æ    <jpa.database>MYSQL</jpa.database>√æ    <jdbc.driverClassName>com.mysql.cj.jdbc.Driver</jdbc.driverClassName>√æ    <jdbc.url>jdbc:mysql://localhost:3306/petclinic?useUnicode=true</jdbc.url>√æ    <jdbc.username>root</jdbc.username>√æ    <jdbc.password>petclinic</jdbc.password>√æ</properties>√æ```      √æ√æYou could start MySQL locally with whatever installer works for your OS, or with docker:√æ√æ```√ædocker run -e MYSQL_USER=petclinic -e MYSQL_PASSWORD=petclinic -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=petclinic -p 3306:3306 mysql:5.7.8√æ```√æ√æFor PostgreSQL database, it is needed to run with 'PostgreSQL' profile defined in main pom.xml file.√æ√æ```√æ./mvnw jetty:run-war -P PostgreSQL√æ```√æ√æBefore do this, would be good to check properties defined in PostgreSQL profile inside pom.xml file.√æ√æ```√æ<properties>√æ    <jpa.database>POSTGRESQL</jpa.database>√æ    <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>√æ    <jdbc.url>jdbc:postgresql://localhost:5432/petclinic</jdbc.url>√æ    <jdbc.username>postgres</jdbc.username>√æ    <jdbc.password>petclinic</jdbc.password>√æ</properties>√æ```√æYou could also start PostgreSQL locally with whatever installer works for your OS, or with docker:√æ√æ```√ædocker run --name postgres-petclinic -e POSTGRES_PASSWORD=petclinic -e POSTGRES_DB=petclinic -p 5432:5432 -d postgres:9.6.0√æ```√æ√æ## Working with Petclinic in your IDE√æ√æ### Prerequisites√æThe following items should be installed in your system:√æ* Java 8 or above√æ* Maven 3.3+ (http://maven.apache.org/install.html)√æ* git command line tool (https://help.github.com/articles/set-up-git)√æ* Jetty 9.4+ or Tomcat 9+√æ* Your prefered IDE √æ  * Eclipse with the m2e plugin. Note: when m2e is available, there is an m2 icon in Help -> About dialog. If m2e is not there, just follow the install process here: http://www.eclipse.org/m2e/√æ  * [Spring Tools Suite](https://spring.io/tools) (STS)√æ  * IntelliJ IDEA√æ√æ√æ### Steps:√æ√æ1) On the command line√æ```√ægit clone https://github.com/spring-petclinic/spring-framework-petclinic.git√æ```√æ√æ2) Inside Eclipse or STS√æ```√æFile -> Import -> Maven -> Existing Maven project√æ```√æThen either build on the command line `./mvnw generate-resources` or using the Eclipse launcher (right click on project and `Run As -> Maven install`) to generate the CSS.√æConfigure a Jetty or a Tomcat web container then deploy the `spring-petclinic.war` file.√æ√æ3) Inside IntelliJ IDEA√æ√æIn the main menu, select `File > Open` and select the Petclinic [pom.xml](pom.xml). Click on the `Open` button.√æ√æCSS files are generated from the Maven build. You can either build them on the command line `./mvnw generate-resources` √æor right click on the `spring-petclinic` project then `Maven -> Generates sources and Update Folders`.√æ√æGo to the `Run -> Edit Configuration` then configure a Tomcat or a Jetty web container. Deploy the `spring-petclinic.war` file.√æRun the application by clicking on the `Run` icon.√æ√æ√æ4) Navigate to Petclinic√æ√æVisit [http://localhost:8080](http://localhost:8080) in your browser.√æ√æ√æ## Working with Petclinic in IntelliJ IDEA√æ√æ### prerequisites√æThe following items should be installed in your system:√æ√æ√æ## Looking for something in particular?√æ√æ| Java Config |   |√æ|-------------|---|√æ| Java config branch | Petclinic uses XML configuration by default. In case you'd like to use Java Config instead, there is a Java Config branch available [here](https://github.com/spring-petclinic/spring-framework-petclinic/tree/javaconfig) |√æ√æ| Inside the 'Web' layer | Files |√æ|------------------------|-------|√æ| Spring MVC - XML integration | [mvc-view-config.xml](src/main/resources/spring/mvc-view-config.xml)  |√æ| Spring MVC - ContentNegotiatingViewResolver| [mvc-view-config.xml](src/main/resources/spring/mvc-view-config.xml) |√æ| JSP custom tags | [WEB-INF/tags](src/main/webapp/WEB-INF/tags), [createOrUpdateOwnerForm.jsp](src/main/webapp/WEB-INF/jsp/owners/createOrUpdateOwnerForm.jsp)|√æ| JavaScript dependencies | [JavaScript libraries are declared as webjars in the pom.xml](pom.xml) |√æ| Static resources config | [Resource mapping in Spring configuration](/src/main/resources/spring/mvc-core-config.xml#L30) |√æ| Static resources usage | [htmlHeader.tag](src/main/webapp/WEB-INF/tags/htmlHeader.tag), [footer.tag](src/main/webapp/WEB-INF/tags/footer.tag) |√æ| Thymeleaf | In the late 2016, the original [Spring Petclinic](https://github.com/spring-projects/spring-petclinic) has moved from JSP to Thymeleaf. |√æ√æ| 'Service' and 'Repository' layers | Files |√æ|-----------------------------------|-------|√æ| Transactions | [business-config.xml](src/main/resources/spring/business-config.xml), [ClinicServiceImpl.java](src/main/java/org/springframework/samples/petclinic/service/ClinicServiceImpl.java) |√æ| Cache | [tools-config.xml](src/main/resources/spring/tools-config.xml), [ClinicServiceImpl.java](src/main/java/org/springframework/samples/petclinic/service/ClinicServiceImpl.java) |√æ| Bean Profiles | [business-config.xml](src/main/resources/spring/business-config.xml), [ClinicServiceJdbcTests.java](src/test/java/org/springframework/samples/petclinic/service/ClinicServiceJdbcTests.java), [PetclinicInitializer.java](src/main/java/org/springframework/samples/petclinic/PetclinicInitializer.java) |√æ| JDBC | [business-config.xml](src/main/resources/spring/business-config.xml), [jdbc folder](src/main/java/org/springframework/samples/petclinic/repository/jdb) |√æ| JPA | [business-config.xml](src/main/resources/spring/business-config.xml), [jpa folder](src/main/java/org/springframework/samples/petclinic/repository/jpa) |√æ| Spring Data JPA | [business-config.xml](src/main/resources/spring/business-config.xml), [springdatajpa folder](src/main/java/org/springframework/samples/petclinic/repository/springdatajpa) |√æ√æ√æ## Publishing a Docker image√æ√æThis application uses [Google Jib]([https://github.com/GoogleContainerTools/jib) to build an optimized Docker image√æinto the [Docker Hub](https://cloud.docker.com/u/springcommunity/repository/docker/springcommunity/spring-framework-petclinic/)√ærepository.√æThe [pom.xml](pom.xml) has been configured to publish the image with a the `springcommunity/spring-framework-petclinic` image name.√æ√æJib containerizes this WAR project by using the [distroless Jetty](https://github.com/GoogleContainerTools/distroless/tree/master/java/jetty) as a base image.√æ√æBuild and push the container image of Petclinic to the Docker Hub registry:√æ```√æmvn jib:build√æ```√æ√æ√æ## Interesting Spring Petclinic forks√æ√æThe Spring Petclinic master branch in the main [spring-projects](https://github.com/spring-projects/spring-petclinic)√æGitHub org is the ""canonical"" implementation, currently based on Spring Boot and Thymeleaf.√æ√æThis [spring-framework-petclinic](https://github.com/spring-petclinic/spring-framework-petclinic) project is one of the [several forks](https://spring-petclinic.github.io/docs/forks.html) √æhosted in a special GitHub org: [spring-petclinic](https://github.com/spring-petclinic).√æIf you have a special interest in a different technology stack√æthat could be used to implement the Pet Clinic then please join the community there.√æ√æ√æ## Interaction with other open source projects√æ√æOne of the best parts about working on the Spring Petclinic application is that we have the opportunity to work in direct contact with many Open Source projects. We found some bugs/suggested improvements on various topics such as Spring, Spring Data, Bean Validation and even Eclipse! In many cases, they've been fixed/implemented in just a few days.√æHere is a list of them:√æ√æ| Name | Issue |√æ|------|-------|√æ| Spring JDBC: simplify usage of NamedParameterJdbcTemplate | [SPR-10256](https://jira.springsource.org/browse/SPR-10256) and [SPR-10257](https://jira.springsource.org/browse/SPR-10257) |√æ| Bean Validation / Hibernate Validator: simplify Maven dependencies and backward compatibility |[HV-790](https://hibernate.atlassian.net/browse/HV-790) and [HV-792](https://hibernate.atlassian.net/browse/HV-792) |√æ| Spring Data: provide more flexibility when working with JPQL queries | [DATAJPA-292](https://jira.springsource.org/browse/DATAJPA-292) |√æ| Dandelion: improves the DandelionFilter for Jetty support | [113](https://github.com/dandelion/dandelion/issues/113) |√æ√æ√æ# Contributing√æ√æThe [issue tracker](/issues) is the preferred channel for bug reports, features requests and submitting pull requests.√æ√æFor pull requests, editor preferences are available in the [editor config](.editorconfig) for easy use in common text editors. Read more and download plugins at <http://editorconfig.org>."
Dsiner/UIUtil,15083,898,28,185,User,False,"UIUtil for Android, Lyrics, Tick animations, Comparisons, Satellite menus, Praise, Slide buttons, TAB indicators, Contact sorting, Drag sorting, Skidding deletes, Shadow effects, RecyclerView nesting RecyclerView, Map list Poi/Drawer effects, Progress settings, Clock set, Damping, Progress, Album, Snap, Progress, CircleDownload, AdvertSwitcher, Carousel ad, FlowLayout, Tag...; Ê≠åËØçÊéß‰ª∂„ÄÅÊâìÂãæÂä®Áîª„ÄÅÂØπÊØî„ÄÅÂç´ÊòüËèúÂçï„ÄÅÁÇπËµû„ÄÅÊªëÂä®ÊåâÈíÆ„ÄÅTABÊåáÁ§∫Âô®„ÄÅËÅîÁ≥ª‰∫∫ÊéíÂ∫è„ÄÅÊãñÊõ≥ÊéíÂ∫è„ÄÅ‰æßÊªëÂà†Èô§„ÄÅÈò¥ÂΩ±ÊïàÊûú.„ÄÅRecyclerViewÂµåÂ•óRecyclerView.„ÄÅÂú∞ÂõæÂàóË°®Poi/ÊäΩÂ±âÊïàÊûú„ÄÅËøõÂ∫¶ËÆæÁΩÆ„ÄÅÊó∂ÈíüËÆæÁΩÆ„ÄÅÊªëÂä®ÈòªÂ∞º„ÄÅÁõ∏ÂÜåÂ™í‰ΩìÂø´ÁÖß„ÄÅÂúÜÂΩ¢‰∏ãËΩΩËøõÂ∫¶ÔºåËΩÆÊí≠ÂπøÂëä, ÊµÅÂºèÂ∏ÉÂ±ÄÔºåÊ†áÁ≠æ...",,,14,Java,"{'': 2, 'md': 2, 'gradle': 2, 'properties': 1, 'bat': 1}",71,2,0,1,20,1159,True,4,0,1,0,0,0,0,0,7,0,1,1,1186,12569,0,0,30,,63,,"# UIUtil for Android√æ√æ[![License](https://img.shields.io/badge/license-Apache%202-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)√æ[![API](https://img.shields.io/badge/API-9%2B-green.svg?style=flat)](https://android-arsenal.com/api?level=9)√æ[![Readme](https://img.shields.io/badge/README-%E4%B8%AD%E6%96%87-brightgreen.svg)](https://github.com/Dsiner/UIUtil/blob/master/README-zh.md)√æ√æList√æ======================√æName | Explain | Demo√æ--- | --- | ---√æ[LrcView](lib_view/src/main/java/com/d/lib/ui/view/lrc/LrcView.java) | Lrc |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/lrc/lrc.gif"" width=""49%"">√æ[SideBar](lib_view/src/main/java/com/d/lib/ui/view/sort/SideBar.java) | Contact sort |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/sort/sort-center.gif"" width=""49%""> <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/sort/sort.gif"" width=""49%"">√æ[CTickView](lib_view/src/main/java/com/d/lib/ui/view/tick/CTickView.java) | Tick |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/tick/tick.gif"" width=""49%"">√æ[ToggleButton](lib_view/src/main/java/com/d/lib/ui/view/togglebutton/ToggleButton.java) | Button button (slide optional) |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/togglebutton/togglebutton.gif"" width=""49%"">√æ[ReplyBgView](lib_view/src/main/java/com/d/lib/ui/view/replybg/ReplyBgView.java) | Reply message background |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/replybg/replybg.png"" width=""49%"">√æ[VSView](lib_view/src/main/java/com/d/lib/ui/view/vs/VSView.java) | VS„ÄÅCompared |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/vs/vs.gif"" width=""49%"">√æ[HoleBgView](lib_view/src/main/java/com/d/lib/ui/view/stroke/HoleBgView.java) | Hollow background |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/stroke/stroke.png"" width=""49%"">√æ[ArcMenu](lib_view/src/main/java/com/d/lib/ui/view/arcmenu/ArcMenu.java) | Arc menu |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/arcmenu/arcmenu.gif"" width=""49%"">√æ[TCHeartLayout](lib_layout/src/main/java/com/d/lib/ui/layout/heartlayout/TCHeartLayout.java) | Like effect |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/heartlayout/heartlayout.gif"" width=""49%"">√æ[AdvertSwitcher](lib_view/src/main/java/com/d/lib/ui/view/advertswitcher/AdvertSwitcher.java) | Carousel ad |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/advertswitcher/advertswitcher.gif"" width=""49%"">√æ[FlowLayout](lib_view/src/main/java/com/d/lib/ui/view/flowlayout/FlowLayout.java) | Flow tag |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/flowlayout/flowlayout.png"" width=""49%"">√æ[ITouchSort](https://github.com/Dsiner/Xrv) | Drag sort |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Xrv/xrv_drag.gif"" width=""49%"">√æ[SlideLayout](https://github.com/Dsiner/SlideLayout) | Skid delete/menu controls |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/SlideLayout/slidelayout.gif"" width=""49%"">√æ[TabView](https://github.com/Dsiner/TabView) | Slide indicator/button/TAB control |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/TabView/tabview.gif"" width=""49%"">√æ[SettingProgress](lib_view/src/main/java/com/d/lib/ui/view/progress/SettingProgressView.java) | Progress, Level |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/progress/settingprogress.gif"" width=""100%"">√æ[SnapProgressBar](lib_view/src/main/java/com/d/lib/ui/view/progress/SnapProgressBar.java) | Progress, Album, Snap |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/progress/snap.gif"" width=""49%"">√æ[CircleProgressBar](lib_view/src/main/java/com/d/lib/ui/view/progress/SettingProgressView.java) | Progress, Circle, Download |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/progress/circle.gif"" width=""49%"">√æ[Praise](lib_layout/src/main/java/com/d/lib/ui/layout/praise/PraiseLayout.java) | Praise |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/praise/praise.gif"" width=""49%"">√æ[Shadow](lib_layout/src/main/java/com/d/lib/ui/layout/shadow/ShadowLayout.java) | Shadow effect |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/shadow/shadow.png"" width=""49%"">√æ[RecordTrigger](lib/src/main/java/com/d/lib/ui/view/recordtrigger/RecordTriggerView.java) | Voice Trigger |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/recordtrigger/recordtrigger.gif"" width=""49%"">√æ[VerInor](app/src/main/java/com/d/uiutil/verinor/VerInorActivity.java) | RecyclerView Nesting RecyclerView |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/verinor/verinor.gif"" width=""49%"">√æ[PoiLayout](lib_layout/src/main/java/com/d/lib/ui/layout/poi/PoiLayout.java) | Map List Poi, Drawer Effect |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/poi/poi.gif"" width=""49%"">√æ[ClockSetView](lib_view/src/main/java/com/d/lib/ui/view/clock/ClockSetView.java) | Clock Set |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/UIUtil/clock/clockset.gif"" width=""49%"">√æ[RefreshLayout](https://github.com/Dsiner/RefreshLayout) | RefreshLayout |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/RefreshLayout/refreshlayout.gif"" width=""49%"">√æ[Component-UI-Title](https://github.com/Dsiner/Common) | Title |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-title.png"" width=""49%"">√æ[Component-UI-Ds](https://github.com/Dsiner/Common) | DS |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-ds.gif"" width=""49%"">√æ[Component-UI-Row](https://github.com/Dsiner/Common) | Row |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-row.png"" width=""49%"">√æ[Component-UI-Tab](https://github.com/Dsiner/Common) | Tab |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-tab.gif"" width=""49%"">√æ[Component-UI-Alert](https://github.com/Dsiner/Common) | Alert |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-alert.gif"" width=""49%"">√æ[Component-UI-Sheet](https://github.com/Dsiner/Common) | Sheet |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-sheet.gif"" width=""49%"">√æ[Component-UI-Button](https://github.com/Dsiner/Common) | Button |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-button.gif"" width=""49%"">√æ[Component-UI-Status](https://github.com/Dsiner/Common) | Status |  <img src=""https://github.com/Dsiner/Resouce/blob/master/lib/Common/component-ui-status.png"" width=""49%"">√æ√æMore usage see [demo](app/src/main/java/com/d/uiutil/MainActivity.java)√æ√æ## Licence√æ√æ```txt√æCopyright 2017 D√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License.√æ```"
Kowalski-IO/jqb2jooq,31,3,0,2,Organization,False,jQuery QueryBuilder meets JOOQ without the work.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",31,1,0,2,5,892,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,6,1,,,"# jqb2jooq√æjQuery QueryBuilder meets JOOQ without the work.√æ√æ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/io.kowalski/jqb2jooq/badge.svg)](https://maven-badges.herokuapp.com/maven-central/io.kowalski/jqb2jooq)√æ[![Build Status](https://travis-ci.org/Kowalski-IO/jqb2jooq.svg?branch=master)](https://travis-ci.org/Kowalski-IO/jqb2jooq)√æ[![Coverage Status](https://coveralls.io/repos/github/Kowalski-IO/jqb2jooq/badge.svg?branch=master&)](https://coveralls.io/github/Kowalski-IO/jqb2jooq?branch=master)√æ√æWhat is [jQuery QueryBuilder](http://querybuilder.js.org)?√æ√æjqb is a super handy library for your website that allow for the creation of queries and filters.√æ√æ√æWhat is [JOOQ](https://www.jooq.org)?√æ√æTo shamelessly steal their tagline ""JOOQ: The easiest way to write SQL in Java"". This sentiment I agree with completely. √æThe JOOQ library provides a typesafe way to execute queries and is an absolute joy to use.√æ√æ√æThis project aims to be the glue between these two awesome products. jqb2jooq provides the means of defining a mapping from√æjQuery QueryBuilder filter fields to JOOQ auto-generated fields. Once you define this mapping jqb2jooq will handle the conversion of QueryBuilder json to a JOOQ condition, ready to be included in your JOOQ query.√æ√æ√æ## Usage√æ√æGetting started is just as easy as the famed 5 Minute Wordpress Install (only you don't have to use Wordpress :smirk:).√æ√æ**First**, add the following dependency to your pom.xml.√æ√æ```xml√æ<dependency>√æ  <groupId>io.kowalski</groupId>√æ  <artifactId>jqb2jooq</artifactId>√æ  <version>1.0.3</version>√æ</dependency>√æ```√æ***√æ√æ**Second**, you will need to define a mapping between jqb filter fields and JOOQ fields.√æ√æThis is done by creating an enum that implements [RuleTarget.java](src/main/java/io/kowalski/jqb2jooq/RuleTarget.java).√æ√æ```java√æpackage io.kowalski.jqb2jooq.test;√æ√æimport io.kowalski.jqb2jooq.RuleTarget;√æimport org.jooq.Condition;√æimport org.jooq.Field;√æ√æimport static io.kowalski.jqb2jooq.test.jooq.Tables.*;√æ√æpublic enum TestFilterTargets implements RuleTarget {√æ√æ  FULLNAME(EMPLOYEES.FULLNAME),√æ  DOB(EMPLOYEES.DOB),√æ  SALARY(PAYROLL.AMOUNT, PAYROLL.TYPE.eq(""SALARY"")),√æ  HOURLY(PAYROLL.AMOUNT, PAYROLL.TYPE.eq(""HOURLY"")),√æ  FOOD(EMPLOYEES.FAVORITE_FOOD);√æ√æ  private final Field field;√æ  private final Condition[] implicitConditions;√æ√æ  TestFilterTargets(Field field, Condition... implicitConditions) {√æ      this.field = field;√æ      this.implicitConditions = implicitConditions;√æ  }√æ√æ  @Override√æ  public TestFilterTargets parse(String value) {√æ      return TestFilterTargets.valueOf(value);√æ  }√æ√æ  @Override√æ  public Field getField() {√æ      return field;√æ  }√æ√æ  @Override√æ  public Condition[] getImplicitConditions() {√æ      return implicitConditions;√æ  }√æ√æ}√æ```√æ√æ***√æ√æ**Last, but not least**, you need to convert the json filter from jqb to a JOOQ condition.√æ√æjqb2jooq assumes that the json filter has been deserialized into: √æ```java√æMap<String, Object>√æ```√æ√æHere is a quick snippet of how to perform said task with [gson](https://github.com/google/gson).√æ```java√æjava.lang.reflect.Type mapType = new com.google.gson.reflect.TypeToken<Map<String, Object>>() √æ{}.getType();√æ√æMap<String, Object> filterMap = new Gson().fromJson(rawJson, mapType);√æ```√æOnce you have the filter deserialized all you have to do is...√æ√æ```java√æorg.jooq.Condition condition = JQB2JOOQ.parse(TestFilterTargets.class, filterMap);√æ√æ// ...and immediately put it to work√æ√ætry (DSLContext dsl = DSL.using(dataSource, SQLDialect.H2)) {√æ  List<Employees> employees = dsl.select().from(EMPLOYEES)√æ          .where(condition).fetchInto(Employees.class);√æ}√æ√æ```√æ√æ***√æ√æ# That's all folks!√æ√æI hope you enjoy using jqb2jooq! If you notice anything funky please file an issue. :heart:"
joblo2213/RPGMenu,415,3,3,2,Organization,False,RPGMenu is a addon for BetonQuest which allows server operators to simply create thier own guis by using events and items from BetonQuest.,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",13,Java,"{'': 2, 'yml': 1, 'md': 2, 'sh': 1, 'png': 2, 'xml': 1, 'txt': 1}",29,2,6,2,8,833,True,4,11,2,2,0,2,0,0,15,0,0,0,0,0,0,0,7,3,,BetonQuest/RPGMenu,"![header](https://raw.githubusercontent.com/joblo2213/RPGMenu/master/header.png)√æ# RPGMenu [![Build Status](https://travis-ci.org/joblo2213/RPGMenu.svg?branch=master)](https://travis-ci.org/joblo2213/RPGMenu)√æ√æRPGMenu is a addon for [BetonQuest](https://github.com/Co0sh/BetonQuest) which allows server operators to simply create thier own guis√æby using events and items from BetonQuest.  √æNearly everything can be done by using this addon, from simple selection, over warp systems, guis listing open quests to information dialogs that display player stats.√æFor all this you only have to be familliar with BetonQuests events/conditions system, no coding skills are required.√æEverything can be created by simply creating and modifying config files in YAML.√æ√æ## Features √æ* Spigot **1.9**, **1.10**, **1.11**, **1.12** and **1.13** support√æ* Completly **costumizable** guis√æ* **Display** or **hide** items in guis based on **conditions**√æ* Run **events** when items are clicked, menus are opened or closed √æ* **Multilanguage support**: Easily translate your menus to all languages you want√æ* Use **variables** to display quest progress or player stats from other plugins (PlaceholderAPI) √æ* Bind menus to quest items or commands to open them by clicking a item/running a custom command√æ* Active, open source project √æ* [**Wiki**](https://github.com/joblo2213/RPGMenu/wiki) documenting all plugin features√æ√æ## Small example:√æ> ![example](https://camo.githubusercontent.com/4f15b2b4ec801f0cd9f7e6e314b72f1b198d5468/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3432303938353432393834303632353637362f3432343932373739313934383233343737322f67697068792e676966)  √æ> *The config for this example can be found [here](https://github.com/joblo2213/RPGMenu/wiki/Menu#example-menu).*√æ√æ## Getting started √æHead over to **[releases](https://github.com/joblo2213/RPGMenu/releases)** where you can find all releases of the plugin.√æTo install it drop the jar in your plugins folder. √æThe plugin will automatically create a [config](https://github.com/joblo2213/RPGMenu/wiki/Config#plugin-configuration) called `rpgmenu.config.yml` in your BetonQuest folder and create menu folders in all packages.√æHave a look at the [**Wiki**](https://github.com/joblo2213/RPGMenu/wiki) to learn how to creat your first menus.√æ√æ## Discord Server√æI have a discord server where I provide fast support for all my plugins:√æ√æ[![discord](https://discordapp.com/api/guilds/401874838504865792/widget.png?style=banner2)](https://discord.gg/yfCDhMb)  √æ√æI'll also post some updates about current development progress there and we may discuss about new ideas for the plugin.  √æThere also is a channel dedicated to sharing your menus so maybe you'll find some helpfull examples by other useres there or wan't to share your own work.√æSo what are you waiting for? **Join our community where everyone helps each other!**  √æ**This even works without creating a new account**, just follow the link, choose a nickname and start writing with us.√æ√æ## BetonQuest [Editor](https://github.com/Co0sh/BetonQuest-Editor) and [Uploader](https://github.com/Co0sh/BetonQuestUploader)√æThe uploader is completly compatible to this addon.  √æJust zip the packages where you defined your menus and upload them as discribed [here](https://github.com/Co0sh/BetonQuestUploader#as-betonquest-editor-export-tool). √æ√æI currently can't implement this into the BetonQuest-Editor so for now you have to edit the config files directly.√æ√æ## Bugs & Features√æTo report bugs please create a issue with [this template](https://github.com/joblo2213/RPGMenu/issues/new?template=bug_template.md&labels=Bug).√æ√æIf you have some ideas how to improve the plugin please let me know with [this template](https://github.com/joblo2213/RPGMenu/issues/new?template=feature_request.md&labels=Feature).√æ√æI'm always happy to get this kind of feedback, it really helps improving the plugin.√æIf you use the provided templates this saves me a little work. üòÑ√æ√æ## BStats Metrics√æ√æThe plugin uses bStats to collect anonymous data which really helps me improving the plugin.  √æIf you don't want that your server sends data to bStats you can disable it by setting enabled to false in the bStats config file.√æThe config can be found in the _/plugins/bStats/config.yml_ file. BStats has nearly no effect on your server's performance.√æ√æAll collected data can be found [on bstats](https://bstats.org/plugin/bukkit/RPGMenu).√æ√æ## Contributing √æThere are multiple ways you can contribute work to this project:√æ√æIf you are experienced with Java and Spigot plugin development and have a idea for a feature or found a bug feel free to implement/fix it and create a pull request.√æYou don't have to mess with formating, I'll do that later for you, but I would really apreciate if you could ad some method comments.√æ√æIf Java is completely new territory for you, you can still contribute your part:√æTranslate the plugins messages to your language and create a pull request or contribute to the wiki by editing the files in the docs directory and creating a pull request.√æ√æI'm happy about everyone who helps^^√æ√æ## Support me√æIt would help a lot if you could leave a review on [the plugins spigot site](https://www.spigotmc.org/resources/rpgmenu.55170/).√æ√æIf this plugin is really usefull for you and you want you may send me a small donation via [tipeeestream](https://www.tipeeestream.com/ung3froren/donation).√æ√æ## License√æThis plugin is licensed under the **DON'T BE A DICK PUBLIC LICENSE v1.1**.√æYou find a copy of it at [LICENSE](https://github.com/joblo2213/RPGMenu/blob/master/LICENSE).√æ√æ## Credits√æ**A huge ""THANK YOU!"" goes to:** √æ*  my buddy **Windack** for creating the awesome header and the icon.√æ*  [**@Co0sh**](https://github.com/Co0sh) for creating BetonQuest, the best quest plugin out there.√æ*  the discord users **Sfiguz7** and **Allego** for helping with the translation of the plugin√æ*  **all people** who help improving the plugin with bug reports and suggesting issues"
entur/baba,310,0,1,3,Organization,False,Organization register for ninkasi users,,"{'key': 'eupl-1.2', 'name': 'European Union Public License 1.2', 'spdx_id': 'EUPL-1.2', 'url': 'https://api.github.com/licenses/eupl-1.2', 'node_id': 'MDc6TGljZW5zZTM0'}",11,Java,"{'': 2, 'txt': 1, 'md': 1, 'xml': 2}",137,75,20,6,8,1018,True,0,0,0,0,40,37,2,13,8,0,1,29,1171,420,0,0,109,2,,,"# baba [![CircleCI](https://circleci.com/gh/entur/baba/tree/master.svg?style=svg)](https://circleci.com/gh/entur/baba/tree/master)√æOrganization register for ninkasi users√æ√æ## Liveness and readiness√æThe liveness and readiness probes are provided by Spring Actuator and exposed with the following endpoint:√æhttps://<host>:<management port>/actuator/health√æ√æ## Example application.properties file for development√æ√æ```√æserver.port=9004√æ√æ# JPA settings (in-memory)√æspring.jpa.show-sql=false√æspring.jpa.hibernate.ddl-auto=create√æ√æ# logging settings√ælogging.level.no.rutebanken=INFO√ælogging.level.org.apache=INFO√æ```√æ√æ## Example application.properties file for test√æ√æ```√æ√æserver.port=9006√æ√æ# logging settings√ælogging.level.org.hibernate.tool.hbm2ddl=INFO√ælogging.level.org.hibernate.SQL=INFO√ælogging.level.org.hibernate.type=WARN√ælogging.level.org.springframework.orm.hibernate4.support=WARN√ælogging.level.no.rutebanken=INFO√ælogging.level.org.apache=WARN√æ√æ# JPA settings (postgres)√æspring.jpa.database=POSTGRESQL√æspring.datasource.platform=postgres√æspring.jpa.show-sql=false√æspring.jpa.hibernate.ddl-auto=update√æspring.database.driverClassName=org.postgresql.Driver√æspring.datasource.url=jdbc:postgresql://nabudb:5432/baba√æspring.datasource.username=baba√æspring.datasource.password=topsecret√æ√æspring.datasource.username=postgres√æspring.datasource.password=mysecretpassword√æspring.datasource.initializationFailFast=false√æ√æ```√æ√æ√æ## Build and Run√æ√æ* Building√æ`mvn clean install`√æ√æ* Building docker image (using profile h2 for in-memory DB)√æ`mvn -Pf8-build,h2`√æ√æ* Running√æ`mvn spring-boot:run -Ph2 -Dspring.config.location=/path/to/application.properties`√æ√æ√æ## Enable baba to admin users in keycloak√æ√æIn order to mange keycloak users from Baba √æ√æ###  Add client to Realm 'Master'√æ  * Go to the keycloak admin console √æ  * Select realm=Master√æ  * Select 'clients'√æ  * Create new client: baba√æ  * Set 'Access Type' to ""Confidential"", toggle 'Service Accounts Enabled' on and provide a valid url (whatever) as a redirect url and 'Save'√æ  * Add role 'Admin' on tab 'Service Account roles'√æ  * Secret for client is displayed on tab 'Credentials'√æ√æ √æ### Configure baba with username+password for new user and clientID for new client√æ```√æiam.keycloak.admin.client=baba√æiam.keycloak.admin.client.secret=<See 'Credentials' tab for Client.>√æ```√æ√æ√æ# Flyway√æTo create the database for baba, download and use the flyway command line tool:√æhttps://flywaydb.org/documentation/commandline/√æ√æ## Migration√æExecute the migration. Point to the migration files in baba.√æ√æ```√æ./flyway -url=jdbc:postgresql://localhost:5432/baba -locations=filesystem:/path/to/tiamat/src/main/resources/db/migrations migrate√æ```√æ√æ### Example migration√æ```√æ./flyway -url=jdbc:postgresql://localhost:5432/baba -locations=filesystem:/path/to/tiamat/src/main/resources/db/migrations migrate√æFlyway 4.2.0 by Boxfuse√æ√æDatabase password: √æDatabase: jdbc:postgresql://localhost:5432/baba (PostgreSQL 9.6)√æSuccessfully validated 1 migration (execution time 00:00.016s)√æCreating Metadata table: ""public"".""schema_version""√æCurrent version of schema ""public"": << Empty Schema >>√æMigrating schema ""public"" to version 1 - Base version√æSuccessfully applied 1 migration to schema ""public"" (execution time 00:04.220s).√æ```√æ√æ√æ## Baseline existing database√æTo baseline an existing database that does not contain the table `schema_version`.√æThe schema of this database must be exactly equivalent to the first migration file. If not, you might be better off by starting from scratch and using the restoring_import to repopulate the new database.√æ√æ```√æ./flyway -url=jdbc:postgresql://localhost:5432/baba -locations=filesystem:/path/to/baba/src/main/resources/db/migrations baseline√æ```√æ√æ√æ## Schema changes√æCreate a new file according to the flyway documentation in the folder `resources/db/migrations`.√æCommit the migration together with code changes that requires this schema change."
ldtteam/SmithsCore,73644,1,4,1,Organization,False,,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",13,Java,"{'': 4, 'yml': 1, 'txt': 1, 'md': 1, 'gradle': 1, 'properties': 1, 'bat': 1}",364,4,33,3,0,1703,True,1,0,0,0,0,13,0,0,7,0,0,0,0,0,0,0,47,9,,,Smiths Core√æ=========√æ√æSuper mod required for all SmithsModding mods (eventually)√æ√æ## Last Build Status:√æ  * Development:      [![Build Status](https://travis-ci.org/SmithsModding/SmithsCore.svg?branch=Development)](https://travis-ci.org/SmithsModding/SmithsCore)√æ  * Development-1.8:    [![Build Status](https://travis-ci.org/SmithsModding/SmithsCore.svg?branch=Development-1.8)](https://travis-ci.org/SmithsModding/SmithsCore)√æ√æ## Nightly Builds:√æhttp://mavenrepo.smithscore.orionminecraft.com/com/SmithsModding/SmithsCore/SmithsCore/√æ√æ## Requirements:√æ   *  Minecraft 1.7.10√æ   *  Minecraft Forge for 1.7.10 (Officialy supported version: 1.7.10-10.13.3.1420)√æ√æInstallation√æ============√æ## Users:√æ  1. Download all the Dependencies and install those.√æ  2. Drop SmithsCore in the mods folder.√æ  √æ## Modders (JetBrains IDEA):√æ  1. Fork this Repository√æ  2. Download the fork√æ  3. Run on a commandline: √æ      1. gradlew setupDecompWorkspace√æ      2. gradlew idea√æ  4. Inside IDEA:√æ      1. set ~/resources as 'Resources Root'
NTIGBG/TE17D-PRRPRR01,9401,14,5,8,Organization,False,,,,24,Java,"{'': 3, 'md': 1}",143,1,0,2,0,777,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,22,2,,NTI-Kronhus/TE17D-PRRPRR01,"# Aktuell information:√æ√æ* *null*√æ√æ# Bra l√§nkar om programmering:√æ√æ* [Youtube-spellista Java p√• svenska](https://www.youtube.com/watch?v=EJxmM9JYCwg&list=PLpkWX5olvmC9mkjYhvGbl7VSIMAI7MoFC)√æ√æ# Programmering 1 f√∂r TE17D√æ#### Skola: NTI Kronhus√æ#### L√§rare: Joakim '[JaoK](https://github.com/jaok)' Ohlsson √æ#### Kurskod: [PRRPRR01](https://www.skolverket.se/undervisning/gymnasieskolan/laroplan-program-och-amnen-i-gymnasieskolan/gymnasieprogrammen/amne?url=1530314731%2Fsyllabuscw%2Fjsp%2Fsubject.htm%3FsubjectCode%3DPRR%26courseCode%3DPRRPRR01%26lang%3Dsv%26tos%3Dgy&sv.url=12.5dfee44715d35a5cdfa92a3#anchor_PRRPRR01)√æ√æ# Grovplanering√æ√æVecka | Lektion 1 | Lektion 2 | Hemuppgift/L√§xa √æ:----:|-----------|-----------|----------------√æ[34](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v34) | **INTROVECKA**  | Introduktion till Kursen | [Installera Github](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v34/uppgift)√æ[35](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v35) | Introduktion till [GitHub](https://github.com) | [Laboration GitHub](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v35/laboration) | [Installera Eclipse](https://www.eclipse.org/downloads/download.php?file=/oomph/epp/oxygen/R2/eclipse-inst-win64.exe)√æ[36](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v36) | Introduktion till Java & Eclipse | Genomg√•ng Datatyper | [L√§xa GitHub & Java](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v36/uppgift)√æ[37](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v38) | Studiedag | Villkor och Operatorer | [Hemuppgift villkor](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v37/uppgift)√æ[38](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v38) | Loopar |Introduktion till [Kattis](https://open.kattis.com/problems?order=problem_difficulty) | [Hemuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v38/uppgift) fr√•n Kattis√æ[39](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v39) | Modulus och anv√§ndningsomr√•den | Jobba med lektionsuppgifter | [Hemuppgift](#grovplanering) fr√•n Kattis √æ[40](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v40) | Repetition kontrollstrukturer | **F√ñRH√ñR** | *F√∂rh√∂ret* √æ[41](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v41) | Introduktion till Metoder | Inbyggda metoder i String | L√§xa om Metoder √æ[42](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v42) | Presentation av en st√∂rre uppgift | Mer om Metoder | [Hemuppgift](#grovplanering) fr√•n Kattis √æ43 | Buffert/ Jobba med uppgiften | Buffert/ Jobba med uppgiften | *null* √æ44 | **H√ñSTLOV** | **H√ñSTLOV** | *null*√æ[45](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v45) | L√§mna in uppgift  | Arrayer | *null* √æ[46](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v46) | S√∂kning | Sortering | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis√æ[47](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v47) | Olika sorteringsalgoritmer | Jobba med sortering | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis√æ[48](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v48) | Grupparbete ordlista | Genomg√•ng repetition | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis √æ[49](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49) | Ordf√∂rh√∂r/Presentation | Ordf√∂rh√∂r/Presentation | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis √æ[50](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v50) | √ñvningsuppgifter till provet | Betygssamtal/Plugga till provet | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis√æ[51](#grovplanering) | Betygssamtal/Plugga till provet | **JULLOV** | [Bonusuppgift](https://github.com/NTIGBG/TE17D-PRRPRR01/tree/master/v49/bonus) fr√•n Kattis√æ52 | **JULLOV** | **JULLOV** | *null* √æ01 | **JULLOV** | **JULLOV** | *null* √æ[02](#grovplanering) | Repetition | Repetition | *null* √æ03 | **SUDIEDAG** | **PROVET** | *null*√æ[04](#grovplanering) | Algoritmer & Kontrollstrukturer | L√§ra sig bryta ned problem | L√§xa√æ[05](#grovplanering) | √ñvning algoritmer | Fr√•n algoritm till kod | L√§xa√æ[06](#grovplanering) | Att planera st√∂rre program | Anv√§nda sig utav metoder och klasser | L√§xa√æ07 | **SPORTLOV** | **SPORTLOV** | *null*√æ[08](#grovplanering) | Uppgift gissa talet, Planera | Byta planeringar, Koda | *null*√æ[09](#grovplanering) | Koda/Byt tillbaka | Utv√§rdera/F√∂rb√§ttra | *null*√æ[10](#grovplanering) | *Friluftsdag*  | Uppgift H√§nga gubbe| **L√§mna in gissa talet**√æ[11](#grovplanering) | Koda | Mentorsdag | *null*√æ[12](#grovplanering) | Framtidsdag | Koda | *null*√æ[13](#grovplanering) | Koda | Koda | **L√§mna in h√§nga gubbe** √æ[14](#grovplanering) | Utv√§rdera | F√∂rb√§ttra | *null* √æ[15](#grovplanering) | Introduktion OO | Uppgift OO | L√§xa √æ16 | **P√ÖSKLOV** | **P√ÖSKLOV** | *null*√æ√æ√æ# Arbetsomr√•den√æ√æ### Vecka 34-40   Introduktion√æE | C | A  √æ--|---|---√æEleven kommunicerar och anv√§nder sig med viss s√§kerhet utav datavetenskapliga begrepp.|Eleven kommunicerar och anv√§nder sig med viss s√§kerhet utav datavetenskapliga begrepp.|Eleven kommunicerar och anv√§nder sig med s√§kerhet utav datavetenskapliga begrepp.√æEleven redog√∂r √∂versiktligt f√∂r programmeringens m√∂jligheter och begr√§nsningar samt hur programmering har p√•verkat och p√•verkar vardagen.|Eleven redog√∂r utf√∂rligt f√∂r programmeringens m√∂jligheter och begr√§nsningar samt hur programmering har p√•verkat och p√•verkar vardagen.|Eleven redog√∂r utf√∂rligt och nyanserat f√∂r programmeringens m√∂jligheter och begr√§nsningar samt hur programmering har p√•verkat och p√•verkar vardagen.√æEleven redog√∂r √∂versiktligt f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.|Eleven redog√∂r utf√∂rligt f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.|Eleven redog√∂r utf√∂rligt och nyanserat f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.√æ√æ### Vecka 41-03  Programmeringens grunder√æE | C | A  √æ--|---|---√æI sin programmering skapar eleven med konsekvent kodningsstil och tydlig namngivning korrekt, strukturerad och enkelt kommenterad k√§llkod med tillfredsst√§llande resultat.|I sin programmering skapar eleven med konsekvent kodningsstil och tydlig namngivning korrekt, strukturerad och noggrant kommenterad k√§llkod med tillfredsst√§llande resultat.|I sin programmering skapar eleven med konsekvent kodningsstil och tydlig namngivning korrekt, strukturerad och noggrant och utf√∂rligt kommenterad k√§llkod med gott resultat.√æElevens f√§rdiga program eller skript √§r utf√∂rda med tillfredsst√§llande resultat i ett eller flera programspr√•k som √§r stabila och robusta i program av enkel karakt√§r.|Elevens f√§rdiga program eller skript √§r utf√∂rda med tillfredsst√§llande resultat i ett eller flera programspr√•k som √§r stabila och robusta.|Elevens f√§rdiga program eller skript √§r utf√∂rda med gott resultat i ett eller flera programspr√•k som √§r stabila och robusta i program av komplex karakt√§r.√æEleven anpassar med viss s√§kerhet sin planering av programmeringsuppgiften och utf√∂r fels√∂kning av enkla syntaxfel.|Eleven anpassar med viss s√§kerhet sin planering av programmeringsuppgiften och utf√∂r p√• ett systematiskt s√§tt fels√∂kning av syntaxfel, k√∂rtidsfel och programmeringslogiska fel.|Eleven anpassar med s√§kerhet sin planering av programmeringsuppgiften och utf√∂r p√• ett systematiskt och effektivt s√§tt fels√∂kning av syntaxfel, k√∂rtidsfel och programmeringslogiska fel.√æEleven kommunicerar om programmeringsuppgiften och dess utv√§rdering och anv√§nder d√• med viss s√§kerhet datavetenskapliga begrepp.|Eleven kommunicerar om programmeringsuppgiften och dess utv√§rdering och anv√§nder d√• med viss s√§kerhet datavetenskapliga begrepp.|Eleven kommunicerar om programmeringsuppgiften och dess utv√§rdering och anv√§nder d√• med s√§kerhet datavetenskapliga begrepp.√æEleven redog√∂r √∂versiktligt f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.|Eleven redog√∂r utf√∂rligt f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.|Eleven redog√∂r utf√∂rligt och nyanserat f√∂r principer f√∂r att uppn√• god kvalitet vid skapandet av datorprogram.√æ√æ### Vecka 04-09 Algoritmer och Planering"
Fivium/ScriptRunner,6502,6,14,8,Organization,False,Fivium's internal database promotion tool,,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",10,Java,"{'': 2, 'md': 1}",31,1,1,5,0,2222,True,3,2,0,0,0,9,0,0,7,0,0,0,0,0,0,0,16,5,,,ScriptRunner√æ============√æ√æScriptRunner is a command line utility for promoting database source code and metadata in a controlled and repeatable way.√æ√æPlease see the wiki for usage details.
bendisposto/probparsers,141071,9,13,5,User,False,ProB Parser library,,,27,Java,"{'cfg': 1, '': 3, 'yml': 1, 'md': 1, 'gradle': 2, 'html': 1, 'enc': 3, 'bat': 1}",1322,11,36,9,0,3114,False,,,,,1,7,0,0,0,0,0,0,0,0,0,0,105,,68,,"# ProB Parsers Library√æ√æ[![Build Status](https://travis-ci.org/bendisposto/probparsers.svg?branch=develop)](https://travis-ci.org/bendisposto/probparsers)√æ√æ√æ## Using√æReleases are on [Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cde.hhu.stups), Snapshots on https://oss.sonatype.org/content/repositories/snapshots/. You can include the B parser in a gradle build script like this:√æ√æ<pre>√ædef parser_version = '2.9.17' // development version: 2.9.18-SNAPSHOT√ædependencies {√æ compile group: ""de.hhu.stups"", name: ""bparser"", version: parser_version√æ compile group: ""de.hhu.stups"", name: ""ltlparser"", version: parser_version// optional√æ compile group: ""de.hhu.stups"", name: ""parserbase"", version: parser_version√æ compile group: ""de.hhu.stups"", name: ""prologlib"", version: parser_version√æ}√æ</pre>√æ√æThe repository contains some additional parsers:√æ√æ√æ* answerparser - Parses the answers sent by probcli√æ* bparser - Parser for classical B√æ* cliparser - Commandline interface for the classical B + LTL parser√æ* eventbstruct - Parser for the Camille structural syntax√æ* ltlparser - Parser for LTL and CTL√æ* parserbase - Interface classes for the Parsers√æ* prologlib - Library to produce valid Prolog terms  √æ* theorymapping - Parser for Theory mapping files (translation of EventB operators to Prolog predicates)√æ* translator - Translates B values into Java objects.√æ* unicode - Conversion of EventB Unicode Strings to ASCII and vice versa√æ√æ## Building√æRun the 'deploy' target with gradle.√æ√æOn windows you need to install the program 'patch.exe'.√æ√æThe artifacts are copied to the build folder.√æ√æ# Bugs√æPlease report bugs and feature requests at https://probjira.atlassian.net√æ√æ√æ## Content√æ√æ- bparser - parser for classical B (more information in http://www.stups.uni-duesseldorf.de/w/An_Object_Oriented_Parser_For_B_Specifications)√æ- prologlib - library to construct and manipulate well-formed prolog terms√æ- parserbase - library for uniform access to the formal language parsers (e.g. to embed a language into ltl)√æ- ltlparser - parser for LTL formulas - the parser delegates formulas in { } to a formalism specific parser (e.g. to the classical B parser).√æ              Also contains a parser for CTL√æ- answerparser - parser to read answers from the ProB prolog core√æ- unicode - lexer that transforms Event-B expressions and predicates from ASCII to Unicode syntax and vice3 versa (note: this is not extensible!)√æ- cliparser - glue code for embedding the parser in the prolog core (deprecated!)√æ- translator - translator for B expressions to java√æ√æ## Contributors√æThe libraries contain contributions from (in alphabetical order)√æJens Bendisposto, Marc B√ºngener, Fabian Fritz, Dominik Hansen, Sebastian Krings, Michael Leuschel, Daniel Plagge, David Schneider√æ√æ## Licence√æ√æThe ProB Parser Library source code is distributed under the Eclipse Public License - v 1.0 (see epl-v10.html)√æ√æThe Parser Library comes with ABSOLUTELY NO WARRANTY OF ANY KIND !√æThis software is distributed in the hope that it will be useful√æbut WITHOUT ANY WARRANTY. The author(s) do not accept responsibility√æto anyone for the consequences of using it or for whether it serves√æany particular purpose or works at all. No warranty is made about√æthe software or its performance.√æ√æ√æ(c) 2011-2018 STUPS group, University of D√ºsseldorf"
system-sekkei/isolating-the-domain,3414,370,67,62,Organization,False,"architecture sample using : Spring Boot  gradle,  Spring MVC, Thymeleaf,  and MyBatis",,,13,Java,"{'': 3, 'md': 1, 'png': 1, 'gradle': 2, 'bat': 1, 'properties': 1}",1192,1,7,14,0,1847,True,9,80,0,0,0,47,0,0,10,3,3,125,4427,19074,0,0,7,0,,,# „Éâ„É°„Ç§„É≥„ÇíÁã¨Á´ã„Åï„Åõ„Çã Isolating the Domain√æ- Spring Boot√æ- Spring MVC (direct field access)√æ- Thymeleaf√æ- MyBatis SQL Mapper√æ√æ## Ëµ∑ÂãïÊñπÊ≥ï√æ√æ```sh√æ./gradlew bootRun√æ```√æ√æhttp://localhost:8080 „Åß„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÁîªÈù¢„ÇíË°®Á§∫√æ√æ## ÂÆüË°åÂèØËÉΩJar„ÅÆ„Éì„É´„Éâ„Å®ÂÆüË°å√æ√æ```sh√æ./gradlew clean build√æjava -jar webapp/build/libs/webapp.jar√æ```√æ√æ## JIG Ë®≠Ë®à„Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆËá™ÂãïÁîüÊàê√æ√æ```sh√æ./gradlew jig√æ```√æ√æ`webapp/build/jig` ‰ª•‰∏ã„Å´„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Åã„ÇâËá™ÂãïÁîüÊàê„Åó„Åü„ÇØ„É©„Çπ‰∏ÄË¶ß„ÇÑ„ÇØ„É©„Çπ„ÅÆÈñ¢ÈÄ£Âõ≥„ÇíÂá∫Âäõ√æ√æ[JIG Ë®≠Ë®à„Éâ„Ç≠„É•„É°„É≥„Éà](https://github.com/dddjava/jig)√æ√æ## Ë®≠Ë®à„Ç¨„Ç§„Éâ√æ√æ[„Éâ„É°„Ç§„É≥„ÇíÁã¨Á´ã„Åï„Åõ„Çã](https://github.com/system-sekkei/isolating-the-domain/wiki)√æ√æ[„Éâ„É°„Ç§„É≥ÈßÜÂãïË®≠Ë®àÊú¨Ê†ºÂÖ•ÈñÄ](https://www.slideshare.net/masuda220/ss-137608652)√æ√æ[ÂûãÊåáÂêë„ÅÆ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ÔºöË®≠Ë®à„Ç¨„Ç§„Éâ„É©„Ç§„É≥](https://github.com/masuda220/business-logic-patterns/wiki/%E8%A8%AD%E8%A8%88%E3%82%AC%E3%82%A4%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3)√æ√æ[Êõ∏Á±çÔºöÁèæÂ†¥„ÅßÂΩπÁ´ã„Å§„Ç∑„Çπ„ÉÜ„É†Ë®≠Ë®à„ÅÆÂéüÂâá](https://gihyo.jp/book/2017/978-4-7741-9087-7)√æ√æ## „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£√æ√æ![„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£](architecture.png)√æ√æ## ÂèÇËÄÉË≥áÊñô√æ√æ- [Âä¥ÂÉçÂü∫Ê∫ñÊ≥ï](https://elaws.e-gov.go.jp/search/elawsSearch/elaws_search/lsg0500/detail?lawId=322AC0000000049#171)√æ- [Âä¥ÂÉçÂü∫Ê∫ñÈñ¢‰øÇÊ≥ï‰ª§„ÅÆ„ÅÇ„Çâ„Åæ„Åó | Â§ßÈò™Âä¥ÂÉçÂ±Ä](https://jsite.mhlw.go.jp/osaka-roudoukyoku/hourei_seido_tetsuzuki/roudoukijun_keiyaku/hourei_seido/_122090.html)√æ  - ‰∫ãÊ•≠ËÄÖÂêë„Åë„Å´Âä¥ÂÉçÂü∫Ê∫ñÊ≥ï„Çí„Çè„Åã„Çä„ÇÑ„Åô„Åè„Åæ„Å®„ÇÅ„Åü„Éë„É≥„Éï„É¨„ÉÉ„Éà„ÄÇÂä¥ÂÉçÊù°‰ª∂ÈÄöÁü•Êõ∏„ÅÆË¶ãÊú¨‰ªò„Åç„ÄÇ√æ- [ÊôÇÈñìÂ§ñÂä¥ÂÉç„ÅÆ‰∏äÈôêË¶èÂà∂ „Çè„Åã„Çä„ÇÑ„Åô„ÅÑËß£Ë™¨](https://www.mhlw.go.jp/content/000463185.pdf)√æ- [Âä¥ÂÉçÂü∫Ê∫ñÊ≥ï„ÅåÊîπÊ≠£„Åï„Çå„Åæ„Åó„Åü](https://www.mhlw.go.jp/stf/seisakunitsuite/bunya/koyou_roudou/roudoukijun/roukikaitei/index.html)√æ- [ÊîπÊ≠£Âä¥ÂÉçÂü∫Ê∫ñÊ≥ï„Å´‰øÇ„ÇãË≥™ÁñëÂøúÁ≠î](https://www.mhlw.go.jp/topics/2008/12/dl/tp1216-1k.pdf)√æ- [„É¢„Éá„É´Â∞±Ê•≠Ë¶èÂâá](https://www.mhlw.go.jp/bunya/roudoukijun/model/dl/model.pdf)√æ- [Ê≥ïÂÆöÊôÇÈñìÂ§ñÂä¥ÂÉç Âä¥ÂÉçÊôÇÈñìË®àÁÆó„Å´„Å§„ÅÑ„Å¶„ÅÆ„É°„É¢](./docs/overLegalWorkTime.md)
apache/geronimo-txmanager,402,4,4,8,Organization,False,Mirror of Apache Geronimo txmanager,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",5,Java,"{'': 2, 'xml': 1}",113,7,19,5,6,4717,False,,,,,0,0,0,0,0,0,0,0,0,0,89,0,2,869,,,
googleapis/gax-java,16173,122,26,77,Organization,False,Google API Extensions for Java - shared runtime for clients generated by googleapis/gapic-generator,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",31,Java,"{'': 4, 'yml': 2, 'bazel': 1, 'md': 4, 'gradle': 2, 'properties': 1, 'bzl': 3, 'bat': 1, 'txt': 2, 'json': 1}",752,17,91,38,2,1601,True,20,115,7,20,20,971,19,248,139,0,13,56,2415,810,0,0,387,79,,,"Google API Extensions for Java√æ==============================√æ√æ[![Build Status](https://travis-ci.org/googleapis/gax-java.svg?branch=master)](https://travis-ci.org/googleapis/gax-java)√æ√æ[![Code Coverage](https://img.shields.io/codecov/c/github/googleapis/gax-java.svg)](https://codecov.io/github/googleapis/gax-java)√æ√æ- [Documentation](https://googleapis.dev/java/gax/latest/)√æ√æGoogle API Extensions for Java (GAX Java) is a library which aids in the√ædevelopment of client libraries for server APIs, based on [GRPC](http://grpc.io)√æand Google API conventions.√æ√æApplication code will rarely need to use most of the classes within this√ælibrary directly, but code generated automatically from the API definition√æfiles can use services such as paged list iteration, request batching, and√æpolling of long-running operations to provide a more convenient and idiomatic√æAPI surface to callers.√æ√æCurrently, this library shouldn't be used independently from google-cloud-java, otherwise there is√æa high risk of diamond dependency problems, because google-cloud-java uses beta features from this√ælibrary which can change in breaking ways between versions. See [VERSIONING](#versioning) for√æmore information.√æ√æQuickstart√æ----------√æ√æ[//]: # ({x-version-update-start:gax:released})√æIf you are using Maven, add this to your pom.xml file√æ```xml√æ<dependency>√æ  <groupId>com.google.api</groupId>√æ  <artifactId>gax</artifactId>√æ  <version>1.57.0</version>√æ</dependency>√æ<dependency>√æ  <groupId>com.google.api</groupId>√æ  <artifactId>gax-grpc</artifactId>√æ  <version>1.57.0</version>√æ</dependency>√æ```√æ√æIf you are using Gradle, add this to your dependencies√æ√æ```Groovy√æcompile 'com.google.api:gax:1.57.0',√æ  'com.google.api:gax-grpc:1.57.0'√æ```√æ√æIf you are using SBT, add this to your dependencies√æ√æ```Scala√ælibraryDependencies += ""com.google.api"" % ""gax"" % ""1.57.0""√ælibraryDependencies += ""com.google.api"" % ""gax-grpc"" % ""1.57.0""√æ```√æ[//]: # ({x-version-update-end})√æ√æJava Versions√æ-------------√æ√æJava 7 or above is required for using this library.√æ√æContributing√æ------------√æ√æContributions to this library are always welcome and highly encouraged.√æ√æSee the [CONTRIBUTING] documentation for more information on how to get started.√æ√æVersioning√æ----------√æ√æThis library follows [Semantic Versioning](http://semver.org/), but with some√æadditional qualifications:√æ√æ1. Components marked with `@BetaApi` are considered to be ""0.x"" features inside√æ   a ""1.x"" library. This means they can change between minor and patch releases√æ   in incompatible ways. These features should not be used by any library ""B""√æ   that itself has consumers, unless the components of library B that use√æ   `@BetaApi` features are also marked with `@BetaApi`. Features marked as√æ   `@BetaApi` are on a path to eventually become ""1.x"" features with the marker√æ   removed.√æ√æ   **Special exception for google-cloud-java**: google-cloud-java is√æ   allowed to depend on `@BetaApi` features without declaring the consuming√æ   code `@BetaApi`, because gax-java and google-cloud-java move in step√æ   with each other. For this reason, gax-java should not be used√æ   independently of google-cloud-java.√æ√æ1. Components marked with `@InternalApi` are technically public, but are only√æ   public for technical reasons, because of the limitations of Java's access√æ   modifiers. For the purposes of semver, they should be considered private.√æ√æ1. Components marked with `@InternalExtensionOnly` are stable for usage, but√æ   not for extension. Thus, methods will not be removed from interfaces marked√æ   with this annotation, but methods can be added, thus breaking any√æ   code implementing the interface. See the javadocs for more details on other√æ   consequences of this annotation.√æ√æ### Submodule notes√æ√æ- `gax` is stable (>= 1.0.0), so anything not marked `@BetaApi`, `@InternalApi`,√æor `@InternalExtensionOnly` won't break between minor releases. Anything marked√æ`@InternalExtensionOnly` can only break extensions between minor releases.√æ- `gax-grpc` is stable (>= 1.0.0), so anything not marked `@BetaApi`, `@InternalApi`,√æor `@InternalExtensionOnly` won't break between minor releases. Anything marked√æ`@InternalExtensionOnly` can only break extensions between minor releases.√æ- `gax-httpjson` is beta (0.x.y), so anything may change at any time and the public√æAPI should not be considered stable. There is no difference whether a class is√æmarked `@BetaApi` or not; that annotation is only present as a reminder. There is√æalso no difference whether a class is marked `@InternalExtensionOnly` or not; that√æonly implies that the annotation will still be present in 1.0.0.√æ√æ### Feature notes√æ√æ- **Long Running Operations** - This feature is not yet considered stable.√æ- **Streaming** - Streaming features are not yet considered stable.√æ- **Batching** - Batching features are not yet considered stable.√æ- **Generated Code Support** - Features to support generated code is not yet√æ  considered stable.√æ- **Testing** - There are no plans to consider any code in the testlib jar to be stable.√æ√æRepository Structure√æ--------------------√æ√æThis repository contains the following java packages.√æ√æ### gax√æ√æ- `com.google.api.gax.batching` - Contains general-purpose batching logic.√æ- `com.google.api.gax.core` - Contains core interfaces and classes that are not√æ  specific to grpc and could be used in other contexts.√æ- `com.google.api.gax.longrunning` - Contains classes related to long running√æ  operations.√æ- `com.google.api.gax.paging` - Contains classes related to list calls that return√æ  results in pages.√æ- `com.google.api.gax.retrying` - Contains classes related to retrying API calls.√æ- `com.google.api.gax.rpc` - Contains classes related to making RPC calls.√æ√æ### gax-grpc√æ√æ- `com.google.api.gax.grpc` - Contains classes that provide functionality on top√æ  of gRPC calls.√æ- `com.google.longrunning` - Contains the mix-in client for long-running operations√æ  which is implemented by a number of Google APIs.√æ√æ### gax-httpjson√æ√æ- `com.google.api.gax.httpjson` - Contains classes that provide functionality on√æ  top of http/json calls.√æ√æLicense√æ-------√æ√æBSD - See [LICENSE] for more information.√æ√æ[CONTRIBUTING]:https://github.com/googleapis/gax-java/blob/master/CONTRIBUTING.md√æ[LICENSE]: https://github.com/googleapis/gax-java/blob/master/LICENSE"
deadnight7/saikiranBookstoreApp,84736,39,7,58,User,False,An Online Retail Management and Custommer Order Processing System,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",16,Java,"{'': 3, 'yml': 1, 'png': 1, 'md': 1, 'xml': 1}",57,11,0,2,0,2667,True,0,2,0,0,1,2,0,0,7,0,0,0,0,0,0,0,87,,20,,"# Saikiran Bookstores App√æ##### An Online Retail Management and Custommer Order Processing System√æ√æ[![Build Status](https://travis-ci.org/deadnight7/saikiranBookstoreApp.svg?branch=master)](https://travis-ci.org/deadnight7/saikiranBookstoreApp)  [![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=ajZlR3RTa1JyVmhXcmJrRmwzL25DZkJCTDlaV2xWNXZYQWFhQXI4dmlWcz0tLTJLblVqb05QdWJKdG9BWHB6cTY2T1E9PQ==--ed4267af7f7bb087fe691047602a1d733b7d1e3f)](https://www.browserstack.com/automate/public-build/ajZlR3RTa1JyVmhXcmJrRmwzL25DZkJCTDlaV2xWNXZYQWFhQXI4dmlWcz0tLTJLblVqb05QdWJKdG9BWHB6cTY2T1E9PQ==--ed4267af7f7bb087fe691047602a1d733b7d1e3f)√æ√æ### Video Guides  √æ√æ* Installation - https://www.youtube.com/watch?v=FnuKUfAiHUM&t=229s√æ* Project Demo - https://www.youtube.com/watch?v=XeTGQXrDYjE&t=7s√æ√æ√æ### Features √æ* A full fledged online retail website system using java technologies√æ* Frontend supported with HTML5 and CSS3 √æ* Images used as resources only when they are in a real need _For Eg. A product informational purpose_√æ* Ajax powered site _using jQuery as base for javascript_ search for both Administrator as well as Clients√æ* Product image gallery for both the usecases admin/client√æ* Quick dashboard views,√æ* Dashboard consists of the monthly sales and reporting charts powered by google charts√æ * Some of the charts include √æ * Top most view products√æ * Top sold products√æ * The monthly sales revenue and purchases being made by the store√æ √æ√æ### Update 2019 - Installing via Docker√æYou can now install via docker√æ1) Install docker / docker-ce on base system (Docker Install Guide - https://docs.docker.com/v17.12/install/)√æ2) Clone Project Repo√æ```√æ$ git clone https://github.com/deadnight7/saikiranBookstoreApp.git√æ```√æ3) Navigate to docker dir and execute docker-compose√æ```√æ$ cd saikiranBookstoreApp/docker√æ$ docker-compose up -d√æ```√æ√æDocker compose will perform these steps√æ- Hosted project on tomcat locally on port :80 (http://localhost/saikiranBookstoreApp)√æ- PhpMyadmin will be exposed on port 7577 (User: root, Password: password)√æ- MySQL will be exposed on port 3307 (User: root, Password: password)√æ*Make sure all respective ports are open and not used by any other applications√æ√æ√æ### Guide to installing saikiranBookStoreApp into your machine√æPrerequisites - Must be having on the client computer before installation√æ√æ* A copy of JDK/JRE + Netbeans 7.x +√æ http://netbeans.org/downloads/√æ √æ* A built in or external container like Apache Tomcat 7.x +√æ http://tomcat.apache.org√æ √æ* MySQL Database with the same name as the project, (Use an Xampp)√æ* Given the MySQL File (.sql) Under jLibs directory of project root, Import the file into your database and you have your tables ready√æ* Configuring Apache Server along with MySQL will be probably s system like mine for using phpMyAdmin√æ* _Install XAMPP/WAMPP as per the the above two steps if dont need to install manually_√æ http://www.apachefriends.org/en/xampp.html√æ* Try to change the username and passwords as per your database users for both of the file DB_Comm in packages database and cart respectively √æ √æ* Clean the project, Build the project and deploy it into the container√æ* Resolve the referencing problems if any by adding the project Server _Apache Tomcat_ and/or the jLibs directory under the project root√æ* Run your project copy√æ* Custommize the products and users as per your requirement√æ* Done√æ√æ## Project Diagrams√æFollow the documentation here√æhttp://www.4shared.com/office/AEf2a-PW/Binder2.html√æ√æBy Chirag Pandit - √æYou can reach me out on √æ* Facebook - https://www.facebook.com/chirag.pandit07√æ* LinkedIn - https://www.linkedin.com/in/chirag-pandit-15193638/√æ√æ### Testing Partners√æ√æ![Testing partners Browserstack](/web/images/logo/Browserstack-logo1.png)√æ√æ### Licence√æProject is [MIT licensed](./LICENSE)."
Viper-Project/android_packages_apps_Venom,7361,1,0,6,Organization,False,,,,3,Java,{'md': 1},86,3,0,25,0,1026,True,0,1,0,0,0,2,0,0,8,0,0,0,0,0,0,0,66,4,,ViperOS/android_packages_apps_Venom,
NCI-Agency/anet,39517,14,8,10,Organization,False,Advisor Network,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",31,JavaScript,"{'yml': 4, '': 2, 'md': 4, 'gradle': 2, 'bat': 1, 'sql': 3, 'pl': 2}",8809,63,113,23,1,1350,True,118,581,33,41,21,2361,19,329,25,5,0,0,0,0,0,0,2,0,,,"[![Demo](https://img.shields.io/badge/demo-online-brightgreen.svg)](http://anet-demo.azurewebsites.net)√æ[![Build Status](https://travis-ci.org/NCI-Agency/anet.svg?branch=candidate)](https://travis-ci.org/NCI-Agency/anet)√æ[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=SHc2WTI5cFg2Z2h2NFVzMWlYbXVkM2xCYTdZMzVPV2FzRUhEVUpEL3NTUT0tLTdFVy9CWmlRa04yMGlCZldialMxc3c9PQ==--097d5f51f524d9e66cffde76b48cc2116bbe3372)](https://www.browserstack.com/automate/public-build/SHc2WTI5cFg2Z2h2NFVzMWlYbXVkM2xCYTdZMzVPV2FzRUhEVUpEL3NTUT0tLTdFVy9CWmlRa04yMGlCZldialMxc3c9PQ==--097d5f51f524d9e66cffde76b48cc2116bbe3372)√æ[![Docker Pulls](https://img.shields.io/docker/pulls/ncia/anet-app-server.svg)](https://hub.docker.com/r/ncia/anet-app-server/)√æ[![Coverity Scan Build Status](https://scan.coverity.com/projects/14060/badge.svg)](https://scan.coverity.com/projects/nci-agency-anet)√æ[![Quality Gate](https://sonarcloud.io/api/badges/gate?key=ncia%3Aanet%3Acandidate)](https://sonarcloud.io/dashboard?id=ncia%3Aanet%3Acandidate)√æ<a href=""https://www.versioneye.com/user/projects/5a3bb1280fb24f7a580004a9""><img src=""https://www.versioneye.com/user/projects/5a3bb1280fb24f7a580004a9/badge.svg?style=flat-square""></a>√æ√æ## What is ANET?√æ√æThe Advisor Network (""ANET"") is a tool to track relationships between advisors and advisees. ANET was initially built by the [Defense Digital Service](https://www.dds.mil/) in support of the USFOR-A and Resolute Support mission to train, advise, and assist the Afghan government. ANET is currently further developed by the [NATO Communication and Information Agency](https://www.ncia.nato.int/) and published over [here](https://github.com/NCI-Agency/anet). √æ√æAlthough this tool was built in a very specific context, ANET has many potential applications. At its core, ANET is a way of tracking  reports and tying them to authors, organizations, and goals. It also simplifies relationships between members of an organization, and members of different organizations -- like NATO and the Afghan government. √æ√æIn making this software available to the open source community, it is our hope that other groups are able to use ANET to meet their needs. We would also welcome contributions that help improve functionality, add features, and mature this work. √æ√æ√æ## Setting up your development environment√æThis repository is structured in two main, disparate components: the frontend and the backend. The frontend is a react.js based JavaScript application that communicates with the backend via XMLHttpRequest (ajax). The backend is a Java application based the Dropwizard framework that runs on a JVM and utilizes Microsoft SQL Server for its database.√æ√æ√æWe recommend reading through the documentation in the following order:√æ√æ1. [Getting your Development Environment Set Up](./docs/dev-setup.md)√æ1. [Working on the backend](./docs/backend-overview.md)√æ1. [Working on the frontend](./docs/frontend-overview.md)√æ1. See [DOCUMENTATION.md](./docs/DOCUMENTATION.md), [INSTALL.md](./docs/INSTALL.md) and [TROUBLESHOOT.md](./docs/TROUBLESHOOT.md) for additional information.√æ1. See [User Workflows](./docs/User_Workflows_and_Documentation.md) for details on user workflows. √æ√æ√æ## Contributing√æ√æAs part of the Defense Digital Service's goal of bringing technology industry practices to the U.S. Department of Defense, we welcome contributions to this repository from the open source community. If you are interested in contributing to this project, please review `CONTRIBUTING.md` and `LICENSE.md`. Those files describe how to contribute to this work.√æ√æWorks created by U.S. Federal employees as part of their jobs typically are not eligible for copyright in the United States. In places where the contributions of U.S. Federal employees are not eligible for copyright, this work is in the public domain. In places where it is eligible for copyright, such as some foreign jurisdictions, this work is licensed as described in `LICENSE.md`."
FIDUCEO/MMS,14178,2,2,3,Organization,False,Multisensor matchup system,,,18,Java,"{'': 1, 'md': 2, 'txt': 1, 'pdf': 1, 'sh': 4, 'me': 1, 'xml': 1}",1723,3,36,3,0,1785,True,1,0,0,0,1,8,1,0,7,0,0,0,0,0,0,0,18,1,,,"# fiduceo√æ<h1>Introduction</h1>√æ√æThe aim of Fiduceo (Fidelity and Uncertainty in Climate record from Earth Observation) is to set new standard in measuring the accuracy and rigour in the generation of FCDRs (Fundamental Climate Data Records) and CDRs (Climate Data Records) with defensible uncertainty and stability information of level 1 satellite dataset. The approach is to enable to use more than 20 years-long statellite sensors series to create four new FCDRs, then use the metrological FCDRs to derive CDRs in rigorous manner.√æ√æsource base for Horizon-2020 project ""Fiduceo"""
neo4j-contrib/neo4j-tinkerpop-api-impl,60,20,13,13,Organization,False,Implementation of Apache Licensed Neo4j API for Tinkerpop3,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",8,Java,"{'': 1, 'yml': 1, 'txt': 3, 'xml': 1}",32,9,9,2,0,1852,True,8,5,1,1,2,4,0,0,7,0,0,0,0,0,60,0,143,16,,,"Implementation of Apache Licensed Neo4j API for Tinkerpop3√æ==========================================================√æ√æThis repository contains both, the implementation of the `neo4j-tinkerpop-api`√æin `neo4j-tinkerpop-api-impl`√æ√æThis is work in progress, it depends on neo4j-gremlin being updated to use `neo4j-tinkerpop-api`√æwhich is available here (https://github.com/jexp/incubator-tinkerpop)√æ√æTo build:√æ√æ````√æ# build tinkerpop3 branch with neo4j-gremlin updated√æ√ægit clone https://github.com/jexp/incubator-tinkerpop√æcd incubator-tinkerpop√ægit checkout neo4j-gremlin√æmvn clean install -DskipTests√æcd ..√æ√æ# build neo4j-tinkerpop-api√æ√ægit clone github.com/neo4j-contrib/neo4j-tinkerpop-api√æcd neo4j-tinkerpop-api√æmvn clean install√æcd ..√æ√æ# build neo4j-tinkerpop-api-impl√æ√ægit clone github.com/neo4j-contrib/neo4j-tinkerpop-api-impl√æcd neo4j-tinkerpop-api-impl√æmvn clean install√æ√æ# run neo4j-gremlin tests√ægit clone github.com/neo4j-contrib/neo4j-tinkerpop-api-binding√æcd neo4j-tinkerpop-api-binding/neo4j-tinkerpop-api-tests√æmvn -o install√æ√æ...√æTests run: 1903, Failures: 2, Errors: 12, Skipped: 382√æ√æ````√æ√æ# Support for running Gremlin as Stored Procedure in Neo4j 3.x√æ√æ√æ```√æmvn package√æcp target/neo4j-tinkerpop-api-impl-0.3-3.0.0-procedure.jar  $NEO4J_HOME/plugins/√æ$NEO4J_HOME/bin/neo4j restart√æ$NEO4J_HOME/bin/neo4j-shell√æneo4j-sh (?)$ cypher call gremlin.run(""g.V().hasLabel('Product').has('productName',name)"", {name:'Chai'});√æ√æ+--------------------------------------------------------------------+√æ| value                                                              |√æ+--------------------------------------------------------------------+√æ| Node[343]{productName:""Chai"",quantityPerUnit:""10 boxes x 20 bags""} |√æ+--------------------------------------------------------------------+√æ1 row√æ√æ```√æ√æ// cypher call gremlin.run(""g.V().hasLabel('Product').has('productName',name).both().out().path().take(10)"", {name:'Chai'});"
callicoder/spring-boot-react-oauth2-social-login-demo,1816,512,34,343,User,False,"Spring Boot React OAuth2 Social Login with Google, Facebook, and Github",,,4,Java,"{'md': 1, 'png': 1}",51,6,0,1,15,630,True,17,3,6,0,7,3,2,1,9,0,1,1,3,3,0,0,64,,1,,"# Spring Boot React OAuth2 Social Login Demo√æ√æ![App Screenshot](screenshot.png)√æ√æ## Setting up the Backend Server (spring-social)√æ√æ+ **Create MySQL database**√æ√æ ```bash√æ mysql> create database spring_social√æ ```√æ√æ+ **Configure database username and password**√æ√æ ```yml√æ # spring-social/src/main/resources/application.yml√æ spring:√æ     datasource:√æ         url: jdbc:mysql://localhost:3306/spring_social?useSSL=false√æ         username: <YOUR_DB_USERNAME>√æ         password: <YOUR_DB_PASSWORD>√æ ```√æ√æ+ **Specify OAuth2 Provider ClientId's and ClientSecrets**√æ √æ > This is optional if you're testing the app in localhost. A demo clientId and clientSecret is already specified.√æ√æ ```yml√æ    security:√æ      oauth2:√æ        client:√æ          registration:√æ            google:√æ              clientId: <GOOGLE_CLIENT_ID>√æ              clientSecret: <GOOGLE_CLIENT_SECRET>√æ              redirectUriTemplate: ""{baseUrl}/oauth2/callback/{registrationId}""√æ              scope:√æ                - email√æ                - profile√æ            facebook:√æ              clientId: <FACEBOOK_CLIENT_ID>√æ              clientSecret: <FACEBOOK_CLIENT_SECRET>√æ              redirectUriTemplate: ""{baseUrl}/oauth2/callback/{registrationId}""√æ              scope:√æ                - email√æ                - public_profile√æ            github:√æ              clientId: <GITHUB_CLIENT_ID>√æ              clientSecret: <GITHUB_CLIENT_SECRET>√æ              redirectUriTemplate: ""{baseUrl}/oauth2/callback/{registrationId}""√æ              scope:√æ                - user:email√æ                - read:user√æ          provider:√æ            facebook:√æ              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth√æ              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token√æ              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)√æ ```√æ√æ *Please make sure that `http://localhost:8080/oauth2/callback/<provider>`* is added as an authorized redirect uri in the OAuth2 provider. For example, In your [Google API console](https://console.developers.google.com/projectselector/apis/credentials?pli=1), make sure that `http://localhost:8080/oauth2/callback/google` is added in the **Authorized redirect URIs**√æ√æ *Also, make sure that the above mentioned scopes are added in the OAuth2 provider console.* For example, scope `email` and `profile` should be added in your Google project's OAuth2 consent screen.√æ√æ+ **Run spring-social**√æ√æ ```bash√æ mvn spring-boot:run√æ ```√æ√æ## Setting up the Frontend Server (react-social)√æ√æ```bash√æcd react-social√ænpm install && npm start√æ```"
dcm4che/dcm4che,60260,629,125,466,Organization,False,DICOM Implementation in JAVA,www.dcm4che.org,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",36,Java,"{'': 1, 'yml': 1, 'txt': 1, 'md': 1, 'xml': 1}",2584,18,64,21,0,3568,True,57,443,6,95,8,237,0,37,9,1,0,0,0,0,0,0,41,7,,,"dcm4che DICOM Toolkit & Library√æ=========================√æSources: https://github.com/dcm4che/dcm4che  √æBinaries: https://sourceforge.net/projects/dcm4che/files/dcm4che3  √æIssue Tracker: https://github.com/dcm4che/dcm4che/issues  √æBuild Status: [![Build Status](https://travis-ci.org/dcm4che/dcm4che.svg?branch=master)](https://travis-ci.org/dcm4che/dcm4che)√æ√æThis is a complete rewrite of [dcm4che-2.x](http://www.dcm4che.org/confluence/display/d2/).√æ√æOne main focus was to minimize the memory footprint of the DICOM data sets.√æIt already provides modules to store/fetch configuration data to/from LDAP,√æcompliant to the DICOM Application Configuration Management Profile,√æspecified in [DICOM PS 3.15](http://dicom.nema.org/medical/dicom/current/output/html/part15.html#chapter_H), Annex H.√æ√æBuild√æ-----√æAfter installation of [Maven 3](http://maven.apache.org):√æ√æ    > mvn install√æ√æModules√æ-------√æ- dcm4che-audit√æ- dcm4che-audit-keycloak√æ- dcm4che-conf√æ  - dcm4che-conf-api√æ  - dcm4che-conf-api-hl7√æ  - dcm4che-conf-json√æ  - dcm4che-conf-json-schema√æ  - dcm4che-conf-ldap√æ  - dcm4che-conf-ldap-audit√æ  - dcm4che-conf-ldap-hl7√æ  - dcm4che-conf-ldap-imageio√æ  - dcm4che-conf-ldap-schema√æ- dcm4che-core√æ- dcm4che-dcmr√æ- dcm4che-deident√æ- dcm4che-dict√æ- dcm4che-dict-priv√æ- dcm4che-emf√æ- dcm4che-hl7√æ- dcm4che-image√æ- dcm4che-imageio√æ- dcm4che-imageio-opencv√æ- dcm4che-imageio-rle√æ- dcm4che-js-dict√æ- dcm4che-json√æ- dcm4che-mime√æ- dcm4che-net√æ- dcm4che-net-audit√æ- dcm4che-net-hl7√æ- dcm4che-net-imageio√æ- dcm4che-soundex√æ- dcm4che-ws-rs√æ- dcm4che-xdsi√æ- dcm4che-jboss-modules√æ√æUtilities√æ---------√æ- [dcm2dcm][]: Transcode DICOM file according the specified Transfer Syntax√æ- [dcm2jpg][]: Convert DICOM image to JPEG or other image formats√æ- [dcm2json][]: Convert DICOM file in JSON presentation√æ- [dcm2pdf][]: Extract encapsulated PDF, CDA or STL from DICOM file√æ- [dcm2str][]: Apply Attributes Format Pattern to dicom file or command line parameters.√æ- [dcm2xml][]: Convert DICOM file in XML presentation√æ- [dcmdir][]: Dump, create or update DICOMDIR file√æ- [dcmdump][]: Dump DICOM file in textual form√æ- [dcmldap][]: Insert/remove configuration entries for Network AEs into/from LDAP server√æ- [dcmqrscp][]: Simple DICOM archive√æ- [dcmvalidate][]: Validate DICOM object according a specified Information Object Definition√æ- [deidentify][]: De-identify one or several DICOM files√æ- [emf2sf][]: Convert DICOM Enhanced Multi-frame image to legacy DICOM Single-frame images√æ- [findscu][]: Invoke DICOM C-FIND Query Request√æ- [getscu][]: Invoke DICOM C-GET Retrieve Request√æ- [hl72xml][]: Convert HL7 v2.x message in XML presentation√æ- [hl7pix][]: Query HL7 v2.x PIX Manager√æ- [hl7rcv][]: HL7 v2.x Receiver√æ- [hl7snd][]: Send HL7 v2.x message√æ- [ianscp][]: DICOM Instance Availability Notification receiver √æ- [ianscu][]: Send DICOM Instance Availability Notification√æ- [jpg2dcm][]: Convert JPEG images or MPEG videos in DICOM files√æ- [json2csv][]: Convert Archive configuration schema JSON files to CVS and vice versa√æ- [json2rst][]: Generate ReStructuredText files from Archive configuration schema JSON files√æ- [mkkos][]: Make DICOM Key Object Selection Document√æ- [modality][]: Simulates DICOM Modality√æ- [movescu][]: Invoke DICOM C-MOVE Retrieve request√æ- [mppsscp][]: DICOM Modality Performed Procedure Step Receiver√æ- [mppsscu][]: Send DICOM Modality Performed Procedure Step√æ- [pdf2dcm][]: Convert PDF file into DICOM file√æ- [stgcmtscu][]: Invoke DICOM Storage Commitment Request√æ- [storescp][]: DICOM Composite Object Receiver√æ- [storescu][]: Send DICOM Composite Objects√æ- [stowrs][]: Send DICOM Composite Objects or Bulkdata file over Web√æ- [swappxdata][]: Swaps bytes of uncompressed pixel data in DICOM files√æ- [syslog][]: Send Syslog messages via TCP/TLS or UDP to a Syslog Receiver√æ- [syslogd][]: Receives RFC 5424 Syslog messages via TCP/TLS or UDP√æ- [upsscu][]: Invokes services of Unified Procedure Step Service Class√æ- [wadors][]: Wado RS Client Simulator √æ- [wadows][]: Wado WS Client Simulator √æ- [xml2dcm][]: Create/Update DICOM file from/with XML presentation√æ- [xml2hl7][]: Create HL7 v2.x message from XML presentation√æ√æ[dcm2dcm]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2dcm/README.md√æ[dcm2jpg]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2jpg/README.md√æ[dcm2json]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2json/README.md√æ[dcm2pdf]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2pdf/README.md√æ[dcm2str]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2str/README.md√æ[dcm2xml]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcm2xml/README.md√æ[dcmdir]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcmdir/README.md√æ[dcmdump]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcmdump/README.md√æ[dcmldap]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcmldap/README.md√æ[dcmqrscp]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcmqrscp/README.md√æ[dcmvalidate]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-dcmvalidate/README.md√æ[deidentify]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-deidentify/README.md√æ[emf2sf]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-emf2sf/README.md√æ[findscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-findscu/README.md√æ[getscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-getscu/README.md√æ[hl72xml]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-hl72xml/README.md√æ[hl7pix]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-hl7pix/README.md√æ[hl7rcv]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-hl7rcv/README.md√æ[hl7snd]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-hl7snd/README.md√æ[ianscp]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-ianscp/README.md√æ[ianscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-ianscu/README.md√æ[jpg2dcm]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-jpg2dcm/README.md√æ[json2csv]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-json2csv/README.md√æ[json2rst]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-json2rst/README.md√æ[mkkos]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-mkkos/README.md√æ[modality]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-ihe/dcm4che-tool-ihe-modality/README.md√æ[movescu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-movescu/README.md√æ[mppsscp]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-mppsscp/README.md√æ[mppsscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-mppsscu/README.md√æ[pdf2dcm]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-pdf2dcm/README.md√æ[stgcmtscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-stgcmtscu/README.md√æ[storescp]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-storescp/README.md√æ[storescu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-storescu/README.md√æ[stowrs]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-stowrs/README.md√æ[swappxdata]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-swappxdata/README.md√æ[syslog]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-syslog/README.md√æ[syslogd]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-syslogd/README.md√æ[upsscu]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-upsscu/README.md√æ[wadors]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-wadors/README.md√æ[wadows]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-wadows/README.md√æ[xml2dcm]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-xml2dcm/README.md√æ[xml2hl7]: https://github.com/dcm4che/dcm4che/blob/master/dcm4che-tool/dcm4che-tool-xml2hl7/README.md√æ√æLicense√æ-------√æ* [Mozilla Public License Version 1.1](http://www.mozilla.org/MPL/1.1/)"
electricalwind/data7,1255,18,3,11,User,False,A vulnerability patch gathering tool,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",15,Java,"{'': 4, 'txt': 2, 'md': 1, 'yml': 1, 'bib': 1, 'xml': 1}",63,1,5,3,0,879,True,1,2,0,0,1,2,0,0,8,0,0,0,0,0,0,0,19,,9,,"# Data7 Project: An automatically generated Vulnerability dataset√æ√æ[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)√æ√æ![version](https://img.shields.io/badge/data7-1.4-green.svg)√æ√æ## Citing Data7√æ√æThe Data7 was published as an engineering paper in SCAM'18. You can find it here:√æ[![Paper](https://img.shields.io/badge/Paper-orbilu-blue.svg)](http://hdl.handle.net/10993/36157)√æ√æTo cite Data7, pleae use the following bib entry:√æ[![Cite](https://img.shields.io/badge/Citing-bibtex-green.svg)](data7.bib)√æ√æ## What is it?√æ√æData7 is a tool that put together vulnerability report and vulnerability patches  of a given software project in an automated way under the form of a dataset. Once created the dataset can then easily be updated with the latest information available. The information that can be found in the dataset is the following:√æ    √æ* CVE number√æ* description√æ* CWE number (if applicable)√æ* time of creation √æ* time of last modification√æ* CVSS severity score√æ* bug ids (if existing)   √æ* list of impacted versions√æ* list of commits that fixed the vulnerability which contains:√æ - hash√æ - timestamp√æ - message√æ - fixes (files in their states before and after fix)√æ    √æ## Why? √æ√æWhen investigating a vulnerability, a security analyst need as much information as possible on it and usually reports are a good starting point. However, the most insightful piece of information on the vulnerability is usually the fix that was created to solve it. From the fix, the origin of the vulnerability and its type can be determined. Fixes when available can be found as separated links in the reports but it is far from being always the case. √æIf linking fixes and reports by hand is possible, it is time consuming. So when the analysis of not one but many vulnerabilities is considered then it is not possible to do it by hand anymore. A good example of a case where the analysis of a large number of vulnerabilities is required is the creation of a Vulnerability Prediction Model. √æ√æThus, the link should be made automatically and not manually which is possible by cross-checking information from vulnerability report, bug trackers and versioning history and that's precisely what data7 is doing.√æ√æ## Requirements√æ√æTo create and update a dataset an internet connection is required. However nothing is required to read an existing data7.√æOther dependencies are handled through maven.√æ√æ## Setting Things Up √æ √æ ```√æ git clone https://github.com/electricalwind/data7/√æ cd data7/√æ mvn install√æ ```√æ## How does it work ?√æ√æFor a given project P√æ√æ* Creating a dataset√æ    1. Data7 will first connect to the NVD database and download all the XML feeds for vulnerabilities (2002-Current Year)√æ    2. Data7 will then parse all the XML and retrieve all vulnerabilities reported for P over the history√æ    3. For each vulnerability, all declared links are analysed and if a mention to a bug report is made or a link to a fix commit is present, they are saved√æ    4. The git repository of P is cloned in a local folder√æ    5. For each vulnerability that had a link to a fixing commit, all information on the commit are retrieved from the git repository and added to the one of the vulnerability√æ    6. For each commit in the versioning history that was not yet analysed in (v.), analyse the message and look for a bug id that was present in the report or for a CVE Identifier and if a match is made then commit information is added to the vulnerability information.√æ√æ√æ* Updating a dataset√æ    1. Data7 first check when the latest update occurred, if less than 7 days passed since the last update, only the modified and recent xml feed are downloaded, otherwise all xml feeds from years that have been modified since the last update are downloaded√æ    2. Data7 will then parse the XML and retrieve all vulnerabilities reported for P and create a new entry if there is a new vulnerability or update it if necessary√æ    3. For each updated or created vulnerability entry, look for a new link of commit fix and/or bug id.√æ    4. The git repository is pulled√æ    5. For all new/updated entry  that has a new link, retrieve the commit information√æ    6. For all entry that has a new bug id, check whether this bug id was already found in the commit history (from a previous crawl)√æ    7. For all latest commit (since latest update), analyse the message and look for a bug id that was present in the report or for a CVE Identifier and if a match is made then the commit information is added to the vulnerability information. √æ√æ√æ## Dataset Structure√æ√æThe dataset generated by data7 can be accessed in two ways (a third one is planned in the future) either through an API relying on a data7 Object that can be serialized or through an XML file.√æ√æ### API (binary form)√æ√æ![schema](doc/model.png)√æ√æWhen calling upon the creation or the update of a dataset, the user will receive a Data7 object. This object contains information on the project the dataset is based on (see next section), and the vulnerability dataset (VulnerabilitySet Object), other fields are present but only contain additive information required by the tool for update such as a list of bug id and their corresponding hash commit, a list of bug id to CVE identifiers, a list of all hash already processed and a list of found cve identifiers in commit for whose report is not yet available which can be interesting to investigate not yet disclosed vulnerabilities.√æ√æThe vulnerabilitySet object is composed of the following information, a list of every vulnerability ever reported for the chosen project (list of Vulnerability Object) and the last time the dataset was updated last.√æ√æA Vulnerability Object entry has the following information integrated:√æ√æ* CVE number√æ* description of the vulnerability in the report√æ* CWE number (if applicable)√æ* time of creation √æ* time of last modification√æ* CVSS severity score√æ* bug ids (if existing, can be more than one)   √æ* list of impacted versions√æ* list of fixing commit (Commit object)√æ√æA Commit Object contains the hash, the message and the timestamp of the commit as well as the list of files that were modifier (FileFix Object).√æ√æA FileFix Object contains information on time the file was last modified before the given commit and its corresponding previous hash as well as the file in its state before and after commit (FileInterest Object).√æ√æA FileInterest Object contains the text of the file and its fullPath in the project.√æ√æ√æ√æ### XML exporter√æ√æThe dataset can as well be exported as an XML file that will only contain vulnerability with reported fixes.√æThe schema of the xml is the following:√æ√æ```xml√æ<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>√æ    <data7 last_updated=""YYYY-MM-DD HH:mm:ss CEST"" project=""project name"">√æ      <cve id=""CVE-YYYY-XXXXXX"" last_modified=""timestamp"">√æ        <cwe></cwe>√æ        <score></score>√æ        <description></description>√æ        <affectedVersions>√æ          <version></version>√æ        </affectedVersions>√æ        <bugs/>√æ        <patches>√æ          <commit hash=""aaaaaaa"" timestamp=""xxxxxxx"">√æ            <message></message>√æ            <files>√æ              <file>√æ                <before hash=""aaaaaaaa"" path=""src/file.c"">√æ                Content of the file√æ                </before>√æ                <after path=""src/file.c"">√æ                Content of the file√æ                </after>√æ              </file>√æ            </files>√æ          </commit>√æ        </patches>√æ      </cve>√æ    </data7>√æ```                √æ√æ### Extending to other tools/database√æ√æAs analysts might want to import the dataset to their own tool or favourite database, a last option is possible that allow the user to import the data at the same time the dataset is being built/update through an Observer. Indeed, when asking to update/create a dataset the user can pass as an argument a listener that implements the DatasetUpdateListener interface that will notify of the latest update in live.√æ√æThe interface offer 6 notifications:√æ√æ* when a bug is added to a vulnerability√æ* when a commit is added to a vulnerability√æ* when a score is updated (CVSS)√æ* when a cwe is updated√æ* when a new vulnerability is added√æ* when the update is finished√æ√æand is presented as follows:√æ√æ```java√æpackage data7.importer.cve;√æ√æimport data7.model.vulnerability.Vulnerability;√æ√æimport java.util.EventListener;√æ√æpublic interface DatasetUpdateListener extends EventListener {√æ√æ    void bugAddedTo(Vulnerability vulnerability, String bugId);√æ√æ    void commitAddedTo(Vulnerability vulnerability, String hash);√æ√æ    void scoreUpdatedFor(Vulnerability vulnerability);√æ√æ    void cweUpdatedFor(Vulnerability vulnerability);√æ√æ    void addVulnerability(Vulnerability vulnerability);√æ√æ    void updatefinished();√æ}√æ``` √æ√æThis interface allows to develop more functionality for the dataset such as the one currently in development in the graph section, which uses a temporal graph database to store the dataset. Note that it might be better to first do a batch import and then use the interface when update is being done.√æ√æ## Supported projects√æ√æCurrently five open source projects are supported :√æ√æ* Linux Kernel√æ* Wireshark√æ* OpenSSL√æ* SystemD√æ* **Android (new)**√æ√æbut it can easily be extended to any other project where it is possible to find the following information:√æ√æ*  name of the project as it appears in NVD database, e.g, linux_kernel√æ*  url of a git remote repository, e.g, https://github.com/torvalds/linux√æ*  regular expression catching link to remote repository and hashes in it, e.g, √æ```√æ.*?(github\\.com|git\\.kernel\\.org).*?(commit)+.*?(h\\=|/)+([a-f0-9]+)√æ```√æ*  url of a bug tracker, e.g, https://bugzilla.kernel.org/√æ*  regular expression catching link to bug tracker and bug id in it, e.g,√æ```√æ.*(bugzilla\\.kernel\\.org).*?(id\\=)([0-9]+)√æ```√æ*  regular expression catching bug id in git commit message, e.g, √æ```√æ.*(bugzilla\\.kernel\\.org).*?(id\\=)([0-9]+)√æ```√æ√æ## How to use the tools√æ√æ1. you can run mvn install and the tool is installed√æ2. To use the tool, the first step is to create a folder in your local storage that will gather all data.√æ    The structure once run the tool should look like this√æ    - myfolder√æ        - git√æ        - cve√æ        - xml√æ        - binary√æ    √æ3. Once done, just call it as follow:√æ√æ```java√æ import data7.project.CMetaInf;√æ import data7.project.Project;   √æ import data7.Importer;√æ import data7.Exporter;√æ import data7.ResourcesPath;√æ import data7.model.Data7;√æ √æ class Foo{√æ  public static void main(String[] args){√æ //Indicate your path√æ ResourcesPath path = new ResourcesPath(""path to your folder"");√æ√æ //To create or update a project√æ Importer importer = new Importer(path);√æ Data7 data7 = importer.generateGenericProject(aProject);√æ // Projects are available in projects module√æ //like CMetaInf.LINUX_KERNEL√æ√æ //To simply load a dataset without any update√æ Exporter exporter = new Exporter(path);√æ // To export to xml√æ exporter.exportDatasetToXML(data7);√æ }√æ}√æ√æ``` √æ    √æNote that on creation of the dataset it might be better for the largest project (Linux, Wireshark)to first clone the git repository using command line in your folder under the subfolder git (in the case of Linux, don't forget to rename the created folder ""linux"" into ""linux_kernel"")√æ√æ## Statistics√æ√æAs of 5th June 2018√æ√æ| Projects   | Time to create | Dataset size |Number of vulnerabilities | NoV with Fixes | average CVSS | avg CVSS with fixes | Number of Fix | Number of FileFix| Number of Unique Vulnerable Files |√æ|:----------:|:--------------:|:------------:|:------------------------:|:--------------:|:------------:|:-------------------:|:-------------:|:----------------:|:---------------------------------:|√æ|Linux Kernel|115 mn          |279.7 MB      |2082                      |1202            |5.41          |5.34                 |1332           | 2612             |1508                               |√æ|Wireshark   |129 mn          |561.9 MB      | 531                      | 265            |4.99          |5.01                 | 850           |  987             | 221                               |√æ|OpenSSL     |  8 mn          |173.3 MB      | 187                      | 126            |5.34          |5.42                 | 493           | 1018             | 164                               |√æ|SystemD     |  2 mn          |  2.4 MB      |   9                      |   5            |5.76          |5.60                 |   5           |    6             |   5                               |√æ|Total       |254 mn          |  1.0 GB      |2809                      |1598            |5.375         |5.34                 |2680           | 4623             |1898                               |√æ√æ### Top 10 CWE√æ√æ| Rank | Linux    | Wireshark | OpenSSL | SystemD |√æ|:----:|:--------:|:---------:|:-------:|:-------:|√æ| 1    | 264 (318)|  20 (136) | 310 (32)| 20 (3)  |√æ| 2    | 200 (219)| 399 (108) | 399 (28)| 264 (2) |√æ| 3    | 399 (212)| 119  (98) | 116 (17)| 362 (2) |√æ| 4    | 119 (204)| 189  (51) | 200 (15)| 787 (1) |√æ| 5    |  20 (161)| 400  (14) |  20 (12)| 119 (1) |√æ| 6    | 189 (106)|  74   (9) | 189 (11)| -       |√æ| 7    | 362  (89)| 476   (8) | 362  (5)| -       |√æ| 8    | 476  (45)| 134   (5) |   -     | -       |√æ| 9    | 284  (45)| 200   (4) |   -     | -       |√æ| 10   | 416  (28)| -         |   -     | -       |√æ√æ√æ### Top 10 CWE with Fixes√æ√æ| Rank | Linux    | Wireshark | OpenSSL | SystemD |√æ|:----:|:--------:|:---------:|:-------:|:-------:|√æ| 1    | 119 (163)|  20 (81)  | 310 (20)| 264 (1)|√æ| 2    | 399 (146)| 399 (62)  | 399 (20)| 787 (1)|√æ| 3    | 200 (137)| 119 (52)  | 200 (15)| 119 (1)|√æ| 4    | 264 (135)| 400 (14)  | 119 (12)| 20 (1) |√æ| 5    |  20 (134)| 189 (10)  |  20 (12)| 362 (1)|√æ| 6    | 189  (88)|  74  (9)  | 189  (6)|        |√æ| 7    | 362  (72)| 476  (8)  | 362  (4)|        |√æ| 8    | 476  (35)| 19   (3)  | -       |        |√æ| 9    | 416  (25)| 754  (3)  | -       |        |√æ| 10   | 125  (20)| -         | -       |        |√æ√æ### Top 10 CWE ratio √æ√æ| Rank | Linux    | Wireshark | OpenSSL  | SystemD  |√æ|:----:|:--------:|:---------:|:--------:|:--------:|√æ| 1    |  17 (100)| 400 (100) | 200 (100)| 787 (100)|√æ| 2    | 415 (100)|  74 (100) |  20 (100)| 119 (100)|√æ| 3    | 310  (92)| 476 (100) | 362 (80) | 264  (50)|√æ| 4    |  19  (91)|  19 (100) | 399 (71) | 362  (50)|√æ| 5    | 416  (89)| 754 (100) | 119 (70) |  20  (33)|√æ| 6    | 125  (86)|  20  (60) | 310 (62) | -        |√æ| 7    |  20  (83)| 399  (57) | 189 (54) | -        |√æ| 8    | 189  (83)| 119  (53) | -        | -        |√æ| 9    | 362  (81)| 189  (20) | -        | -        |√æ| 10   | 119  (80)| -         | -        | -        |√æ√æ√æ### Top 10 Vulnerable Files√æ√æ| Rank | Linux                     | Wireshark                              | OpenSSL                    | SystemD                                |√æ|:----:|:--------------------------|:---------------------------------------|:---------------------------|:---------------------------------------|√æ| 1    | arch/x86/kvm/x86.c (17)   | epan/proto.c (24)                      | ssl/s3_clnt.c (53)         | src/resolve/resolved-dns-packet.c (2)  |√æ| 2    | fs/namei.c (14)           | epan/dissectors/packet-nbap.c (19)     | ssl/s3_srvr.c (41)         | src/resolve/resolved-dns-packet.h (1)  |√æ| 3    | net/socket.c (14)         | epan/dissectors/packet-ncp2222.inc (19)| ssl/d1_both.c (35)         | src/util.c (1)                         |√æ| 4    | kernel/signal.c (14)      | epan/dissectors/packet-wccp.c (18)     | ssl/t1_lib.c (34)          | src/nss-mymachines/nss-mymachines.c (1)|√æ| 5    | fs/namespace.c (14)       | epan/crypt/airpdcap.c (18)             | ssl/d1_pkt.c (22)          | src/tmpfiles/tmpfiles.c (1)            |√æ| 6    | kernel/bpf/verifier.c (13)| epan/dissectors/packet-ber.c (17)      | crypto/asn1/tasn_dec.c (20)| -                                      |√æ| 7    | net/sctp/socket.c (13)    | epan/dissectors/packet-umts_fp.c (16)  | ssl/ssl.h (20)             | -                                      |√æ| 8    | fs/exec.c (13)            | epan/dissectors/packet-wbxml.c (15)    | ssl/s3_pkt.c (20)          | -                                      |√æ| 9    | arch/x86/kvm/vmx.c (13)   | epan/dissectors/packet-wsp.c (14)      | ssl/ssl_err.c (17)         | -                                      |√æ| 10   | fs/open.c (12)            | epan/dissectors/packet-wcp.c (13)      | crypto/x509/x509_vfy.c (16)| -                                      |√æ√æ## Additional Libraries Included√æ√æIn this tool, three custom-made libraries are included:√æ√æ### Git Utils√æ√æThis library coded in Kotlin provide some useful function when trying to mine a git repository.√æThe following methods are available√æ√æ* retrievingFileFromSpecificCommit√æ* listOfCommitImpactingAFile√æ* previousCommitImpactingAFile√æ* gitBlame√æ* gitBlameNbDev√æ* getDevHistoryOfAFile (use Developer History class)√æ* getDeltaFile (Delta History)√æ* getListOfModifiedFile√æ* getCommitMessage√æ* getTimeCommit√æ√æthis library work on local repository but also offer the possibility to clone a remote repository: √æ√æ```kotlin√æ   // for already existing git repo  √æ     val git = GitUtilitary(""pathto .git folder"")√æ   // to clone the repo√æ     val git = GitUtilitary(""remote repo adress"",""path to folder"")√æ```√æ√æ### Misc√æ√æThis library coded as well in Kotlin contains additional useful function such as downloading a file, unzipping a file, normalizing a path and getting the recursive list of directories.√æ√æ### CWE Importer√æ√æFor those wishing to analyse cwe as well a last library is made available. The library can simply be called using:√æ```java√æImporter.getListOfCWE();√æ```√æThis call will download on the nvd website the xml with all the description of CWE and parse it before serializing for good. This is especially useful for studies that focus on CWE when using the data7. In addition a field childOf is present for each CWE which allows to rebuild the hierarchy of CWE type.√æ√æ## About Me√æ√æThis tool was developed during my thesis and is made available to everyone. :)"
wildfly-security/jboss-negotiation,1280,9,4,22,Organization,False,JBoss Negotiation,,"{'key': 'lgpl-2.1', 'name': 'GNU Lesser General Public License v2.1', 'spdx_id': 'LGPL-2.1', 'url': 'https://api.github.com/licenses/lgpl-2.1', 'node_id': 'MDc6TGljZW5zZTEx'}",11,Java,"{'': 2, 'txt': 1, 'xml': 1}",309,10,56,11,0,4493,True,1,2,0,1,0,36,0,0,9,0,0,0,0,0,0,0,13,0,,,
neowu/core-ng-project,7843,75,24,31,User,False,webapp framework,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",26,Java,"{'': 5, 'yml': 2, 'md': 5, 'gradle': 2, 'properties': 1, 'bat': 1}",2050,1,31,10,0,1814,True,0,7,0,2,0,15,0,2,7,0,0,0,0,0,0,0,9,,34,,"## Overview√æcore-ng is a webapp framework, it's designed to support our own projects.√æ√æ[![Build Status](https://travis-ci.com/neowu/core-ng-project.svg?branch=master)](https://travis-ci.com/neowu/core-ng-project)√æ[![Code Coverage](https://codecov.io/gh/neowu/core-ng-project/branch/master/graph/badge.svg)](https://codecov.io/gh/neowu/core-ng-project)√æ[![Code Quality: Java](https://img.shields.io/lgtm/grade/java/g/neowu/core-ng-project.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/neowu/core-ng-project/context:java)√æ[![Total Alerts](https://img.shields.io/lgtm/alerts/g/neowu/core-ng-project.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/neowu/core-ng-project/alerts)√æ√æ## Maven repo√æ```√ærepositories {√æ    maven {√æ        url 'https://neowu.github.io/maven-repo/'√æ        content {√æ            includeGroup 'core.framework'√æ        }√æ    }√æ}√æ```√æ√æ## Wiki√æ[https://github.com/neowu/core-ng-project/wiki](https://github.com/neowu/core-ng-project/wiki)√æ√æ## Change log√æplease check [CHANGELOG.md](CHANGELOG.md)"
spdx/tools,23435,68,12,53,Organization,False,SPDX Tools,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'': 8, 'yml': 1, 'md': 2, 'xml': 1}",900,5,29,16,2,3587,True,17,92,4,9,1,125,1,12,9,1,0,0,0,0,14,0,36,8,,,"[![Build Status](https://travis-ci.org/spdx/tools.svg?branch=master)](https://travis-ci.org/spdx/tools)√æ√æ [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/734/badge)](https://bestpractices.coreinfrastructure.org/projects/734)√æ√æ# Overview√æThe Software Package Data Exchange (SPDX) specification is a standard format for communicating the components, licenses and copyrights associated with a software package.√æ√æ  * [SPDX License List](http://spdx.org/licenses/)√æ  * [SPDX Vocabulary Specification](http://spdx.org/rdf/terms)√æ√æThese tools are published by the SPDX Workgroup√æsee [http://spdx.org/](http://spdx.org/)√æ√æSee the [SPDX Tools Documentation](https://spdx.dev/wp-content/uploads/sites/41/2017/12/spdx_tools-20170327.pdf) for details on how to use the command line tools.√æ√æ## Contributing√æSee the file CONTRIBUTING.md for information on making contributions to the SPDX tools.√æ√æ## Issues√æReport any security related issues by sending an email to [spdx-tools-security@lists.spdx.org](mailto:spdx-tools-security@lists.spdx.org)√æ√æNon-security related issues should be added to the [SPDX tools issues list](https://github.com/spdx/tools/issues)√æ√æ## Syntax√æThe command line interface of the spdx tools can be used like this:√æ√æ    java -jar spdx-tools-jar-with-dependencies.jar <function> <parameters> √æ√æ## SPDX format converters√æThe following converter tools are provided by the spdx tools:√æ√æ  * TagToSpreadsheet√æ  * TagToRDF√æ  * RdfToTag√æ  * RdfToHtml√æ  * RdfToSpreadsheet√æ  * SpreadsheetToRDF√æ  * SpreadsheetToTag√æ√æExample to convert a SPDX file from tag to rdf format:√æ√æ    java -jar spdx-tools-jar-with-dependencies.jar TagToRDF Examples/SPDXTagExample.tag TagToRDF.rdf√æ√æ## Compare utilities√æThe following  tools can be used to compare one or more SPDX documents:√æ√æ  * CompareSpdxDocs√æ√æ    Example to compare two SPDX files provided in rdf format:√æ√æ        java -jar spdx-tools-jar-with-dependencies.jar CompareSpdxDocs doc1 doc2 [output]√æ√æ  * CompareMultipleSpdxDocs√æ√æ    Example to compare multiple SPDX files provided in rdf format and provide a spreadsheet with the results:√æ√æ        java -jar spdx-tools-jar-with-dependencies.jar CompareMultipleSpdxDocs output.xls doc1 doc2 ... docN√æ√æ## SPDX Viewer√æThe following tool can be used to ""Pretty Print"" an SPDX document.√æ√æ  * SPDXViewer√æ√æSample usage:√æ√æ    java -jar spdx-tools-jar-with-dependencies.jar SPDXViewer TestFiles/SPDXRdfExample.rdf√æ√æ## Verifier√æThe following tool can be used to verify an SPDX document:√æ√æ  * Verify√æ√æSample usage:√æ√æ    java -jar spdx-tools-jar-with-dependencies.jar Verify TestFiles/SPDXRdfExample.rdf√æ√æ## Generators√æThe following tool can be used to generate an SPDX verification code from a directory of source files:√æ√æ  * GenerateVerificationCode sourceDirectory√æ  √æ  Sample usage:√æ√æ        java -jar spdx-tools-jar-with-dependencies.jar GenerateVerificationCode sourceDirectory [ignoredFilesRegex]√æ√æ## SPDX Validation Tool√æThe SPDX Workgroup provides an online interface to validate, compare, and convert SPDX documents in addition to the command line options above. The [SPDX Validation Tool](http://13.57.134.254/app/) is an all-in-one portal to upload and parse SPDX documents for validation, comparison and conversion and search the SPDX license list. √æ√æ# License√æSee the [NOTICE](NOTICE) file for licensing information√æincluding info from 3rd Party Software√æ√æSee [LICENSE](LICENSE) file for full license text√æ√æ    SPDX-License-Identifier: Apache-2.0√æ    PackageLicenseDeclared: Apache-2.0√æ√æ# Development√æ√æ## Build√æYou need [Apache Maven](http://maven.apache.org/) to build the project:√æ√æ    mvn clean install√æ√æ## Update tools data formats√æTo update SPDX tools, the following is a very brief checklist:√æ√æ  1. Update the SpdxRdfContants with any new or changed RDF properties and classes√æ  2. Update the Java code representing the RDF model.√æ  3. Update the properties files in the org.spdx.tag package for any new tag values√æ  4. Update the org.spdx.tag.CommonCode.java for any new or changed tag values.  This will implement both the rdfToTag and the SPDXViewer applications.√æ  5. Update the org.spdx.tag.BuildDocument to implement changes for the TagToRdf application√æ  6. Update the HTML template (resources/htmlTemplate/SpdxHTMLTemplate.html) and contexts in org.spdx.html to implement changes for the SpdxToHtml application√æ  7. Update the related sheets and RdfToSpreadsheet.java file in the package org.spdx.spreadsheet√æ  8. Update the sheets and SpdxComparer/SpdxFileComparer in the org.spdx.compare package√æ√æ## Upgrading to SPDX 2.0√æTo the users of the tools as a binary, there should not be any need to upgrade.  The tools should be backwards compatible with SPDX 1.0, 1.1, and 1.2.√æ√æIf, however, you are using this Java code as a library for your own tools read on...√æ√æThere are a number of changes to the design of the SPDX Parser both due to the extensive changes to the SPEC (e.g. support for multiple SPDX Packages within a document and support for relationships with external SPDX documents) and due to some much needed refactoring.√æ√æThe starting point remains SPDXDocumentFactory.  To ease the migration, the old 1.2 code and model is still available and simply changing your code to call SPDXDcoumentFactory.createLegacySpdxDocument(...) will probably work.  You'll notice, however, almost everything your application is using is deprecated.  These will be removed once SPDX 2.0 has been released and people have a chance to migrate (likely around Jan 1 2016).√æ√æTo move over to the new model, simply start with SPDXDocumentFactory and call the createSpdxDocument(...) method to create the new SpdxDocument model code.  √æThe object returned will be similar to the 1.2 version for SPDXDocument, but with a few key differences.√æAll new model objects are in the package org.spdx.rdfparser.mode.  The SPDX prefix is either removed or replaced with a more consistent Spdx.  √æ√æAccessing the model objects is similar to 1.2, simply call the get/set methods.  The method names have all been changed to be consistent with the specification property names.  As a convenience, many of the old getter method names are still there but deprecated.√æ√æThe structure has changed with the SpdxPackage being a distinct class from SpdxDocument.  There is also a new class org.spdx.rdfparser.SpdxDocumentContainer which separates out the container functionality from the SpdxDocument leaving the SpdxDocument to represent the SpdxDocument properties.√æThere are several new classes which are consistent with the SPDX 2.0 Model.  See the JavaDocs and the SPDX 2.0 specification for a description of those classes and properties.√æ√æThere is one significant class not found in the SPDX 2.0 model - ExternalSpdxElement.  This class represents elements not found within the SPDX Document.  The only valid property for this element is the ID (all other properties including the type are only known in the external document containing the element).√æThere is a more structured class hierarchy, mostly mirroring the SPDX 2.0 model.  As a user of the library, you likely do not need to understand these internals - but if you are interested, start at RdfModelObject and read the JavaDocs.√æ√æIf you have any problems, and especially if you have any solutions, email the tech working group for SPDX at spdx-tech@lists.spdx.org."
mdeverdelhan/ACR122U-reader-writer,81,152,12,60,User,False,A simple tool to read/write Mifare RFID tags with an ACR122U device,http://github.com/mdeverdelhan/ACR122U-reader-writer,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 2, 'md': 1, 'xml': 1}",40,1,0,1,5,1931,True,2,6,0,0,0,0,0,0,7,0,1,1,0,1,0,0,22,,23,,"# ACR122U-reader-writer√æ√æHere is a simple Java program to read/write Mifare RFID tags with an ACR122U device.√æ√æ### Features√æ√æ  * Read/dump Mifare Classic tags√æ  * Write to Mifare Classic tags (block-wise)√æ  * ACR122U compliant√æ  * Supported tags: Mifare Classic 1K (only)√æ  * JRE 7.0 or later√æ  * MIT Licensed√æ√æ### Build√æ√æ```bash√æ~$ mvn clean package√æ```√æ√æ### Usage√æ√æ```bash√æ~$ java -jar ./acr122urw.jar -h√æUsage: java -jar acr122urw.jar [option]√æOptions:√æ    -h, --help                      show this help message and exit√æ    -d, --dump [KEYS...]            dump Mifare Classic 1K cards using KEYS√æ    -w, --write S B KEY DATA        write DATA to sector S, block B of Mifare Classic 1K cards using KEY√æExamples:√æ    java -jar acr122urw.jar --dump FF00A1A0B000 FF00A1A0B001 FF00A1A0B099√æ    java -jar acr122urw.jar --write 13 2 FF00A1A0B001 FFFFFFFFFFFF00000000060504030201√æ```√æ√æ## About the ACR122U reader/writer√æ√æ![ACR122U NFC reader/writer](res/acr122u_reader_writer.png?raw=true)√æ√æThe [ACR122U NFC Reader](http://www.acs.com.hk/en/products/3/acr122u-usb-nfc-reader/) is made by [Advanced Card Systems Ltd](http://www.acs.com.hk/) (Hong Kong, China).√æ√æ### Device features√æ√æ  * PC-linked contactless smart card ([NFC](http://en.wikipedia.org/wiki/Near_field_communication)) reader/writer√æ  * Contactless operating frequency: 13.56 MHz√æ  * Supports: [ISO14443](http://en.wikipedia.org/wiki/ISO/IEC_14443) Type A & B, [MIFARE¬Æ](http://en.wikipedia.org/wiki/MIFARE), FeliCa, 4 types of NFC (ISO/IEC18092) tags√æ  * Interface: USB√æ  * Operating Distance: Up to 50 mm (depends on the tag type)√æ  * Operating Voltage: DC 5.0V√æ  * Compliance/Certifications: ISO 14443, PC/SC, CCID√æ  * Size: 98 mm x 65 mm x 12.8 mm√æ  * Weight: 70 g√æ  √æ## Notes√æ√æ### System requirements√æ√æ```bash√æ~# # For Debian Testing√æ~# echo ""install pn533 /bin/false"" >> /etc/modprobe.d/blacklist-nfc.conf√æ~# echo ""install nfc /bin/false"" >> /etc/modprobe.d/blacklist-nfc.conf√æ~# modprobe -r pn533 nfc√æ~# apt-get install libpcsclite1 libccid pcscd libacsccid1 pcsc-tools√æ~# pcscd -f√æ```√æ√æ### Donations√æ√æBitcoin address: 13BMqpqbzJ62LjMWcPGWrTrdocvGqifdJ3"
LibraryOfCongress/bagit-java,149244,62,19,46,Organization,False,Java library to support the BagIt specification.,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",23,Java,"{'': 4, 'yml': 3, 'md': 2, 'txt': 2, 'gradle': 7, 'bat': 1}",4956,8,46,12,6,4610,True,14,73,2,0,9,42,1,0,8,2,0,0,0,0,0,0,35,5,,,"# BagIt Library (BIL)√æ|            |                                                    |√æ|------------|----------------------------------------------------|√æ|Build Status| [![Travis-CI Build Status (Linux)](https://img.shields.io/travis/LibraryOfCongress/bagit-java/master.svg?label=TravisCi&maxAge=600)](https://travis-ci.org/LibraryOfCongress/bagit-java) [![Appveyor Build Status (Windows)](https://img.shields.io/appveyor/ci/johnscancella/bagit-java/master.svg?label=Appveyor%20(Windows)&maxAge=600)](https://ci.appveyor.com/project/johnscancella/bagit-java) [![CircleCI](https://img.shields.io/circleci/project/github/LibraryOfCongress/bagit-java/master.svg?label=CircleCi&maxAge=600)](https://circleci.com/gh/LibraryOfCongress/bagit-java)|√æ| Metrics|[![Coverage Status](https://coveralls.io/repos/github/LibraryOfCongress/bagit-java/badge.svg?branch=master)](https://coveralls.io/github/LibraryOfCongress/bagit-java?branch=master) [![Github Latest Release Downloads](https://img.shields.io/github/downloads/LibraryOfCongress/bagit-java/latest/total.svg?maxAge=600)]()|√æ|Documentation| [![License](https://img.shields.io/badge/License-Public--Domain-blue.svg?maxAge=31556926)](https://github.com/LibraryOfCongress/bagit-java/blob/master/LICENSE.txt) [![javadoc.io](https://img.shields.io/badge/javadoc.io-latest-blue.svg?maxAge=31556926)](http://www.javadoc.io/doc/gov.loc/bagit) [![Crowdin](https://img.shields.io/badge/Translation-Crowdin-ff69b4.svg?maxAge=600)](https://crowdin.com/project/bagit-java) [![Transifex](https://img.shields.io/badge/Translation-Transifex-ff69b4.svg?maxAge=600)](https://www.transifex.com/acdha/bagit-java/dashboard/)|√æ√æ[//]: # (https://img.shields.io/versioneye/d/java/gov.loc:bagit.svg once it is deployed to maven-central)√æ[//]: # (see https://github.com/jirutka/maven-badges once you have deployed past 5.0-BETA on maven central so that it will automatically update)√æ[//]: # (see https://github.com/moznion/javadocio-badges for automatic javadoc)√æ√æ## Description√æThe BAGIT LIBRARY is a software library intended to support the creation,√æmanipulation, and validation of bags. Its current version is 0.97. It is version aware with the earliest√æsupported version being 0.93.√æ√æ## Requirements√æ* Java 8√æ* gradle (for development only)√æ√æ## Support√æ1. The Digital Curation Google Group (https://groups.google.com/d/forum/digital-curation) is an open discussion list that reaches many of the contributors to and users of this open-source project√æ2. If you have found a bug please create a new issue on [the issues page](https://github.com/LibraryOfCongress/bagit-java/issues/new)√æ3. If you would like to contribute, please submit a [pull request](https://help.github.com/articles/creating-a-pull-request/)√æ√æ## Major differences between version 5 and 4.*√æ##### Command Line Interface√æ√æThe 5.x versions do not include a command-line interface.√æUsers who need a command-line utility can continue to use the latest 4.x release√æ([download 4.12.3](https://github.com/LibraryOfCongress/bagit-java/releases/download/v4.12.3/bagit-v4.12.3.zip)√æor switch to an alternative implementation such as√æ[bagit-python](https://github.com/LibraryOfCongress/bagit-python) or√æ[BagIt for Ruby](https://github.com/tipr/bagit).√æ√æ##### Serialization√æStarting with the 5.x versions bagit-java no longer supports directly√æserializing a bag to an archive file. The examples show how to implement a√æcustom serializer for the√æ[zip](https://github.com/LibraryOfCongress/bagit-java/blob/master/src/test/java/gov/loc/repository/bagit/examples/serialization/CreateZipBagExample.java)√æand√æ[tar](https://github.com/LibraryOfCongress/bagit-java/blob/master/src/test/java/gov/loc/repository/bagit/examples/serialization/CreateTarBagExample.java)√æformats.√æ√æ##### Fetching√æThe 5.x versions do not include a core `fetch.txt` implementation. If you need√æthis functionality, the√æ[`FetchHttpFileExample` example](https://github.com/LibraryOfCongress/bagit-java/blob/master/src/test/java/gov/loc/repository/bagit/examples/fetching/FetchHttpFileExample.java)√ædemonstrates how you can implement this feature with your additional application√æand workflow requirements.√æ√æ##### Internationalization√æAll logging and error messages have been put into a [ResourceBundle](https://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html). √æThis allows for all the messages to be translated to multiple languages and automatically used during runtime. √æIf you would like to contribute to translations please visit https://www.transifex.com/acdha/bagit-java/dashboard/ or https://crowdin.com/project/bagit-java.√æ√æ##### New Interfaces√æ√æThe 5.x version is a complete rewrite of the bagit-java library which attempts√æto follow modern Java practices and will require some changes to existing code:√æ√æ### Examples of using the new bagit-java library√æ√æ##### Create a bag from a folder using version 0.97√æ```java√æPath folder = Paths.get(""FolderYouWantToBag"");√æStandardSupportedAlgorithms algorithm = StandardSupportedAlgorithms.MD5;√æboolean includeHiddenFiles = false;√æBag bag = BagCreator.bagInPlace(folder, Arrays.asList(algorithm), includeHiddenFiles);√æ```√æ√æ##### Read an existing bag (version 0.93 and higher)√æ```java√æPath rootDir = Paths.get(""RootDirectoryOfExistingBag"");√æBagReader reader = new BagReader();√æBag bag = reader.read(rootDir);√æ```√æ√æ##### Write a Bag object to disk√æ```java√æPath outputDir = Paths.get(""WhereYouWantToWriteTheBagTo"");√æBagWriter.write(bag, outputDir); //where bag is a Bag object√æ```√æ√æ##### Verify Complete√æ```java√æboolean ignoreHiddenFiles = true;√æBagVerifier verifier = new BagVerifier();√æverifier.isComplete(bag, ignoreHiddenFiles);√æ```√æ√æ##### Verify Valid√æ```java√æboolean ignoreHiddenFiles = true;√æBagVerifier verifier = new BagVerifier();√æverifier.isValid(bag, ignoreHiddenFiles);√æ```√æ√æ##### Quickly verify by payload-oxum√æ```java√æboolean ignoreHiddenFiles = true;√æ√æif(BagVerifier.canQuickVerify(bag)){√æ  BagVerifier.quicklyVerify(bag, ignoreHiddenFiles);√æ}√æ```√æ√æ##### Add other checksum algorithms√æ√æYou only need to implement 2 interfaces:√æ√æ```java√æpublic class MyNewSupportedAlgorithm implements SupportedAlgorithm {√æ  @Override√æ  public String getMessageDigestName() {√æ    return ""SHA3-256"";√æ  }√æ  @Override√æ  public String getBagitName() {√æ    return ""sha3256"";√æ  }√æ}√æ√æpublic class MyNewNameMapping implements BagitAlgorithmNameToSupportedAlgorithmMapping {√æ  @Override√æ  public SupportedAlgorithm getMessageDigestName(String bagitAlgorithmName) {√æ    if(""sha3256"".equals(bagitAlgorithmName)){√æ      return new MyNewSupportedAlgorithm();√æ    }√æ√æ    return StandardSupportedAlgorithms.valueOf(bagitAlgorithmName.toUpperCase());√æ  }√æ}√æ```√æ√æand then add the implemented `BagitAlgorithmNameToSupportedAlgorithmMapping`√æclass to your `BagReader` or `bagVerifier` object before using their methods.√æ√æ#### Check for potential problems√æ√æThe BagIt format is extremely flexible and allows for some conditions which are√ætechnically allowed but should be avoided to minimize confusion and maximize√æportability. The `BagLinter` class allows you to easily check a bag for√æwarnings:√æ√æ```java√æPath rootDir = Paths.get(""RootDirectoryOfExistingBag"");√æBagLinter linter = new BagLinter();√æList<BagitWarning> warnings = linter.lintBag(rootDir, Collections.emptyList());√æ```√æ√æYou can provide a list of specific warnings to ignore:√æ√æ```java√ædependencycheckth rootDir = Paths.get(""RootDirectoryOfExistingBag"");√æBagLinter linter = new BagLinter();√æList<BagitWarning> warnings = linter.lintBag(rootDir, Arrays.asList(BagitWarning.OLD_BAGIT_VERSION);√æ```√æ√æ## Developing Bagit-Java√æBagit-Java uses [Gradle](https://gradle.org/) for its build system. Check out the great [documentation](https://docs.gradle.org/current/userguide/userguide_single.html) to learn more.√æ##### Running tests and code quality checks√æInside the bagit-java root directory, run `./gradlew check`.√æ##### Uploading to maven central√æ1. Follow their guides√æ  1. http://central.sonatype.org/pages/releasing-the-deployment.html√æ  2. https://issues.sonatype.org/secure/Dashboard.jspa√æ2. Once you have access, to create an official release and upload it you should specify the version by running `./gradlew -Pversion=<VERSION> uploadArchives`√æ  1. *Don't forget to tag the repository!*√æ√æ##### Uploading to jcenter√æ1. Follow their guide√æ  1. https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples√æ2. Once you have access, to create an official release and upload it you should specify the version by running `./gradlew -Pversion=<VERSION> bintrayUpload`√æ  1. *Don't forget to tag the repository!*√æ√æ### Note if using with Eclipse√æSimply run `./gradlew eclipse` and it will automatically create a eclipse project for you that you can import.√æ√æ### Roadmap for this library√æ* Fix bugs/issues reported with new library (on going)√æ* Translate to various languages (on going)"
DaisyDiff/DaisyDiff,1613,58,49,41,Organization,False,Visual :white_flower: comparison of HTML in :coffee: Java,https://daisydiff.github.io/,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",11,Java,"{'': 1, 'yml': 1, 'txt': 2, 'md': 1, 'xml': 1}",36,1,3,6,4,2972,True,4,4,0,1,1,5,0,1,6,0,1,1,4,4,0,0,2,3,,,"This is a maintenance project of DaisyDiff in Java. The initial commit is a checkout of version 1.2 of [old DaisyDiff project](https://code.google.com/archive/p/daisydiff).√æ√æFor more documentation see [daisydiff.github.io](https://daisydiff.github.io/).√æ√æ# Standalone usage√æ```√æjava -jar daisydiff-1.2-NX4-SNAPSHOT-jar-with-dependencies.jar [oldHTML] [newHTML] [optional arguments]√æ```√æ√æOptional Arguments:√æ * --file=[filename] - Write output to the specified file.√æ * --type=[html/tag] - Use the html (default) diff algorithm or the tag diff.√æ * --css=[cssfile1;cssfile2;cssfile3] - Add external CSS files.√æ * --output=[html/xml] - Write html (default) or xml output.√æ * --q  - Generate less console output.√æ√æExample:√æ```√æjava -jar daisydiff-1.2-NX4-SNAPSHOT-jar-with-dependencies.jar http://web.archive.org/web/20070107145418/http://news.bbc.co.uk/ http://web.archive.org/web/20070107182640/http://news.bbc.co.uk/ --css=http://web.archive.org/web/20070107145418/http://news.bbc.co.uk/nol/shared/css/news_r5.css√æ```√æ√æRequirements: Java 1.5 or 6√æ√æ# Embedded usage√æ```√æorg.outerj.daisy.diff.DaisyDiff{√æ√æ/**√æ * Diffs two html files, outputting the result to the specified consumer.√æ */√æpublic static void diffHTML(InputSource oldSource, InputSource newSource, ContentHandler consumer, String prefix, Locale locale) throws SAXException, IOException;√æ√æ/**√æ * Diffs two html files word for word as source, outputting the result to√æ * the specified consumer.√æ */            √æpublic static void diffTag(String oldText, String newText, ContentHandler consumer) throws Exception;√æ√æ}√æ```√æ√æRequirements: Java 1.5 or 6√æ√æTo run Daisy Diff embedded in your application, you don't need the entire Jar file. A much smaller Jar file without Xerces and NekoHtml will suffice.√æ√æ√æ# PHP√æThe DaisyDiff algorithm has been integrated in MediaWiki. However, it had major errors and has been pulled out. More info at [www.mediawiki.org/wiki/Visual_Diff](http://www.mediawiki.org/wiki/Visual_Diff). See also [github.com/cdauth/htmldiff](https://github.com/cdauth/htmldiff).√æ√æ# Acknowledgements√æ√æ * Guy Van den Broeck <guy@guyvdb.eu>√æ * Daniel Dickison√æ * Antoine Taillefer√æ * Thomas Roger"
mcidasv/mcidasv,509198,7,9,12,Organization,False,"McIDAS-V is a free, open source, visualization and data analysis software package.",http://www.ssec.wisc.edu/mcidas/software/v/,,15,Java,"{'': 2, 'md': 1, 'xml': 5}",7965,6,4,10,0,5423,True,1,1,0,0,4,125,0,0,6,0,4,205,16970,11541,0,0,1,0,,,"This is the main trunk for SSEC's McIDAS-V Project.√æ√æThings of Interest√æ------------------√æ√æ    .                                   √æ    ‚îú‚îÄ‚îÄ build-customized.xml            * User-customizable Ant build file.√æ    ‚îú‚îÄ‚îÄ build.xml                       * Main Ant build file.√æ    ‚îú‚îÄ‚îÄ docs                            √æ    ‚îÇ   ‚îú‚îÄ‚îÄ javadoc                     * API documentation for developers.√æ    ‚îÇ   ‚îî‚îÄ‚îÄ userguide                   * Project documentation.√æ    ‚îú‚îÄ‚îÄ edu                             √æ    ‚îÇ   ‚îî‚îÄ‚îÄ wisc                        √æ    ‚îÇ       ‚îî‚îÄ‚îÄ ssec                    √æ    ‚îÇ           ‚îú‚îÄ‚îÄ mcidas              √æ    ‚îÇ           ‚îî‚îÄ‚îÄ mcidasv             * General managers and main application √æ    ‚îÇ               ‚îÇ                     code should go here, e.g., ViewManager, √æ    ‚îÇ               ‚îÇ                     McIDASV.java.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ chooser         * Data choosers should go here.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ control         * Display controls should go here.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ data            * Datasources should go here.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ display         * Displays code should go here.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ images          * DEPRECATED: please use appropriate√æ    ‚îÇ               ‚îÇ                     directory within ""resources"".√æ    ‚îÇ               ‚îú‚îÄ‚îÄ jython          * Linear Combination Jython Interpreter.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ monitors        * Monitor the state of a McIDAS-V session.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ probes          * Data probes.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ resources       * Non-code resources required by √æ    ‚îÇ               ‚îÇ   ‚îÇ                 McIDAS-V should reside here. Things√æ    ‚îÇ               ‚îÇ   ‚îÇ                 like RBI, XML, and images.√æ    ‚îÇ               ‚îÇ   ‚îî‚îÄ‚îÄ python      * Jython library code.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ servermanager   * Handles local and remote ADDE datasets.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ startupmanager  * Manage McIDAS-V startup options.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ supportform     * Submit McIDAS-V support requests.√æ    ‚îÇ               ‚îú‚îÄ‚îÄ ui              * UI related classes here, e.g., UIManager.√æ    ‚îÇ               ‚îî‚îÄ‚îÄ util            * Utility classes can go here.√æ    |√æ    ‚îú‚îÄ‚îÄ lib                             * McIDAS-V dependencies (other than VisAD/IDV).√æ    |   |√æ    |   ‚îú‚îÄ‚îÄ linux-amd64                 * 64-bit Linux dependencies.√æ    |   ‚îú‚îÄ‚îÄ linux-i586                  * 32-bit Linux dependencies.√æ    |   ‚îú‚îÄ‚îÄ macosx                      * OS X dependencies√æ    |   ‚îú‚îÄ‚îÄ share                       * Platform independent dependencies. This is√æ    |   |                                 where most JAR files will end up.√æ    |   ‚îú‚îÄ‚îÄ windows-amd64               * 64-bit Windows dependencies.√æ    |   ‚îî‚îÄ‚îÄ windows-i586                * 32-bit Windows dependencies.√æ    |√æ    ‚îú‚îÄ‚îÄ release                         * Files used by install4J.√æ    ‚îú‚îÄ‚îÄ tools                           √æ    ‚îÇ   ‚îú‚îÄ‚îÄ apidocs                     √æ    ‚îÇ   ‚îî‚îÄ‚îÄ external                    √æ    ‚îÇ       ‚îú‚îÄ‚îÄ orphan_icon_finder      √æ    ‚îÇ       ‚îú‚îÄ‚îÄ pluginfeed              √æ    ‚îÇ       ‚îî‚îÄ‚îÄ supportreq              √æ    ‚îî‚îÄ‚îÄ ucar                            √æ                                        √æRunning McIDAS-V√æ----------------√æAssuming you've cloned the repo, and have installed Java 8+:√æ√æ    ant jar.runlarge√æ√æ√æBuilding a new release√æ----------------------√æMake sure IDV is up to date, then build the ""dist"" target:√æ√æ    ant dist√æ    √æRun Install4J and build the installer packages.√æ√æNightlies√æ---------√æA cron job that builds the ""nightly"" target runs daily at 4am:√æ√æ    ant nightly√æ    √æThere is a separate script on the webserver that pulls the completed build.√æ√æAcknowledgements√æ----------------√æYourKit is kindly supporting open source projects with its full-featured Java √æProfiler. YourKit, LLC is the creator of innovative and intelligent tools for √æprofiling Java and .NET applications. Take a look at YourKit's leading√æsoftware products: <a href=""http://www.yourkit.com/java/profiler/index.jsp"">YourKit Java Profiler</a> and <a href=""http://www.yourkit.com/.net/profiler/index.jsp"">YourKit .NET Profiler</a>."
kustomer/customer-android,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
manifold-systems/manifold-sample-project,77,8,5,7,Organization,False,A simple project demonstrating how to use Manifold,http://manifold.systems/,,4,Java,"{'': 1, 'md': 1, 'xml': 1}",68,1,0,1,3,954,True,0,0,0,0,0,0,0,0,8,0,1,13,344,77,0,0,9,1,,,"## Manifold Sample Project (Maven, IntelliJ)√æ√æUtilize a small sampling of core Manifold features to demonstrate the√æstructure of a basic project using Manifold. Use the `pom.xml` file as a√ætemplate for your own project.√æ√æIf you simply want to experiment with Manifold, this project will help get you started.√æ√æ* `git clone https://github.com/manifold-systems/manifold-sample-project.git`√æ* Open [IntelliJ IDEA](https://www.jetbrains.com/idea/download)√æ* Install the **Manifold plugin** from within IntelliJ: `Settings | Plugins | Marketplace`√æ* Restart IntelliJ to use the plugin√æ* Open the project you just cloned (open the root directory or the pom.xml file)√æ* Add the [Java 11 JDK](https://adoptopenjdk.net/releases.html?variant=openjdk11&jvmVariant=hotspot): `File | Project Structure | SDKs | + | path-to-your-Jdk11`√æ* Set the project JDK and language level: `File | Project Structure | Project` select `11` for both `Project JDK` and `Project language level`√æ* Build the project√æ* Examine the `abc/RunMe.java` file√æ√æUse IntelliJ features such as:<lu>√æ <li> Navigation√æ <li> Code Completion√æ <li> Find Usages√æ <li> Rename and Move Refactor√æ <li> Incremental Compilation√æ <li> Hotswap Debugging√æ <li> Template authoring√æ <li> Extension method creation√æ <li> ...√æ</u>"
thelittlehawk/CSIS280.Fall.2018,92,0,1,2,User,False,,,,29,Java,"{'': 1, 'md': 1}",13,1,0,1,0,616,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,31,,30,,# CSIS280.Fall.2018
viatra/massif,10060,17,10,11,Organization,False,Massif is a Matlab Simulink Integration Framework for Eclipse,https://viatra.github.io/massif/,"{'key': 'epl-1.0', 'name': 'Eclipse Public License 1.0', 'spdx_id': 'EPL-1.0', 'url': 'https://api.github.com/licenses/epl-1.0', 'node_id': 'MDc6TGljZW5zZTc='}",14,Java,"{'': 2, 'md': 2, 'txt': 1}",592,12,5,11,0,2082,True,26,114,0,1,5,57,1,2,15,1,1,3,29,31,0,0,36,5,,,# Massif: MATLAB Simulink Integration Framework for Eclipse√æ√æ* [User documentation](https://viatra.github.io/massif/)√æ* [Developer documentation](https://github.com/viatra/massif/wiki/Developer-Guide)
NordicSemiconductor/Android-DFU-Library,2410,469,56,198,Organization,False,A library with DFU feature for Android 4.3+.,http://www.nordicsemi.com/,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",13,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",412,2,28,17,8,2222,True,35,177,18,17,2,37,2,2,11,1,3,25,285,147,0,0,60,4,,,
bobbylight/AutoComplete,798,100,15,43,User,False,"A code completion library for Swing text components, with special support for RSyntaxTextArea.",,,13,Java,"{'': 3, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",219,3,35,5,0,4198,True,27,35,6,1,3,9,0,3,6,0,2,10,265,1894,0,0,34,,122,,"AutoComplete is a code completion library for Swing JTextComponents, with enhanced functionality available√æfor instances of [RSyntaxTextArea](https://github.com/bobbylight/RSyntaxTextArea).√æ√æAutoComplete is available under a [modified BSD license](https://github.com/bobbylight/AutoComplete/blob/master/AutoComplete/src/main/dist/AutoComplete.License.txt).√æ√æ# Features√æ* A completion choices list that updates as the user types√æ* A ""documentation"" companion window for displaying documentation about the currently selected completion choice√æ* Parameter assistance (e.g. tabbing through function/method parameters, with tool tip assistance for each argument√æ  and a possible list of valid variable completions for each)√æ√æ# Adding to Your Project√æThis library is available in the√æ[Maven Central repository](http://search.maven.org/#search%7Cga%7C1%7Cautocomplete%20jar) (`com.fifesoft:autocomplete:XXX`).√æSNAPSHOT builds of the in-development, unreleased version are hosted on√æ[Sonatype](https://oss.sonatype.org/content/repositories/snapshots/com/fifesoft/autocomplete/).√æ√æ# Compiling√æAutoComplete is built using Gradle.  To compile the source, run all tests, and build the distribution jar,√æsimply run the following gradle command:√æ√æ```bash√ægradlew clean build --warning-mode all√æ```√æ√æ# Example Usage√æBesides, the `AutoCompleteDemo` child module, the example below shows how to add code completion for√æsimple keywords to RSyntaxTextArea.√æ√æ```java√æimport java.awt.*;√æimport javax.swing.*;√æimport org.fife.ui.autocomplete.*;√æimport org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;√æimport org.fife.ui.rsyntaxtextarea.SyntaxConstants;√æimport org.fife.ui.rtextarea.RTextScrollPane;√æ√æpublic class AutoCompleteDemo extends JFrame {√æ√æ   public AutoCompleteDemo() {√æ√æ      JPanel contentPane = new JPanel(new BorderLayout());√æ      RSyntaxTextArea textArea = new RSyntaxTextArea(20, 60);√æ      textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);√æ      textArea.setCodeFoldingEnabled(true);√æ      contentPane.add(new RTextScrollPane(textArea));√æ√æ      // A CompletionProvider is what knows of all possible completions, and√æ      // analyzes the contents of the text area at the caret position to√æ      // determine what completion choices should be presented. Most instances√æ      // of CompletionProvider (such as DefaultCompletionProvider) are designed√æ      // so that they can be shared among multiple text components.√æ      CompletionProvider provider = createCompletionProvider();√æ√æ      // An AutoCompletion acts as a ""middle-man"" between a text component√æ      // and a CompletionProvider. It manages any options associated with√æ      // the auto-completion (the popup trigger key, whether to display a√æ      // documentation window along with completion choices, etc.). Unlike√æ      // CompletionProviders, instances of AutoCompletion cannot be shared√æ      // among multiple text components.√æ      AutoCompletion ac = new AutoCompletion(provider);√æ      ac.install(textArea);√æ√æ      setContentPane(contentPane);√æ      setTitle(""AutoComplete Demo"");√æ      setDefaultCloseOperation(EXIT_ON_CLOSE);√æ      pack();√æ      setLocationRelativeTo(null);√æ√æ   }√æ√æ   /**√æ    * Create a simple provider that adds some Java-related completions.√æ    */√æ   private CompletionProvider createCompletionProvider() {√æ√æ      // A DefaultCompletionProvider is the simplest concrete implementation√æ      // of CompletionProvider. This provider has no understanding of√æ      // language semantics. It simply checks the text entered up to the√æ      // caret position for a match against known completions. This is all√æ      // that is needed in the majority of cases.√æ      DefaultCompletionProvider provider = new DefaultCompletionProvider();√æ√æ      // Add completions for all Java keywords. A BasicCompletion is just√æ      // a straightforward word completion.√æ      provider.addCompletion(new BasicCompletion(provider, ""abstract""));√æ      provider.addCompletion(new BasicCompletion(provider, ""assert""));√æ      provider.addCompletion(new BasicCompletion(provider, ""break""));√æ      provider.addCompletion(new BasicCompletion(provider, ""case""));√æ      // ... etc ...√æ      provider.addCompletion(new BasicCompletion(provider, ""transient""));√æ      provider.addCompletion(new BasicCompletion(provider, ""try""));√æ      provider.addCompletion(new BasicCompletion(provider, ""void""));√æ      provider.addCompletion(new BasicCompletion(provider, ""volatile""));√æ      provider.addCompletion(new BasicCompletion(provider, ""while""));√æ√æ      // Add a couple of ""shorthand"" completions. These completions don't√æ      // require the input text to be the same thing as the replacement text.√æ      provider.addCompletion(new ShorthandCompletion(provider, ""sysout"",√æ            ""System.out.println("", ""System.out.println(""));√æ      provider.addCompletion(new ShorthandCompletion(provider, ""syserr"",√æ            ""System.err.println("", ""System.err.println(""));√æ√æ      return provider;√æ√æ   }√æ√æ   public static void main(String[] args) {√æ      // Instantiate GUI on the EDT.√æ      SwingUtilities.invokeLater(() -> {√æ        try {√æ           String laf = UIManager.getSystemLookAndFeelClassName();√æ           UIManager.setLookAndFeel(laf);√æ        } catch (Exception e) { /* Never happens */ }√æ        new AutoCompleteDemo().setVisible(true);√æ      });√æ   }√æ√æ}√æ```√æ# Sister Projects√æ* [RSyntaxTextArea](https://github.com/bobbylight/RSyntaxTextArea) provides syntax highlighting, code folding, and many other features out-of-the-box.√æ* [RSTALanguageSupport](https://github.com/bobbylight/RSTALanguageSupport) - Code completion for RSTA for the following languages: Java, JavaScript, HTML, PHP, JSP, Perl, C, Unix Shell.  Built on both RSTA and AutoComplete.√æ* [SpellChecker](https://github.com/bobbylight/SpellChecker) - Adds squiggle-underline spell checking to RSyntaxTextArea.√æ* [RSTAUI](https://github.com/bobbylight/RSTAUI) - Common dialogs needed by text editing applications: Find, Replace, Go to Line, File Properties.√æ√æ# Getting Help√æ* Add an [issue on GitHub](https://github.com/bobbylight/AutoComplete/issues)"
codeaurora-unofficial/platform-frameworks-opt-telephony,47981,0,2,1,Organization,False,,,,6,Java,"{'mk': 2, 'txt': 1}",2781,2034,10527,31,0,2931,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,121,1,,,
tanliyuan/idea-settings-sync,1698,0,1,3,User,False,,,,48,Java,{'xml': 42},2072,1,0,1,0,1043,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,22,,2,,
GautamChibde/android-audio-visualizer,2870,405,22,89,User,False, :musical_score: :musical_keyboard: :musical_note: Audio visualisation for android MediaPlayer :sound:,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 3, 'yml': 1, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",68,4,7,4,6,968,True,12,13,4,0,0,8,0,1,9,0,1,6,525,260,0,0,24,,20,,"<h1 align=""center""> <img src=""http://res.cloudinary.com/dvkxfgprc/image/upload/v1511626276/logo_lfjxrd.png""></h1>√æ√æ[![Build Status](https://travis-ci.org/GautamChibde/android-audio-visualizer.svg?branch=master)](https://travis-ci.org/GautamChibde/android-audio-visualizer) [![codebeat badge](https://codebeat.co/badges/0f34e433-9e0b-44a4-90da-b53d644848b9)](https://codebeat.co/projects/github-com-gautamchibde-android-audio-visualizer-master) [ ![Download](https://api.bintray.com/packages/gautamchibde/Audio-Visualizer/audiovisualizer/images/download.svg) ](https://bintray.com/gautamchibde/Audio-Visualizer/audiovisualizer/_latestVersion) [![API](https://img.shields.io/badge/API-14%2B-brightgreen.svg?style=flat)](https://android-arsenal.com/api?level=14)√æ√æ# Demo√æ√æ![Alt text](http://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1511428471/giphy_6_usdiet.gif)  ![Alt text](http://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1511431630/giphy_10_yye0fe.gif)  ![Alt text](http://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1511429199/giphy_7_usq2vh.gif)  ![Alt text](http://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1511430406/giphy_8_ww3jdz.gif)  ![Alt text](http://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1511427632/giphy_5_vixwer.gif) ![Alt text](https://res.cloudinary.com/dvkxfgprc/image/upload/c_scale,w_440/v1565943473/Animated_GIF-downsized_large_wirzqk.gif)√æ√æ# Importing the Library√æ√æAdd to build.gradle:√æ```groovy√ædependencies {√æ    compile 'com.chibde:audiovisualizer:2.2.0'√æ}√æ```√æLibrary is available in jcenter repository√æ√æ# How to use√æ √æ Refer to the [sample](https://github.com/GautamChibde/android-audio-visualizer/tree/master/sample) project on how to use visualizer or refer to [WIKI](https://github.com/GautamChibde/android-audio-visualizer/wiki) docs.√æ √æ ## Visualizers√æ* [LineVisualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/Line-Visualizer)√æ* [BarVisualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/Bar-Visualizer)√æ* [CircleVisualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/Circle-Visualizer)√æ* [Circle Bar Visualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/Circle-Bar-Visualizer)√æ* [Line Bar Visualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/Line-Bar-Visualizer)√æ* [Square Bar Visualizer](https://github.com/GautamChibde/android-audio-visualizer/wiki/SquareBar-Visualizer)√æ√æLicense√æ=======√æCopyright 2017 Gautam Chibde√æ√æLicensed under the Apache License, Version 2.0 (the ""License"");√æyou may not use this file except in compliance with the License.√æYou may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software√ædistributed under the License is distributed on an ""AS IS"" BASIS,√æWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æSee the License for the specific language governing permissions and√ælimitations under the License."
charite/jannovar,23914,35,9,32,Organization,False,Annotation of VCF variants with functional impact and from databases (executable+library),http://jannovar.readthedocs.io/en/master/,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",18,Java,"{'': 4, 'yml': 1, 'md': 2, 'txt': 1, 'xml': 1}",1974,8,24,13,4,2900,True,32,202,7,2,1,258,0,2,12,4,0,0,0,0,1,0,13,3,,,"[![Build Status](https://travis-ci.org/charite/jannovar.svg?branch=master)](https://travis-ci.org/charite/jannovar)√æ[![Documentation](https://readthedocs.org/projects/jannovar/badge/?version=master)](http://jannovar.readthedocs.org/)√æ[![API Docs](https://img.shields.io/badge/api-v0.34-blue.svg?style=flat)](http://javadoc.io/doc/de.charite.compbio/jannovar-core/0.34)√æ[![Install with Bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg)](https://bioconda.github.io/recipes/jannovar-cli/README.html)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/2b12f94e30404667997f8ae264a97bd6)](https://www.codacy.com/app/visze/jannovar?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=charite/jannovar&amp;utm_campaign=Badge_Grade)√æ√æ# Jannovar√æ√æFunctional variant file annotation in Java. Jannovar provides a program for√æthe annotation of VCF files and also exposes its functionality through a√ælibrary API.√æ√æAlso see the√æ[Quickstart](http://jannovar.readthedocs.org/en/master/quickstart.html) section√æin the Jannovar manual.√æ√æ## In Brief√æ√æ- **Language/Platform:** Java >=8√æ- **License:** BSD 3-Clause√æ- **Version:** 0.34√æ- **Availability:**√æ    - Java command line tool `jannovar-cli`√æ    - Java libraries exposing most of `jannovar-cli`'s functionality.√æ√æ## Developer Guidelines√æ√æ### Style√æ√æ- Java code should follow IntelliJ default formatting and the `Ctrl+Alt+l` formatter.√æ  Eclipse users please use [Eclipse Code Formatter](https://plugins.jetbrains.com/plugin/6546-eclipse-code-formatter).√æ  Enable the ""wrap at right margin"" option for JavaDoc.√æ- For all other text, use `.editorconfig`."
Bamboy120315/bamboy,2932,231,11,64,User,False,Bamboy ÂêÑÁßçDemoÂêàÈõÜ,,,10,Java,"{'': 2, 'iml': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",51,1,0,1,0,1186,True,1,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,,38,,# Bamboy Demo ÂêàÈõÜ√æ√æ## ÁÆÄ‰ªã√æBamboy Demo ÂêàÈõÜ  √æÊòØÂ∞ÜBamboyÂá†‰πéÊâÄÊúâÁöÑDemoÊï¥ÂêàËµ∑Êù•  √æÊñπ‰æøÊúãÂèã‰ª¨Êü•ÊâæDemo  √æ√æÁõÆÂâçÂêàÈõÜ‰∏≠Êï¥ÂêàÁöÑÂÜÖÂÆπÊúâÔºö  √æ  √æ### 1„ÄÅÈùûÁ∫¶ÊùüÂàóË°®  √æÊèí‰ª∂ÂåñRecyclerViewÔºå  √æÂèàÁß∞‰∏áËÉΩÈÄÇÈÖçÂô®„ÄÇ  √æ  √æv2.0 Êõ¥Êñ∞Ôºö  √æ- ÊîØÊåÅÂõ¢ÈòüÂºÄÂèë  √æ- ÊîØÊåÅÂçïÂàóÂ§öÂàóÊ∑∑ÂêàÊ®°Âºè√æ  √æ![BamboyÈùûÁ∫¶ÊùüÂàóË°®](https://img-blog.csdnimg.cn/20190327184921254.gif)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÈùûÁ∫¶ÊùüÂàóË°®](https://bamboy.blog.csdn.net/article/details/71727461)√æ  √æ### 2„ÄÅËäÇÁÇπËøõÂ∫¶Êù°  √æÂÆåÂÖ®Áî®CanvasÁîªÂá∫Êù•ÁöÑÔºå  √æÈ¢úËâ≤„ÄÅËäÇÁÇπÊï∞Èáè„ÄÅÂ∞∫ÂØ∏ÂùáÂèØÊéßÂà∂Ôºå  √æËøòÊîØÊåÅÁõëÂê¨„ÄÇ  √æ  √æ![BamboyËäÇÁÇπËøõÂ∫¶Êù°](https://img-blog.csdn.net/20180405104308201?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhbWJveV8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyËäÇÁÇπËøõÂ∫¶Êù°](https://bamboy.blog.csdn.net/article/details/79825006)√æ  √æ### 3„ÄÅÊó†ÊÑüÂàÜÈ°µÔºàÂàÜÊâπÂä†ËΩΩÔºâ√æÊó†ÊÑüÂàÜÈ°µÔºå  √æÊó†È°ª‰∏âÊñπÔºå  √æË¢´‰∫¨‰∏ú„ÄÅÊ∑òÂÆùÁ≠âÂêÑÂ§ßAPP‚ÄúÂÄüÈâ¥‚ÄùÔºå  √æÂàÜÈ°µÂä†ËΩΩÊúÄ‰Ω≥ÊñπÊ°à„ÄÇ  √æ  √æ![BamboyÊó†ÊÑüÂàÜÈ°µ](https://img-blog.csdn.net/20170113145959792?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmFtYm95Xw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÊó†ÊÑüÂàÜÈ°µ](https://bamboy.blog.csdn.net/article/details/54408691)√æ    √æ### 4„ÄÅÈ´òÊñØÊ®°Á≥äÔºàÊØõÁéªÁíÉÔºâ  √æÊÄßËÉΩÈ´òÔºå  √æÊïàÊûúÂ•ΩÔºå  √æ‰ΩøÁî®ÁÆÄÂçï„ÄÇ  √æ  √æ![BamboyÈ´òÊñØÊ®°Á≥äÔºàÊØõÁéªÁíÉÔºâ](https://img-blog.csdn.net/20170104101010910?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjQ1MTUzNTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÈ´òÊñØÊ®°Á≥äÔºàÊØõÁéªÁíÉÔºâ](https://bamboy.blog.csdn.net/article/details/54345636)√æ  √æ### 5„ÄÅÁÇπÂáªÂä®Áîª  √æ‰ΩøÁî®ÁÆÄÂçïÔºå  √æÊïàÊûúÁÇ´ÈÖ∑„ÄÇ  √æ  √æ![BamboyÈÖ∑ÁÇ´ÁÇπÂáªÊïàÊûú](https://img-blog.csdn.net/20170110133930447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMjQ1MTUzNTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÈÖ∑ÁÇ´ÁÇπÂáªÊïàÊûú](https://bamboy.blog.csdn.net/article/details/54342079)√æ  √æ### 6„ÄÅToastÔºàËøëÊúü‰ºöÊõ¥Êñ∞ÔºåÊó†ËßÜÈÄöÁü•ÊùÉÈôêÔºâ  √æBamToastÂÖ®Êñ∞ÂçáÁ∫ßÔºå  √æÂç≥‰ΩøÊ≤°ÊúâÈÄöÁü•ÊùÉÈôê‰πüÂèØ‰ª•ÂºπÂá∫Toast„ÄÇ  √æ  √æ![BamboyËá™ÂÆö‰πâToast](https://img-blog.csdn.net/20170209183501183?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmFtYm95Xw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyËá™ÂÆö‰πâToast](https://bamboy.blog.csdn.net/article/details/54952174)√æ  √æ### 7„ÄÅViewËá™Âä®Êç¢Ë°å√æÊîØÊåÅËá™Âä®Êç¢Ë°åÁöÑView  √æ  √æ![BamboyËá™Âä®Êç¢Ë°åView](https://img-blog.csdn.net/20170113162220359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYmFtYm95Xw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyËá™Âä®Êç¢Ë°åView](https://bamboy.blog.csdn.net/article/details/54409840)√æ  √æ### 8„ÄÅÂè≥ÊªëÂÖ≥Èó≠ÔºàÊó†È°ªÈÄèÊòé‰∏ªÈ¢òÔºâ√æAndroid 8.0Á¶ÅÊ≠¢ÈùûÂÖ®Â±èÁöÑActivity‰ΩøÁî®ÈÄèÊòé‰∏ªÈ¢òÔºå  √æÂê¶Âàô‰ºöÂºïÂèëÔºö  √æ> Only fullscreen opaque activities can request orientation  √æ  √æÊâÄ‰ª•Êú¨DemoÁöÑÂè≥ÊªëÂÖ≥Èó≠ÊñπÊ°àÔºå  √æÂÖºÂÆπAndroid 8.0Ôºå  √æÂÖºÂÆπSDK 27Ôºå  √æÊó†È°ªÈÄèÊòé‰∏ªÈ¢ò„ÄÇ√æ  √æ![BamboyÂè≥ÊªëÂÖ≥Èó≠](https://img-blog.csdnimg.cn/20181108162141217.gif)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÂè≥ÊªëÂÖ≥Èó≠](https://bamboy.blog.csdn.net/article/details/83863260)√æ√æ### 9„ÄÅÁâ©ÊµÅÂç°Áâá√æ‰ΩøÁî®ViewPager+FragmentÁöÑÂÆûÁé∞ÊñπÂºèÔºå  √æÂè™ÊòØÁªôViewPagerÂ¢ûÂä†‰∫ÜTransformerÔºå  √æÂÜÖÁΩÆ‰∏âÁßçÂàáÊç¢ÊïàÊûúÔºö  √æ¬∑ Â±ÇÂè†(‰∫¨‰∏ú)   √æ¬∑ Áº©Êîæ  √æ¬∑ È£éËΩ¶(Ê∑òÂÆù)   √æ  √æ‰∏âÁßçÂá∫Âú∫Âä®ÁîªÔºö  √æ¬∑ ÈÄê‰∏Ä  √æ¬∑ Â±ïÂºÄ  √æ¬∑ ÊóãËΩ¨  √æ  √æ![Áâ©ÊµÅÂç°Áâá](https://img-blog.csdnimg.cn/20190312160712140.gif)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[BamboyÁâ©ÊµÅÂç°Áâá](https://bamboy.blog.csdn.net/article/details/88415267)√æ  √æ  √æ### 10„ÄÅ‰ø°ÊÅØÊªöÂä®ViewFlipperDemo√æÁ±ª‰ººÊ∑òÂÆù„ÄÅ‰∫¨‰∏ú„ÄÅ‰ªäÊó•Â§¥Êù°ÁöÑ‰ø°ÊÅØÊªöÂä®ÊïàÊûú„ÄÇ  √æ‰ΩøÁî®ÂéüÁîüÊéß‰ª∂Ôºå  √æÊÄßËÉΩÈ´òÔºåÁ®≥ÂÆöÊÄßÂ•ΩÔºå  √æÈô§‰∫ÜÊúÄÁªèÂÖ∏ÁöÑÂä®ÁîªÂ§ñÔºå  √æÊú¨‰∫∫ÂèàÂÜô‰∫ÜÂÖ≠‰∏™ÊïàÊûú„ÄÇ  √æ![‰ø°ÊÅØÊªöÂä®](https://img-blog.csdnimg.cn/20190325154153421.gif)  √æËØ¶ÊÉÖÈìæÊé•Ôºö[Bamboy‰ø°ÊÅØÊªöÂä®](https://bamboy.blog.csdn.net/article/details/88793011)
wso2/carbon-data,35065,6,132,104,Organization,False,Data services and related components,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 1, 'txt': 1, 'md': 3, 'xml': 1}",3918,19,1585,53,0,2329,False,,,,,5,289,5,0,30,0,0,0,0,0,0,0,267,94,,,"# carbon-data√æ√æ---√æ√æ|  Branch | Build Status |√æ| :------------ |:-------------√æ| master      | [![Build Status](https://wso2.org/jenkins/job/platform-builds/job/carbon-data/badge/icon)](https://wso2.org/jenkins/job/platform-builds/job/carbon-data/) |√æ√æ√æ---√æ√æ√æ√æLatest Released Version v4.3.5.√æ√æ#### carbon-data repo contains the following components.√æ√æ* data-services      √æ* data-sources√æ* dbconsole  √æ    √æcarbon-data contains the source code of modules uses for Data Services Server. Some of these modules uses by other products of the platform too.√æ√æService Stubs, Components and Features of each module contains in this repo.√æ√æ## How to Contribute√æ* Please report issues at [DSS JIRA] (https://wso2.org/jira/browse/DS).√æ* Send your bug fixes pull requests to [master branch] (https://github.com/wso2/carbon-data/tree/master) √æ√æ## Contact us√æWSO2 Carbon developers can be contacted via the mailing lists:√æ√æ* Carbon Developers List : dev@wso2.org√æ* Carbon Architecture List : architecture@wso2.org"
jeeeyul/pde-tools,180782,77,11,19,User,False,"pde-tools, Complete Awesomeness of your IDE.",,,9,Java,"{'': 1, 'md': 1}",589,1,4,2,0,2909,True,15,29,1,0,2,3,1,0,7,1,1,1,16,10,0,0,29,,72,,"# pde-tools, Make your Eclipse more AWESOME!√æ√æJeeeyul's PDE-tools provides some cool features for Eclipse Plugin Developers.√æ√æIt was originated for me and my team. And it works great for me. I hope it helps you too.√æ√æ<table style=""border: none;"">√æ  <tbody>√æ    <tr style=""border:none;"">√æ      <td style=""vertical-align: middle; padding-top: 10px; border: none;"">√æ        <a href='http://marketplace.eclipse.org/marketplace-client-intro?mpc_install=367947' title='Drag and drop into a running Eclipse Indigo workspace to install PDE Tools'> √æ          <img src='http://marketplace.eclipse.org/misc/installbutton.png'/>√æ        </a>√æ      </td>√æ      <td style=""vertical-align: middle; text-align: left; border: none;"">√æ        ‚Üê Drag it to your eclipse workbench to install! (I recommand Main Toolbar as Drop Target)√æ      </td>√æ    </tr>√æ  </tbody>√æ</table>√æ√æ* [Release Note](https://github.com/jeeeyul/pde-tools/wiki/Release-Note)√æ* [Trouble Shoot](https://github.com/jeeeyul/pde-tools/wiki/Trouble-Shoot)√æ√æ## Features√æ* [Clipboard History](#clipboard-history)√æ* [Crazy Outline View](#crazy-outline)√æ* [Generates Shared Image Constants for Plugin Developments](#shared-image-generator)√æ* [Icon Previewing Decorator](#icon-preview)√æ* [Enhanced Clipboard (History feature)](#clipboard-history)√æ* [Bundle Image Resource Navigator](#bundle-image-navigator)√æ* [Screenshot tool](#screenshot-tool)√æ* [Workspace Launcher](#workspace-launcher) **NEW!**√æ√æ## Install√æ* Update Site(Eclipse 3.7 ~ 4.2): √æ```√æhttp://jeeeyul.github.io/update/√æ```√æ√æIf you **updating PDE-Tools**, Please restart your eclipse with -clearPersistedState Options after update. √æsee [why](https://github.com/jeeeyul/pde-tools/wiki/Trouble-Shoot)√æ```bash√æeclipse -clearPersistedState√æ```√æ√æ## Clipboard History√æJust press <kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>V</kbd> instead of <kbd>Control</kbd> + <kbd>V</kbd>, then you can paste contents from history of Clipboard.√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/clipboard-history-paste.png)√æ√æIt also provides view.√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/clipboard-history-view.png)√æ√æ√æ## Icon Preview√æIcon files are directly showed in Package Explorer or other navigators.√æ√æIt's fast and light-weight, content change sensitive.√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/icon-preview.png)√æ√æ## Shared Image Generator√æPDE Tools generates Java constants for monitored folder. It also support structured folders as sub palettes.√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/shared-image-generator.png)√æ√æ1. Select a plugin project and press right mouse button.√æ2. Select ""Configure > Enable Shared Image Generator""√æ3. That's all.√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/sig-config.png)√æ√æ√æ## Bundle Image Navigator√æ√æ![screenshot](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/bundle-image-navigator.png)√æ√æYou can easily browse image files on plugins, and just drag and drop into your project to reuse icons.√æ√æ## Crazy Outline√æ![Crazy Outline](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/crazy-outline.png)√æ√æ**Crazy Outline View** provides awesome way to navigate your source code.√æ√æIt supports not only text based editor also support multi-paged editors.√æ√æ<pre>√æWindow >> Show View >> Others... >> Plug-in Development >> Crazy Outline√æ</pre>√æor√æJust press <kbd>Ctrl</kbd>(or Command) + <kbd>3</kbd> and type crazy.√æ√æ## Screenshot tool√æ√æUse Camera icon or <kbd>Alt</kbd> + <kbd>Shift</kbd> + <kbd>2</kbd> to take screenshots of Eclipse parts.√æ√æWhen you taking snapshot, press Command(or CTRL) then click to make a shot, then you will see, result image is rendered with Windows Aero effect with transparency. √æ√æ## Workspace Launcher√æ![launcher](https://raw.github.com/jeeeyul/pde-tools/master/net.jeeeyul.pdetools.resource/release-note/1.1/workspace-launcher.png)√æ√æNow you can launch other workspace rather than switch. It is more useful for MacOSX users.√æ√æ## License√æThis software is distributed under the [EPL](http://www.eclipse.org/legal/epl-v10.html)√æ√æBasically this license allows almost everything what you want to do including commerical purpose. Read details from [here](http://www.eclipse.org/legal/epl-v10.html).√æAnd It doesn't provide any **Warranties**.√æ√æ## Donation√æ<a href='http://www.pledgie.com/campaigns/18377'><img src='http://www.pledgie.com/campaigns/18377.png?skin_name=chrome' border='0' /></a>"
nkomarn/Harbor,236,36,4,12,User,False,Harbor is a plugin that redefines sleep within your Spigot server!,https://bstats.org/plugin/bukkit/Harbor,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",10,Java,"{'': 3, 'yml': 1, 'md': 1, 'xml': 2}",115,2,4,5,8,636,True,2,47,1,14,0,7,0,2,11,0,2,26,803,670,0,0,43,,119,,"![Harbor 1.6 banner](https://i.imgur.com/VsYoStK.png)√æ√æ[discord-invite]: https://discord.gg/UACRzwe√æ# ‚öì Harbor √æ[![CodeFactor](https://www.codefactor.io/repository/github/nkomarn/harbor/badge)](https://www.codefactor.io/repository/github/nkomarn/harbor) [![License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://github.com/nkomarn/Harbor/blob/master/LICENSE) [![Discord](https://discordapp.com/api/guilds/285623631042707457/widget.png)][discord-invite]√æ√æHarbor is a plugin that redefines sleep within your Spigot server! Harbor is lightweight and performant, with just the right amount of features for any survival server! √æ√æCheck it out and download the latest builds [over on the releases page!](https://github.com/nkomarn/Harbor/releases)√æ√æ# üî® Building from source√æHarbor uses Maven to handle dependecies and building! Make sure you have Java 8, Git, and Maven installed, and then run:√æ```√ægit clone https://github.com/nkomarn/Harbor.git√æcd Harbor/√æmvn package√æ```√æYou can find the compiled JARs in the `target` directory.√æ√æ# üé∫ Contributing√æFeel free to create pull requests with any changes or improvements that think would make Harbor a better plugin! Generally, try to keep core plugin features intact. Pull requests with bugfixes are welcome!√æ√æ# üìã License√æHarbor is licensed under the MIT license. View `LICENSE` for more information."
bootique-examples/bootique-jersey-client-demo,12,0,3,1,Organization,False,Demo for bootique-jersey-client module,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",6,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",11,1,0,2,0,794,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,28,1,,,# bootique-jersey-client-demo√æ√æSimple [Bootique](http://bootique.io) app demonstrating the Bootique Jersey Client Module.√æ√æ# Prerequisites√æ* Java 1.8 or newer.√æ* Apache Maven.√æ√æ# Build the demo√æ√æ```√æ√ægit clone https://github.com/bootique-examples/bootique-jersey-client-demo.git√æcd bootique-jersey-client-demo√æmvn package√æ```√æEnter the following to launch the app in Maven.√æ√æ```bash√æjava -jar target/bootique-jersey-client-demo-1.0-SNAPSHOT.jar√æ```√æ√æYou will see responded html code from [google.com](https://google.com)
org-arl/fjage,4280,15,10,8,Organization,False,Framework for Java and Groovy Agents,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",22,Java,"{'': 5, 'md': 3, 'txt': 1, 'gradle': 1, 'sh': 3, 'json': 2}",904,7,29,7,7,2645,True,17,81,6,16,0,43,0,11,11,1,5,112,30112,3033,2,1,21,2,,,"![](https://github.com/org-arl/fjage/workflows/CI/badge.svg)√æ√æfj√•ge√æ=====√æ**Framework for Java and Groovy Agents**√æ√æIntroduction√æ------------√æ√æfj√•ge provides a **lightweight** and **easy-to-learn** framework for [agent-oriented software development](http://en.wikipedia.org/wiki/Agent-oriented_programming) in Java and Groovy. Although most of the functionality of the framework can be used in pure-Java projects, the adoption of Groovy in the project simplifies development immensely. Typically, initialization scripts, shell interaction and command scripts are written in Groovy. Agents and support classes may be written in Java or Groovy.√æ√æKey Features√æ------------√æ√æ* Lightweight and fast√æ* Easy to learn, and rapid agent development cycle√æ* Agent development in Java or Groovy√æ* Interactive Groovy shell and scripting√æ* Easy switching between realtime operation and discrete event simulation√æ* APIs for access from Java, Groovy, Python, C, Julia, and Javascript√æ* JSON-based protocol to interface with external applications√æ√æDocumentation√æ-------------√æ√æ* [Release Notes](ReleaseNotes.md)√æ* [Getting Started](https://fjage.readthedocs.io/en/latest/quickstart.html)√æ* [Developer's Guide](https://fjage.readthedocs.io/en/latest/)√æ* [API documentation](http://org-arl.github.io/fjage/javadoc/)√æ√æSupport√æ-------√æ√æ* [Project Home](http://github.com/org-arl/fjage)√æ* [Issue Tracking](http://github.com/org-arl/fjage/issues)√æ√æMaven Central dependency√æ------------------------√æ√æ    <dependency>√æ      <groupId>com.github.org-arl</groupId>√æ      <artifactId>fjage</artifactId>√æ      <version>1.7.0</version>√æ    </dependency>√æ√æContributing√æ------------√æ√æContributions are always welcome! Clone, develop and do a pull request!√æ√æTry to stick to the coding style already in use in the repository. Additionally, some guidelines:√æ√æ* [Commit message style](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)√æ√æBuilding:√æ√æ* `gradle` to build the jars√æ* `gradle test` to run all regression tests (automated through Github actions CI)√æ* `gradle upload` to upload jars to Maven staging (requires credentials)√æ* `make html` to build developer's documentation (automated through ReadTheDocs)√æ* `gradle javadoc` to build the Java API documentation√æ* `npm run docs` to build the Javascript API documentation√æ√æLicense√æ-------√æ√æfj√•ge is licensed under the Simplified (3-clause) BSD license.√æSee [LICENSE.txt](http://github.com/org-arl/fjage/blob/master/LICENSE.txt) for more details."
edu2act/course-JavaSE,134755,34,2,10,Organization,False,Âü∫Á°ÄËØæÁ®ãÔºå„ÄäJavaÈù¢ÂêëÂØπË±°Á®ãÂ∫èËÆæËÆ°„ÄãËØæÁ®ã‰ªìÂ∫ì,,,3,Java,{'md': 1},78,1,1,4,0,1178,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,91,0,,,"![Ê≤≥ÂåóÂ∏àËåÉÂ§ßÂ≠¶ËΩØ‰ª∂Â≠¶Èô¢](./image/logo.png)√æ√æ# Java SEÈù¢ÂêëÂØπË±°Á®ãÂ∫èËÆæËÆ°√æ√æ## ËØæÁ®ãËµÑÊñô√æ√æ- ÈòøÈáåÂ∑¥Â∑¥JavaÂºÄÂèëÊâãÂÜå [<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/doc/AlibabaJavaManualv1.3.0.pdf)  [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/doc/AlibabaJavaManualv1.3.0.pdf) √æ- Java API1.8ÊñáÊ°£ÔºàËã±ÊñáÁâàÔºâ [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/doc/JavaSE8.zip)  √æ√æ## ËØæÁ®ãÂÜÖÂÆπ√æ√æ| Á´†ËäÇ | ÂêçÁß∞ | ÂÜÖÂÆπ | ËØæ‰ª∂ | ËØæÂ†ÇDemo |√æ|:---:|:---|:---|:---|:---|√æ|Á¨¨‰∏ÄÁ´†|JavaÊ¶ÇËø∞|-ËØæÁ®ã‰ªãÁªç<br/>- JavaËØ≠Ë®ÄÁöÑÂéÜÂè≤„ÄÅÁâπÁÇπ<br/>- JavaÂπ≥Âè∞Âèä‰∏ªË¶ÅÂ∫îÁî®ÊñπÂêë<br/>- JavaÁöÑÂ∑•‰ΩúÂéüÁêÜ<br/>- JavaÂºÄÂèëÁéØÂ¢ÉÁöÑÊê≠Âª∫<br/>- JavaÁ®ãÂ∫èÁöÑÂü∫Êú¨ÁªìÊûÑ<br/>- EclipseÁöÑÂÆâË£ÖÂèä‰ΩøÁî®|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch01.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch01.pptx)| √æ|Á¨¨‰∫åÁ´†|JavaÂü∫Á°Ä|-ËæìÂÖ•„ÄÅËæìÂá∫<br/>- Ê†áËØÜÁ¨¶„ÄÅÂÖ≥ÈîÆÂ≠ó<br/>- Êï∞ÊçÆÁ±ªÂûã<br/>- ËøêÁÆóÁ¨¶ÂíåË°®ËææÂºè<br/>- ÊµÅÁ®ãÊéßÂà∂|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch02.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch02.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch02/Demo.java)√æ|Á¨¨‰∏âÁ´†|Êï∞ÁªÑ|-Êï∞ÁªÑÁöÑÊ¶ÇÂøµ<br/>- ‰∏ÄÁª¥Êï∞ÁªÑ<br/>- ‰∫åÁª¥Êï∞ÁªÑ<br/>- ArraysÁ±ª|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch03.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch03.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch03/Demo.java)√æ|Á¨¨ÂõõÁ´† Á¨¨‰∏ÄËÆ≤|Á±ªÂíåÂØπË±°Ôºà1Ôºâ|- Èù¢ÂêëËøáÁ®ãÁ®ãÂ∫èËÆæËÆ°<br/>- Á±ªÂíåÂØπË±°Ê¶ÇËø∞<br/>- Èù¢ÂêëÂØπË±°Á®ãÂ∫èËÆæËÆ°‰∏âÂ§ßÁâπÂæÅ|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch04-01.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch04-01.pptx)|√æ|Á¨¨ÂõõÁ´† Á¨¨‰∫åËÆ≤|Á±ªÂíåÂØπË±°Ôºà2Ôºâ|- Á±ªÂíåÂØπË±°ÁöÑÂÆö‰πâ<br/>- Á±ªÁöÑÊàêÂëò<br/>- ÂûÉÂúæÂõûÊî∂Êú∫Âà∂|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch04-02.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch04-02.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo1](./materials/demo/ch04/Demo1.zip)<br/>[<img src=""./image/download.png"" height=""15"" />Demo2](./materials/demo/ch04/Demo2.zip)√æ|Á¨¨‰∫îÁ´†|ÁªßÊâø|- ÁªßÊâøÁöÑÂÆûÁé∞<br/>- ÊñπÊ≥ïÈáçÂÜô<br/>- ÂåÖÁöÑ‰ΩøÁî®|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch05.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch05.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch05/Demo.zip)√æ|Á¨¨ÂÖ≠Á´†|ÊäΩË±°Á±ªÂíåÊé•Âè£|- ÊäΩË±°Á±ª<br/>- Êé•Âè£<br/>- ObjectÁ±ª|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch06.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch06.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo1](./materials/demo/ch06/Demo1.zip)<br/>[<img src=""./image/download.png"" height=""15"" />Demo2](./materials/demo/ch06/Demo2.zip)√æ|Á¨¨‰∏ÉÁ´†|Â§öÊÄÅ|- Â§öÊÄÅÁöÑÊ¶ÇÂøµ<br/>- Â§öÊÄÅÁöÑÂÆûÁé∞<br/>- Â§öÊÄÅÁöÑÁºñÁ®ãÂ∫îÁî®|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch07.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch07.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch07/Demo.zip)√æ|Á¨¨ÂÖ´Á´† |ÂåÖË£ÖÂô®Á±ª|- ÂåÖË£ÖÂô®Á±ªÁöÑÊ¶ÇÂøµ<br/>- ÂåÖË£ÖÂô®Á±ªÂûã‰∏éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑËΩ¨Êç¢<br/>- Ëá™Âä®Ë£ÖÁÆ±ÁöÑÊ¶ÇÂøµ<br/>- Ëá™Âä®Ë£ÖÁÆ±ÂºïÂèëÁöÑ‰∏ÄÁ≥ªÂàóÈóÆÈ¢ò|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch08.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch08.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch08/Demo.zip)√æ|Á¨¨‰πùÁ´† |ÂÜÖÈÉ®Á±ª|- ÊàêÂëòÂÜÖÈÉ®Á±ª<br/>- Â±ÄÈÉ®ÂÜÖÈÉ®Á±ª<br/>- ÂåøÂêçÂÜÖÈÉ®Á±ª<br/>- ÈùôÊÄÅÂÜÖÈÉ®Á±ª|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch09.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch09.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch09/Demo.zip)√æ|Á¨¨ÂçÅÁ´†|Êûö‰∏æ|- Êûö‰∏æÁöÑÂÆö‰πâ<br/>- Âü∫Êú¨Áî®Ê≥ï|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch10-02.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch10-02.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch10/Demo.zip)√æ|Á¨¨ÂçÅÁ´† |static ‰øÆÈ•∞Á¨¶|- ÈùôÊÄÅÂ±ûÊÄß<br/>- ÈùôÊÄÅÊñπÊ≥ï<br/>- ÈùôÊÄÅ‰ª£Á†ÅÂùó<br/>- ÈùôÊÄÅÁ±ª|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch10-01.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch10-01.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch10_01/Demo.zip)√æ|Á¨¨ÂçÅ‰∏ÄÁ´† |ÂºÇÂ∏∏ÂíåÊñ≠Ë®Ä|- ÂºÇÂ∏∏Ê¶ÇËø∞<br/>- ÂºÇÂ∏∏Â§ÑÁêÜÊú∫Âà∂<br/>- Ëá™ÂÆö‰πâÂºÇÂ∏∏<br/>- Êñ≠Ë®Ä|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch11.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch11.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo1](./materials/demo/ch11/Demo1.zip)<br/>[<img src=""./image/download.png"" height=""15"" />Demo2](./materials/demo/ch11/Demo2.zip)√æ|Á¨¨ÂçÅ‰∫åÁ´† Á¨¨‰∏ÄËÆ≤|Â≠óÁ¨¶‰∏≤„ÄÅÊó•Êúü|- Â≠óÁ¨¶‰∏≤„ÄÅÂ≠óÁ¨¶‰∏≤ÁöÑËß£Êûê<br/>- Êó•Êúü„ÄÅÊó•ÊúüÁöÑÊ†ºÂºèÂåñ|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch12-01.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch12-01.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch12/Demo.zip)√æ|Á¨¨ÂçÅ‰∫åÁ´† Á¨¨‰∫åËÆ≤|JDK8‰∏≠ÁöÑÊó•Êúü|- JDK8‰∏≠ÁöÑÊó•Êúü|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch12-02.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch12-02.pptx)|√æ|Á¨¨ÂçÅ‰∏âÁ´†|ÂÆπÂô®ÂíåÊ≥õÂûã|- ÂÆπÂô®Ê¶ÇËø∞<br/>- ÈõÜÂêà<br/>- Ëø≠‰ª£Âô®<br/>- Ê≥õÂûã|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch13) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch13.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo1](./materials/demo/ch13/Demo1.zip)<br/>[<img src=""./image/download.png"" height=""15"" />Demo2](./materials/demo/ch13/Demo2.zip)√æ|Á¨¨ÂçÅÂõõÁ´†|ÊµÅÂíåÊñá‰ª∂Ôºà1Ôºâ|- Êñá‰ª∂Â§ÑÁêÜ<br/>- IOÂíåÊµÅ<br/>- Â≠óËäÇÊµÅ|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch14-01.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch14-01.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch14/Demo.zip)√æ|Á¨¨ÂçÅÂõõÁ´†|ÊµÅÂíåÊñá‰ª∂Ôºà2Ôºâ|- Â≠óÁ¨¶ÊµÅ<br/>- ÂØπË±°ÊµÅ<br/>- ÂÖ∂‰ªñÂ∏∏Áî®ÊµÅ|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch14-02.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch14-02.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch14/Demo.zip)√æ|Á¨¨ÂçÅ‰∫îÁ´†|ÁΩëÁªúÁºñÁ®ã|- ÁΩëÁªúÁºñÁ®ãÂü∫Á°Ä<br/>- Java‰∏≠ÁΩëÁªúÁºñÁ®ãÁõ∏ÂÖ≥Á±ª|[<img src=""./image/presentation.png"" height=""15"" />Êü•Áúã](./materials/slides/ch15.pptx) [<img src=""./image/download.png"" height=""15"" />‰∏ãËΩΩ](./materials/slides/ch15.pptx)|[<img src=""./image/download.png"" height=""15"" />Demo](./materials/demo/ch15/Demo.zip)"
malikzh/NCANode,813,63,7,20,User,False,‚≠ê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ –¶–∏—Ñ—Ä–æ–≤–æ–π –ü–æ–¥–ø–∏—Å—å—é (–≠–¶–ü) –†–ö,http://ncanode.kz,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",20,Java,"{'': 2, 'md': 4, 'build': 1, 'run': 1, 'bat': 1, 'ini': 1, 'json': 1, 'sh': 1, 'xml': 1}",103,3,4,2,15,613,True,6,12,0,3,0,8,0,1,12,0,0,0,0,0,0,0,7,,13,,"![NCANode](docs/NCANode.png)√æ√æ√æ‚≠ê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ –¶–∏—Ñ—Ä–æ–≤–æ–π –ü–æ–¥–ø–∏—Å—å—é (–≠–¶–ü) –†–ö√æ√æ---√æ√æ![License:MIT](https://img.shields.io/badge/license-MIT-green.svg)√æ![Downloads](https://img.shields.io/github/downloads/malikzh/NCANode/total.svg)√æ[![HitCount](http://hits.dwyl.io/malikzh/ncanode.svg)](http://hits.dwyl.io/malikzh/ncanode)√æ√æ---√æ√æ## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏√æ√æ- –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (Windows, Mac OS, Linux)√æ- –ü–æ–¥–ø–∏—Å—å XML –¥–∞–Ω–Ω—ã—Ö√æ- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–µ–π√æ- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ√æ- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ø–æ—á–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–æ –ö–£–¶√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ OCSP –∏ CRL√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ RabbitMQ√æ- –ü–∞—Ä—Å–∏–Ω–≥ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ò–ò–ù√æ- –†–∞–±–æ—Ç–∞ —Å API –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º JSON√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Docker√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ TSP√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–Ω–µ —Ç–æ–ª—å–∫–æ XML)√æ- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã —Å CMS ( [Cryptographic Message Syntax](https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax) ) √æ- –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è TSP-–º–µ—Ç–∫–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ CMS üÜï√æ√æ## –ö–æ–º—É –Ω–∞–¥–æ?√æ√æ–ï—Å–ª–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –±—É–¥—å —Ñ–æ—Ä–º–∞—Ç–∞ XML –∏–ª–∏ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞,√æ–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å NCANode –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–µ–º—É –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º API (Http/RabbitMQ).√æ√æ## –ö—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç?√æ√æ–ò—Å—Ö–æ–¥—è –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤, NCANode –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –≤ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö, —Ç–∞–∫ –∏ –≤ –∫—Ä—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö√æ√æ## –ü—Ä–∏–º–µ—Ä√æ√æ–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ (–∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª—é—á–µ):√æ√æ```json√æ{√æ ""version"": ""1.0"",√æ ""method"": ""PKCS12.info"",√æ ""params"": {√æ  ""p12"":""MIINkwIBAzCCDU0GCSqGSIb3DQEHAaCCDTJ3i8pKvvVbY..."",√æ  ""password"":""Qwerty12"",√æ  ""verifyOcsp"": true√æ }√æ}√æ```√æ√æ–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:√æ√æ```json√æ{√æ    ""result"": {√æ        ""notAfter"": ""2019-08-22 18:11:36"",√æ        ""ocsp"": {√æ            ""revokationReason"": 0,√æ            ""revokationTime"": null,√æ            ""status"": ""ACTIVE""√æ        },√æ        ""chain"": [√æ            {√æ                ""valid"": true,√æ                ""notAfter"": ""2019-08-22 18:11:36"",√æ                ""keyUsage"": ""AUTH"",√æ                ""serialNumber"": ""122684438670642568061334282296011886211357830154"",√æ                ""subject"": {√æ                    ""lastName"": ""–¢–ï–°–¢–û–í–ò–ß"",√æ                    ""country"": ""KZ"",√æ                    ""commonName"": ""–¢–ï–°–¢–û–í –¢–ï–°–¢"",√æ                    ""gender"": """",√æ                    ""surname"": ""–¢–ï–°–¢–û–í"",√æ                    ""locality"": ""–ê–õ–ú–ê–¢–´"",√æ                    ""dn"": ""CN=–¢–ï–°–¢–û–í –¢–ï–°–¢,SURNAME=–¢–ï–°–¢–û–í,SERIALNUMBER=IIN123456789011,C=KZ,L=–ê–õ–ú–ê–¢–´,S=–ê–õ–ú–ê–¢–´,G=–¢–ï–°–¢–û–í–ò–ß"",√æ                    ""state"": ""–ê–õ–ú–ê–¢–´"",√æ                    ""birthDate"": ""12-34-56"",√æ                    ""iin"": ""123456789011""√æ                },√æ                ""signAlg"": ""SHA256WithRSAEncryption"",√æ                ""sign"": ""LLQvGPQP+rdLBTPRf0EgLIo/D9TqxeZ52pRyuCHN..."",√æ                ""publicKey"": ""MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMII..."",√æ                ""issuer"": {√æ                    ""commonName"": ""“∞–õ–¢–¢–´“ö –ö–£”ò–õ–ê–ù–î–´–†–£–®–´ –û–†–¢–ê–õ–´“ö (RSA)"",√æ                    ""country"": ""KZ"",√æ                    ""dn"": ""C=KZ,CN=“∞–õ–¢–¢–´“ö –ö–£”ò–õ–ê–ù–î–´–†–£–®–´ –û–†–¢–ê–õ–´“ö (RSA)""√æ                },√æ                ""notBefore"": ""2018-08-22 18:11:36"",√æ                ""keyUser"": [√æ                    ""INDIVIDUAL""√æ                ]√æ            }√æ        ],√æ        ""serialNumber"": ""122684438670642568061334282296011886211357830154"",√æ        ""subject"": {√æ            ""lastName"": ""–¢–ï–°–¢–û–í–ò–ß"",√æ            ""country"": ""KZ"",√æ            ""commonName"": ""–¢–ï–°–¢–û–í –¢–ï–°–¢"",√æ            ""gender"": """",√æ            ""surname"": ""–¢–ï–°–¢–û–í"",√æ            ""locality"": ""–ê–õ–ú–ê–¢–´"",√æ            ""dn"": ""CN=–¢–ï–°–¢–û–í –¢–ï–°–¢,SURNAME=–¢–ï–°–¢–û–í,SERIALNUMBER=IIN123456789011,C=KZ,L=–ê–õ–ú–ê–¢–´,S=–ê–õ–ú–ê–¢–´,G=–¢–ï–°–¢–û–í–ò–ß"",√æ            ""state"": ""–ê–õ–ú–ê–¢–´"",√æ            ""birthDate"": ""12-34-56"",√æ            ""iin"": ""123456789011""√æ        },√æ        ""signAlg"": ""SHA256WithRSAEncryption"",√æ        ""sign"": ""LLQvGPQP+rdLBTPRf0EgLIo/D9TqxeZ52pRyuCHNm5P2iOdSn3DuDid1k4pNFHFDIuJ..."",√æ        ""publicKey"": ""MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtKWLOJf9qCqA6EO/SV..."",√æ        ""issuer"": {√æ            ""commonName"": ""“∞–õ–¢–¢–´“ö –ö–£”ò–õ–ê–ù–î–´–†–£–®–´ –û–†–¢–ê–õ–´“ö (RSA)"",√æ            ""country"": ""KZ"",√æ            ""dn"": ""C=KZ,CN=“∞–õ–¢–¢–´“ö –ö–£”ò–õ–ê–ù–î–´–†–£–®–´ –û–†–¢–ê–õ–´“ö (RSA)""√æ        },√æ        ""notBefore"": ""2018-08-22 18:11:36"",√æ        ""keyUser"": [√æ            ""INDIVIDUAL""√æ        ],√æ        ""valid"": true,√æ        ""keyUsage"": ""AUTH""√æ    },√æ    ""message"": """",√æ    ""status"": 0√æ}√æ```√æ√æ## –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è√æ√æ–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ http://ncanode.kz√æ√æ## –ê–≤—Ç–æ—Ä—ã√æ√æ- **Malik Zharykov** - Initial work√æ√æ## –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏√æ√æ- ‚≠ê [@exe-dealer](https://github.com/exe-dealer) - –ó–∞ Dockerfile√æ√æ–¢–∞–∫–∂–µ —Ö–æ—á—É –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –≤—Å–µ—Ö, –∫—Ç–æ –¥–∞—ë—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ –æ—à–∏–±–∫–∞–º –≤ —Ä–∞–∑–¥–µ–ª–µ [""Issues""](https://github.com/malikzh/NCANode/issues).√æ–°–ø–∞—Å–∏–±–æ –í–∞–º –æ–≥—Ä–æ–º–Ω–æ–µ! üòä√æ√æ## –õ–∏—Ü–µ–Ω–∑–∏—è√æ√æ–ü—Ä–æ–µ–∫—Ç –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π [MIT](LICENSE)√æ√æ## –í–∞–∂–Ω–æ!!!√æ√æ–ü–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é  –ê–û ¬´–ù–ò–¢¬ª | –ù–£–¶ –†–ö. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ `kalkancrypt-0.4.jar` –∏ `kalkancrypt_xmldsig-0.3.jar`√æ–ë—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, –ø–æ—ç—Ç–æ–º—É –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏√æ–∏–∑ –∫–æ–º–ø–ª–µ–∫—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (SDK) –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é `/lib`.√æ√æ### Docker & NCANode√æ√æ–í –ø—Ä–æ–µ–∫—Ç–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ –¥–≤–∞ –¥–æ–∫–µ—Ä—Ñ–∞–π–ª–∞, —ç—Ç–æ:√æ√æ- `Dockerfile.build` - —ç—Ç–æ—Ç –¥–æ–∫–µ—Ä—Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–±–æ—Ä–∫–∏ NCANode –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤. *–ü–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ KalkanCrypt –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é /lib*√æ- `Dockerfile.run`   - —ç—Ç–æ—Ç –¥–æ–∫–µ—Ä—Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–∂–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ NCANode. –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ, –æ–±—Ä–∞–∑ —Å–∫–∞—á–∏–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é NCANode.√æ√æ----√æ√æ–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è"
eclipse/eclipse.platform.runtime,23198,16,6,30,Organization,False,Eclipse Platform project repository (eclipse.platform.runtime),,,10,Java,"{'': 4, 'md': 2, 'xml': 1}",4553,71,5315,52,0,6991,False,,,,,1,1,0,1,0,0,0,0,0,0,0,0,669,139,,,"Contributing to Eclipse Platform runtime project√æ================================================√æ√æThanks for your interest in this project.√æ√æProject description:√æ--------------------√æ√æPlatform runtime provides the background componentns for Eclipse based applications.√æ√æ√æWebsite: <https://projects.eclipse.org/projects/eclipse.platform>√æ√æFor more information, refer to the [Platform UI wiki page][1].√æ√æHow to contribute:√æ--------------------√æContributions to Platform UI are most welcome. There are many ways to contribute,√æfrom entering high quality bug reports, to contributing code or documentation changes.√æFor a complete guide, see the [Platform UI - How to contribute wiki page][2] page on the team wiki.√æ√æTest dependencies√æ-----------------√æ√æSeveral test plug-ins have a dependency to the Mockito and Hamcrest library.√æPlease install them from the [Orbit Download page][3]√æ√æCurrently the following versions are required:√æ√æ- org.hamcrest;bundle-version=""1.3.0"",√æ- org.mockito;bundle-version=""2.13"",√æ√æ√æ√æHow to build on the command line√æ--------------------------------√æ√æYou need Maven 3.3.1 installed. After this you can run the build via the following command:√æ√æmvn clean verify -Pbuild-individual-bundles√æ√æ√æDeveloper resources:√æ--------------------√æ√æInformation regarding source code management, builds, coding standards, and more.√æ√æ- <https://projects.eclipse.org/projects/eclipse.platform/developer>√æ√æContributor License Agreement:√æ------------------------------√æ√æBefore your contribution can be accepted by the project, you need to create and electronically sign the Eclipse Foundation Contributor License Agreement (CLA).√æ√æ- <http://www.eclipse.org/legal/CLA.php>√æ√æ√æSearch for bugs:√æ----------------√æ√æThis project uses Bugzilla to track ongoing development and issues.√æ√æ- <https://bugs.eclipse.org/bugs/buglist.cgi?bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&classification=Eclipse&component=runtime&list_id=12049886&product=Platform&query_format=advanced>√æ√æCreate a new bug:√æ-----------------√æ√æBe sure to search for existing bugs before you create another one. Remember that contributions are always welcome!√æ√æ- <https://bugs.eclipse.org/bugs/enter_bug.cgi?product=platform;component=runtime>√æ√æContact:√æ--------√æ√æContact the project developers via the project's ""dev"" list.√æ√æ- <https://accounts.eclipse.org/mailing-list/platform-dev>√æ√æ√æLicense√æ-------√æ√æ[Eclipse Public License (EPL) 2.0][4]√æ√æ[1]: http://wiki.eclipse.org/Platform_UI√æ[2]: https://wiki.eclipse.org/Platform_UI/How_to_Contribute√æ[3]: http://download.eclipse.org/tools/orbit/downloads/√æ[4]: https://www.eclipse.org/legal/epl-2.0/"
670832188/TestApp,1732,34,0,14,User,False,AndroidÂü∫Á°ÄÂºÄÂèëÂ∑•ÂÖ∑ÔºåÊèê‰æõ‰∏Ä‰∫õ‰æøÊç∑ÊñπÊ≥ïÔºåÂπ∂Âà©Áî®RxJavaÂíåRetrofitÂ∞ÅË£Ö‰∫ÜÁΩëÁªúËØ∑Ê±ÇÁªÑ‰ª∂,,,10,Java,"{'': 2, 'md': 1, 'gradle': 2, 'properties': 1, 'bat': 1}",167,1,0,1,0,810,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,26,,4,,# TestApp√æÊµãËØïÁªÉ‰π†ÂèäÂäüËÉΩÊºîÁ§∫È°πÁõÆÔºåbaseDevKit module Êèê‰æõÈÉ®ÂàÜ‰æøÊç∑Â∑•ÂÖ∑Á±ªÂèä‰æøÊç∑ÊñπÊ≥ïÔºåÂ∞ÅË£Ö‰∫ÜÂü∫Á°ÄÁΩëÁªúËØ∑Ê±ÇÂäüËÉΩÔºàÂà©Áî®RxJavaÂíåRetrofitÊê≠Âª∫ÔºâÔºåÊîØÊåÅ‰∏éActivity√æÂíåFragmentÁîüÂëΩÂë®ÊúüÁªëÂÆöÔºåÂπ∂ÈôÑÊúâÊµãËØïÁî®‰æã√æhttps://blog.csdn.net/briblue/article/details/76736356
DJI-Mobile-SDK-Tutorials/Android-MediaManagerDemo,329,12,7,8,Organization,False,"This demo is designed for you to learn how to use the MediaManager to interact with the file system on the SD card of the aircraft's camera. You can use it to preview photos, play videos, download or delete files and so on.",,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",4,Java,"{'': 1, 'txt': 1, 'md': 1}",18,2,11,1,0,1003,True,2,5,2,0,0,2,0,1,8,0,1,1,8,4,0,0,31,0,,,"# Android-MediaManagerDemo√æ√æ## Introduction√æ√æThis demo is designed for you to learn how to use `MediaManager` to interact with the file system on the SD card of the aircraft's camera. You can use it to preview photos, play videos, download or delete files and so on.√æ√æ## Requirements√æ√æ - Android Studio 2.0+√æ - Android System 4.1+√æ - DJI Android SDK 4.12√æ - DJI Android UXSDK 4.12√æ√æ## Supported DJI Products√æ√æ - Mavic 2 Series√æ - Mavic Air√æ - Mavic Pro√æ - Spark√æ - Phantom 4 Pro√æ - Phantom 4 Advanced√æ - Inspire 2√æ√æ## Tutorial√æ√æFor this demo's tutorial: **Creating a Media Manager Application**, please refer to <https://developer.dji.com/mobile-sdk/documentation/android-tutorials/MediaManagerDemo.html>.√æ√æ## Feedback√æ√æWe‚Äôd love to hear your feedback on this demo and tutorial.√æ√æPlease use **DJI Developer Forum** [dji-forum](https://forum.dji.com/forum-139-1.html?from=developer) or **email** [dev@dji.com](dev@dji.com) when you meet any problems of using this demo. At a minimum please let us know:√æ√æ* Which DJI Product you are using?√æ* Which Android Device and Android system version you are using?√æ* Which Android Studio version you are using?√æ* A short description of your problem includes debugging logs or screenshots.√æ* Any bugs or typos you come across.√æ√æ## License√æ√æAndroid-MediaManagerDemo is available under the MIT license. Please see the LICENSE file for more info.√æ√æ## Join Us√æ√æDJI is looking for all kinds of Software Engineers to continue building the Future of Possible. Available positions in Shenzhen, China and around the world. If you are interested, please send your resume to <software-sz@dji.com>. For more details, and list of all our global offices, please check <https://we.dji.com/jobs_en.html>.√æ√æDJI ÊãõËΩØ‰ª∂Â∑•Á®ãÂ∏àÂï¶ÔºåbasedÂú®Ê∑±Âú≥ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥ÂíåÊàë‰ª¨‰∏ÄËµ∑ÊääDJI‰∫ßÂìÅÂÅöÂæóÊõ¥Â•ΩÔºåËØ∑ÂèëÈÄÅÁÆÄÂéÜÂà∞ <software-sz@dji.com>.  ËØ¶ÊÉÖËØ∑ÊµèËßà <https://we.dji.com/zh-CN/recruitment>."
vasani-arpit/cordova-plugin-downloadmanager,11209,36,6,39,User,False,A Cordova plugin to download file in system's default download manager,,,6,Java,"{'md': 1, 'json': 1, 'xml': 1}",16,2,0,3,5,1092,True,2,4,0,0,0,7,0,2,8,0,1,2,60,58,0,0,34,,125,,"# cordova-plugin-downloadmanager√æA Cordova plugin to download file in system's default download manager√æ√æ## Supported Platforms√æ√æ - Android (SDK >= 11)√æ√æ ## Installation√æ√æ ```√æ cordova plugin add https://github.com/vasani-arpit/cordova-plugin-downloadmanager√æ ```√æ√æ ## How to Use√æ√æ√æ ```√æ //after device is ready√ævar fail = function (message) {    √æ    alert(message)√æ}√ævar success = function (data) {√æ        console.log(""succes"");√æ}√æcordova.plugins.DownloadManager.download(""Your URL to download"", ""Your file name"",""Your Description"" ,success, fail);√æ ```√æ√æ## Result√æ√æ![screenshot](./screenshot/downloadplugin.gif)√æ√æ_**If this plugin helps your project then don't forget to ‚≠ê star the repo.**_√æ√æ## Contributing√æ√æ1. Fork it√æ2. Create your feature branch (`git checkout -b my-new-feature`)√æ3. Commit your changes (`git commit -am 'Add some feature'`)√æ4. Push to the branch (`git push origin my-new-feature`)√æ5. Create new Pull Request"
MovingBlocks/DestinationSol,124043,191,36,102,Organization,False,"Official continuation of Destination Sol, the great fun little arcade space shooter from http://sourceforge.net/projects/destinationsol/",,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",28,Java,"{'': 9, 'yml': 1, 'md': 1, 'txt': 1, 'gradle': 2, 'properties': 1, 'bat': 2, 'png': 1}",1819,7,9,46,6,2323,True,28,90,4,10,5,399,5,44,19,2,11,102,15746,8485,0,0,61,82,,,
kegaretail/react-native-rabbitmq,12496,25,5,25,Organization,False,,,,8,Java,"{'md': 1, 'js': 1, 'json': 1, 'podspec': 1}",113,1,27,2,0,1328,True,15,12,4,0,2,3,2,1,7,0,0,0,0,0,14,0,3,0,,,"## Todo√æ√æ## Installation√æ√æ√æ√æ## RN 0.60 >√æ√æ## IOS√ænpm install react-native-rabbitmq --save√æ√æcd ./ios√æ√æchange in the Podfile line 1:√æplatform :ios, '9.0' to platform :ios, '10.0'√æ√æpod install√æ√æ## Android√æ√ænpm install react-native-rabbitmq --save√æ√æ## RN 0.60 <√æ√æ## IOS√æ√ænpm install react-native-rabbitmq --save√æ√æ Installation with CocoaPods√æ√æ1. In the Podfile uncomment ""use_frameworks"" (Optional):√æ√æ```√æuse_frameworks!√æ```√æ2. Add the following to your Podfile, use master because needed fix is not a tag:√æ√æ```√æpod 'react-native-rabbitmq', :path => '../node_modules/react-native-rabbitmq'√æpod 'RMQClient', :git => 'https://github.com/rabbitmq/rabbitmq-objc-client.git'√æ```√æ3. Install the cocapods:√æ√æ```√æpod install√æ```√æ√æ√æ√æIn xcode add a recursive Header Search Path:√æ```√æ$(SRCROOT)/Pods√æ```√æ√æ√æYou need to change some things, to make it work:√æ√æios\Pods\RMQClient\RMQClient\RMQValues.h Line 53√æ```√æ@import JKVValue;√æ```√æto√æ```√æ#import ""JKVValue.h""√æ```√æ√æios\Pods\JKVValue\JKVValue\Public\JKVValue.h√æ```√æ#import <JKVValue/JKVValueImpl.h>√æ#import <JKVValue/JKVMutableValue.h>√æ#import <JKVValue/JKVObjectPrinter.h>√æ#import <JKVValue/JKVFactory.h>√æ```√æto√æ```√æ#import ""JKVValueImpl.h""√æ#import ""JKVMutableValue.h""√æ#import ""JKVObjectPrinter.h""√æ#import ""JKVFactory.h""√æ```√æ√æios\Pods\RMQClient\RMQClient\RMQTCPSocketTransport.h√æ```√æ@import CocoaAsyncSocket;√æ```√æto√æ```√æ#import ""GCDAsyncSocket.h""√æ```√æ√æreact-native link√æ√æ√æ## Android√æ√ænpm install react-native-rabbitmq --save√æ√æreact-native link√æ√æ√æ## Usage√æ```√æimport { Connection, Exchange, Queue } from 'react-native-rabbitmq';√æ√æconst config = {√æ host:'',√æ port:5672,√æ username:'user',√æ password:'password',√æ virtualhost:'vhost',√æ ttl: 10000 // Message time to live,√æ ssl: true // Enable ssl connection, make sure the port is 5671 or an other ssl port√æ}√æ√ælet connection = new Connection(config);√æ√æconnection.on('error', (event) => {√æ√æ});√æ√æconnection.on('connected', (event) => {√æ√æ let queue = new Queue( this.connection, {√æ  name: 'queue_name',√æ  passive: false,√æ  durable: true,√æ  exclusive: false,√æ  consumer_arguments: {'x-priority': 1}√æ }, {√æ // queueDeclare args here like x-message-ttl√æ });√æ√æ let exchange = new Exchange(connection, {√æ  name: 'exchange_name',√æ  type: 'direct',√æ  durable: true,√æ  autoDelete: false,√æ  internal: false√æ });√æ√æ queue.bind(exchange, 'queue_name');√æ√æ // Receive one message when it arrives√æ queue.on('message', (data) => {√æ√æ });√æ√æ // Receive all messages send with in a second√æ queue.on('messages', (data) => {√æ√æ });√æ√æ});√æ√ælet message = 'test';√ælet routing_key = '';√ælet properties = {√æ expiration: 10000√æ}√æexchange.publish(data, routing_key, properties)√æ√æ```"
voidking/bus-search,2362,6,1,4,User,False,ÂÖ¨‰∫§Á∫øË∑ØÊêúÁ¥¢Á≥ªÁªüÔºåmysql+jdbc+servlet+freemarker+json+jquery+arttemplate+ÁôæÂ∫¶Âú∞Âõæapi,,,8,Java,"{'': 2, 'md': 1, 'sql': 1}",15,1,2,1,0,1245,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,93,,48,,# bus-search√æÂÖ¨‰∫§Á∫øË∑ØÊêúÁ¥¢Á≥ªÁªüÔºåmysql+jdbc+servlet+freemarker+json+jquery+arttemplate+ÁôæÂ∫¶Âú∞Âõæapi   √æÈ°πÁõÆËØ¶ÁªÜËØ¥Êòé[ÁÇπËøôÈáå](https://www.voidking.com/dev-bus-search-system/)„ÄÇ   √æ √æ√æ![](http://cdn.voidking.com//imgs/bus-search/result.gif)   √æ√æ√æ# URL√æ## ÊôÆÈÄöÁî®Êà∑√æhttp://localhost:8080/bus-search/Home√æ√æ## ÁÆ°ÁêÜÂëò√æhttp://localhost:8080/bus-search/Admin/LoginPage  √æ√æÁî®Êà∑ÂêçÔºöadminÔºåÂØÜÁ†ÅÔºöadmin„ÄÇ√æ√æ# SpringMVC√æÂçáÁ∫ßÁâàÈ°πÁõÆ‰ΩøÁî®SpringMVCÂÆåÊàêÔºåÈ°πÁõÆÂú∞ÂùÄÔºöhttps://github.com/voidking/pandawork-start
eclipse/elk,19493,90,16,41,Organization,False,Eclipse Layout Kernel - Automatic layout for Java applications.,https://www.eclipse.org/elk/,"{'key': 'epl-2.0', 'name': 'Eclipse Public License 2.0', 'spdx_id': 'EPL-2.0', 'url': 'https://api.github.com/licenses/epl-2.0', 'node_id': 'MDc6TGljZW5zZTMy'}",13,Java,"{'': 1, 'md': 4}",1462,19,11,13,0,1708,True,64,391,26,71,5,183,5,67,29,2,0,0,0,0,0,0,669,139,,,"<p align=""center"">√æ  <img src=""https://raw.githubusercontent.com/eclipse/elk/master/docs/static/img/elk_with_text.svg?sanitize=true"" height=""150""> √æ</p>√æ√æDiagrams and visual languages are a great thing,√æbut getting the layout just right for them to be easily understandable√æcan be tedious and time-consuming.√æThe Eclipse Layout Kernel provides a number of layout algorithms√æas well as an Eclipse-based infrastructure to connect them√æto editors and viewers.√æThe layout algorithms are plain Java√æand can thus also be used outside of Eclipse.√æ√æ## More Info√æ√æ* [The ELK homepage](http://www.eclipse.org/elk)√æ* [... and ELK's documentation](http://www.eclipse.org/elk/documentation.html)√æ* [ELK Live](https://rtsys.informatik.uni-kiel.de/elklive/) (web-based playground to play around with ELK)√æ* [elkjs](https://github.com/kieler/elkjs) (JavaScript library transpiled from ELK's Java sources)√æ√æ## Example Layout√æ√æ![](https://raw.githubusercontent.com/eclipse/elk/master/docs/static/img/example_layout_complexRouter.svg?sanitize=true)√æ√æ## Repository Structure√æ√æThe repository's structure is pretty straightforward. We only have a few folders:√æ√æ* `build`:√æ  Contains all the files necessary to build ELK in all its different forms.√æ* `config`:√æ  Contains configuration files, such as our Checkstyle configuration.√æ* `docs`:√æ  Contains documentation in the form of a [Hugo](https://gohugo.io/) site.√æ* `features`:√æ  Contains all the Eclipse features ELK consists of.√æ* `plugins`:√æ  Contains all the plugins ELK consists of.√æ* `setups`:√æ  Contains our Oomph setup files.√æ* `tests`:√æ  Contains unit tests. Note that we have [a whole repository](https://github.com/eclipse/elk-models/) dedicated to test models.√æ√æ√æ## Building ELK√æ√æInformation on how to build ELK and the documentation can be found [on our website](https://www.eclipse.org/elk/documentation/contributors/buildingelk.html)."
Raider-Robotics-Team-1518/SteamWorks2017,90,1,4,4,Organization,False,Robot code for the 2017 FIRST SteamWorks competition,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",17,Java,"{'': 6, 'txt': 1, 'txt~': 1, 'md': 1, 'properties': 1, 'properties~': 1, 'xml': 2, 'xml~': 1}",22,1,0,2,0,1256,True,0,0,0,0,0,1,0,0,7,0,0,0,0,0,0,0,17,0,,,# SteamWorks2017√æRobot code for the 2017 FIRST SteamWorks competition
craftercms/commons,1708,6,9,12,Organization,False,Crafter Commons.,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",20,Java,"{'': 3, 'yml': 1, 'md': 4, 'xml': 1}",653,10,100,9,0,2612,False,,,,,0,224,0,27,6,0,4,40,4834,2412,0,0,27,22,,,![build status](https://travis-ci.org/craftercms/commons.svg?branch=develop)√æ[![Codacy Badge](https://api.codacy.com/project/badge/Grade/1017b5e390974c1587af80dadd012bd3)](https://www.codacy.com/app/CrafterCMS/commons?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=craftercms/commons&amp;utm_campaign=Badge_Grade)√æ√æCommons√æ=======√æ√æCrafter Commons.
liuyangming/ByteJTA,1142,200,33,101,User,False,ByteJTA is a distributed transaction manager based on the XA/2PC mechanism. It‚Äôs compatible with the JTA specification. User guide: https://github.com/liuyangming/ByteJTA/wiki,http://www.bytesoft.org,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",10,Java,"{'': 2, 'md': 2, 'xml': 1}",374,6,14,2,7,1648,True,6,5,0,0,2,7,2,4,9,0,1,1,12,0,15,0,10,,212,,"**ByteJTA** is an implementation of Distributed Transaction Manager, based on the XA/2PC mechanism. √æ√æ**ByteJTA** is comptible with JTA and could be seamlessly integrated with Spring and other Java containers.√æ√æ√æ## 1. Quick Start√æ√æ#### 1.1 Add maven depenency√æ###### 1.1.1. Spring Cloud√æ```xml√æ<dependency>√æ <groupId>org.bytesoft</groupId>√æ <artifactId>bytejta-supports-springcloud</artifactId>√æ <version>0.5.0-BETA8</version>√æ</dependency>√æ```√æ###### 1.1.2. dubbo√æ```xml√æ<dependency>√æ <groupId>org.bytesoft</groupId>√æ <artifactId>bytejta-supports-dubbo</artifactId>√æ <version>0.5.0-BETA8</version>√æ</dependency>√æ```√æ√æ√æ√æ## 2. Documentation & Samples√æ* [Document](https://github.com/liuyangming/ByteJTA/wiki)√æ* [Sample](https://github.com/liuyangming/ByteJTA-sample)√æ√æ√æ√æ## 3. Features√æ* support declarative transaction management√æ* support distributed transaction scenarios. e.g. multi-datasource, cross-applications and cross-servers transaction√æ* support Dubbo framework√æ* support Spring Cloud√æ√æ√æ√æ## 4. Contact Me√æIf you have any questions or comments regarding this project, please feel free to contact me at:√æ√æ1. send mail to _[bytefox#126.com](bytefox@126.com)_√æ~OR~√æ2. add Tecent QQ group 537445956/606453172√æ√æWe will review all the suggestions and implement good ones in future release."
exoplatform/integration,9342,1,53,34,Organization,False,eXo Integration,,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",12,Java,"{'': 2, 'xml': 1, 'properties': 1}",2130,23,319,72,0,3245,False,,,,,30,185,0,10,6,0,3,3,14,131,0,0,124,6,,,
athleticspot/athleticspot,175330,0,1,1,Organization,False,,,,21,JavaScript,"{'json': 5, '': 5, 'md': 1, 'cmd': 1, 'xml': 1, 'properties': 1, 'lock': 1}",427,11,0,1,0,1075,True,0,0,0,0,3,10,2,0,8,0,1,4,40,49,0,0,5,0,,,"Athleticpsot√æ√æ# athleticspot√æPipelineins√æThis application was generated using JHipster 4.5.6, you can find documentation and help at [https://jhipster.github.io/documentation-archive/v4.5.6](https://jhipster.github.io/documentation-archive/v4.5.6).√æ√æ## Development√æ√æBefore you can build this project, you must install and configure the following dependencies on your machine:√æ√æ1. [Node.js][]: We use Node to run a development web server and build the project.√æ   Depending on your system, you can install Node either from source or as a pre-packaged bundle.√æ2. [Yarn][]: We use Yarn to manage Node dependencies.√æ   Depending on your system, you can install Yarn either from source or as a pre-packaged bundle.√æ√æAfter installing Node, you should be able to run the following command to install development tools.√æYou will only need to run this command when dependencies change in [package.json](package.json).√æ√æ    yarn install√æ√æWe use yarn scripts and [Webpack][] as our build system.√æ√æ√æRun the following commands in two separate terminals to create a blissful development experience where your browser√æauto-refreshes when files change on your hard drive.√æ√æ    ./mvnw√æ    yarn start√æ√æ[Yarn][] is also used to manage CSS and JavaScript dependencies used in this application. You can upgrade dependencies by√æspecifying a newer version in [package.json](package.json). You can also run `yarn update` and `yarn install` to manage dependencies.√æAdd the `help` flag on any command to see how you can use it. For example, `yarn help update`.√æ√æThe `yarn run` command will list all of the scripts available to run for this project.√æ√æ### Managing dependencies√æ√æFor example, to add [Leaflet][] library as a runtime dependency of your application, you would run following command:√æ√æ    yarn add --exact leaflet√æ√æTo benefit from TypeScript type definitions from [DefinitelyTyped][] repository in development, you would run following command:√æ√æ    yarn add --dev --exact @types/leaflet√æ√æThen you would import the JS and CSS files specified in library's installation instructions so that [Webpack][] knows about them:√æ√æEdit [src/main/webapp/app/vendor.ts](src/main/webapp-old/app/vendor.ts) file:√æ~~~√æimport 'leaflet/dist/leaflet.js';√æ~~~√æ√æEdit [src/main/webapp/content/css/vendor.css](src/main/webapp-old/content/css/vendor.css) file:√æ~~~√æ@import '~leaflet/dist/leaflet.css';√æ~~~√æ√æNote: there are still few other things remaining to do for Leaflet that we won't detail here.√æ√æFor further instructions on how to develop with JHipster, have a look at [Using JHipster in development][].√æ√æ√æ## Building for production√æ√æTo optimize the athleticspot application for production, run:√æ√æ    ./mvnw -Pprod clean package√æ√æThis will concatenate and minify the client CSS and JavaScript files. It will also modify `index.html` so it references these new files.√æTo ensure everything worked, run:√æ√æ    java -jar target/*.war√æ√æThen navigate to [http://localhost:8080](http://localhost:8080) in your browser.√æ√æRefer to [Using JHipster in production][] for more details.√æ√æ## Testing√æ√æTo launch your application's tests, run:√æ√æ    ./mvnw clean test√æ√æ### Client tests√æ√æUnit tests are run by [Karma][] and written with [Jasmine][]. They're located in [src/test/javascript/](src/test/javascript/) and can be run with:√æ√æ    yarn test√æ√æ√æ√æFor more information, refer to the [Running tests page][]."
twjitm/afhq,21147,94,6,32,User,False,Á±ª‰ºº‰∫éËÖæËÆØÊâãÊú∫ÁÆ°ÂÆ∂Ôºå360ÂÆâÂÖ®Âç´Â£´Á≠âËΩØ‰ª∂Á≥ª„ÄÇÂèØ‰ª•ËøõË°åÊú®È©¨Êâ´ÊèèÔºåÁΩëÁªúÁ´ØÂè£Êâ´ÊèèÔºåÊîØ‰ªòÁéØÂ¢ÉÊâ´ÊèèÔºåÊºèÊ¥ûÊ£ÄÊµãÔºåÁü≠‰ø°ÁîµËØùÊã¶Êà™ÔºåÂûÉÂúæÊ∏ÖÁêÜÔºåÂíåÊâãÊú∫Èò≤ÁõóÔºåÂà©Áî®ÂèçÂ∞ÑÂíåÂÜÖÂÆπÊèê‰æõËÄÖÂÆûÁé∞ÁîµËØùÁü≠‰ø°Êã¶Êà™ÔºåÈááÁî®iptableÂÆûÁé∞ÁΩëÁªúÊã¶Êà™ËøáÊª§,,,16,Java,"{'': 2, 'xml': 1, 'md': 1, 'iml': 1, 'png': 1, 'txt': 1, 'properties': 1}",25,2,0,1,4,1160,True,0,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,105,,49,,"# afhq√æÊú¨È°πÁõÆÊòØ‰ΩúËÄÖÁöÑÂ§ßÂ≠¶ÊØï‰∏öËÆæËÆ°ÔºåËé∑Âæó2017Â±äÊ≤≥ÂåóÂ§ßÂ≠¶ËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏éÊäÄÊúØÂ≠¶Èô¢ÁöÑ‰ºòÁßÄÊØï‰∏öËÆæËÆ°„ÄÇÂÖ∂ÂäüËÉΩÂÆûÁî®ÔºåÁïåÈù¢ÁæéËßÇÔºåËÆæËÆ°ÂêàÁêÜÔºåÊäÄÊúØÁÇπ‰∏∞ÂØå„ÄÇÂêéÊúüÂ∞ÜËøõË°åÊõ¥Êñ∞ÔºåËûçÂÖ•Êú®È©¨Âú®Á∫øÊï∞ÊçÆÂ∫ìÔºå‰ºòÂåñÂêÑÁßçÊú∫ÂûãÈÄÇÈÖç„ÄÇÁ±ª‰ºº‰∫éËÖæËÆØÊâãÊú∫ÁÆ°ÂÆ∂Ôºå360ÂÆâÂÖ®Âç´Â£´Á≠âËΩØ‰ª∂Á≥ª„ÄÇ√æ# ‰∏ªË¶ÅÂäüËÉΩÔºö√æÁ≥ªÁªüËÆæËÆ°ÂåÖÊã¨Êú®È©¨Êü•ÊùÄÔºåÊµÅÈáèÁõëÊéßÔºåÈÄöËøáiptableÈÖçÁΩÆËøáÊª§ËßÑÂàôÔºåÁü≠‰ø°ÁîµËØùÊã¶Êà™ÔºåÊèêÂçáÂú®5.0‰ª•‰∏äÁöÑÁ≥ªÁªüÔºåÂà©Áî®ÂÜÖÂÆπÊèê‰æõËÄÖÁõëÂê¨Á≥ªÁªüÁü≠‰ø°Êï∞ÊçÆÂ∫ìÁöÑÂèòÂåñÂíåÊú¨Âú∞Êï∞ÊçÆÂ∫ìÁöÑÂèòÂåñÂà§Êñ≠ÊòØÂê¶Âú®ÈªëÂêçÂçï‰∏≠„ÄÇËøõÁ®ãÁÆ°ÁêÜÔºåÁÆ°ÁêÜÂêéÂ§©ËøêË°åËøõÁ®ãÔºåÂûÉÂúæÊâ´ÊèèÔºåÊâ´ÊèèÁ≥ªÁªü‰∏≠ÁöÑÂûÉÂúæÊñá‰ª∂ÔºåÁõÆÂâçÂè™ÊòØÊâ´ÊèèÂûÉÂúæÊñá‰ª∂Âπ∂Ê∏ÖÁêÜÔºåÂêéÊúüÁª¥Êä§Â∞ÜÊâ´ÊèèÊñá‰ª∂Á≥ªÁªüÔºåÂíåÁºìÂ≠òÁ≥ªÁªü„ÄÇÊâãÊú∫Èò≤ÁõóÂú®Âà©Áî®‰ªªÂä°Ê†àÁöÑÊ®°ÂºèÁÆ°ÁêÜÊâãÊú∫Â∫îÁî®Á®ãÂ∫è„ÄÇÁ≥ªÁªü‰∏≠‰∏ªË¶ÅÁî®Âà∞ÁöÑÊäÄÊúØÊúâÂæàÂ§öÔºåÊúâjavaÈ´òÁ∫ßÁü•ËØÜÔºåAndroidÈ´òÁ∫ßÁü•ËØÜÔºå‰πüÊúâÂü∫Á°ÄÁü•ËØÜÔºåÊúâËá™ÂÆö‰πâÊéß‰ª∂ÁöÑ‰ΩøÁî®ÔºåÊúâ‰∏çÂêåÂ∏ÉÂ±ÄÂíåÈÖçÂêàÔºåÊúâÂæàÂ§ö‰∏úË•øÂÄºÂæó‰∏ÄÁúãÁöÑ„ÄÇ√æ## ÂäüËÉΩËÆæËÆ°√æ### ‰∏ªÈ°µÈù¢√æ‰∏ªÈ°µÈù¢ÂåÖÊã¨Ëá™ÂÆö‰πâËøõÂ∫¶Êù°Âíå‰πùÂÆ´Ê†ºÔºåÂ∏ßÂ∏ÉÂ±ÄÁöÑÂàáÊç¢„ÄÇ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-05-04-23-04-52-39.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ### Êú®È©¨Êü•ÊùÄ√æÊú®È©¨Êü•ÊùÄ‰∏ªË¶ÅÊòØÈÄöËøáÁóÖÊØíÊï∞ÊçÆÂ∫ì‰ª•ÂèälinuxÂØπÁ´ØÂè£ÁöÑÁõëÊéßÂÆûÁé∞ÊºèÊ¥ûÊâ´Êèè‰ª•ÂèäÊú®È©¨Êâ´ÊèèÔºåÈÄöËøáÊñá‰ª∂Á±ªÂûãÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÊñá‰ª∂ÊòØÂê¶‰∏∫ÁªëÂÆöÊñá‰ª∂„ÄÇ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-05-04-23-05-19-69.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ### ÁΩëÁªúÁõëÊéß√æÈááÁî®iptableÁöÑlinuxÁöÑËßÑÂàôÔºåÈÖçÁΩÆËßÑÂàôÔºå‰ΩøÂæóÂú®wifiÊÉÖÂÜµ‰∏ãÂèØ‰ª•‰ΩøÁî®ÁΩëÁªúÔºåÂú®GPRSÊÉÖÂÜµ‰∏ãÂèØ‰ª•‰∏ç‰ΩøÁî®ÁΩëÁªú„ÄÇ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-05-04-23-05-26-43.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ√æ### Áü≠‰ø°Êã¶Êà™√æÈááÁî®ÈªëÂêçÂçïÊï∞ÊçÆÂ∫ìÂíåÂÜÖÂÆπÊèê‰æõËÄÖÊ®°ÂºèËøõË°åÁõëÂê¨Áü≠‰ø°ÂíåÁîµËØùÂà∞Êù•ÂπøÊí≠ÔºåËã•ÊòØÈªëÂêçÂçï‰∏≠ÁöÑÁîµËØùÂè∑Á†ÅÔºåÂà©Áî®ÂèçÂ∞ÑÂéüÁêÜËøõË°åÂà†Èô§ÂíåÊåÇÊéâÁîµËØù„ÄÇ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-03-12-00-05-25-11.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ### ÂûÉÂúæÊ∏ÖÁêÜ√æÈááÁî®linuxÁºìÂ≠òÁöÑÂéüÂàôÔºåÂ∞ÜÁºìÂ≠ò‰∏≠Êó†Áî®ÁöÑÊï∞ÊçÆËøõË°åÊ∏ÖÊü•ÔºåÂ∞ÜÊµèËßàÁóïËøπËøõË°åÊ∏ÖÊü•ÔºåÂ∞ÜÂ§ßÊñá‰ª∂ÔºåÂàóÂá∫Êù•ÈÄâÊã©Ê∏ÖÊü•„ÄÇÂ∞ÜappÁºìÂ≠òÁöÑÊó†Áî®Êñá‰ª∂Ê∏ÖÊü•„ÄÇÂûÉÂúæÊ∏ÖÊü•„ÄÅ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-05-06-08-37-24-61.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ√æ### ËΩØ‰ª∂ÁÆ°ÁêÜ√æÈááÁî®Êû∑ÈîÅÂØÜÁ†ÅÊ®°ÂºèËøõË°åËΩØ‰ª∂ÁÆ°ÁêÜÔºåÈááÁî®Á≥ªÁªüÊèê‰æõÁöÑ‰ªªÂä°Ê†àÊ®°ÂºèÔºåÂÆûÁé∞Âú®ÊâìÂºÄÂè¶Â§ñÁöÑappÊòØËøõË°åÊû∑ÈîÅÂà§Êñ≠„ÄÇ√æ<div  align=""center"">    √æ<img src=""./image/Screenshot_2017-05-06-09-04-38-30.png""  width = ""500"" height = ""700"" alt=""Êú®È©¨Êü•ÊùÄ"" align=center />√æ</div>√æ√æ√æ### Ê∑ªÂä†Android studio ÈÖçÁΩÆ√æ√æ# ËØ¶ÁªÜ‰ªãÁªçÂçöÂÆ¢Âú∞ÂùÄÔºö√æhttp://blog.csdn.net/baidu_23086307/article/category/6209559√æ# ‰ΩúËÄÖÔºö√æqqÔºö1029718215√æÁæ§ 239545950"
XMachina4645/OffSeason,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not Found,
xinpengfei520/P2P,22743,44,5,21,User,False,iMoney ÈáëËûçÈ°πÁõÆ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",18,Java,"{'': 3, 'md': 1, 'gradle': 3, 'properties': 1, 'bat': 1, 'jks': 1}",86,1,0,1,17,1315,True,0,0,0,0,0,0,0,0,7,0,1,2,3,2,0,0,95,,32,xinpengfei520/iMoney,"# iMoney ÈáëËûç APP√æ√æÊ∏©È¶®ÊèêÁ§∫Ôºö‰∏ãËΩΩÂ∑≤Â§±ÊïàÔºÅ√æ[apk‰∏ãËΩΩ](https://www.pgyer.com/android_app_iMoney)√æ√æ<table>√æ    <tr>√æ        <td><img src=""https://github.com/xinpengfei520/iMoney/blob/master/screenshot/image1.png"" border=0 width=""216"" height=""468""></td>√æ        <td><img src=""https://github.com/xinpengfei520/iMoney/blob/master/screenshot/image2.png"" border=0 width=""216"" height=""468""></td>√æ        <td><img src=""https://github.com/xinpengfei520/iMoney/blob/master/screenshot/image3.png"" border=0 width=""216"" height=""468""></td>√æ    </tr>√æ</table>√æ√æ## ‰∏Ä„ÄÅ‰∏ªË¶ÅÊäÄÊúØÁÇπÔºö  √æ√æ - 1.‰ΩøÁî® RadioGroup + Fragment + ViewPager Êê≠Âª∫ËΩØ‰ª∂Ê°ÜÊû∂Ôºõ  √æ - 2.ÂÆûÁé∞Â∏¶ÊúâÂõûÂºπÊïàÊûúÁöÑMyScrollViewÔºõ  √æ - 3.ÂÆûÁé∞ÊµÅÂºèÂ∏ÉÂ±ÄÂíåÈöèÊú∫Â∏ÉÂ±ÄÊïàÊûúÔºõ  √æ - 4.ÈõÜÊàêÁ¨¨‰∏âÊñπÁöÑÊîØ‰ªò(ÊîØ‰ªòÂÆù)Ôºõ  √æ - 5.ÈÄÇÈÖçÂô® Adapter ÁöÑÊäΩÂèñÔºõ  √æ - 6.ÂÆûÁé∞ APP ‰∏ãËΩΩÊõ¥Êñ∞Ôºõ  √æ - 7.ÂÆûÁé∞‰πùÂÆ´Ê†ºÊâãÂäøÂõæÊ°àËß£ÈîÅÂäüËÉΩÔºåÊèêÈ´òÂÆâÂÖ®ÊÄßÔºõ  √æ - 8.ÂÆûÁé∞ÁôªÂΩïÔºå‰ΩøÁî® MD5 ÂØπÂØÜÁ†ÅËøõË°åÂä†ÂØÜÂ§ÑÁêÜÔºõ  √æ - 9.Ëá™ÂÆö‰πâÂúÜÂΩ¢ËøõÂ∫¶Êù°ÊïàÊûúÔºåÂπ∂ÁªòÂà∂‰∏≠Èó¥ÊñáÊú¨ÁöÑÁôæÂàÜÊØîÊòæÁ§∫Ôºõ  √æ - 10.ÈõÜÊàêÁ¨¨‰∏âÊñπ Mp_Chart ÂõæË°®Â∫ìÊòæÁ§∫ÂêÑÁßç‰∏çÂêåÈ£éÊ†ºÁöÑÊù°ÂΩ¢ÂõæÔºåÊäòÁ∫øÂõæÔºåÈ•ºÁä∂ÂõæÊïàÊûúÔºõ  √æ - 11.ÂÆûÁé∞Áî®Êà∑Â§¥ÂÉèÂàáÊç¢ÔºåÊãçÁÖßÊàñ‰ªéÂõæÂ∫ì‰∏≠ÈÄâÊã©ÔºåÂπ∂‰ΩøÁî®Â∑•ÂÖ∑ÂÆûÁé∞ÂéãÁº©ÂíåÂúÜÂΩ¢Â§ÑÁêÜÔºõ  √æ - 12.‰ΩøÁî® ViewPagerIndicator Â∫ìÂÆûÁé∞È°∂ÈÉ®Ê†áÁ≠æÈ°µÈù¢ÂàáÊç¢Ôºõ  √æ - 13.‰ΩøÁî® LoadingPager ÂÆûÁé∞È°µÈù¢Âä†ËΩΩÂ∏ßÂä®ÁîªÊïàÊûúÔºõ  √æ - 14.‰ΩøÁî® TextView ÂÆûÁé∞Ë∑ëÈ©¨ÁÅØÊñáÊú¨ÊïàÊûúÔºõ  √æ - 15.assets ÁõÆÂΩïÂºïÁî®Â§ñÈÉ®Â≠ó‰ΩìÂ∫ìÂà∞È°πÁõÆ‰∏≠Ôºõ  √æ - 16.‰ΩøÁî® FastJson Ëß£Êûê Json Êï∞ÊçÆÔºõ  √æ - 17.‰ΩøÁî®ÊÅ∂Ê±âÂºèÂçï‰æãÊ®°ÂºèÔºåÊèê‰æõÂΩìÂâçÂ∫îÁî®‰∏≠ÊâÄÊúâÂàõÂª∫ÁöÑ Activity ÁöÑÁÆ°ÁêÜÂô®ÔºåÂπ∂ÂØπÂ§ñÊèê‰æõÊ∑ªÂä†„ÄÅÂà†Èô§ÊåáÂÆö„ÄÅÂà†Èô§ÂΩìÂâç„ÄÅÂà†Èô§ÊâÄÊúâ„ÄÅËøîÂõûÊ†àÂ§ßÂ∞èÁöÑÊñπÊ≥ïÔºõ  √æ - 18.Êèê‰æõ CrashHandler Á±ªÊèê‰æõ‰∏Ä‰∏™ÂÖ®Â±ÄÊú™Ë¢´ÊçïËé∑ÂºÇÂ∏∏Êó∂ÊòæÂºèÊçïËé∑ÁöÑÂ∑•ÂÖ∑Á±ª(ÊÅ∂Ê±âÂºèÂçï‰æã)Ôºõ  √æ - 19.ÂØπ Activity„ÄÅFragment ÂÆûÁé∞ÂØπÂÖ¨ÂÖ±Áà∂Á±ªÁöÑÊäΩÂèñÔºõ  √æ - 20.ÂÆûÁé∞ÂØπ APP ÁïåÈù¢‰ΩøÁî®ÊùÉÈáç„ÄÅ‰ª£Á†Å„ÄÅÂ∏ÉÂ±Ä„ÄÅÂõæÁâáÁ≠âËøõË°åÈÄÇÈÖçÔºõ√æ - 21.ÈõÜÊàê BuglyÔºõ√æ - 22.ÈõÜÊàê UETool https://github.com/eleme/UEToolÔºõ√æ - 23.ÈõÜÊàê GrowingIO sdkÔºõÔºàhttps://www.growingio.com/projects/rREq8vyR/install_sdkÔºâ√æ - 24.ÈõÜÊàê AndResGuard https://github.com/shwenzhang/AndResGuard√æ√æ## ‰∫å„ÄÅIntelliJ IDEA ÊúçÂä°Á´Ø‰ª£Á†Å√æ√æÁî±‰∫é‰πãÂâçÁöÑÊúçÂä°Á´Ø‰ª£Á†ÅÊòØÁî® Eclipse ÂÜôÁöÑÔºåÁé∞Âú®ÂÖ®ÈÉ®ËøÅÁßªÂà∞ÁöÑ IntelliJ IDEA ‰∏≠Êù•ÔºåÂ¶ÇÊûúËøòÂú®Áî® Eclipse ÁöÑÂêåÂ≠¶Âª∫ËÆÆÂ§ßÂÆ∂‰πüÊç¢ËøáÊù•ÔºåÂèØËÉΩÂàöÂºÄÂßã‰∏çÂ§™ÈÄÇÂ∫îÔºåÊó∂Èó¥Èïø‰∫ÜÔºå‰Ω†‰ºöÂèëÁé∞ IntelliJ IDEA ÊòØÁúüÁöÑÂ•ΩÁî®ÔºÅÈúÄË¶ÅÂÆâË£ÖÊïôÁ®ãÁöÑÊà≥‰∏ãÈù¢ÁöÑÈìæÊé•Ôºö[ÂÆâË£ÖÊïôÁ®ã](https://blog.csdn.net/xinpengfei521/article/details/83782062)√æ√æ‰∏ãÈù¢ÁöÑÊòØÊúçÂä°Á´ØÁöÑ‰ª£Á†ÅÂÆûÁé∞ [‰∏çÊñ≠Êõ¥Êñ∞ing...]√æ√æ[https://github.com/xinpengfei520/iMoneyJavaWeb](https://github.com/xinpengfei520/iMoneyJavaWeb)√æ√æ## TODO√æ √æ - Áîü‰∫ßÁéØÂ¢ÉÈÖçÁΩÆÔºõ√æ - ÂÆåÂñÑÊõ¥Â§öÈ°µÈù¢ÂÜÖÂÆπÔºõ√æ - Â∞ÜÈúÄË¶ÅÁöÑ‰ø°ÊÅØÂª∫Ë°®Âπ∂Â≠òÂÖ• MySQL Êï∞ÊçÆÂ∫ìÔºõ√æ - ÂíåÊúçÂä°Âô®‰∫§‰∫íÊï∞ÊçÆÂä†ÂØÜ„ÄÅÊ†°È™åÂ§ÑÁêÜÔºõ√æ - ...√æ√æ## Bugs Report√æ√æIf you find any bug when using this project, please report **[here](https://github.com/xinpengfei520/P2P/issues/new)**. Thanks for helping us making better.√æ√æ## Change logs√æ√æ### 1.4.6√æ√æ - ÈõÜÊàê AndResGuardÔºõ√æ - optimized code.√æ √æ### 1.4.5√æ√æ - update on 2019-09-25 √æ - bugs fix.√æ - Integrated GrowingIO sdk.√æ - optimized code.√æ √æ### 1.3.0√æ√æ - update on 2018-09-02 bugs fix.√æ - Custom TitleBarLayout view.√æ - reconsituation login page whith MVP.√æ - optimized code.√æ√æ### 1.2.0√æ√æ - update on 2018-06-03 bugs fix.√æ - add http„ÄÅcommon module.√æ - add config.gradle file.√æ√æ### 1.1.0√æ√æ - update on 2017-10-01 bugs fix.√æ - adapter AS 3.0√æ√æ### 1.0.0√æ√æ - update on 2016-11-28 first commit.√æ√æ## Êõ¥Â§ö√æ√æÂ¶ÇÊûú‰Ω†ÊÉ≥Â≠¶‰π†Êõ¥Â§öÂÖ≥‰∫é Android ÁöÑÊäÄÊúØÊàñËÄÖÊúâÈóÆÈ¢òÊÉ≥‰∏éÊàë‰∫§ÊµÅÔºåËØ∑Êâ´Êèè‰∏ãÈù¢ÁöÑÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÂêéÁÇπÂáªËÅîÁ≥ªÊàë -> ‰∏™‰∫∫ÂæÆ‰ø°ÔºåÊ∑ªÂä†ÂêéÂèØ‰∏éÊàë‰∫§ÊµÅ„ÄÇ√æ√æ![image](screenshot/official_account.jpg)√æ√æ## LICENSE√æ√æ```√æ   Copyright (C) 2016 x-sir√æ√æ   Licensed under the Apache License, Version 2.0 (the ""License"");√æ   you may not use this file except in compliance with the License.√æ   You may obtain a copy of the License at√æ√æ       http://www.apache.org/licenses/LICENSE-2.0√æ√æ   Unless required by applicable law or agreed to in writing, software√æ   distributed under the License is distributed on an ""AS IS"" BASIS,√æ   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.√æ   See the License for the specific language governing permissions and√æ   limitations under the License.√æ```"
luoshupeng/SpringBoot2.0-MultiDataSource,58,16,2,11,User,False,Spring Boot 2.0 Â§öÊï∞ÊçÆÊ∫êÁöÑÁªÉ‰π†,,,7,Java,"{'': 2, 'md': 1, 'cmd': 1, 'xml': 1}",6,2,0,1,0,825,True,0,1,0,0,0,0,0,0,8,0,0,0,0,0,0,0,20,,2,,
huangyueranbbc/RecommendByItemcf,510,12,2,7,User,False,Hadoop mapreduce.  Âü∫‰∫éItemCFÁöÑÂçèÂêåËøáÊª§ Áâ©ÂìÅÊé®ËçêÁ≥ªÁªü  Collaborative filtering goods recommendation system based on ItemCF  ,,,8,Java,"{'': 3, 'md': 1, 'xml': 1}",4,1,0,1,13,1035,True,1,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,80,,40,,"# Âü∫‰∫éItemCFÁöÑÂçèÂêåËøáÊª§ Áâ©ÂìÅÊé®ËçêÁ≥ªÁªü  Collaborative filtering goods recommendation system based on ItemCF  √æ[![Travis](https://img.shields.io/badge/RecommendByItemCF-MapReduce-green.svg)](https://github.com/huangyueranbbc/RecommendByItemcf)  [![Travis](https://img.shields.io/badge/Apache-Hadoop-ff69b4.svg)](http://hadoop.apache.org/)  √æ  √æStep1.run(config, paths);  // Ê†ºÂºèÂåñ ÂéªÈáç Format reset  √æStep2.run(config, paths); // ËÆ°ÁÆóÂæóÂàÜÁü©Èòµ Score matrix  √æStep3.run(config, paths); // ËÆ°ÁÆóÂêåÁé∞Áü©Èòµ Computing co-occurrence matrix  √æStep4.run(config, paths); // ÂêåÁé∞Áü©ÈòµÂíåÂæóÂàÜÁü©ÈòµÁõ∏‰πò Multiply the co-occurrence matrix and the score matrix  √æStep5.run(config, paths); // ÊääÁõ∏‰πò‰πãÂêéÁöÑÁü©ÈòµÁõ∏Âä†Ëé∑ÂæóÁªìÊûúÁü©Èòµ Add the matrix after multiplication to obtain the result matrix  √æStep6.run(config, paths); // ÊéíÂ∫èÊé®Ëçê Sort recommendation  "
konsolas/ConditionalCommands,39,6,4,7,User,False,Execute commands only if a condition is met.,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",6,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",28,1,0,2,0,1690,True,5,3,0,0,1,4,0,0,7,0,0,0,0,0,0,0,9,,36,,"[![Build Status](https://travis-ci.org/konsolas/ConditionalCommands.svg?branch=master)](https://travis-ci.org/konsolas/ConditionalCommands)√æ# ConditionalCommands√æOnly execute a command if a condition is met.√æ√æConditionalCommands is intended to be used when plugins have automatic commands that should only be executed if certain conditions are met. It is able to execute multiple commands, with customisable delays on each command.√æ√æ## Usage√æ```√æ/cc <player> unless <condition> do <command>√æ/cc <player> if <condition> do <command>√æ/cc help√æ```√æ√æ### Conditions√æGrammar of conditions:√æ```√æ<expression>::=<term>{<or><term>}√æ<term>::=<factor>{<and><factor>}√æ<factor>::=<comparison>|<not><factor>|(<expression>)√æ<comparison>::=<constant><comparator><constant>√æ<constant>::=floating point number or integer√æ<and>::='&'√æ<or>::='|'√æ<not>::='!'√æ<comparator>::='>'|'='|'<'√æ```√æAs shown above, only numbers can be compared, and placeholders can only consist of numbers. In case of multiple comparison operators in a group, i.e. 3>=<2, only the first operator will be used. Comparisons cannot include spaces. Inequality may be checked with !(value=value).√æ√æExamples:√æ```√æ/cc konsolas unless -ping->200 do kick konsolas√æ/cc konsolas if (-ping-<300&-ping->100)&-tps->15.0 do msg konsolas Your ping is between 300 and 100, and the TPS is greater than 15.√æ```√æ√æ### Placeholders√æPlaceholders are delimited by '-'. Since they're applied with a replace, errors will probably be detected during parsing if they are typed incorrectly.√æ√æ - ```ping``` - The latency of the tested player.√æ - ```tps``` - Server TPS average over the last 2 seconds√æ - ```time_online``` - Player's online time in milliseconds√æ - ```uptime``` - Server uptime in ticks√æ - ```player_count``` - Number of players on the server√æ - ```perm:<permission>``` - 1.0 if the player has the permission, 0.0 otherwise. e.g. ```-perm:essentials.home-```√æ - ```aacvl:<check>``` - AAC violation level of the given check (internal name). e.g. ```-aacvl:speed-```√æ - ```chance:<percentage>%``` - Will be 1.0 percentage% of the time. e.g. ```-chance:34.5%-```√æ√æ### Multi command / delayed commands√æIn the 'do' clause of the statement, multiple commands can be executed at once, and selected commands can be delayed if desired. The command delimiter is ```/<delay>/```, where the integer between ```/``` and ```/``` denotes the delay before the command should be executed in ticks. Here are some examples:√æ√æ```√æ/cc konsolas if -aacvl:heuristics->0 do /1200/ ban konsolas 1 minute delayed ban for killaura√æ/cc konsolas if -perm:some.permission-=1 do /0/ broadcast konsolas has some.permission! /0/ broadcast second broadcast! /20/ broadcast 1 second later!√æ```√æ√æ### Developer mode√æBy default, ConditionalCommands will suppress details behind parsing errors, etc. to be more user friendly. It will also swallow exceptions generated by executing a command. This behaviour can be changed by changing the ```dev``` option in ```plugins/ConditionalCommands/config.yml``` to true."
NeonTech/Shielder,32,1,1,0,Organization,False,"A small, simple, asynchronous utility for constraining arbitrary tasks within CPU and RAM limitations. Additionally provides a wrapper for the JSR-223 specification to sandbox scripting functionality.",,"{'key': 'lgpl-3.0', 'name': 'GNU Lesser General Public License v3.0', 'spdx_id': 'LGPL-3.0', 'url': 'https://api.github.com/licenses/lgpl-3.0', 'node_id': 'MDc6TGljZW5zZTEy'}",6,Java,"{'': 2, 'md': 1, 'xml': 1}",5,1,1,1,0,592,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,5,0,,,"# Shielder√æA small, simple, asynchronous utility for constraining arbitrary tasks within CPU and RAM limitations.√æAdditionally provides a wrapper for the JSR-223 specification to sandbox scripting functionality.√æ√æ## Dependency√æ### Maven√æ```xml√æ<repositories>√æ    <repository>√æ        <id>jitpack.io</id>√æ        <url>https://jitpack.io</url>√æ    </repository>√æ</repositories>√æ√æ<dependency>√æ    <groupId>com.github.neontech.shielder</groupId>√æ    <artifactId>shielder-core</artifactId>√æ    <!-- <artifactId>shielder-jsr223</artifactId> -->√æ    <version>${version}</version>√æ</dependency>√æ```√æ√æ### Gradle√æ```groovy√ærepositories {√æ    maven { url 'https://jitpack.io' }√æ}√æ√ædependencies {√æ    implementation 'com.github.neontech.shielder:shielder-core:$version'√æ    // implementation `com.github.neontech.shielder:shielder-jsr223:$version`√æ}√æ```√æ√æ## Getting Started√æ### shielder-core√æ```java√æfinal var sandbox = Sandbox.create();√æfinal var environment = SandboxEnvironment.builder()√æ    .setCpuLimit(Duration.ofSeconds(1))√æ    .setRamLimit(1000000)√æ    .build();√æ√æfinal Callable<T> taskToSandbox = ...√æfinal CompletableFuture<T> future = sandbox.startTask(environment, taskToSandbox);√æ```√æ√æ### shielder-jsr223√æ```java√æfinal var manager = new ShielderScriptEngineManager();√æ```√æ`manager` can be treated exactly like a `ScriptEngineManager`. Everything created by the `manager` is executed in a√æ`Sandbox` which can be accessed by invoking `manager.getSandbox()`.√æ√æTo change the `SandboxEnvironment` for a specific `ScriptContext`, use the `ShielderScriptEngine.SANDBOX_ENVIRONMENT`√æattribute and simply provide a `SandboxEnvironment` instance as its value."
DenizenScript/Denizen-For-Bukkit,38284,84,16,63,Organization,False,"NPC and general Spigot scripting, using the Denizen Scripting Language!",https://denizenscript.com/,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",14,Java,"{'': 2, 'md': 2, 'txt': 1, 'xml': 1}",8015,2,0,39,5,3032,True,30,1682,10,95,3,516,3,20,13,1,4,374,15563,10027,0,0,20,1,,DenizenScript/Denizen,
bazaarvoice/curator-extensions,420,15,20,13,Organization,False,Helpers that extend the functionality of curator.,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",9,Java,"{'': 3, 'xml': 1, 'md': 1}",334,3,27,15,0,2879,True,3,2,0,0,0,45,0,2,6,0,1,3,8,26,3,0,118,11,,,"curator-extensions√æ==================√æ√æHelpers that extend the functionality of curator.√æ√æNew Recipes√æ===========√æ√æ```xml√æ<dependency>√æ    <groupId>com.bazaarvoice.curator</groupId>√æ    <artifactId>recipes</artifactId>√æ</dependency>√æ```√æ√æPersistentEphemeralNode√æ-----------------------√æ√æEnsures that as long as you have a connection to ZooKeeper that your ephemeral node stays around.√æ√æThis recipe prevents node loss from:√æ- connection and session interruptions√æ- accidental deletion√æ√æNodeDiscovery√æ-------------√æ√æWorks on top of ```PathChildrenCache``` to automatically parse the data portion of the node and notify listeners. See√æ```NodeDiscovery.NodeDataParser``` and ```NodeDiscovery.NodeListener``` for more info.√æ√æEasy Dropwizard Integration√æ===========================√æ√æ```xml√æ<dependency>√æ    <groupId>com.bazaarvoice.curator</groupId>√æ    <artifactId>dropwizard</artifactId>√æ</dependency>√æ```√æ√æ```java√æpublic class SampleConfiguration extends Configuration {√æ    @Valid√æ    @NotNull√æ    @JsonProperty(""zooKeeper"")√æ    private ZooKeeperConfiguration _zooKeeperConfiguration = new ZooKeeperConfiguration();√æ√æ    public ZooKeeperConfiguration getZooKeeperConfiguration() {√æ        return _zooKeeperConfiguration;√æ    }√æ}√æ√æpublic class SampleService extends Service<SampleConfiguration> {√æ    public static void main(String[] args) throws Exception {√æ        new SampleService().run(args);√æ    }√æ√æ    @Override√æ    public void initialize(... bootstrap) {√æ       // ...√æ    }√æ√æ    @Override√æ    public void run(SampleConfiguration cfg, Environment env) {√æ        CuratorFramework curator = cfg.getZooKeeperConfiguration().newManagedCurator(env.lifecycle());√æ√æ        environment..healthChecks().register(""curator"", new CuratorHealthCheck(curator));√æ    }√æ}√æ```"
santiontanon/microrts,11908,155,18,68,User,False,,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",13,Java,"{'': 3, 'yml': 1, 'md': 2, 'png': 1}",671,1,0,15,0,2874,True,2,18,0,1,0,63,0,4,7,0,4,12,653,262,0,0,23,,58,,"# microRTS [![Build Status](https://travis-ci.org/douglasrizzo/microrts.svg?branch=master)](https://travis-ci.org/douglasrizzo/microrts)√æ√æmicroRTS is a small implementation of an RTS game, designed to perform AI research. The advantage of using microRTS with respect to using a full-fledged game like Wargus or StarCraft (using BWAPI) is that microRTS is much simpler, and can be used to quickly test theoretical ideas, before moving on to full-fledged RTS games.√æ√æmicroRTS is deterministic and real-time (i.e. players can issue actions simultaneously, and actions are durative). It is possible to experiment both with fully-observable and partially-observable games. Thus, it is not adequate for evaluating AI techniques designed to deal with non-determinism (although future versions of microRTS might include non-determinism activated via certain flags). As part of the implementation, I include a collection of hard-coded, and game-tree search techniques (such as variants of minimax, Monte Carlo search, and Monte Carlo Tree Search).√æ√æmicroRTS was developed by [Santiago Onta√±√≥n](https://sites.google.com/site/santiagoontanonvillar/Home). √æ√æFor a video of how microRTS looks like when a human plays, see a [YouTube video](https://www.youtube.com/watch?v=ZsKKAoiD7B0)√æ√æIf you are interested in testing your algorithms against other people's, **there is an annual microRTS competition**. For more information on the competition see the [competition website](https://sites.google.com/site/micrortsaicompetition/home). The previous competitions have been organized at IEEE-CIG2017 and IEEE-CIG2018, and this year it's organized at IEEE-COG2019 (notice the change of name of the conference).√æ√æTo cite microRTS, please cite this paper:√æ√æSantiago Onta√±√≥n (2013) The Combinatorial Multi-Armed Bandit Problem and its Application to Real-Time Strategy Games, In AIIDE 2013. pp. 58 - 64.√æ√æ## Setting up microRTS in an IDE√æ√æWatch [this YouTube video](https://www.youtube.com/watch?v=_jVOMNqw3Qs) to learn how to acquire microRTS and setup a project using Netbeans.√æ√æ## Executing microRTS through the terminal√æ√æIf you want to build and run microRTS from source using the command line, clone or download this repository and run the following commands in the root folder of the project to compile the source code:√æ√æLinux or Mac OS:√æ√æ```shell√æjavac -cp ""lib/*:src"" -d bin src/rts/MicroRTS.java # to build√æ```√æ√æWindows:√æ√æ```shell√æjavac -cp ""lib/*;src"" -d bin src/rts/MicroRTS.java # to build√æ```√æ√æ### Generating a JAR file√æ√æYou can join all compiled source files and dependencies into a single JAR file, which can be executed on its own. In order to create a JAR file for microRTS:√æ√æ```shell√æjavac -cp ""lib/*:src"" -d bin $(find . -name ""*.java"") # compile source files√æcd bin√æfind ../lib -name ""*.jar"" | xargs -n 1 jar xvf # extract the contents of the JAR dependencies√æjar cvf microrts.jar $(find . -name '*.class' -type f) # create a single JAR file with sources and dependencies√æ```√æ√æ### Executing microRTS√æ√æTo execute microRTS from compiled class files:√æ√æ```shell√æjava -cp ""lib/*:bin"" rts.MicroRTS # on Linux/Mac√æjava -cp ""lib/*;bin"" rts.MicroRTS # on Windows√æ```√æ√æTo execute microRTS from the JAR file:√æ√æ```shell√æjava -cp microrts.jar rts.MicroRTS√æ```√æ√æ#### Which class to execute√æ√æmicroRTS has multiple entry points, and for experimentation purposes you might eventually want to create your own class if none of the base ones suit your needs (see the ""tests"" folder for examples), but a default one is the `gui.frontend.FrontEnd` class, which opens the default GUI. To execute microRTS in this way, use the following command:√æ√æ```shell√æjava -cp microrts.jar gui.frontend.FrontEnd√æ```√æ√æAnother, more expansive entry point is the `rts.MicroRTS` class. It is capable of starting microRTS in multiple modes, such as in client mode (attempts to connect to a server which will provide commands to a bot), server mode (tries to connect to a client in order to control a bot), run a standalone game and exit or open the default GUI.√æ√æThe `rts.MicroRTS` class accepts multiple initialization parameters, either from the command line or from a properties file. A list of all the acceptable command-line arguments can be accessed through the following command:√æ√æ```shell√æjava -cp microrts.jar rts.MicroRTS -h√æ```√æ√æAn example of a properties file is provided in the `resources` directory. microRTS can be started using a properties file with the following command:√æ√æ```shell√æjava -cp microrts.jar rts.MicroRTS -f my_file.properties√æ```√æ√æ## Instructions√æ√æ![instructions image](https://raw.githubusercontent.com/santiontanon/microrts/master/help.png)"
protegeproject/webprotege,68077,381,57,182,Organization,False,The webprotege code base,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",14,Java,"{'': 2, 'yml': 1, 'md': 3, 'txt': 1, 'xml': 1}",4767,16,8,9,0,2936,True,253,426,22,8,5,8,4,1,17,3,3,8,255,67,0,0,67,8,,,"WebProt√©g√©√æ==========√æ√æWhat is WebProt√©g√©?√æ-------------------√æ√æWebProt√©g√© is a free, open source collaborative ontology development environment.√æ√æIt provides the following features:√æ- Support for editing OWL 2 ontologies√æ- A default simple editing interface, which provides access to commonly used OWL constructs√æ- Full change tracking and revision history√æ- Collaboration tools such as, sharing and permissions, threaded notes and discussions, watches and email notifications√æ- Customizable user interface√æ- Support for editing OBO ontologies√æ- Multiple file formats for upload and download of ontologies (supported formats: RDF/XML, Turtle, OWL/XML, OBO, and others)√æ√æWebProt√©g√© runs as a Web application. End users access it through their Web browsers.√æThey do not need to download or install any software. We encourage end-users to use√æ√æhttps://webprotege.stanford.edu√æ√æIf you have downloaded the webprotege war file from GitHub, and would like to deploy it on your own server,√æplease follow the instructions at:√æ√æhttps://github.com/protegeproject/webprotege/wiki/WebProt√©g√©-4.0.0-beta-x-Installation√æ√æBuilding√æ--------√æ√æTo build WebProt√©g√© from source√æ√æ1) Clone the github repository√æ   ```√æ   git clone https://github.com/protegeproject/webprotege.git√æ   ```√æ2) Open a terminal in the directory where you clone the repository to√æ3) Use maven to package WebProt√©g√©√æ   ```√æ   mvn clean package√æ   ```√æ5) The WebProtege .war file will be built into the webprotege-server directory√æ√æRunning from Maven√æ------------------√æ√æTo run WebProt√©g√© in SuperDev Mode using maven√æ√æ1) Start the GWT code server in one terminal window√æ    ```√æ    mvn gwt:codeserver√æ    ```√æ2) In a different terminal window start the tomcat server√æ    ```√æ    mvn -Denv=dev tomcat7:run√æ    ```√æ3) Browse to WebProt√©g√© in a Web browser by navigating to [http://localhost:8080](http://localhost:8080)√æ√æRunning from Docker√æ-------------------√æ√æTo run WebProt√©g√© using the Docker container√æ√æ1) Create a new file called ""docker-compose.yml"" and copy-and-paste the following text:√æ   ```yml√æ   version: '3'√æ√æ   services:√æ     wpmongo:√æ       image: mongo:4.1-bionic√æ     webprotege:√æ       image: protegeproject/webprotege√æ       restart: always√æ       environment:√æ         - webprotege.mongodb.host=wpmongo√æ       ports:√æ         - 5000:8080√æ       depends_on:√æ         - wpmongo√æ   ```√æ2) Enter this following command in the Terminal to start the docker container.√æ   ```bash√æ   $ docker-compose up√æ   ```√æ3) Browse to WebProt√©g√© in a Web browser by navigating to [http://localhost:5000](http://localhost:5000)"
ngageoint/elasticgeo,1385,136,38,69,Organization,False,ElasticGeo provides a GeoTools data store that allows geospatial features from an Elasticsearch index to be published via OGC services using GeoServer.  ,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",9,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 1}",266,6,22,12,4,1924,True,7,65,2,0,4,40,2,2,8,0,1,2,20,5,0,0,137,6,,,"# ElasticGeo√æ√æ<a href=""https://travis-ci.org/ngageoint/elasticgeo"">√æ <img alt=""Travis-CI test status"" √æ      src=""https://travis-ci.org/ngageoint/elasticgeo.svg?branch=master""/>√æ</a>√æ<br/>√æ<a href='https://coveralls.io/r/ngageoint/?branch=master'>√æ  <img src='https://coveralls.io/repos/ngageoint/elasticgeo/badge.png?branch=master'√æ       alt='Coverage Status' />√æ</a>√æ√æElasticGeo provides a GeoTools data store that allows geospatial features from an Elasticsearch index to be published via OGC services using GeoServer.  √æ√æ### Pull Request√æ√æIf you'd like to contribute to this project, please make a pull request. We'll review the pull request and discuss the changes. All pull request contributions to this project will be released under the appropriate license conditions discussed below. √æ√æSoftware source code previously released under an open source license and then modified by NGA staff is considered a ""joint work"" (see 17 USC 101); it is partially copyrighted, partially public domain, and as a whole is protected by the copyrights of the non-government authors and must be released according to the terms of the original open source license.√æ√æ### Project relies upon:√æ√æGeoTools under [LGPL v 2.1](http://geotools.org/about.html)√æ√æGeoServer under [GPL v 2 with later option](http://geoserver.org/license/) √æ√æElasticGeo under [LGPL v 2.1](https://github.com/matsjg/elasticgeo)√æ√æElasticsearch under [Apache License v 2.0](https://github.com/elastic/elasticsearch/blob/master/LICENSE.txt) √æ√æ### Documentation√æ√æ[Read more](gs-web-elasticsearch/doc/index.rst)"
citygml4j/citygml4j,62817,68,22,29,Organization,False,The Open Source Java API for CityGML,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",13,Java,"{'': 3, 'md': 2, 'gradle': 2, 'bat': 1}",784,3,36,1,8,4206,True,1,22,0,0,0,2,0,2,6,0,1,14,1471,1509,0,0,6,1,,,"citygml4j√æ=========√æ√æcitygml4j is an open source Java class library and API for facilitating work with the [OGC City Geography Markup Language (CityGML)](http://www.opengeospatial.org/standards/citygml). citygml4j makes it easy to read, process and write CityGML datasets, and to develop CityGML-aware software applications.√æ√æStarting from version 2.6.0, citygml4j supports parsing and writing [CityJSON](http://www.cityjson.org/), a format for encoding a subset of the CityGML data model using JSON instead of GML. √æ√æLicense√æ-------√æcitygml4j is licensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0). See the `LICENSE` file for more details.√æ√æNote that releases of the software before version 2.3.0 continue to be licensed under GNU LGPL 3.0. To request a previous release of citygml4j under Apache License 2.0 create a GitHub issue.√æ√æLatest release√æ--------------√æThe latest stable release of citygml4j is 2.10.5.√æ√æDownload the citygml4j 2.10.5 release binaries [here](https://github.com/citygml4j/citygml4j/releases/download/v2.10.5/citygml4j-2.10.5.zip). Previous releases are available from the [releases section](https://github.com/citygml4j/citygml4j/releases).√æ√æContributing√æ------------√æ* To file bugs found in the software create a GitHub issue.√æ* To contribute code for fixing filed issues create a pull request with the issue id.√æ* To propose a new feature create a GitHub issue and open a discussion.√æ√æBuilding√æ--------√æcitygml4j requires Java 8 or higher. The project uses [Gradle](https://gradle.org/) as build system. To build the library from source, run the following command from the root of the repository. √æ√æ    > gradlew installDist√æ√æThis will create a folder `build/install/citygml4j` with the following subfolders:√æ* `javadoc` -- the Javadoc documentation√æ* `lib` -- the citygml4j library and its mandatory dependencies√æ* `license` -- license information√æ* `samples` -- a collection of citygml4j sample programs√æ√æSimply put the `citygml4j-<version>.jar` library file and its mandatory dependencies from the `lib` folder on your classpath to start developing with citygml4j. Have fun :-)√æ√æMaven artifact√æ--------------√æcitygml4j is also available as [Maven](http://maven.apache.org/) artifact from the [Maven Central Repository](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22citygml4j%22) and from [JCenter](https://bintray.com/bintray/jcenter). To add citygml4j  to your project with Maven, add the following code to your `pom.xml`. You may need to adapt the citygml4j version number.√æ√æ```xml√æ<dependency>√æ  <groupId>org.citygml4j</groupId>√æ  <artifactId>citygml4j</artifactId>√æ  <version>2.10.5</version>√æ</dependency>√æ```√æ√æHere is how you use citygml4j with your Gradle project:√æ√æ```gradle√ærepositories {√æ  mavenCentral()√æ}√æ√ædependencies {√æ  compile 'org.citygml4j:citygml4j:2.10.5'√æ}√æ```√æ√æSample programs√æ---------------√æcitygml4j provides a number of sample programs that demonstrate the use of the library. Download the library or build it from source with [Gradle](https://gradle.org/) as described above. This will deploy the sample programs in the `build/install/citygml4j/samples` folder.√æ√æThe sample programs are organized into subfolders, each addressing a different use case of citygml4j. Gradle tasks are provided to easily compile and run the sample programs.√æ√æTo run a sample program, simply open a shell environment, change to the `samples` folder and invoke the Gradle wrapper using the fully qualified name of the Java class as task name. The package name follows the folder structure. For example, issue the following command to run the `SimpleReader.java` program from the subfolder `reading_citygml/simple_citygml_reader`: √æ√æ    > gradlew reading_citygml.simple_citygml_reader.SimpleReader√æ√æAlternatively, you can load the citygml4j source into your preferred IDE and run the sample programs from there. Please note that the sample programs use relative paths to access the test datasets in the folder `samples/datasets` and to write their output to `samples/output`. You might have to adapt the working directory in the run configuration of your IDE so that the relative paths are correctly resolved. For [Eclipse](https://www.eclipse.org/), everything should work just fine without having to change any settings. When using [IntelliJ](https://www.jetbrains.com/idea/), simply use `$MODULE_DIR$` as working directory.√æ√æMore information√æ----------------√æ[OGC CityGML](http://www.opengeospatial.org/standards/citygml) is an open data model and XML-based format for the storage and exchange of semantic 3D city models. It is an application schema for the [Geography Markup Language version 3.1.1 (GML3)](http://www.opengeospatial.org/standards/gml), the extendible international standard for spatial data exchange issued by the Open Geospatial Consortium (OGC) and the ISO TC211. The aim of the development of CityGML is to reach a common definition of the basic entities, attributes, and relations of a 3D city model.√æ√æCityGML is an international OGC standard and can be used free of charge.√æ√æThe [CityJSON specification](https://github.com/tudelft3d/cityjson) is developed and maintained on GitHub by the [3D geoinformation group at TU Delft](https://3d.bk.tudelft.nl/). "
OPEN-ENT-NG/fake-sso,93,0,33,1,Organization,False,Module de gestion des protocoles d'authentification sp√©cifiques √©diteurs pour OPEN ENT NG,,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",11,Java,"{'': 3, 'md': 1, 'gradle': 1, 'sh': 1, 'yml': 1, 'properties': 1}",75,4,19,11,0,1858,True,0,0,0,0,0,3,0,0,7,0,1,4,12,12,0,0,48,3,,,"# Description√æ√æFake SSO module is used to manage vendor specific authentication's protocol and mimic SSO workflow for the end user√æIt is designed to isolate exotic implementations from standard ones.√æ√æFake SSO already provided implementation for :√æ√æ* [Ecole Directe](https://www.ecoledirecte.com) (from Statim / Charlemagne) SSO integration√æ* A simple cryptographic keyring system√æ* Pronote' webservices to display a ""student's life tracking widget""√æ* [La Vie Scolaire.fr](http://www.axess-education.fr/la-vie-scolaire-fr/) RSA SSO integration√æ√æ# How to√æ√æTo add a new vendor specific SSO implementation, follow the 3 next steps√æ√æ## 1. Write a controller that extends SSOController√æ√æ  package fr.wseduc.sso.controllers;√æ√æ  import fr.wseduc.webutils.http.BaseController;√æ  import org.vertx.java.core.json.JsonObject;√æ√æ  public abstract class SSOController extends BaseController {√æ√æ   public abstract void setSsoConfig(JsonObject ssoConfig);√æ√æ  }√æ√æIn `setSsoConfig`'s implementation you will recieve your specific configuration's properties.√æTypically you proxy the remote service authentication in a controller endpoint.√æSee example of `fr.wseduc.sso.controllers.CharlemagneController` to figure out that mechanics√æ√æ## 2. Declare your new SSO controller in deployment configuration's file√æ√æComplete 'sso-controllers array 'in `/deployment/fake-sso/conf.json.template`. Your entry must follow the next schema :√æ√æ  {√æ   ""class"" : ""fr.wseduc.sso.controllers.YourSSOController"",√æ   ""config"" : {√æ    // properties you need√æ   }√æ  }√æ√æ## 3. Configure your external application's SSO in back-office UI√æ√æ_note_ : Fake SSO URL path prefix is `sso`. So if you expose an HTTP action on `GET /yoursso/access`√æthen the complete route to configure in application's registry (back office) UI will be something like `sso/yoursso/access`√æ√æ## 4. Configure external application's SSO : la-vie-scolaire.fr√æ√æ* Update ""sso-controllers"" property object in ent-core.json file :√æ√æ√æ           ""class"" : ""fr.wseduc.sso.controllers.VieScolaireFRController"",√æ           ""config"" : {√æ              ""appli"" : ""IBRD-REC-QK"",√æ              ""connection-timeout"" : 2000,√æ              ""URL_PROPERTY_END_LVS"" : ""/vsn.main/autoLoginTicketSession/getTicket/"",√æ              ""public-key"" :""MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7OmJIKfnHAauWnSwEAhi6s+8cIO0Y5HDhe7Oqm9Ko5wRWzUkEW1oDeGmaz/3L8gtZ4JprRvJOCkJETN+/Aq+S1vWMdxyjeLAXV7fI9Dlrb2MHccbmmhSC9Fic72R+AcR9Bo3oVzU3XpigP7DnZ5gI36Cmo2RTYrg7w4cj7XZm5mbW5lqr2DZNAnurWV81yWLiia88T53Kk72GMQg0OrIBMkh3cx+6pUeTRcdGNzUAhXI5xmiqB8vRdL9AKv+eFntKai3RD9LLKp6+njLzayscXIsoN6XHjFFhBg8v4xOlxp+fd+BWw4pMh0l4bjdaEIKAc4WyTHsRu7OjJeWj6m0mwIDAQAB""√æ           }√æ In this block, set the application code in property ""appli"" defining your platform name.√æ √æ* When adding a connector ""la-vie-scolaire.fr"" in the administration panel, set these properties :√æ   √æ  * Identifiant : Example : ""Laviescolaire.fr"" : connector's id√æ  * Nom d'affichage : Example : ""La Vie Scolaire"" : connector's displayed name√æ  * **URL** : ""**/sso/viescolairefr?url=https%3A%2F%2F**$URL_TO_LA_VIESCOLAIRE$"" √æ    * Replace $URL_TO_LA_VIESCOLAIRE$ with the url to the ""la-vie-scolaire.fr"" server.√æ    * Example of URL : /sso/viescolairefr?url=https%3A%2F%2Fetablissementsso.la-vie-scolaire.fr√æ    * This URL is given by the ""la-vie-scolaire.fr"" editor.√æ    √æ√æ# About√æ√æ* Licence : [AGPL v3](http://www.gnu.org/licenses/agpl.txt) - Copyright Conseil R√©gional Nord Pas de Calais - Picardie√æ√æ* Develop by : Open Digital Education√æ√æ* Funded by : R√©gion Nord Pas de Calais-Picardie"
galeb/galeb,9033,20,7,8,Organization,False,Galeb - The Application Load Balancer as a Service,http://galeb.io,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",25,Java,"{'': 7, 'lock': 1, 'md': 1, 'xml': 1}",1861,31,225,11,0,1169,True,0,1,0,0,14,114,1,7,15,6,2,14,496,196,0,0,9,2,,,[![CircleCI](https://circleci.com/gh/galeb/galeb/tree/master.svg?style=svg)](https://circleci.com/gh/galeb/galeb/tree/master)√æ√æGALEB 4√æ√æ1. Using Makefile√æ√æ1.1. Building docs (requires Doxygen)√æ√æ`make doc`√æ√æ1.2. Building RH7/EL7 rpm (requires FPM)√æ√æ`make dist`√æ√æ2. Installing√æ√æ`mvn clean install -DskipTests`
FeatureIDE/FeatureIDE,468594,79,34,77,User,False,An extensible framework for feature-oriented software development,https://featureide.github.io/,,17,Java,"{'': 4, 'yml': 1, 'md': 1, 'xml': 1}",6141,47,44,58,0,4060,True,113,830,35,36,3,112,3,45,35,5,7,124,5793,4946,0,0,5,,16,,"# FeatureIDE√æ√æAn extensible framework for feature-oriented software development√æ√ælatest release:√æ[![Build Status](https://travis-ci.org/FeatureIDE/FeatureIDE.svg?branch=master)](https://travis-ci.org/FeatureIDE/FeatureIDE)√æ√ærelease candidate:√æ[![Build Status](https://travis-ci.org/FeatureIDE/FeatureIDE.svg?branch=release3.6)](https://travis-ci.org/FeatureIDE/FeatureIDE)√æ√ædevelopment branch:√æ[![Build Status](https://travis-ci.org/FeatureIDE/FeatureIDE.svg?branch=develop)](https://travis-ci.org/FeatureIDE/FeatureIDE)√æ√æ## Plugins Overview√æ√æ[br.ufal.ic.colligens](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/br.ufal.ic.colligens)√æ√æProvides annotation-based development for C projects using the C preprocessor.√æ√æ[e.ovgu.featureide.Cloneanalysis](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.Cloneanalysis)√æ√æProvides a tool to create migrated software product lines with support for feature-aware clone analysis.√æ√æ[e.ovgu.featureide.core](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core)√æ√æProvides basic components for FeatureIDE projects and composer extensions.√æ√æ[de.ovgu.featureide.core.ahead](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.ahead)√æ√æProvides feature-oriented programming (FOP) using the [AHEAD](http://www.cs.utexas.edu/users/schwartz/ATS.html) composer.√æ√æ[de.ovgu.featureide.core.antenna](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.antenna)√æ√æProvides annotation-based development using the [Antenna](https://sourceforge.net/projects/antenna/) preprocessor.√æ√æ[de.ovgu.featureide.core.aspectj](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.aspectj)√æ√æProvides aspect-oriented programming (AOP) using [AspectJ](https://www.eclipse.org/aspectj/).√æ√æ[de.ovgu.featureide.core.conversion.ahead-featurehouse](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.conversion.ahead-featurehouse)√æ√æProvides a tool to convert AHEAD projects into FeatureHouse projects.√æ√æ[de.ovgu.featureide.core.featurecpp](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.featurecpp)√æProvides feature-oriented programming (FOP) in form of a C++ preprocessor that turns [FeatureC++](http://wwwiti.cs.uni-magdeburg.de/iti_db/forschung/fop/featurec/) code into C++ code. Also adopts language concepts of aspect-oriented programming (AOP).√æ√æ[de.ovgu.featureide.core.featurehouse](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.featurehouse)√æ√æProvides feature-oriented programming (FOP) using [FeatureHouse](http://www.fosd.de/fh).√æ√æ[de.ovgu.featureide.core.framework](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.framework)√æ√æProvides black-box frameworks with plug-ins.√æ√æ[de.ovgu.featureide.core.images](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.images)√æ√æProvides a composer that creates variable images by overlaying selected images.√æ√æ[de.ovgu.featureide.core.mpl](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.mpl)√æ√æ[de.ovgu.featureide.core.munge](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.munge)√æ√æProvides annotation-based development using the [Munge](https://github.com/sonatype/munge-maven-plugin) preprocessor.√æ√æ[de.ovgu.featureide.core.munge.android](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.munge.android)√æ√æProvides tools to convert an existing Android project into a FeatureIDE project. Also provides annotation-based development using the [Munge](https://github.com/sonatype/munge-maven-plugin) preprocessor adapted for usage with android.√æ√æ[de.ovgu.featureide.core.runtime](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.core.runtime)√æ√æProvides support for runtime variability using runtime parameters and property files.√æ√æ[de.ovgu.featureide.examples](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.examples)√æ√æProvides example projects showcasing different functionalities of FeatureIDE. These functionalities include each of the composers, different supported programming paradigms (AOP, FOP, etc.), and feature modeling concepts (extended Feature Models, Feature Model formats, etc.).√æ√æ[de.ovgu.featureide.fm.attributes](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.attributes/src/de/ovgu/featureide/fm/attributes)√æ√æProvides support for extended feature models and feature attributes.√æ√æ[de.ovgu.featureide.fm.core](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.fm.core)√æ√æProvides core components for feature modelling to create and analyze feature models and configurations.√æ√æ[de.ovgu.featureide.fm.ui](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.fm.ui)√æ√æProvides views and editors used for feature modeling. Also includes actions and commands used in them.√æ√æ[de.ovgu.featureide.migration](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.migration)√æ√æProvides components to migrate multiple projects into a single FeatureIDE project.√æ√æ[de.ovgu.featureide.ui](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.ui)√æ√æProvides configuration generators, statistical computation for feature models, generation of feature relation graphs, a collaboration view, and a configuration map view.√æ√æ[de.ovgu.featureide.ui.android](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.ui.android)√æ√æProvides tools to convert an existing android project into a FeatureIDE project.√æ√æ[de.ovgu.featureide.ui.mpl](https://github.com/FeatureIDE/FeatureIDE/tree/develop/plugins/de.ovgu.featureide.ui.mpl)√æ√æProvides tools to create multiple product line (MPL) projects."
michalnow/creditcard-lib,33,0,0,0,User,False,,,,2,Java,{'MD': 1},45,3,0,3,0,620,True,0,0,0,0,0,5,0,0,8,0,0,0,0,0,0,0,30,,5,,Hello JAVA SPRING I HIBERNATE and GIT√æ------------------√æ√æ- assign limit√æ- block credit card√æ- withdraw√æ  - if card not blocked√æ  - can afford√æ  - when is below limit cant withdraw(two branches with two people)√æ- repay debt (HW)√æ- √ætech requriements√æjava >= 8√æmaven
JD-Software/JDeSurvey,78913,192,47,169,Organization,False,JD eSurvey is an open source enterprise survey web application written in Java and based on the Spring Framework. Check out the tutorial videos to find out more about the application features.,https://www.jdsoft.com/jd-esurvey.html,"{'key': 'agpl-3.0', 'name': 'GNU Affero General Public License v3.0', 'spdx_id': 'AGPL-3.0', 'url': 'https://api.github.com/licenses/agpl-3.0', 'node_id': 'MDc6TGljZW5zZTE='}",14,Java,"{'': 1, 'txt': 1, 'md': 1}",239,1,1,7,0,2167,True,19,3,2,1,1,8,0,0,8,0,0,0,0,0,0,0,1,0,,,"#[![JDeSurvey Logo](https://github.com/JD-Software/JDeSurvey/blob/master/images/Logo.png)](http://www.jdsoft.com/jd-esurvey.html)√æ### Data Gathering Made Easy√æ√æ[JD eSurvey](https://www.jdsoft.com/jd-esurvey.html) is an open-source web application developed by [JD Software](https://www.jdsoft.com) for the creation, collection, and analysis of surveys. Written in Java and built using the Spring Framework and Hibernate ORM, JD eSurvey is a powerful web application. It has a range of features from branching and randomization, to piping for survey control, to a long list of question types, including video questions.√æ√æ![sreen shot](https://github.com/JD-Software/JDeSurvey/blob/master/images/survey-creation.png)√æ√æThe interface allows users to produce professional-looking surveys easily. With just a few clicks, you can gather comprehensive survey data in an easy to read format with graphs and statistics for analysis purposes. The application has the ability to customize the look and feel of surveys, send email invitations, and validate responses. It Also comes with reliable security features based on Spring Security.    √æ√æ##### Please see our [GitHub Wiki](https://github.com/JD-Software/JDeSurvey/wiki) for more information.√æ√æ#### [Can't wait to try it out, then click here](https://github.com/JD-Software/JDeSurvey/wiki/Download-and-Installation)√æ√æ#### [Features](https://github.com/JD-Software/JDeSurvey/wiki/Features)√æ√æ#### [Video Tutorials](https://github.com/JD-Software/JDeSurvey/wiki/Video%20Tutorials)√æSee all of our videos for JD eSurvey here: [JDsoft.com/JDeSurvey](https://www.jdsoft.com/jd-esurvey.html)√æ√æ### Creating and Publishing Surveys√æ√æ<a href=""http://vimeo.com/61911800"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/creating-and-publishing.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æIn this [video](http://vimeo.com/61911800) tutorial we guide you through the basics on how to create surveys from scratch using JD eSurvey. We show you the architecture of surveys with JD eSurvey and examples of some of the question types. After going through the steps in this video you will be able to competently develop and deliver your own surveys with ease.√æ√æ### Accessing and Filling Out Surveys√æ√æ<a href=""http://vimeo.com/61911795"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/acessing-and-filling-out-surveys.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æThis [video](http://vimeo.com/61911795) is a continuation of the previous one on creating and publishing surveys. In this video we show you how simple it is to access and fill out surveys. We use the survey created in the first video for the purposes of this demonstration.√æ√æ### Importing and Exporting Surveys√æ√æ<a href=""http://vimeo.com/61912149"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/importing-and-exporting-surveys.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æLearn how to export surveys in this [video](http://vimeo.com/61912149) and then later import them to the same or different environments. You will see that by exporting surveys provides an option of keeping backup copies of them. Also, once surveys have been imported any potential changes or updates that need to take place are possible before publishing them.√æ√æ### Survey Statistics√æ√æ<a href=""http://vimeo.com/61912284"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/survey-statistics.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æGet a quick glimpse of the statistics feature of JD eSurvey in this [video](http://vimeo.com/61912284) . We give you an overview of collecting survey statistics and the available options for exporting the raw data to Excel, comma delimited, and SPSS file formats. We also show you how statistical information can be downloaded as PDF files.√æ√æ### Branching and Skipping√æ√æ<a href=""http://vimeo.com/61911798"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/branching-and-skipping.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æThis [video](http://vimeo.com/61911798) presents to you JD eSurvey's powerful branching feature. Learn how to direct participants to different pages based upon their responses to specific questions. This allows for participants to save some time by not having to view questions that do not pertain to them. After watching this video you will be able to gain more control of the survey process.√æ√æ### Randomization of Questions and Options√æ√æ<a href=""http://vimeo.com/61912521"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/randomization-of-questions-and-options.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æWorried about participants memorizing survey content? Concerned about collecting inaccurate survey data due to biased responses? This [video](http://vimeo.com/61912521) demonstrates how you can use the randomization feature of JD eSurvey to help prevent these issues from occurring. Watch how randomizing both questions and answer options can deliver more diversified surveys.√æ√æ### Piping of Answers√æ√æ<a href=""http://vimeo.com/61912285"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/piping-of-answers.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æThis tutorial shows you how to create questions using previous responses into the questions text. With the answer piping feature it allows you to have more precision over the question text to be displayed for participants. This [video](http://vimeo.com/61912285) explains how you can take advantage of this great feature.√æ√æ### Survey Email Invitations√æ√æ<a href=""http://vimeo.com/61911801"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/survey-email-invitations.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æThis [video](http://vimeo.com/61911801) shows how you can send survey invitations to a group of participants via email. Keep track of the number of invitations sent, to whom they were sent to, and determine which ones were opened by the recipient.√æ√æ### Survey Themes√æ√æ<a href=""http://vimeo.com/61912286"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/survey-themes.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æCheck out some of the different theme options JD eSurvey has to offer by watching this [video](http://vimeo.com/61912286). In this video we display to you all of the themes you may choose to change the look of surveys. Instead of using the same look of surveys over and over again, pick a different theme to change it up.√æ√æ### Logos and Images√æ√æ<a href=""http://vimeo.com/61912283"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/adding-logos.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æWatch this [video](http://vimeo.com/61912283) to see how you can personalize your surveys by adding pictures and company logos. Insert pictures to give surveys more character. Insert company logos to help participants identify surveys associated with your organization. With just a few simple click you will be able to customize surveys within a matter of seconds.√æ√æ### Installing JD eSurvey from a WAR file using Windows, Tomcat and MySQL√æ√æ<a href=""http://vimeo.com/97945474"" target=""_blank""><img src=""https://github.com/JD-Software/JD_eSurvey/blob/master/images/Windows-instalation-with-tomcat-and-mysql.png"" √æalt=""IMAGE ALT TEXT HERE"" width=""240"" height=""180"" border=""10"" /></a>√æWatch this [video](http://vimeo.com/97945474) to see how to install and run a pre-compiled demonstration version of the application on a Windows machine using Apache Tomcat and MySQL.√æ√æ####[FAQs](https://github.com/JD-Software/JDeSurvey/wiki/FAQs)√æ√æ√æ#### [License](http://www.gnu.org/licenses/agpl.html)√æ√æJD eSurvey√æCopyright (C) 2014  JD Software, Inc.√æ√æThis program is free software: you can redistribute it and/or modify√æit under the terms of the GNU Affero General Public License as√æpublished by the Free Software Foundation version 3 of the√æLicense.√æ√æThis program is distributed in the hope that it will be useful,√æbut WITHOUT ANY WARRANTY; without even the implied warranty of√æMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the√æGNU Affero General Public License for more details.√æ√æYou should have received a copy of the GNU Affero General Public License√æalong with this program.  If not, see (http://www.gnu.org/licenses/)."
DaveVoorhis/LDI,5415,0,1,3,User,False,Simple programming language examples for University of Derby's 6CC509 Language Design & Implementation ,,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",10,Java,"{'': 2, 'md': 1}",87,1,0,1,5,1255,True,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,15,,34,,"Examples for 6CC509 Language Design and Implementation √æ√æTo load these as an Eclipse project, select ""File | Import... | Git | Projects from Git"" and pick ""Clone URI"". The URI is https://github.com/DaveVoorhis/LDI.git√æ√æIf it isn't installed already, install the JavaCC Eclipse plugin from the Eclipse Marketplace under ""Help | Eclipse Marketplace..."" Search for ""JavaCC"".√æ√æIf a project doesn't compile, right click the .jjt or .jjt file -- usually found in the \*.parser package -- and select ""Compile with javacc | jjtree | jtb"". If it's greyed-out, double click on the file to load it into the editor, then right click on it again. "
quelea-projection/Quelea,1652199,67,13,53,Organization,False,Open source projection software for churches.,https://quelea.org,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",9,Java,"{'': 2, 'yml': 1, 'md': 2, 'png': 1}",3488,9,12,26,6,3545,True,60,123,17,7,6,70,1,3,12,2,4,13,1674,1611,0,0,4,3,,,"![Github All Releases](https://img.shields.io/github/downloads/quelea-projection/Quelea/total.svg)√æ [![Build Status](https://travis-ci.com/quelea-projection/Quelea.svg?branch=master)](https://travis-ci.com/quelea-projection/Quelea) [![Snap Status](https://build.snapcraft.io/badge/quelea-projection/Quelea.svg)](https://build.snapcraft.io/user/quelea-projection/Quelea) [![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)√æ √æ# Quelea√æ√æ**Are you here to download the latest version? Great! You want one of these:**√æ√æ[**2019.1 - Windows x64**](https://github.com/quelea-projection/Quelea/releases/download/v2019.1/quelea-2019.1-x64-windows-install.exe)√æ√æ[**2019.1 - Cross platform (requires Java)**](https://github.com/quelea-projection/Quelea/releases/download/v2019.1/quelea-2019.1-crossplatform-install.jar)√æ√æ[**2019.1 - Mac**](https://github.com/quelea-projection/Quelea/releases/download/v2019.1/quelea-2019.1-mac.zip)√æ√æ[**2019.1 - Linux**](https://snapcraft.io/quelea)<br>√æ[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/quelea)√æ√æ**Problems or suggestions? [Head over to our forum and feel free to ask away](https://quelea.discourse.group/). We don't bite!**√æ√æ![screenshot](screenshot.png)√æ√æ## CI releases√æYou can see the latest CI release [here](https://github.com/quelea-projection/Quelea/releases/tag/CI-RELEASE). Windows, Mac and Crossplatform installers are provided.√æ√æIf you're using Linux, then no separate download is needed. Just [install snapd](https://snapcraft.io/docs/installing-snapd) and run `sudo snap install --edge quelea` to install the latest CI version.√æ√æCI releases are automatically built from the latest code in this repository, and thus are not fully tested. **They should not be used in production settings.**√æ√æ## Documentation√æ√æIf you're interested in learning more about how to use Quelea, the documentation can be found [here](https://quelea-projection.github.io/docs/).√æ√æ## I've found a bug!√æPlease report it so we can fix it! Feel free to [create an issue](https://github.com/quelea-projection/Quelea/issues), and provide as much information as you can on how to reproduce the problem (step by step instructions for recreating the issue after starting Quelea are very useful.) After recreating the problem, you should also attach your [debug log](https://quelea-projection.github.io/docs/Debug_log) - this may give us a few technical clues as to what's going on.√æ√æPlease note that if we can't recreate a bug, then we can't fix it, so providing as much information as you can here is very important.√æ√æ## I'd like to contribute√æGreat! Please see our specific [contributing guidelines](CONTRIBUTING.md) for more information."
virtualcommons/foraging,17114,1,1,4,Organization,False,"Spatially explicit, multiplayer foraging experiment for studying collective action",,,18,Java,"{'': 3, 'yml': 2, 'md': 1, 'docker': 1, 'example': 1, 'xml': 4, 'bat': 3, 'sh': 1}",680,2,6,5,5,3305,True,7,51,0,5,0,5,0,0,15,1,1,22,483,1055,0,0,6,1,,,"# foraging√æ√æThe foraging experiment is a common pool resource experiment where participants are placed in randomized groups and√æinteract with a spatially explicit renewable resource. It is built on the√æ[Social Ecological Systems Experiment Framework](http://github.com/virtualcommons/sesef) and has been used to conduct research studies√æat [Arizona State University](http://www.asu.edu), [Indiana University](http://www.iu.edu), and the [University of Alaska-Anchorage](http://www.uaa.alaska.edu).√æ√æ## features√æ√æ* Participants move and interact with a resource in a real-time 2-D grid environment. √æ* Pluggable resource growth dynamics. The default is a parameterized density-dependent growth function but there√æ  are also ""patchy"" resource growth dynamics where the top half of the grid has a higher chance of regrowth than the√æ  bottom half. Arbitrary regrowth dynamics are possible by implementing a Java interface and specifying it in a√æ  configuration file.√æ* Flexible experiment and round scoped parameterization via [Java properties files](http://docs.oracle.com/javase/8/docs/api/java/util/Properties.html) used to define experimental treatments.√æ  Experiment scoped parameters apply to the entire experiment whereas round scoped parameters apply to a specific round.√æ* Support for interactive quizzes, monitored real-time chat with options for censoring, voting, sanctioning, mini trust√æ  games in between rounds, embedded links that uniquely and anonymously identify each participant to Qualtrics surveys√æ  and limited fields of vision.√æ* Binary and XML savefiles that store every user action (e.g., movement, harvest events, sanction events, chats) in a time√æ  ordered stream that can be converted to a variety of CSV statistics files and into QuickTime movies. Custom data√æ  analysis can be done by extending the SaveFileConverter class and analyzing the OrderedSet of user actions.√æ√æ## Download, configure, and deploy the software√æ√æFirst, you'll need to [clone this git repository](https://help.github.com/articles/cloning-a-repository/) via the command-line or a git GUI client, e.g., `% git clone https://github.com/virtualcommons/foraging.git` (recommended) or you can [download and unpack the latest stable release](https://github.com/virtualcommons/foraging/releases)√æ√æ### Configure the software√æNext, you'll need to configure the software. At a minimum, you'll need to customize the `build.properties` file and add a set of configuration files representing an experiment treatment to `src/main/resources/configuration`. This step is clumsy and could use a lot of improvement.√æ√æ* customize `build.properties` from the `build.properties.example` file. At a minimum, make sure you set the√æ  `server.address` to the IP address or fully qualified hostname of the machine you are using to serve this application√æ* add configuration files to `src/main/resources/configuration`, see the [wiki's Configuration page](https://github.com/virtualcommons/foraging/wiki/Configuration) for more details.√æ√æ### Run via docker-compose√æIf you install [Docker](https://docs.docker.com/engine/installation/) and [docker compose](https://docs.docker.com/compose/install/) you won't need to manually install Java, Ant, and start a webserver to serve the JNLP files, jar files, and static image assets in addition to the experiment server responsible for the experiment logic and generating data files in `./docker/data`.√æ√æ_NOTE_: The docker build currently binds to port 80 instead of port 8080 - if you want to change this, modify the port mapping in docker-compose.yml for the nginx web service.√æ√æ* run `docker-compose up` to build the foraging Docker image and start an experiment√æ  server listening on port 16001 and an nginx webserver listening on port 8080 to deliver the foraging client and√æ  facilitator applications via Java WebStart. The relevant URLs are `http://<server.address>` to start a WebStart client and `http://<server.address>/facilitator.jnlp` to start a WebStart facilitator where `<server.address>` is as defined in your `build.properties` file.√æ* *Back up your data:* when you are done running an experiment make sure you back up the binary data saved in `docker/data`. √æ* Convert binary data stored in `DATA_DIR` to a variety of plaintext files via `docker-compose run data` or customize the statistics you see by writing a custom `SaveFileProcessor` and adding it to the list in `ForagingSaveFileConverter`.You can select the data directory with the `DATA_DIR` environment variable and convert the XML savefiles with the `XML` environment variable, e.g., `docker-compose run -e DATA_DIR=<data-directory> -eXML=xml data`.√æ* Run `docker-compose down` or `docker system prune` to clean up your docker images when you're done.√æ√æ### Install all dependencies manually√æ√æYou can also install the dependencies directly onto your system (e.g., `yum`, `apt-get`, or `pacman` on your favorite Linux distro) and √æ√æ* [install and setup Java, Ant, and Maven](https://github.com/virtualcommons/sesef/wiki/Home)√æ√æ### Run a demo√æYou can run a demo from the command-line (e.g., Windows PowerShell or Command Prompt, Mac OSX Terminal.app, or any Linux terminal) after Ant and Java have been installed via√æ√æ```√æ% ant prepare-demo√æ% ant demo % this will start a server, a facilitator, and 5 clients in the demo treatment√æ```√æFor more detailed instructions, please see the [installation instructions on our wiki](https://github.com/virtualcommons/foraging/wiki/Installation).√æ√æ## publications√æ√æData generated from the foraging framework has been published in √æ[Lab Experiments for the Study of Social-Ecological Systems](http://www.sciencemag.org/cgi/content/abstract/328/5978/613). √æArchives of the [configuration files used](https://github.com/virtualcommons/foraging/tree/master/src/main/resources/configuration/replication/2010/janssen-et-al) and the√æ[experiment data](https://osf.io/mdhb7) are also available.√æ√æ## status√æ[![Build Status](https://travis-ci.org/virtualcommons/foraging.svg?branch=master)](https://travis-ci.org/virtualcommons/foraging)√æ[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.597807.svg)](https://doi.org/10.5281/zenodo.597807)√æ√æIf you'd like to add new features or find any bugs, please [let us know](http://vcweb.asu.edu/contact)."
Expugn/S-argo,16495,3,1,3,User,False,'Sword Art Online: Memory Defrag' Summon Simulator Discord Bot,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",13,Java,"{'': 3, 'md': 6, 'iml': 1, 'xml': 1}",226,4,32,1,5,1017,True,0,8,0,0,0,4,0,0,9,1,0,0,0,0,0,0,8,,5,,"# NOTICE√æI have quit *Sword Art Online: Memory Defrag* around December 10, 2018. √æ√æI no longer have any motivation to play this game because all my friends moved on or were hit by the massive ban wave that targeted people who used 3rd party services for discount memory diamonds.√æ√æWhile I will provide occasional updates to the banners file, they will not be as frequent as they were when I actively played the game.  √æI also am trying to avoid having to update this bot any more than I have to.√æ√æIf someone else wants to take on this project actively, **feel free to do so**.√æ√æTo my fellow guild members:  √æThanks for the memories. You guys were awesome.√æ√æ![Image](https://cdn.discordapp.com/attachments/230961810453299201/625658446557216768/Screenshot_20190923-044105_SAO_MD.jpg)  √æ![Image](https://cdn.discordapp.com/attachments/230961810453299201/625660372212383744/Screenshot_20190923-044946_SAO_MD.jpg)  √æThank you, **Fatality** members and the NA Legacy guild branch. √æ√æ-----√æ√æ![S'argo Logo](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/S'argo_Banner_Animated.gif)√æ_[The .GIF version of the banner doesn't do it justice. Higher quality version here.](https://giant.gfycat.com/GoldenInnocentAustralianfreshwatercrocodile.webm)_√æ√æ# S'argo√æ[![Downloads](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/Downloads_Button.png)](https://github.com/Expugn/S-argo/releases)√æ[![Wiki](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/Wiki_Button.png)](https://github.com/Expugn/S-argo/wiki)√æ[![Issues Tracker](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/Issues_Tracker_Button.png)](https://github.com/Expugn/S-argo/issues)√æ[![Data Repository](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/Data_Repository_Button.png)](https://github.com/Expugn/S-argo_Data_v2)√æ[![/r/MemoryDefrag Discord](https://raw.githubusercontent.com/Expugn/S-argo_Data_v2/master/wiki/readme/Discord_Button.png)](http://discord.gg/MemoryDefrag)√æ√æ> **Table of Contents**  √æ[1. Information](https://github.com/Expugn/S-argo#information ""Information"")  √æ[2. Features](https://github.com/Expugn/S-argo#features ""Features"")  √æ[3. Demo](https://github.com/Expugn/S-argo#demo ""Demo"")  √æ[4. Commands](https://github.com/Expugn/S-argo#commands ""Commands"")  √æ[5. Related Links](https://github.com/Expugn/S-argo#related-links ""Related Links"")  √æ[6. Special Thanks](https://github.com/Expugn/S-argo#special-thanks ""Special Thanks"")  √æ[7. Other Stuff](https://github.com/Expugn/S-argo#other-stuff ""Other Stuff"")    √æ√æ## Information√æS'argo is a Discord bot made using the [Discord4J](https://github.com/austinv11/Discord4J ""Discord4J on GitHub"") API wrapper.  √æThis Discord bot's main use is to be a ""summon simulator"" for the mobile game *Sword Art Online: Memory Defrag*.√æ√æ## Features√æS'argo simulates the scouting system from *Sword Art Online: Memory Defrag*.√æ√æThis includes:  √æ√æ| Character Scout Type | Description |  √æ| :---: | :--- |  √æ| Normal | Static pull rates every time. Nothing special.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul></details> |  √æ| Step Up | Performing more multi pulls modifies the character rates and pricing.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`200` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ4 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul>**Resets back to `Step 1`**</details> |  √æ| Record Crystal | Record Crystals are given every multi scout which can be used in a record crystal scout.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul></details> |  √æ| Step Up v2 | Modified version of `Step Up` that features a repeating `Step 6`.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`200` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Birthday Step Up | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**Resets back to `Step 1`.**</details> |  √æ| Record Crystal v2 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>First Scout</h2>**Multi** <ul>`125` Memory Diamonds</ul></details> |  √æ| Memorial | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`1` Memory Diamond</ul>**Multi** <ul>`Disabled`</ul></details> |  √æ| Step Up v3 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul></details> |  √æ| Record Crystal v3 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>First Scout</h2>**Multi** <ul>`125` Memory Diamonds</ul></details> |  √æ| Event | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`0` Memory Diamond</ul>**Multi** <ul>`Disabled`</ul></details> |  √æ| SAO Game 5th Anniversary Step Up | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`55` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Record Crystal v4 | Introduced the increased `+1.5` rates for ‚òÖ5 characters (`2%` -> `3%`). This change carries through future banners.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>First Scout</h2>**Multi** <ul>`125` Memory Diamonds</ul></details> |  √æ| Step Up v4 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`125` Memory Diamonds</ul>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |√æ| Step Up v5 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |√æ| SAO Game 5th Anniversary Step Up v2 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`55` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Step Up v6 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul></details> |√æ| SAO Game 5th Anniversary Step Up v3 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`55` Memory Diamonds</ul>**‚òÖ4+ Rate** <ul>`100%` (for one character)</ul><h2>Step 3</h2>**‚òÖ5 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ5 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ5 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details |  √æ| Step Up v7 | Introduces ‚òÖ6 characters.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ6 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ6 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ6 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Record Crystal v5 | The first use of Record Crystals with ‚òÖ6 characters. Circulating Record Crystals are unobtainable here. <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>First Scout</h2>**Multi** <ul>`125` Memory Diamonds</ul></details> |  √æ| Step Up v8 | Same as `Step Up v7`, but includes the rest of the ‚òÖ5 characters into the general pool.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ6 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ6 Rate** <ul>`100%` (for one character)</ul><h2>Step 6</h2>**‚òÖ6 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Record Crystal v6 | The first use of Circulating Record Crystals with ‚òÖ6 characters. <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>First Scout</h2>**Multi** <ul>`125` Memory Diamonds</ul></details> |  √æ| Step Up v9 | Somewhat the same as `Step Up v8`, but this time there's one banner character that gets higher rates and is guaranteed at Step 5; other banner characters are available at a lower rate.  <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`25` Memory Diamonds</ul>**Multi** <ul>`250` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`125` Memory Diamonds</ul><h2>Step 3</h2>**Multi** <ul>`200` Memory Diamonds</ul>**‚òÖ6 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ6 Rate** <ul>`100%` (for the first banner character)</ul><h2>Step 6</h2>**‚òÖ6 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ√æ| Weapon Scout Type | Description |  √æ| :---: | :--- |  √æ| Normal | Static pull rates every time. Nothing special.<details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`15` Memory Diamonds</ul>**Multi** <ul>`150` Memory Diamonds</ul></details> |  √æ| Step Up | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`15` Memory Diamonds</ul>**Multi** <ul>`150` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`100` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul></details> |√æ| GGO Step Up | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`15` Memory Diamonds</ul>**Multi** <ul>`150` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`100` Memory Diamonds</ul>**Guarantees `1` ‚òÖ2 Automatic Rifle weapon.**<h2>Step 3</h2>**‚òÖ4 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ4 Rate** <ul>`100%` (for one weapon)</ul><h2>Step 6</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Step Up v2 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`15` Memory Diamonds</ul>**Multi** <ul>`150` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`100` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ4 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ4 Rate** <ul>`100%` (for one weapon)</ul><h2>Step 6</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ| Step Up v3 | <details> <summary>**Rates/Pricing**</summary> <h2>Base Pricing</h2>**Single** <ul>`15` Memory Diamonds</ul>**Multi** <ul>`150` Memory Diamonds</ul><h2>Step 1</h2>**Multi** <ul>`100` Memory Diamonds</ul><h2>Step 3</h2>**‚òÖ4 Rate** <ul>`+1.5x`</ul><h2>Step 5</h2>**‚òÖ4 Rate** <ul>`100%` (for the first weapon)</ul><h2>Step 6</h2>**‚òÖ4 Rate** <ul>`+2.0x`</ul>**`Step 6` repeats.**</details> |  √æ√æ| Miscellaneous Scout Type | Description |  √æ| :---: | :--- |  √æ| Normal Ticket | Scout that typically has misc. items, rainbow essence, and copper exchange swords. |  √æ| Plus Ticket | Scout that typically has medallions, rainbow essence, and silver+ exchange swords. |√æ| Normal v2 Ticket | Scout that typically has misc. items, rainbow essence, upgrade crystals, memory fragments, and copper exchange swords. |  √æ| Plus v2 Ticket | Scout that typically has medallions, rainbow essence, upgrade crystals, memory fragments and silver+ exchange swords. |√æ√æUnlike the other *Sword Art Online: Memory Defrag* summon simulators, S'argo features user data √æsaving so users can see their character collection and get Hacking Crystals for duplicate characters√æthey receive to fully simulate the in-game experience.√æ√æ## Demo√æWant to try out the bot? Check out the **#scout-simulator** channel in the *Sword Art Online Memory Defrag* Reddit Discord!  √æInvite link for the server is down in Related Links.√æ√æ## Commands√æExample commands are assuming you have your command prefix set as the default (`$`):√æ√æ###### GENERAL√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `help` | Get the command list. | `$help` |√æ| `info` | Get some bot information. | `$info` |√æ√æ###### SCOUTING√æ```√æABBREVIATION MEANINGS:√æs = ""single""√æm = ""multi""√ærc = ""record crystal""√æws = ""weapon single""√æwm = ""weapon multi""√ænts = ""normal ticket single""√æntm = ""normal ticket multi""√æpts = ""plus ticket single""√æptm = ""plus ticket multi""√æi = ""image""√æ```√æ**Adding an `i` after your scout type will display an image result.**√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `scout` | View the first page of all available banners. | `$scout` |√æ| `scout p[Page Number]` | View a specific page in the banner list. | `$scout p2` |√æ| `scout [Banner ID]` | View a specific banner's information. | `$scout 1` |√æ| `scout [Banner ID] [s(i) / m(i) / rc(i)]` | Scout a banner. | `$scout 1 mi` |√æ| `scout [Banner ID] [ws(i) / wm(i)]` | Scout a weapon banner. | `$scout 1 ws` |√æ| `scout [nts(i) / ntm(i)]` | Scout using normal tickets. | `$scout ntsi` |√æ| `scout [pts(i) / ptm(i)]` | Scout using plus tickets. | `$scout ptm` |  √æ| `scout [nt2s(i) / nt2m(i)]` | Scout using normal v2 tickets. | `$scout nt2si` |  √æ| `scout [pt2s(i) / pt2m(i)]` | Scout using plus v2 tickets. | `$scout pt2m` |  √æ√æ###### USER PROFILE√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `profile` | View your information and character collection progress. | `$profile` |√æ| `profile data` | View your Step Up or Record Crystal data | `$profile data` |√æ| `profile info [Banner ID]` | View your obtained/missing characters or weapons in a banner. | `$profile info 1` |√æ| `profile search [Character Name]` | Search through your collection for that character. | `$profile search Kirito` |√æ√æ###### SHOP√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `shop` | View the available Memory Diamond bundles. | `$shop` |√æ| `shop [Item ID] [Quantity]` | ""Buy"" a Memory Diamond bundle. | `$shop 7 10` |√æ√æ###### USER RESET√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `reset` | Reset your entire user file. | `$reset` |√æ| `reset [Banner ID] c` | Reset your character data for a banner. | `$reset 1 c` |√æ| `reset [Banner ID] w` | Reset your weapon data for a banner. | `$reset 1 w` |√æ| `reset [Banner ID] a` | Reset all data (characters/weapons/step/record crystal) for a banner. | `$reset 1 a` |√æ√æ###### BOT OWNERS√æ√æ| Command | Description | Example |√æ| :---: | :--- | :---: |√æ| `update` | Download any missing character/weapon images from the data repository. | `$update` |√æ| `update r` | Delete all files in the character/weapon folders and re-download them. | `$update r` |√æ| `update o` | Replace all character/weapon files with a new copy. | `$update o` |√æ| `reload` | Reload the `Banners.xml` and setting files to use any new changes that were made. | `$reload` |√æ| `settings` | Used to modify the setting files. | `$settings` |√æ| `stop` | Shutdown the bot. | `$stop` |√æ√æ## Related Links√æ[S'argo Official Wiki](https://github.com/Expugn/S-argo/wiki ""Wiki"")  √æ[S'argo Official Data Repository](https://github.com/Expugn/S-argo_Data_v2 ""Official Data Repository"")  √æ[*Sword Art Online: Memory Defrag* Subreddit](https://www.reddit.com/r/MemoryDefrag/ ""Fan Subreddit"")  √æ[Subreddit Discord Invite Link](http://discord.gg/MemoryDefrag ""Discord Invite Link"")  √æ[4‚òÖ Character Database](https://www.reddit.com/r/MemoryDefrag/comments/5yyr4j/sao_md_4_database/ ""4‚òÖ Character Database"")√æ√æ## Special Thanks√æ> **Pep#7848 | /u/pedrobpimenta**  √æ  For liking my bot enough to ask to add it to the Reddit Discord, lol.  √æ  Also added the Wind, Halloween 2016, and Earth banners/images that were exclusive to the Japan server.√æ  √æ> **Azuto#0016 | /u/Azuto**  √æ  For his work in the Character Database.  √æ  The database was really handy for grabbing banner names, character prefixes, and weapon names.  √æ  The character database is linked in Related Links.√æ  √æ> **Legacy ‚àû**  √æ  For beta testing S'argo before it's official release :HAhaa:. Thanks guys!√æ  √æ> **Discord Dataminers (Salieri#6041 and Youmo#5582)**  √æ  For releasing game assets of new content (images/prefixes/etc) before they're announced so banners/images√æ  can be updated quicker.√æ√æ## Other Stuff√æThis is a non-profit fan project with the purpose of practice and entertainment.√æ√æ*Sword Art Online* is owned by **A-1 Pictures**, **Aniplex USA**, and **Reki Kawahara**.  √æAll characters and assets belong to their respective owners.  √æ√æIf you enjoy using this bot, please support the franchise by trying out the actual game.  √æ*Sword Art Online: Memory Defrag* is available in the Apple iOS App Store and Google Play Store.√æ√æProject began on September 6, 2017."
Swagger2Markup/markup-document-builder,508,38,6,30,Organization,False," A Markup document builder which supports AsciiDoc, Markdown and Confluence Wiki.",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",12,Java,"{'': 2, 'yml': 1, 'txt': 1, 'adoc': 2, 'gradle': 2, 'bat': 1}",181,2,8,9,0,1950,True,2,5,0,0,0,26,0,0,7,0,0,0,0,0,0,0,10,3,,,"= MarkupDocBuilder√æ:author: Robert Winkler√æ:version: 1.1.1√æ:hardbreaks:√æ√æimage:https://travis-ci.org/Swagger2Markup/markup-document-builder.svg?branch=master[""Build Status"", link=""https://travis-ci.org/Swagger2Markup/markup-document-builder""] image:https://coveralls.io/repos/Swagger2Markup/markup-document-builder/badge.svg[""Coverage Status"", link=""https://coveralls.io/r/Swagger2Markup/markup-document-builder""] image:https://api.codacy.com/project/badge/grade/c56a372454164f21b1b2eec8eb48b370[""Codacy code quality"", link=""https://www.codacy.com/app/robwin/markup-document-builder""] image:https://api.bintray.com/packages/swagger2markup/Maven/io.github.swagger2markup%3Amarkup-document-builder/images/download.svg[link=""https://bintray.com/swagger2markup/Maven/io.github.swagger2markup%3Amarkup-document-builder/_latestVersion""] image:http://img.shields.io/badge/license-ASF2-blue.svg[""Apache License 2"", link=""http://www.apache.org/licenses/LICENSE-2.0.txt""] image:https://img.shields.io/badge/Twitter-rbrtwnklr-blue.svg[""Twitter"", link=""https://twitter.com/rbrtwnklr""]√æ√æ== Overview√æ√æThis project is a Markup document builder (AsciiDoc, Markdown and ConfluenceWiki). The primary goal of this project is to simplify the creation of Markup documents. The builder is used by https://github.com/RobWin/swagger2markup[swagger2markup].√æ√æThe project requires at least JDK 7.√æ√æ=== Usage√æ=== Adding MarkupDocBuilder to your project√æThe project is published in JCenter and Maven Central.√æ√æ==== Maven√æ√æ[source,xml, subs=""specialcharacters,attributes""]√æ----√æ<repositories>√æ    <repository>√æ        <snapshots>√æ            <enabled>false</enabled>√æ        </snapshots>√æ        <id>central</id>√æ        <name>bintray</name>√æ        <url>http://jcenter.bintray.com</url>√æ    </repository>√æ</repositories>√æ<dependency>√æ    <groupId>io.github.swagger2markup</groupId>√æ    <artifactId>markup-document-builder</artifactId>√æ    <version>{version}</version>√æ</dependency>√æ----√æ√æ==== Gradle√æ√æ[source,groovy, subs=""attributes""]√æ----√ærepositories {√æ    jcenter()√æ}√æ√æcompile ""io.github.swagger2markup:markup-document-builder:{version}""√æ----√æ√æ=== Using MarkupDocBuilder√æ√æThe MarkupDocBuilder allows to build an AsciiDoc or Markdown document via the Builder pattern.√æ√æ[source,java]√æ----√æpublic class MarkupDocBuilderTest {√æ√æ    List<String> tableRowsInPSV;√æ√æ    @Before√æ    public void setUp(){√æ        tableRowsInPSV = new ArrayList<>();√æ        tableRowsInPSV.add(""Header 1 | Header 2 | Header2"");√æ        tableRowsInPSV.add(""Row 1, Column 1 | Row 1, Column 2 | Row 1, Column 3"");√æ        tableRowsInPSV.add(""Row 2, Column 1 | Row 2, Column 2 | Row 2, Column 3"");√æ    }√æ√æ√æ    @Test√æ    public void testToAsciiDocFile() throws IOException {√æ        MarkupDocBuilder builder = MarkupDocBuilders.documentBuilder(MarkupLanguage.ASCIIDOC);√æ        builder.documentTitle(""Test title"")√æ                .sectionTitleLevel1(""Section Level 1a"")√æ                .sectionTitleLevel2(""Section Level 2a"")√æ                .sectionTitleLevel3(""Section Level 3a"")√æ                .paragraph(""Paragraph with long text bla bla bla bla bla"")√æ                .listing(""Source code listing"")√æ                .source(""MarkupDocBuilder builder = MarkupDocBuilders.documentBuilder(MarkupLanguage.ASCIIDOC)"", ""java"")√æ                .tableWithHeaderRow(tableRowsInPSV)√æ                .sectionTitleLevel1(""Section Level 1b"")√æ                .sectionTitleLevel2(""Section Level 2b"")√æ                .boldTextLine(""Bold text line b"")√æ                .italicTextLine(""Italic text line b"")√æ                .unorderedList(Arrays.asList(""Entry1"", ""Entry2"", ""Entry 2""))√æ                .writeToFile(""build/tmp"", ""test"", StandardCharsets.UTF_8);√æ    }√æ√æ    @Test√æ     public void testToMarkdownDocFile() throws IOException {√æ        MarkupDocBuilder builder = MarkupDocBuilders.documentBuilder(MarkupLanguage.MARKDOWN);√æ        builder.documentTitle(""Test title"")√æ                .sectionTitleLevel1(""Section Level 1a"")√æ                .sectionTitleLevel2(""Section Level 2a"")√æ                .sectionTitleLevel3(""Section Level 3a"")√æ                .paragraph(""Paragraph with long text bla bla bla bla bla"")√æ                .listing(""Source code listing"")√æ                .source(""MarkupDocBuilder builder = MarkupDocBuilders.documentBuilder(MarkupLanguage.MARKDOWN)"", ""java"")√æ                .tableWithHeaderRow(tableRowsInPSV)√æ                .sectionTitleLevel1(""Section Level 1b"")√æ                .sectionTitleLevel2(""Section Level 2b"")√æ                .boldTextLine(""Bold text line b"")√æ                .italicTextLine(""Italic text line b"")√æ                .unorderedList(Arrays.asList(""Entry1"", ""Entry2"", ""Entry 2""))√æ                .writeToFile(""build/tmp"", ""test"", StandardCharsets.UTF_8);√æ    }√æ√æ}√æ----√æ√æ=== Generated HTML using AsciidoctorJ√æYou can generate your PDF or HTML documentation via https://github.com/asciidoctor/asciidoctorj[asciidoctorj] or even better via the https://github.com/asciidoctor/asciidoctor-gradle-plugin[asciidoctor-gradle-plugin] or https://github.com/aalmiray/markdown-gradle-plugin[markdown-gradle-plugin].√æ√æimage::images/asciidoc_html.jpg[asciidoc_html]√æ√æ== License√æ√æCopyright 2015 Robert Winkler√æ√æLicensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at√æ√æ    http://www.apache.org/licenses/LICENSE-2.0√æ√æUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
ProfessorStrenn/SbccCore,20,1,0,2,User,False,,,,9,Java,"{'': 4, 'md': 1, 'jardesc': 1}",15,1,1,2,0,964,True,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,13,,4,,"# SbccCore√æProvides simple static functions that make Java a *whole* lot easier to use:√æ√æ```java√æprintln(""Hello"");√æ```√ærather than √æ```java√æSystem.out.println(""Hell-o"");√æ```√æOther static functions:√æ```java√æString quakeText = readFile(""4.5_week.atom"");√æ√æList<String> words = readFileAsLines(""dict.txt"");√æ√æwriteFile(""file.txt"", str);√æ√æwriteFileAsLines(""lines.txt"", list);√æ√æprintf(""%d words in %s\n"", words.size(), path);√æ√æprint(""Hello"");√æ√æString s = readLine();  // Read a line of text from the console√æ√æparseInt/Long/Float/Double/Boolean()√æ```√æ√æ# To Use√æ**NOTE:  If you are using the `workspace-cs106-v3` workspace in Eclipse, you don't have to do anything.  It already has a template project that is set up to use sbcccore.**√æ√æ1. Download the latest [`sbcccore.x.y.z.jar`](https://github.com/ProfessorStrenn/SbccCore/releases) into your project.√æ2. Add `sbcccore.x.y.z.jar` to your build path.√æ3. Add the following line to your Java source:√æ```java√æimport static sbcc.Core.*;"
mybatis/oscache-cache,943,7,16,11,Organization,False,OSCache support for MyBatis Cache,http://mybatis.github.io/oscache-cache,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",14,Java,"{'': 5, 'yml': 1, 'md': 1, 'xml': 2, 'txt': 1, 'cmd': 1}",174,2,3,5,0,3605,True,0,1,0,0,0,37,0,0,6,0,0,0,0,0,87,0,35,16,,,‚ùóÔ∏è Note:  √æ‚ùóÔ∏è This repository is read-only. OSCache is not maintained anymore.√æ√æ---√æ√æMyBatis Oscache Extension√æ=========================√æ√æ[![Build Status](https://travis-ci.org/mybatis/oscache-cache.svg?branch=master)](https://travis-ci.org/mybatis/oscache-cache)√æ[![Coverage Status](https://coveralls.io/repos/mybatis/oscache-cache/badge.svg?branch=master&service=github)](https://coveralls.io/github/mybatis/oscache-cache?branch=master)√æ[![Dependency Status](https://www.versioneye.com/user/projects/5619b482a193340f2f000515/badge.svg?style=flat)](https://www.versioneye.com/user/projects/5619b482a193340f2f000515)√æ[![Maven central](https://maven-badges.herokuapp.com/maven-central/org.mybatis.caches/mybatis-oscache/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.mybatis.caches/mybatis-oscache)√æ[![License](http://img.shields.io/:license-apache-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)√æ√æ![mybatis-oscache](http://mybatis.github.io/images/mybatis-logo.png)√æ√æMyBatis-Oscache extension Oscache support for MyBatis Cache.√æ√æEssentials√æ----------√æ√æ* [See the docs](http://mybatis.github.io/oscache-cache/)
MelloChan/halo,208,1,2,2,User,False,HaloÊúçÂä°Á´Ø[Â∑≤Â∫üÂºÉ]->https://github.com/MelloChan/halo-cloud,,,7,Java,"{'': 1, 'md': 1, 'xml': 1}",144,1,0,2,3,782,True,0,0,0,0,0,1,0,0,8,0,0,0,0,0,0,0,13,,18,,## HaloÊâãÊú∫ÂïÜÂüéÊúçÂä°Á´Ø√æ√æ- [eureka-server]()ÔºöÊúçÂä°Ê≥®ÂÜå‰∏≠ÂøÉ     √æ- [halo-gateway]()ÔºöÁªü‰∏ÄÁΩëÂÖ≥    √æ- [halo-api]()ÔºöRemote-API    √æ- [halo-server]()ÔºöÊúçÂä°Êèê‰æõÊñπ      √æ√æ### HaloÊâãÊú∫ÂïÜÂüéÂâçÁ´Ø√æ√æ- [Halo](https://github.com/tozlam/Halo.)√æ√æ### ÊúçÂä°Á´ØÊäÄÊúØÈÄâÂûã  √æ√æ- Ê°ÜÊû∂: Spring Boot„ÄÅMybatis  √æ- Êï∞ÊçÆÂ∫ì: MySQL5.7  √æ- ÁºìÂ≠òÊúçÂä°Âô®: Redis3.2  √æ- Â∫îÁî®ÊúçÂä°Âô®: Tomcat8    √æ- WebÊúçÂä°Âô®: Nginx1.12.0    √æ- APIÈ£éÊ†º: RESTFul  √æ- ÂºÄÂèëÁéØÂ¢É: Windows7/8/10    √æ- ÈÉ®ÁΩ≤ÁéØÂ¢É: CentOS6.6    √æ- ÊûÑÂª∫Â∑•ÂÖ∑: Maven3.3.9    √æ- ÂºÄÂèëÂ∑•ÂÖ∑: IDEA2017/2018      √æ- APIÊµãËØïÂ∑•ÂÖ∑: Postman  √æ- ÁâàÊú¨ÊéßÂà∂: Git√æ- Âçè‰ΩúÂπ≥Âè∞(ÈúÄÊ±Ç„ÄÅÈÖçÁΩÆ„ÄÅAPIÊñáÊ°£Á≠â): Teambition    √æ- Áü≠‰ø°Âπ≥Âè∞: ‰∫ë‰πãËÆØ      √æ- ÂõæÁâáÂ≠òÂÇ®: ‰∏ÉÁâõ‰∫ë  √æ- ÁºñÁ®ãËßÑÁ∫¶: ÈòøÈáåÂ∑¥Â∑¥JavaÂºÄÂèëÊâãÂÜå    
xead/XeadModeler,12542,23,6,9,User,False,"XEAD Modeler is the tool to design data-model, process-model and UI-model of DB systems.",http://homepage2.nifty.com/dbc/indexEn.html,"{'key': 'bsd-3-clause', 'name': 'BSD 3-Clause ""New"" or ""Revised"" License', 'spdx_id': 'BSD-3-Clause', 'url': 'https://api.github.com/licenses/bsd-3-clause', 'node_id': 'MDc6TGljZW5zZTU='}",6,Java,{'': 3},54,1,0,2,0,3056,True,2,2,0,0,4,1,0,0,0,0,0,0,0,0,0,0,4,,29,,
opentracing-contrib/java-spring-cloud,754,279,26,101,Organization,False,"Distributed tracing for Spring Boot, Cloud and other Spring projects",,"{'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}",17,Java,"{'': 5, 'xml': 2, 'yml': 1, 'md': 2, 'txt': 1, 'cmd': 1}",242,4,102,35,20,1077,True,26,96,7,8,3,167,1,14,13,0,5,10,648,57,3,0,111,2,,,"[![Build Status][ci-img]][ci] [![Released Version][maven-img]][maven]√æ√æ# OpenTracing Spring Cloud√æThis repository provides OpenTracing instrumentation for Spring Boot and its various extensions. It can be used with any OpenTracing√æcompatible implementation.√æ√æIt contains auto-configurations which instruments and trace following Spring Boot projects:√æ* Spring Web (RestControllers, RestTemplates, WebAsyncTask, WebClient, WebFlux)√æ* @Async, @Scheduled, Executors√æ* WebSocket STOMP√æ* Feign, HystrixFeign√æ* Hystrix√æ* JMS√æ* JDBC√æ* Kafka√æ* Mongo√æ* Zuul√æ* Reactor√æ* RxJava√æ* Redis√æ* Standard logging - logs are added to active span√æ* Spring Messaging - trace messages being sent through [Messaging Channels](https://docs.spring.io/spring-integration/reference/html/#messaging-channels-section)√æ* RabbitMQ√æ√æ## Compatibility table√æ√æThe following table shows versions with compatible [Spring Cloud](http://projects.spring.io/spring-cloud/) releases.√æ√æopentracing-spring-cloud version | OpenTracing API | Spring Cloud version√æ--- | --- | ---√æ0.5.x | 0.33.0 | `Hoxton`√æ0.4.x | 0.32.0 | `Hoxton`√æ0.3.x | 0.32.0 | `Greenwhich`√æ0.2.x | 0.31.0 | `Finchley`, `Greenwhich`√æ0.1.x | 0.31.0 | `Dalston`, `Edgware`√æ√æ√æ## Comparison to `spring-cloud-sleuth`√æThis project is similar to [spring-cloud-sleuth](https://github.com/spring-cloud/spring-cloud-sleuth),√æboth provide out of the box tracing solution for Spring Boot/Cloud. Some of the instrumentations in this√æpackage are based on original `sleuth` work.√æ√æHowever there are a couple of differences:√æ* OpenTracing support in `sleuth` is limited to only one tracer implementation - [brave-opentracing](https://github.com/openzipkin-contrib/brave-opentracing). In other words it's not possible to use arbitrary OpenTracing tracer with `sleuth`.√æ* `sleuth` might support different set of instrumentations.√æ* Instrumentations in `sleuth` might add different set of tags and logs to represent the same events.√æ√æ## Note on dependencies√æ√æIt's worth noting that the although OpenTracing Spring Cloud contains code for instrumenting a wealth of Spring projects,√æit however does not pull those dependencies automatically, marking them as optional dependencies instead.√æ√æThat means that for example a simple Spring Boot REST API application can include OpenTracing Spring Cloud without the fear√æof polluting the classpath with Spring Cloud dependencies that are otherwise unneeded√æ√æ## Configuration√æ√æThe preferred way to use this library is via vendored starters. These starters use√æinstrumentations from this library and expose specific tracer configuration in Spring√ænative way:√æ√æ* [Jaeger](https://github.com/opentracing-contrib/java-spring-jaeger)√æ* [Zipkin](https://github.com/opentracing-contrib/java-spring-zipkin)√æ√æ### Explicitly tracer configuration√æ√æJust add the following dependency in your pom.xml:√æ```xml√æ<dependency>√æ  <groupId>io.opentracing.contrib</groupId>√æ  <artifactId>opentracing-spring-cloud-starter</artifactId>√æ</dependency>√æ```√æ, and provide OpenTracing tracer bean:√æ```java√æ@Bean√æpublic io.opentracing.Tracer tracer() {√æ  return new // tracer instance of your choice (Zipkin, Jaeger, LightStep)√æ}√æ```√æ√æ### Properties√æ√æProperty| Default| Description√æ------------- | ------------- | -------------√æopentracing.spring.cloud.reactor.enabled|true|Enable Reactor tracing.√æopentracing.spring.cloud.async.enabled|true|Enable tracing for @Async, Executor and WebAsyncTask/Callable.√æopentracing.spring.cloud.log.enabled|true|Add standard logging output to tracing system.√æopentracing.spring.cloud.scheduled.enabled|true|Enable @Scheduled tracing.√æopentracing.spring.cloud.feign.enabled|true|Enable Feign tracing.√æopentracing.spring.cloud.gateway.enabled|true|Enable Gateway tracing.√æopentracing.spring.cloud.hystrix.strategy.enabled|true|Enable Propagation of spans across threads using in Hystrix command tracing.√æopentracing.spring.cloud.jdbc.enabled|true|Enable JDBC tracing.√æopentracing.spring.cloud.jms.enabled|true|Enable JMS tracing.√æopentracing.spring.cloud.kafka.enabled|true|Enable Kafka tracing.√æopentracing.spring.cloud.mongo.enabled|true|Enable MongoDB tracing.√æopentracing.spring.cloud.reactor.enabled|true|Enable Reactor tracing.√æopentracing.spring.cloud.rxjava.enabled|true|Enable RxJava tracing.√æopentracing.spring.cloud.websocket.enabled|true|Enable Websocket tracing.√æopentracing.spring.cloud.zuul.enabled|true|Enable Zuul tracing.√æopentracing.spring.cloud.redis.enabled|true|Enable Redis tracing.√æopentracing.spring.cloud.redis.prefixOperationName|""""|Set a prefix for each Redis operation, e.g: MyPrefix.SET.√æopentracing.spring.cloud.jdbc.withActiveSpanOnly|false|Only trace JDBC calls if they are part of an active Span.√æopentracing.spring.cloud.jdbc.ignoreStatements|null|Set of JDBC statements to not trace.√æ√æ## Development√æMaven checkstyle plugin is used to maintain consistent code style based on [Google Style Guides](https://github.com/google/styleguide)√æ√æ```shell√æ./mvnw clean install√æmake // to run tests including dependency tests, a specific profile can be specified by make PROFILES=nodeps√æ```√æ√æ## Release√æFollow instructions in [RELEASE](RELEASE.md)√æ√æ   [ci-img]: https://travis-ci.org/opentracing-contrib/java-spring-cloud.svg?branch=master√æ   [ci]: https://travis-ci.org/opentracing-contrib/java-spring-cloud√æ   [maven-img]: https://img.shields.io/maven-central/v/io.opentracing.contrib/opentracing-spring-cloud.svg?maxAge=2592000√æ   [maven]: http://search.maven.org/#search%7Cga%7C1%7Copentracing-spring-cloud√æ√æ## License√æ√æ[Apache 2.0 License](./LICENSE)."
OrN/rscplus,62889,42,7,20,User,False,RuneScape Classic client mod & preservation platform (Repo moved to https://github.com/RSCPlus/rscplus/),https://rsc.plus,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",14,Java,"{'': 4, 'yml': 1, 'md': 1, 'xml': 1}",547,26,1,8,0,1617,True,18,32,2,0,2,122,0,1,10,0,1,4,4044,216,0,0,17,,10,,"# rscplus√æ*RuneScape Classic is made and owned by Jagex Ltd. and this project is not in any way affiliated with them.*√æ√æ*The code is licensed under GPLv3 in hopes of protecting people from malicious modifications.*√æ√æ# We have moved Repos!√æ# Update your bookmarks to https://github.com/RSCPlus/rscplus/√æ√æ## Download√æThe latest release can be found [here](https://github.com/RSCPlus/rscplus/releases/latest).√æ√æ## Discord√æJoin our Discord server ([Invite link](https://discord.gg/92gG87h))√æ√æ## Changes since RSC went offline√æ√æ- No longer contact RuneScape.com to get world total counts√æ- Toggleable buttons to control Replay playback√æ- Queued recordings√æ√æ## Features√æ- Game resolution changing (about 80% complete)√æ- NPC Dialogue options with 1-9 on keyboard√æ- Roof hiding√æ- Option to always show combat style menu, and persistent combat style setting√æ- XP Drops√æ- Screenshots√æ- Mouse wheel zoom√æ- Middle mouse camera rotation√æ- HP, Prayer, and fatigue bars on the bottom right of the screen√æ- Fatigue on-screen alert√æ- Integrated Twitch chat into in-game chat√æ- Inventory free space counter√æ- Highlight friends and show their names when they're near you√æ- Notifications for PMs, trades, duel requests, low HP, and high fatigue√æ- Configurable item name patching√æ- Recording and playback of game sessions using the real data the server sent√æ- And more...√æ√æAll features that modify the interface can be disabled if desired.√æ√æ## Chat Commands√æ*::help* - displays all keyboard commands and chat commands in game√æ√æ*::[skillname]* - Tells skill level and xp in chat√æ√æ*::next_[skillname]* - Tells how much xp needed until next level in chat√æ√æ*::total* - Shows total level and total xp in chat√æ√æ*::fatigue* - Shows the fatigue percentage accurately in chat√æ√æ*::screenshot* - Take screenshot (Saved in the screenshots directory)√æ√æ*::sleep* - Sleep, provided you have a sleeping bag in inventory√æ√æ*::banksearch [aWord]* - Searches current bank state for banked items √æcontaining ""aWord"". Note that withdrawing all of a certain item's type √æwill push it to the end of the bank and thus withdrawing all should not √æbe done if your bank is tidy. To exit the search mode, speak to the √æbanker again.√æ√æ*::togglestartsearchedbank [[aWord]]* - Toggle between searchable bank √æmode and normal mode; specifying the parameter updates the search √ækeyword stored.√æ√æ*::togglebypassattack* - Toggle bypass right click attack√æ√æ*::toggleroofs* - Toggle roof hiding√æ√æ*::togglecolor* - Toggle colored text in terminal√æ√æ*::togglecombat* - Toggle combat experience menu√æ√æ*::togglefatigue* - Toggle fatigue alert√æ√æ*::debug* - Toggle debug mode√æ√æ*::togglelogindetails* - Toggle IP/Dns login details shown at welcome screen√æ√æ*::toggletwitch* - Toggle twitch chat hidden/shown√æ√æ*::toggleiteminfo* - Toggle Item info√æ√æ*::togglenpcinfo* - Toggle NPC info√æ√æ*::toggleplayerinfo* - Toggle Player info√æ√æ*::togglehitbox* - Toggle hitboxes for NPC info√æ√æ*::togglexpdrops* - Toggle XP drops√æ√æ*::togglefatiguedrops* - Toggle fatigue drops√æ√æ*::fov \<value\>* - Change FoV to specified value (range of 7 to 16)√æ√æ*::logout* - Logout√æ√æ*::togglefriendinfo* - Toggle Player info for Friends only√æ√æ*::toggleposition* - Toggle player's position√æ√æ*::toggleretrofps* - Toggle retro FPS overlay (Early RSC style)√æ√æ*::toggleinvcount* - Toggle the overlay of current inventory used√æ√æ*::togglebuffs* - Toggle combat (de)buffs and cooldowns display√æ√æ*::togglestatusdisplay* - Toggle Hits/Prayer/Fatigue display√æ√æ*::cmb* - WARNING! Because of color codes, this command will break the character limit and *may be bannable*. Don't send this command across PM to RS2/RS3 because they'll see a bunch of RS1 color codes and you may get banned if you're reported. Mimic's osbuddy's !cmb; outputs combat level (with decimal), Att, Str, Def, Hits, Ranged, Magic, and Prayer levels.√æ√æ*::cmbnocolor* - Mimic's osbuddy's !cmb; doesn't use color codes and is within character limits√æ√æ*::xmas* - Formats your message in festive Red Green and White colours√æ√æ*::rainbow* - Formats your message in all the colours of the rainbow (or at least 6)√æ√æ*::system* - Hides your username and outputs your message√æ√æ*::update* - Manually check if RSC+ is up to date√æ√æ## Controls√æ- Middle mouse click - Rotate camera√æ- Mouse wheel scroll - Zoom camera√æ√æAll keybinds are configurable via the Settings GUI√æ√æ#### General√æ- Ctrl + x - Sleep, provided you have a sleeping bag in inventory√æ- Ctrl + l - Logout√æ- Ctrl + s - Take screenshot (Saved in the screenshots directory)√æ- Ctrl + o - Open the options/settings window√æ- Ctrl + c - Toggle combat experience menu√æ- Ctrl + [ - Toggle XP drops√æ- Ctrl + ] - Toggle fatigue drops√æ- Ctrl + f - Toggle fatigue alert√æ- Ctrl + v - Toggle inventory full alert√æ- Ctrl + a - Toggle bypass right click attack√æ- Ctrl + r - Toggle roof hiding√æ- Ctrl + q - Toggle start on searchable bank mode (uses previously √æstored keyword on searchable bank)√æ- Ctrl + z - Toggle colored chat text in terminal√æ√æ#### Overlays√æ- Ctrl + u - Toggle Hits/Prayer/Fatigue display√æ- Ctrl + y - Toggle combat (de)buffs and cooldowns display√æ- Ctrl + e - Toggle inventory count overlay√æ- Alt + p - Toggle position√æ- Alt + f - Toggle retro FPS overlay√æ- Ctrl + i - Toggle Item name ovelay√æ- Ctrl + p - Toggle Player name overlay√æ- Unbound - Toggle Friend name overlay√æ- Ctrl + n - Toggle NPC name overlay√æ- Ctrl + h - Toggle hitboxes√æ- Ctrl + g - Toggle food heal overlay√æ- Unbound - Toggle time until health regen√æ- Ctrl + d - Toggle debug mode√æ√æ#### Streaming & Privacy√æ- Ctrl + t - Toggle twitch chat hidden/shown√æ- Ctrl + j - Toggle IP/DNS shown at login screen√æ√æ#### Replay (only used while a recording is played back)√æ- Ctrl + b - Stop playback√æ- Space - Pause playback√æ- Ctrl + Right - Increase playback speed√æ- Ctrl + Left - Decrease playback speed√æ- Ctrl + Down - Reset playback speed√æ√æ#### Miscellaneous√æ- Ctrl + 1-5 - World switch on login screen√æ√æ√æ## Contributing√æ- Fork the project√æ- Work on it√æ- Pull request the branch√æ√æ*I will not accept any game automation features (macroing, etc.)*√æ√æ√æ### Building [![Build Status](https://travis-ci.org/RSCPlus/rscplus.svg?branch=master)](https://travis-ci.org/OrN/rscplus)√æ*You must have git, apache-ant, and jdk 1.7 or 1.8 installed to do this.*√æ```√ægit clone https://github.com/RSCPlus/rscplus√æcd rscplus√æant dist√æ```√æ√æThe result should be in the *dist* folder.√æ√æThere is an Eclipse project in the source root you can import.√æ√æIf you are running rsc+ in Eclipse and want colorized console output, you may want to use an extension called [ANSI Escape in Console](https://marketplace.eclipse.org/content/ansi-escape-console) and add -Djansi.passthrough=true to VM arguments for your run configuration.√æ√æIf you are running rsc+ in IntelliJ IDEA and want colorized console output, you need to add -Djansi.passthrough=true to VM options for your run configuration.√æ√æIf you are running rsc+ from console, and want to output console text with colorization to a log file, add -Djansi.passthrough=true to your java arguments.√æ√æ### Contributors√æCheck [here](https://github.com/RSCPlus/rscplus/graphs/contributors) for contributors√æ√æThanks to Warriorccc0 (Brinner) for testing various things on Windows."
Faceunity/FULiveDemoDroid,1043895,233,22,78,Organization,False,Faceunity Èù¢ÈÉ®Ë∑üË∏™ÂíåËôöÊãüÈÅìÂÖ∑ SDK Âú® Android Âπ≥Âè∞‰∏≠ÁöÑÈõÜÊàê Demo,,,12,Java,"{'': 2, 'md': 1, 'gradle': 3, 'properties': 1, 'bat': 1}",148,2,46,4,0,1225,True,4,16,3,0,0,12,0,7,7,0,0,0,0,0,0,0,61,0,,,"# FULiveDemoDroid√æ√æ## ‰∏≠Êñá√æFULiveDemoDroid ÊòØ Android Âπ≥Âè∞‰∏äÔºåÈõÜÊàêÁõ∏ËäØ‰∫∫ËÑ∏Ë∑üË∏™ÂèäËßÜÈ¢ëÁâπÊïàÂºÄÂèëÂåÖÔºàÁÆÄ Nama SDKÔºâÁöÑÈõÜÊàêÁ§∫‰æã„ÄÇ√æ√æÈõÜÊàê‰∫Ü Faceunity Èù¢ÈÉ®Ë∑üË∏™„ÄÅÁæéÈ¢ú„ÄÅAnimoji„ÄÅÈÅìÂÖ∑Ë¥¥Á∫∏„ÄÅARÈù¢ÂÖ∑„ÄÅÊç¢ËÑ∏„ÄÅË°®ÊÉÖËØÜÂà´„ÄÅÈü≥‰πêÊª§Èïú„ÄÅËÉåÊôØÂàÜÂâ≤„ÄÅÊâãÂäøËØÜÂà´„ÄÅÂìàÂìàÈïú„ÄÅ‰∫∫ÂÉèÂÖâÁÖß‰ª•Âèä‰∫∫ÂÉèÈ©±Âä®Á≠âÂäüËÉΩ„ÄÇ√æ√æ### ÂºÄÂèëÊñáÊ°£√æ√æÁõ∏ÂÖ≥ÊñáÊ°£‰Ωç‰∫éÊú¨È°πÁõÆdocsÁõÆÂΩïÔºåÂåÖÊã¨:√æ√æ1. [Android_Nama_Demo_ËøêË°åÊñáÊ°£.md](./docs/Android_Nama_Demo_ËøêË°åÊñáÊ°£.md) Ôºå‰ªãÁªçÂ¶Ç‰ΩïËøêË°ådemo„ÄÇ  √æ2. [Android_Nama_SDK_ÈõÜÊàêÊñáÊ°£.md](./docs/Android_Nama_SDK_ÈõÜÊàêÊñáÊ°£.md) Ôºå‰ªãÁªçÂ¶Ç‰ΩïÂú®ÂÆø‰∏ªApp‰∏≠ÈõÜÊàêNama SDK„ÄÇ   √æ3. [Android_Nama_Java_API_ÂèÇËÄÉÊñáÊ°£.md](./docs/Android_Nama_Java_API_ÂèÇËÄÉÊñáÊ°£.md)ÔºåNama SDK AndroidÊé•Âè£ÂÆö‰πâ„ÄÇ  √æ√æ## English√æFULiveDemoDroid is an integration example, that integrates Faceunity's Face AR SDK (aka Nama SDK) on Android platform.√æ√æThis example has integrated various interesting features of Faceunity's Face AR SDK, such as Face landmarks and expressions tracking, Face Beautification, Animoji, Stickers, AR Mask, Face Tranfer, Musical Filters, Background Segmentation, Hand Gestures Detection, Face Warping, Live Photo, etc.√æ√æ### Documents√æ√æRelated documents locate in __./docs__ directory, including:   √æ√æ1. [Android_Nama_Demo_Guide.md](./docs/Android_Nama_Demo_Guide.md), this illustrate how to run this demo.  √æ2. [Android_Nama_SDK_Integration_Guide.md](./docs/Android_Nama_SDK_Integration_Guide.md) , this illustrate how to integrate the SDK into the host app.   √æ3. [Android_Nama_Java_API_Reference.md](./docs/Android_Nama_Java_API_Reference.md)Ôºåthis show SDK's  Android Java API Reference.  "
MisunJoo/Fantastic-Four-Board,11005,1,3,3,User,False,,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",10,Java,"{'': 2, 'iml': 1, 'md': 2, 'temp': 1, 'xml': 1}",211,3,0,4,0,606,True,1,1,0,0,0,32,0,0,8,0,0,0,0,0,0,0,38,,31,,# Fantastic-Four-Board
elmokki/nationgen,25284,16,12,17,User,False,"NationGen is a program that procedurally generates new playable nations, including graphics, for the strategy game Dominions 4 published by Illwinter. Support for Dominions 5 may be forthcoming.",,,22,Java,"{'': 3, 'md': 1, 'txt': 4, 'jar': 2, 'xml': 1, 'bat': 2}",2583,9,44,8,0,1854,True,41,154,6,6,0,955,0,52,11,0,3,78,25747,12212,0,0,3,,2,,# nationgen√æDominions 5 procedural content generation program.
CoderDojoPotsdam/projects,214178,2,11,0,Organization,False,Projekte und Resultate vom CoderDojo,,"{'key': 'other', 'name': 'Other', 'spdx_id': 'NOASSERTION', 'url': None, 'node_id': 'MDc6TGljZW5zZTA='}",23,Java,"{'': 2, 'md': 2, 'sb2': 1}",296,1,0,5,0,2045,True,1,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,21,1,,,"Projects√æ========√æ√æProjekte der Coder.  √æ√æ- [Arduino](Arduino)√æ- [Python](Python)√æ- [Scratch](Scratch%20Projects)√æ- [Hour Of Code](HourOfCode.md)√æ- [Java](Java)√æ- [Contextfree Art](contextfree)√æ- [Inkscape Zeichenprogramm](Inkscape)√æ- [Windows Batch](Windows%20batch)√æ√æZu diesem Repository√æ--------------------√æ√æDiese Webseite ist [https://github.com/CoderDojoPotsdam/projects](https://github.com/CoderDojoPotsdam/projects). Dort wird dieser Ordner angezeigt.√æBesteht eine Internetverbindung, wird nach dem Starten eines Coder-Dojo-Potsdam-Computers automatisch der aktuelle Stand hochgeladen. √æMit den [upload-Dateien](upload) kann auch zwischendurch etwas hochgeladen werden.√æ√æLizenz√æ------√æ√æSiehe [LICENSE.md](LICENSE.md)."
bigmlcom/bigml-java,3179,6,13,21,Organization,False,Java bindings for the BigML API,,,11,Java,"{'': 1, 'md': 2, 'iml': 1, 'xml': 1}",344,3,5,10,0,2954,True,0,15,0,0,0,42,0,1,7,0,2,6,57,41,0,0,88,10,,,"# BigML.io Java bindings√æ√æ`BigML <https://bigml.com>`_ makes machine learning easy by taking care√æof the details required to add data-driven decisions and predictive√æpower to your company. Unlike other machine learning services, BigML√æcreates√æ`beautiful predictive models <https://bigml.com/gallery/models>`_ that√æcan be easily understood and interacted with.√æ√æThese BigML Java bindings allow you to interact with√æ`BigML.io <https://bigml.io/>`_, the API√æfor BigML. You can use it to easily create, retrieve, list, update, and√ædelete BigML resources (i.e., sources, datasets, models and,√æpredictions). For additional information, see√æthe `full documentation for the Java√æbindings on Read the Docs <http://bigml-java.readthedocs.org>`_.√æ√æThis module is licensed under the√æ[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).√æ√æSee all the changes history [here](Changes.md).√æ√æ## Support√æ√æPlease, report problems and bugs to√æ[BigML.io-Java issue tracker](https://github.com/bigmlcom/bigml-java/issues)√æ√æYou can send us an email at [BigML email support](mailto://support.bigml.com)√æ√æYou can join us in [Campfire chatroom](https://bigmlinc.campfirenow.com/f20a0)√æ√æ√æ## Integrating Maven√æ√æAdd the following dependency to your project's pom.xml file:√æ√æ    <dependency>√æ        <groupId>org.bigml</groupId>√æ        <artifactId>bigml-binding</artifactId>√æ        <version>1.8.13</version>√æ    </dependency>√æ√æAdd the following lines to your project's pom.xml file if you want to use the SNAPSHOT versions of the library:√æ√æ    <repositories>√æ        <repository>√æ            <id>osshr-snapshots</id>√æ            <url>https://oss.sonatype.org/content/repositories/snapshots</url>√æ            <snapshots><enabled>true</enabled></snapshots>√æ            <releases><enabled>false</enabled></releases>√æ        </repository>√æ    </repositories>√æ√æ## Requirements√æ√æYou will find in the `binding.properties` file where to setup your BigML√æcredentialsc`BIGML_USERNAME` and `BIGML_API_KEY`.√æThey can be overwritten passing the values as JVM variables with `-D`.√æ√æThe project uses Maven as project manager.√æ√æ## Running the Tests√æ√æThere is a test suite using [Cucumber](http://cukes.info/) available,√æyou may want to run it by execute:√æ√æ```bash√æ$ mvn test√æ```√æ√æor this way, if you want to debug the tests√æ√æ```bash√æ$ mvn -Dmaven.surefire.debug=""-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 -Xnoagent -Djava.compiler=NONE"" test√æ```√æ√æ## Examples√æ√æThe `samples` directory contains a maven project named `BigML-Sample-Client`√æthat can be imported. It shows some basic examples about how to use the√æbindings to create resources in BigML.√æSee the corresponding [readme](samples/BigML-Sample-Client/README.md) for details.√æ√æ## Generated JAR file of the bindings√æ√æSince version 1.1 the name of the JAR file is _bigml-binding_."
EXALAB/Busybox-Installer-No-Root,65364,87,44,68,Organization,False,,,"{'key': 'gpl-2.0', 'name': 'GNU General Public License v2.0', 'spdx_id': 'GPL-2.0', 'url': 'https://api.github.com/licenses/gpl-2.0', 'node_id': 'MDc6TGljZW5zZTg='}",3,Java,"{'': 1, 'md': 1}",22,1,10,1,0,912,True,4,1,0,0,0,0,0,0,8,0,1,3,3503,3197,0,0,16,1,,,"# Busybox-Installer-No-Root√æ√æBusybox Installer (no root) is an app designed to bring busybox to android device without root access.√æ√æ<a href='https://play.google.com/store/apps/details?id=exa.free.bbin'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' height=""100""/></a>√æ√æOr √æ√æ[<img src=""https://user-images.githubusercontent.com/663460/26973090-f8fdc986-4d14-11e7-995a-e7c5e79ed925.png"" alt=""Download APK from GitHub"" height=""100"">](https://github.com/EXALAB/Busybox-Installer-No-Root/releases/latest) √æ√æif you don't have access to Play Store.√æ√æ√æ√æWe compiled the busybox binary statically by using command below√æ√æ> make clean && make defconfig && make CROSS_COMPILE=""/path/to/cross/compiler"" LDFLAGS=""--static""√æ√æ√æ√æ### Supported architecture:√æ√æarm, arm64, x86, x86_64 mips, mips64√æ√æ√æ### Current version of busybox:√æ√æ1.31.1√æ√æ√æ### Included applet:√æ√æ[, [[, acpid, add-shell, addgroup, adduser, adjtimex, arp, arping, ash,√æ awk, base64, basename, beep, blkdiscard, blkid, blockdev, bootchartd,√æ brctl, bunzip2, bzcat, bzip2, cal, cat, chat, chattr, chgrp, chmod,√æ chown, chpasswd, chpst, chroot, chrt, chvt, cksum, clear, cmp, comm,√æ conspy, cp, cpio, crond, crontab, cryptpw, cttyhack, cut, date, dc, dd,√æ deallocvt, delgroup, deluser, depmod, devmem, df, dhcprelay, diff,√æ dirname, dmesg, dnsd, dnsdomainname, dos2unix, dpkg, dpkg-deb, du,√æ dumpkmap, dumpleases, echo, ed, egrep, eject, env, envdir, envuidgid,√æ ether-wake, expand, expr, factor, fakeidentd, fallocate, false,√æ fatattr, fbset, fbsplash, fdflush, fdformat, fdisk, fgconsole, fgrep,√æ find, findfs, flock, fold, free, freeramdisk, fsck, fsck.minix,√æ fsfreeze, fstrim, fsync, ftpd, ftpget, ftpput, fuser, getopt, getty,√æ grep, groups, gunzip, gzip, halt, hd, hdparm, head, hexdump, hostid,√æ hostname, httpd, hush, hwclock, i2cdetect, i2cdump, i2cget, i2cset, id,√æ ifconfig, ifdown, ifenslave, ifplugd, ifup, inetd, init, insmod,√æ install, ionice, iostat, ip, ipaddr, ipcalc, ipcrm, ipcs, iplink,√æ ipneigh, iproute, iprule, iptunnel, kbd_mode, kill, killall, killall5,√æ klogd, last, less, link, linux32, linux64, linuxrc, ln, loadfont,√æ loadkmap, logger, login, logname, logread, losetup, lpd, lpq, lpr, ls,√æ lsattr, lsmod, lsof, lspci, lsscsi, lsusb, lzcat, lzma, lzop, makedevs,√æ makemime, man, md5sum, mdev, mesg, microcom, mkdir, mkdosfs, mke2fs,√æ mkfifo, mkfs.ext2, mkfs.minix, mkfs.vfat, mknod, mkpasswd, mkswap,√æ mktemp, modinfo, modprobe, more, mount, mountpoint, mpstat, mt, mv,√æ nameif, nanddump, nandwrite, nbd-client, nc, netstat, nice, nl, nmeter,√æ nohup, nproc, nsenter, nslookup, ntpd, od, openvt, partprobe, passwd,√æ paste, patch, pgrep, pidof, ping, ping6, pipe_progress, pivot_root,√æ pkill, pmap, popmaildir, poweroff, powertop, printenv, printf, ps,√æ pscan, pstree, pwd, pwdx, raidautorun, rdate, rdev, readahead,√æ readlink, readprofile, realpath, reboot, reformime, remove-shell,√æ renice, reset, resize, rev, rm, rmdir, rmmod, route, rpm, rpm2cpio,√æ rtcwake, run-parts, runlevel, runsv, runsvdir, rx, script,√æ scriptreplay, sed, sendmail, seq, setarch, setconsole, setfont,√æ setkeycodes, setlogcons, setpriv, setserial, setsid, setuidgid, sh,√æ sha1sum, sha256sum, sha3sum, sha512sum, showkey, shred, shuf, slattach,√æ sleep, smemcap, softlimit, sort, split, ssl_client, start-stop-daemon,√æ stat, strings, stty, su, sulogin, sum, sv, svc, svlogd, swapoff,√æ swapon, switch_root, sync, sysctl, syslogd, tac, tail, tar, taskset,√æ tcpsvd, tee, telnet, telnetd, test, tftp, tftpd, time, timeout, top,√æ touch, tr, traceroute, traceroute6, true, truncate, tty, ttysize,√æ tunctl, ubiattach, ubidetach, ubimkvol, ubirename, ubirmvol, ubirsvol,√æ ubiupdatevol, udhcpc, udhcpd, udpsvd, uevent, umount, uname, unexpand,√æ uniq, unix2dos, unlink, unlzma, unshare, unxz, unzip, uptime, users,√æ usleep, uudecode, uuencode, vconfig, vi, vlock, volname, w, wall,√æ watch, watchdog, wc, wget, which, who, whoami, whois, xargs, xxd, xz,√æ xzcat, yes, zcat, zcip"

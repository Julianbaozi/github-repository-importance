full_name,mirror_url,archived,disabled,size,stars,watches,forks,owner_type,if_fork,description,homepage,license,files,language,formats,commits,branches,releases,contributors,topics,age,has_issues,open_issues,closed_issues,open_issues_recent,closed_issues_recent,open_prs,closed_prs,open_prs_recent,closed_prs_recent,labels,milestones,recent_contributors,recent_commits,recent_added,recent_deleted,dependent_repositories,dependent_packages,repositories,people,followers,info,readme
lightblueseas/jcommons-lang,,False,False,742,5,4,3,Organization,False,Project that holds different usefull utility and extension classes,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",106,Java,"{'yml': 3, 'md': 8, '': 3, 'xml': 2, 'launch': 14, 'java': 47, 'html': 13, 'config': 1, 'txt': 1, 'MF': 2, 'js': 3, 'css': 1, 'properties': 8}",435,34,4,5,0,1676,True,0,1,0,0,0,8,0,0,7,0,1,1,170,0,24,0,76,4,,,"# jcommons-langþþ<div align=""center"">þþ[![Build Status](https://travis-ci.org/lightblueseas/jcommons-lang.svg?branch=master)](https://travis-ci.org/lightblueseas/jcommons-lang)þ[![Coverage Status](https://coveralls.io/repos/github/lightblueseas/jcommons-lang/badge.svg?branch=master)](https://coveralls.io/github/lightblueseas/jcommons-lang?branch=master)þ[![Open Issues](https://img.shields.io/github/issues/lightblueseas/jcommons-lang.svg?style=flat)](https://github.com/lightblueseas/jcommons-lang/issues)þ[![Maven Central](https://maven-badges.herokuapp.com/maven-central/de.alpharogroup/jcommons-lang/badge.svg)](https://maven-badges.herokuapp.com/maven-central/de.alpharogroup/jcommons-lang)þ[![Javadocs](http://www.javadoc.io/badge/de.alpharogroup/jcommons-lang.svg)](http://www.javadoc.io/doc/de.alpharogroup/jcommons-lang)þ[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](http://opensource.org/licenses/MIT)þ[![Donate](https://img.shields.io/badge/donate-❤-ff2244.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GVBTWLRAZ7HB8)þþ</div>þþThe jcommons-lang project provides several extension methods for java core classes like Class and other extension for Annotations. þThe feature extension methods can be provided over the lombok library. þþ## Key features:þþ- Very small size (<54Kb)þ- Extension methods for scan java class Classþ- Id generatorsþ- Annotations for import resources like css, js etc.þ- Extension methods for shellþþ## NoteþþNo animals were harmed in the making of this library.þþ# DonationsþþThis project is kept as an open source product and relies on contributions to remain being developed. þIf you like this project, please consider a donation through paypal: <a href=""https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=B37J9DZF6G9ZC"" target=""_blank"">þ<img src=""https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif"" alt=""PayPal this"" title=""PayPal – The safer, easier way to pay online!"" border=""0"" />þ</a>þþor over bitcoin or bitcoin-cash with:þþ36JxRRDfRazLNqUV6NsywCw1q7TK38ukpCþþor over ether with:þþ0x588Aa02De98B1Ef70afeDC3ec5290130a3E5e273þþor over flattr: þ<a href=""https://flattr.com/submit/auto?fid=r7vp62&url=https%3A%2F%2Fgithub.com%2Flightblueseas%2Fjcommons-lang"" target=""_blank"">þ<img src=""http://button.flattr.com/flattr-badge-large.png"" alt=""Flattr this"" title=""Flattr this"" border=""0"">þ</a>þþ## LicenseþþThe source code comes under the liberal MIT License, making jcommons-lang great for all types of applications.þþ## Maven dependencyþþMaven dependency is now on sonatype.þCheck out [sonatype repository](https://oss.sonatype.org/index.html#nexus-search;gav~de.alpharogroup~jcommons-lang~~~) for latest snapshots and releases.þþAdd the following maven dependency to your project `pom.xml` if you want to import the core functionality of jcommons-lang:þþThan you can add the dependency to your dependencies:þþ <properties>þ   ...þ  <!-- JCOMMONS-LANG version -->þ  <jcommons-lang.version>5.2.2</jcommons-lang.version>þ   ...þ </properties>þ   ...þ  <dependencies>þ   ...þ            <!-- JCOMMONS-LANG DEPENDENCY -->þ   <dependency>þ    <groupId>de.alpharogroup</groupId>þ    <artifactId>jcommons-lang</artifactId>þ    <version>${jcommons-lang.version}</version>þ   </dependency>þ   ...þ  </dependencies>þþ## Semantic VersioningþþThe versions of jcommons-lang are maintained with the Semantic Versioning guidelines.þþRelease version numbers will be incremented in the following format:þþ`<major>.<minor>.<patch>`þþFor detailed information on versioning you can visit the [wiki page](https://github.com/lightblueseas/mvn-parent-projects/wiki/Semantic-Versioning).þþ## Want to Help and improve it? ###þþThe source code for jcommons-lang are on GitHub. Please feel free to fork and send pull requests!þþCreate your own fork of [lightblueseas/jcommons-lang/fork](https://github.com/lightblueseas/jcommons-lang/fork)þþTo share your changes, [submit a pull request](https://github.com/lightblueseas/jcommons-lang/pull/new/develop).þþDon't forget to add new units tests on your changes.þþ## Contacting the DevelopersþþDo not hesitate to contact the jcommons-lang developers with your questions, concerns, comments, bug reports, or feature requests.þ- Feature requests, questions and bug reports can be reported at the [issues page](https://github.com/lightblueseas/jcommons-lang/issues).þþ## Similar projectsþþ * [commons-lang](https://github.com/apache/commons-lang) Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy, or are considered to be so standard as to justify existence in java.langþþ## Creditsþþ|Travis CI|þ|:-:|þ|![Travis CI](https://travis-ci.com/images/logos/TravisCI-Full-Color.png)|þ|Many thanks to [Travis CI](https://travis-ci.org) for providing a free continuous integration service for open source projects.|þ|![sonatype repository](https://avatars1.githubusercontent.com/u/33330803?s=200&v=4)|þ|Many thanks to [sonatype repository](https://oss.sonatype.org) for providing a free maven repository service for open source projects.|þ|![Coverage Status](https://coveralls.io/repos/github/lightblueseas/jcommons-lang/badge.svg)|þ|Many thanks to [coveralls.io](https://coveralls.io) for providing a free code coverage for open source projects.|þ|![Javadocs](http://www.javadoc.io/badge/de.alpharogroup/jcommons-lang.svg)|þ|Many thanks to [javadoc.io](http://www.javadoc.io) for providing a free javadoc documentation for open source projects.|"
pshepilov/subtickets-plugin,,False,False,140,0,0,2,User,False,,,,51,Java,"{'': 1, 'xml': 9, 'java': 30, 'css': 1, 'png': 2, 'js': 1, 'properties': 3, 'vm': 3, 'html': 1}",53,1,0,1,0,892,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,
JungHoYoung/OSS_A,,False,False,4802,0,0,2,User,False,OSS_A,,,25,Java,"{'java': 6, 'pptx': 2, 'md': 1, 'png': 16}",131,2,0,3,0,604,True,4,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,"# OSS_AþþOpenSource SoftWare in Class.þGroup A's TeamProjectþþ목표 : 지뢰찾기구현þ기본적으로 ""Zakir289/Minesweeper""를 포크하여 부족하고 채울 부분 소스코드 작성.þ1. Grid.java를 Main.java로 수정하여 작성.þ2. 추후에 Main.java를 세개로 복사하여 난이도를 하, 중, 상으로 구현þ3. 기본에 없던 깃발꽂기, 깃발삭제 등을 추가하여 구현þ4. 기존엔 좌표를 키 입력을 받아 등록하였지만, 시간의 여유가 생기면 GUI를 이용하여 마우스 클릭으로 표현할 계획."
elferna/NameNotFoundException,,False,False,34424,0,2,2,User,False,Software Engineering Project,,,46,Java,"{'java': 23, 'classpath': 1, 'project': 1, 'jsdtscope': 1, 'prefs': 1, 'component': 1, 'xml': 3, 'container': 1, 'name': 1, 'jsp': 1, 'MF': 1, 'gitignore': 1, 'fxml': 1, 'md': 1, 'class': 8}",20,11,0,5,0,1359,True,0,0,0,0,0,2,0,0,7,0,0,0,0,0,0,0,,,0,,"# NameNotFoundExceptionþSoftware Engineering ProjectþþþAn incomplete project based on the board game Clue.  This project was a group assignment for ""Foundations of Software Engineering"" in the Master's of Computer Science program offered at Johns Hopkins University."
karinkicks/figures,,False,False,32,0,1,2,User,False,lab1,,,13,Java,"{'docx': 1, 'java': 12}",11,1,0,1,0,611,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,
SEMSSEK2018/Kirpitch,,False,False,206,0,1,2,User,False,"First version of ""Kirpitch"" Application",,,85,Java,"{'': 2, 'xml': 39, 'ser': 1, 'gitignore': 1, 'gradle': 3, 'json': 2, 'pro': 1, 'java': 12, 'png': 20, 'properties': 2, 'jar': 1, 'bat': 1}",24,1,0,3,0,617,True,0,0,0,0,0,2,0,0,8,0,0,0,0,0,0,0,,,0,,
jaheikki/cucumber-selenide-allure,,False,False,14957,2,4,4,User,False,,,,60,Java,"{'': 1, 'pdf': 1, 'pdf_OLD': 1, 'md': 1, 'sh': 3, 'yml': 3, 'xml': 3, 'png': 2, 'java': 34, 'json': 2, 'properties': 5, 'feature': 3, 'sql': 1}",165,6,0,1,0,965,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,"# Cucumber & Selenide & Allure demoþþ## Latest news:þþ27.9.2019: Replaced log4j with logback + simple DataTable example in feature file (Scenario: Order a product from a catalog)þþ27.9.2019: Upgrade to Cucumber 4: https://cucumber.io/blog/announcing-cucumber-jvm-4-0-0þNote 1: this project does not use new Cucumber 4 features, but there's now an option to use them.þNote 2: use DataTable when you deliver e.g. list or map from feature file to step definition (conversion is then automatic).þþ13.1.2019: Taking REST-assured in use and thus replacing Jersey&Jackson use in Rest methods (Jersey&Jackson examples still exist in code)  þþ21.8.2018: Upgraded to Cucumber Java release 2 and TestNG (previously jUnit)!þNote: Could not upgrade yet to Cucumber Java release 3 since it has changes that are not backward compatible.þþ## Purpose of this projectþTo collect & present toolset for making E2E system tests written in Java by using common open source tools. This example project is kept very simple on purpose so that basically everyone is able to understand the code. With help of this ""project template"" you are able to develop more advanced tests, regarless if it is UI, REST, DB, SSH test or all of them.þþ#### DetailsþThis is fully working example how run Web UI tests easily with Java with Selenide library (http://selenide.org/). In this example the demo application is set up by docker and docker-compose. The tests will be run by Cucumber Java framework to be able to use Gherkin (BDD) style as testcase descriptions (see https://docs.cucumber.io/bdd/overview and https://cucumber.io/blog/2017/08/29/announcing-cucumber-jvm-2-0-0 and ). And as cherry on top of a cake we use here Allure2 framework for producing world class test report (see https://github.com/allure-framework/allure2 and https://github.com/allure-framework/allure-java). There's also a small DB usage example in CustomersPage class method addCustomer, it uses Spring JDBC template to do some simple DB tasks.  Also with help of SSH libraries included you can operate on Linux servers in e2e automated system tests. See included pdf document for more information.þþ## Preconditions:þ- Install docker for Mac: https://docs.docker.com/docker-for-mac/install/ þ- or install docker for Windows 10 Pro: https://docs.docker.com/docker-for-windows/install/þ  - Note: only Windows 10 Pro with latest updates work. Use only PowerShell for docker commands.þ- or install Vagrant box e.g. with Ubuntu 16.04 (https://app.vagrantup.com/ubuntu/boxes/xenial64) and install docker (https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1) and docker-compose (https://docs.docker.com/compose/install/) in it. See also: https://github.com/jaheikki/ansibleþ- Install JDK8, Maven3 and Git.þ- Optional: Download free IntelliJ IDEA IDE Community Edition (https://www.jetbrains.com/idea) and install 'Cucumber For Java' plugin in IDE. This allows you to develop and debug Cucumber/Java tests easily (works fully in both Mac and Windows).þ- To be able run testcases with BrowserStack you need to buy license or use trial period of BS. When you get your BS username and access key, set them up as environment variables in the shell you are running tests:þe.g export BROWSERSTACK_USERNAME=<username> && export BROWSERSTACK_ACCESS_KEY=<access_key>þNote: Maven VM option -Dlocal means testing the demo UI running (as docker containers) in your PC in BrowserStack, see: þhttps://www.browserstack.com/automate/javaþþNotice that 'allure-cucumber4-jvm' Maven dependency brings the Cucumber core dependencies included, see pom.xml.þþ## Stepsþþ1. Clone this repository (e.g. in ~/git dir): þ   - git clone https://github.com/jaheikki/cucumber-selenide-allure.gitþþ2. Get dependended Git repositories cloned and build needed java applications:þ   - cd ~/git/cucumber-selenide-allureþ   - ./clone_and_build_ms_demo_apps.shþþ4. Start demo application docker containers: þ   - cd ~/git/microservice-demo-acceptance-tests-copy/src/test/resourcesþ   - docker-compose -f docker-compose-dev.yml up -dþþ5. Wait for demo application start a few minutes:þ   - Web UI should appear in localhost:8080þ   - Note: Use CMD-R(CTRL-R in Windows) + SHIFT to refresh page until demo application visible.þþ   <img src=""https://raw.githubusercontent.com/jaheikki/cucumber-selenide-allure/master/readme_images/demo-application.png"" width=""400"" height=""500"">þ    þ6. Run CucumberJVM tests:þ    þ     - Run 'catalog' tests (REST test without UI):þ       - mvn clean install -Dcucumber.options=""--tags @catalog""þ     - Run 'order' tests by chrome browser:þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dselenide.browser=chromeþ     - Run 'order' tests by chrome browser with mobile size (Apple iPhone 6 size):  þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dbrowser=chrome -Dselenide.browser-size=375x667þ     - Run 'order' tests by Firefox in standalone debug grid container (Selenide default Webriver capabilities):þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dselenide.browser=chrome -Dremote=http://localhost:4445/wd/hub - Denv=local-grid (Note: take session to localhost:5900 with VNCViewer with pw 'secret')þ       OR to run in grid with custom browser (customizable Webriver capabilities):þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dselenide.browser=microservice.browser.FirefoxLinuxGridDriverProvider -Denv=local-grid (Note: take session to localhost:5900 with VNCViewer with pw 'secret')þ     - Run 'order' tests by custom firefox browser (from local page) in BrowserStack:   þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dbrowser=microservice.browser.Firefox53WindowsRemoteDriverProvider -Dlocalþ     - Run 'order' tests by custom mobile browser (from local page)  in BrowserStack:   þ       - mvn clean install -Dcucumber.options=""--tags @order"" -Dbrowser=microservice.browser.SamsungGalaxyS7_V6_0_RemoteDriverProvider -            Dlocalþ     - Run 'all' tests (catalog&order) and generate Allure test report files:þ       - mvn clean install -Dcucumber.options=""--tags @all"" -Dselenide.browser=chromeþ       - Generate the HTML report by: mvn allure:reportþ       - Open the test report ('Open in Browswer' in IntelliJ IDEA IDE project) from <project_dir>/target/site/allure-maven-plugin/index.htmlþ       <img src=""https://raw.githubusercontent.com/jaheikki/cucumber-selenide-allure/master/readme_images/allure-report.png"" width=""800"" height=""300"">þ  þ7. Stop and remove application docker containers: 'docker-compose -f docker-compose-dev.yml down -v --remove-orphans' þ   Note: Sometimes demo application hangs and it is needed to be shut it down and restart (up -d, see step 3). Or use restart: 'docker-compose -f docker-compose-dev.yml restart'"
VargaiD/PV254,,False,False,648,0,1,3,User,False,,,,102,Java,"{'': 2, 'yml': 1, 'md': 1, 'xml': 8, 'java': 72, 'keep': 1, 'jsp': 11, 'tag': 1, 'css': 2, 'jpg': 1, 'csv': 2}",148,17,0,3,0,626,True,0,32,0,0,0,34,0,0,17,1,0,0,0,0,0,0,,,0,,"# PV254þþTo locally set up database, configure persistence-mysql.properties file with database name, username and password"
enirobot/SenierProject,,False,False,59659,0,1,3,User,False,졸업 프로젝트,,,136,Java,"{'gitignore': 1, 'jar': 1, 'properties': 2, '': 2, 'exe': 1, 'cmd': 1, 'xml': 1, 'java': 34, 'css': 5, 'svg': 9, 'otf': 1, 'eot': 1, 'ttf': 1, 'woff': 1, 'woff2': 1, 'jpg': 31, 'js': 12, 'scss': 21, 'html': 10}",231,7,1,5,0,899,True,2,0,0,0,0,3,0,0,8,0,0,0,0,0,0,0,,,0,,
evrcargo/imapsize,,False,False,95,7,2,1,User,False,IMAP backup/restore tool,,"{'key': 'mit', 'name': 'MIT License', 'spdx_id': 'MIT', 'url': 'https://api.github.com/licenses/mit', 'node_id': 'MDc6TGljZW5zZTEz'}",25,Java,"{'': 3, 'md': 1, 'gradle': 2, 'jar': 1, 'properties': 2, 'bat': 1, 'cmd': 1, 'java': 13, 'MockMaker': 1}",34,1,0,1,3,1072,True,0,3,0,0,0,1,0,0,7,0,0,0,0,0,0,0,,,0,vadimkim/imapsize,"# imapsizeþThis software is insipred by http://www.broobles.com/imapsize. Imapsize is able to check IMAP mailbox folder structure and calculate the size, backup mailbox using IMAP protocol and restore mailbox to any IMAP server.þþImapsize has some key differences from the original:þ* console applicationþ* runs on any platform where JRE 11. is installedþ* understands UTF-8 IMAP folder names and restores them correctlyþ* doesn't have 2Gb limit for the folder sizeþ* understands folder UIDs and makes message backups using original MIME message formatþ* ckecks MIME Message-ID or calculates MD5 if Message-ID is missing to avoid message duplicatesþ* user can define which folders to backup/restore by making filters. Default filter is applied to Calendar, Contacts and Deleteted Itemsþþ# Dependenciesþ* JAVA JDK 1.11þþ# Bulding and runningþ./gradlew jar  --- to build the project \þ./run.cmd      --- to run and show menuþþNB! before running the program edit build/resources/main/mbox.properties file to describe your IMAP account configurationþþ# Coverity scan resultþ<a href=""https://scan.coverity.com/projects/evrcargo-imapsize"">þ  <img alt=""Coverity Scan Build Status""þ       src=""https://scan.coverity.com/projects/14799/badge.svg""/>þ</a>"
WeissandBeans/Constructor,,False,False,4372,0,2,3,User,False,,,,54,Java,"{'': 3, 'ini': 1, 'fdt': 2, 'fdx': 1, 'fnm': 1, 'frq': 1, 'nrm': 1, 'tii': 1, 'DS_Store': 2, 'classpath': 1, 'gitignore': 1, 'project': 1, 'txt': 1, 'java': 15, 'fxml': 7, 'jpg': 9, 'png': 6}",94,13,0,5,0,605,True,0,0,0,0,0,29,0,0,8,0,0,0,0,0,0,0,,,0,,
blfranciscovich/comp830730project,,False,False,38,0,0,2,User,False,comp830/730 project,,,12,Java,"{'java': 8, '': 3, 'md': 1}",40,1,0,3,0,599,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,# comp830730projectþcomp830/730 project
BBBSP/TheDisaster,,False,False,197,0,0,3,User,False,,,,9,Java,"{'md': 1, 'java': 8}",118,1,0,3,0,595,True,0,0,0,0,0,35,0,0,8,0,0,0,0,0,0,0,,,0,,# TheDisaster
SupremeBeing/Silver-Hammer,,False,False,504,1,1,2,User,False,Extensible annotation-based UI generation framework,,"{'key': 'bsd-2-clause', 'name': 'BSD 2-Clause ""Simplified"" License', 'spdx_id': 'BSD-2-Clause', 'url': 'https://api.github.com/licenses/bsd-2-clause', 'node_id': 'MDc6TGljZW5zZTQ='}",126,Java,"{'': 1, 'txt': 1, 'md': 1, 'xml': 4, 'java': 114, 'png': 3, 'properties': 2}",99,2,1,1,3,1063,True,2,1,0,0,0,2,0,0,7,0,1,3,383,3883,0,0,,,0,SupremeBeing/silver-hammer,"# Silver Hammerþþ## OverviewþþSilver Hammer is an extensible annotation-based UI generation framework.þþCurrently only Swing implementation is present. Web implementation is planned.þþ## Exampleþþ### Sample dataþ```javaþpublic class Person {þþ private static final String EMAIL = ""\\b[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}\\b"";þ  þ @Textþ @Caption(""Name"")þ @MinSize(value = 1, message = ""Name must be specified"")þ private String name;þ  þ @Textþ @Caption(""E-mail"")þ @StringFormat(format = EMAIL, message = ""Invalid e-mail"")þ @MinSize(value = 1, message = ""E-mail must be specified"")þ private String email;þþ}þ```þþ### Executionþ```javaþþPerson person = new Person();þProcessor processor = new Processor(new SwingControlResolver());þUiModel metadata = processor.process(person);þSwingUiBuilder builder = new SwingUiBuilder(""Silver Hammer Demo"");þbuilder.showUi(metadata);þþ```þþFor detailed examples please refer to `silver-hammer-demo` module."
maurobilotti/smappio,,False,False,47024,0,5,2,User,False,,,,184,Java,"{'': 3, 'txt': 5, 'ino': 5, 'docx': 2, 'h': 10, 'cpp': 7, 'md': 1, 'gitignore': 3, 'xml': 57, 'ser': 1, 'gradle': 3, 'pro': 1, 'java': 18, 'png': 35, 'properties': 2, 'jar': 1, 'bat': 1, 'ico': 1, 'sln': 1, 'config': 2, 'cs': 19, 'resx': 3, 'settings': 1, 'jpg': 1, 'csproj': 1}",261,6,0,5,0,796,True,0,0,0,0,0,0,0,0,8,0,1,1,2,2,0,0,,,0,,"# SmappioþþWireless electronic sthetoscope developed by using Adafruit Feather Huzzah ESP32 module along with Adafruit I2S SPH0645 to capture body sounds (heart and lungs mainly). þþThe HW folder contains all the C/C++ (Arduino) for the hardware, and the SW contains two clients projects that connects via WiFi to the device. Those projects were develop with .NET Winforms and Android respectivly. þþHope this project could help anyone else. þþThis project was develop as a thesis for our careers of Systems Information Engineer in the UTN University (Argentina).þþMembers:þ* Mauro Bilotti (mauro_bilo@hotmail.com)þ* Pablo Furst (furstpablo@gmail.com)þ* Augusto Bonabia (augusto.bonabia@gmail.com)þ* Nicolas Morales (nicmora@gmail.com)þ* Diego Jaime (diegonjaime@gmail.com)"
ArtemBakun650502/YouTube-Downloader,,False,False,463,0,0,1,User,False,,,,39,Java,"{'PNG': 8, 'md': 10, 'png': 11, 'fxml': 4, 'java': 6}",81,1,0,1,0,610,True,1,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,"# YouTube-Downloaderþ YouTube-Downloader - это приложение, позволяющее скачивать видео в разных форматах с платформы YouTube на ПК.þþ### REQUIREMENTS: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/blob/master/Documents/Requirements/Requirements.md))þþ### Diagrams: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/blob/master/Documents/Diagrams/README.md))þþ### Source code: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/tree/master/Project/src/main/java))þþ### Test Plan: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/blob/master/Testing/TestPlan.md))þþ### Result of the testing: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/blob/master/Testing/Test.md))þþ### Refactoring: ([Ru](https://github.com/ArtemBakun650502/YouTube-Downloader/blob/master/Documents/Refactoring/refactoring.md))"
vzhan100/Time-Banking,,False,False,29792,1,2,2,User,False,Time Banking App: Where users can request or respond to a job post by using time as the currency.,,,47,Java,"{'docx': 2, 'md': 1, 'zip': 1, 'java': 12, 'xml': 20, 'png': 11}",53,1,0,4,0,803,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,"# Time-BankingþþTime Bank AppHEREþþIntroduction:þThis is a mobile based application where people on this platform can trade hours as local currency. This system provides a means for people to request different services and provide diverse services to people on this platform. When a user needs a request, the request is posted which is broadcasted and made available to all users of the application. The request posted includes how much time the requester is willing to trade for the service.þ þThe major roles of this system are:þ• The requester who will need a serviceþ• The responder who is available to provide service to the requesterþ þThe major use cases of the system are:þ• User signs up with name, location, descriptionþ• Requester posts a serviceþ• Responder browses through all available services requestþ• Responder views approximate time to a service locationþ• Requester rates the service provided by a responderþþþþContact Vincent for full project."
VerachtertAaron/Bool-CompositePattern,,False,False,3,0,1,3,User,False,,,,8,Java,"{'MD': 1, 'gradle': 2, 'java': 5}",2,1,0,1,0,593,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,"# Composite PatternþþDeze opdracht heeft als doel om het composite pattern toe te kunnen passen.þHet is ineens ook een oefening op refactoring.þþ## ContextþþDe kerstman wilt ook wel eens meedoen met al dat gedoe van kerstversiering, en beslist daarom om zijn huis te versieren tijdens de kerstperiode.þHij heeft zijn huis helemaal voorbereid, maar helaas heeft Amazon zijn domoticapakket niet op tijd geleverd.þDe enige oplossing is om per versiering een elf te stationeren en via walkie-talkie's aan elke elf te laten weten dat hij de versiering moet aanzetten.þHij komt er al snel achter dat de walkie-talkie's niet van goede kwaliteit zijn (made in China).þEen set van 4 walkie-talkie's is op voorhand ingesteld op een vaste (unieke) frequentie en de kerstman heeft maar plaats voor 1 walkie-talkie in zijn broekzak.þþDat wordt dus een sobere versiering van 3 stuks...þþ## Oefening 1þþDe oplossing is simpel: als hij gewoon extra elfjes inschakelt met twee walkie-talkie's van twee verschillende sets, kunnen die met versieringselfjes communiceren!þþVb. Als hij 5 stuks versiering wilt hebben:þ* Set 1: kerstman, elf1, versieringelf1, versieringelf2þ* Set 2: elf1, versieringelf3, versieringelf4, versieringelf5þþ**Voeg Walkie-talkie-elfjes toe aan de code met behulp van het composite-pattern**þþ## Oefening 2a: RefactoringþþYou know what to do.þþ## Oefening 2b: Aantal versieringenþþDe kerstman is nogal vergeetachtig en zou graag willen kunnen opvragen hoeveel elfjes hij nu heeft geoutsourcet voor zijn hobbyproject.þGebruik de huidige structuur van het composite pattern om dit op te vragen."
tomsford/TrabajoFinalTallerIBDS,,False,False,1108,0,0,4,User,False,,,,68,Java,"{'xml': 1, 'jpr': 1, 'pdf': 1, 'html': 27, '': 1, 'js': 1, 'css': 1, 'java': 26, 'form': 6, 'txt': 1, 'md': 1, 'jws': 1}",34,1,0,1,0,633,True,0,0,0,0,0,7,0,0,8,0,0,0,0,0,0,0,,,0,,# TrabajoFinalTallerIBDS
giloutho/Logfly,,False,False,19500,11,5,5,User,False,Logfly is a log book which stores your flights with GPS tracks or not,,"{'key': 'gpl-3.0', 'name': 'GNU General Public License v3.0', 'spdx_id': 'GPL-3.0', 'url': 'https://api.github.com/licenses/gpl-3.0', 'node_id': 'MDc6TGljZW5zZTk='}",326,Java,"{'': 11, 'properties': 7, 'lock': 2, 'bin': 6, 'jpg': 1, 'md': 1, 'gradle': 2, 'exe': 3, 'jar': 9, 'icns': 1, 'ico': 1, 'java': 190, 'png': 54, 'fxml': 21, 'css': 3, 'txt': 12, 'inf': 2}",1380,1,0,4,0,1090,True,13,1,2,0,2,0,0,0,10,1,0,0,0,0,0,0,,,0,,"# LogflyþLogfly is a log book which stores paragliding flights with GPS tracks or not. It's possible to visualize flights and evaluate the score for online contest. It works on Windows, Mac and Linux.þþ![Logfly screenshot](http://logfly.org/download/Divers/Logfly_uk.jpg)þþ**Build and run requirements :**   þThe optimization task (finding largest free flight, flat or FAI triangle) on the tracklogs is computed by an external program writen by [Ondrej Palkovsky](http://www.penguin.cz/~ondrap/paragliding.php) called ***points***. þFlymaster and Flytec communication are made with ***GPSDump*** writen by [Stein Sorensen](http://www.gpsdump.no/).þThey are free but not open source programs. It's necessary to put the binaries of your platform at the right place. Folder runlib-win contains the windows exexutables, runlib_mac the mac versions and runlib_linux the 32 bits binaries. To run the code in an IDE, you must place points and GpsDump at the root of the project. To build the project with gradle, you must place the binaries of your platform in folder src/main/runlib. In the final bundle, points and GPSDump will be placed at the same level than logfly.jar.þþ**Thanks :**  þLogfly was made possible by many Github contributors. Special thanks to [Tom Payne](https://github.com/twpayne) for his great job on paragliding tracks, to [Victor Berchet](https://github.com/vicb) for VisuGPS,  to [Rishi Gupta](https://github.com/RishiGupta12) for the serial SDK SerialPundit and Alessandro Faillace for Flymaster Plus. þþþ[License](LICENSE)"
marianhtuyet/Java,,False,False,32296,0,0,4,User,False,Các phần code trong môn Java,,,519,Java,"{'': 2, 'xml': 39, 'mf': 10, 'properties': 34, 'java': 163, 'pdf': 11, 'fxml': 53, 'css': 8, 'sql': 3, 'form': 8, 'svg': 1, 'png': 30, 'jpg': 18, 'rar': 1, '0/bin/fontawesomefx-glyphsbrowser': 1, 'bat': 1, 'jar': 35, 'class': 73, 'db': 3, 'html': 1, 'jnlp': 1, 'js': 1, 'gif': 2, 'txt': 8, 'gz': 2, 'dll': 8, 'TXT': 1, 'md': 1}",13,1,0,1,0,618,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,# Java
SaidaShamim/SprinbootWithJdbc,,False,False,9,0,0,2,User,False,,,,10,Java,"{'xml': 1, 'java': 6, 'properties': 1, 'md': 1, '': 1}",12,1,0,3,0,625,True,0,0,0,0,0,5,0,0,8,0,0,0,0,0,0,0,,,0,,# SprinbootWithJdbcþþþShaidaniiiii......
MJIrobotics/Tapia-sdk,,False,False,27270,0,2,2,User,False,SDK for the robot Tapia,,,74,Java,"{'md': 1, 'gitignore': 2, 'gradle': 3, 'pro': 1, 'java': 22, 'xml': 11, 'png': 13, 'DS_Store': 3, 'mp3': 2, 'pcm': 3, 'vtdb': 5, 'csv': 1, 'txt': 2, 'properties': 2, 'jar': 1, '': 1, 'bat': 1}",33,2,0,4,0,1191,True,0,25,0,1,0,1,0,1,7,0,2,2,97,6,0,0,,,0,,"# Tapia-sdkþþSDKはTapiaで開発するためのものです。<br />þSDK for developing on Tapia. <br /><br />þþ## Installationþþ1.  git cloneするか、zipをダウンロードし、Android Studioでtapia-sampleプロジェクトを開いてください。<br /><br />þ    Download or clone the project and then open the sample app (tapia-sample) in Android Studio. þþ2.  `gradle.properties`に追加することで<br />þ    Tapiaのライブラリーを使用できます。<br /><br />þ    Add the following to your `gradle.properties`<br />þ    This will add the Tapia library to your project. þþ    ```þ    sdk_username=yourUserNameþ    sdk_password=yourPasswordþ    ````þ    sdk_username及びskd_passwordは TAPIA Online SDKにログイン後に取得できます。<br/>þ    þþ3.  アカウントをまだ作成していない場合は、TAPIA　Online SDKで取得してください。<br/>þ    TAPIA Online SDKのurlは下記のとおりです。<br />þ    If you don't have an account yet, please create one at :<br />þ    https://tos.mjirobotics.co.jp/þ    þ4.  アカウントを取得したら、ウェブサイトからライセンスキーを確認してください。<br />þ    プロジェクトのAndroidManifest.xmlファイルに下のように追記します。<br /> <br />þ    Once you have an account, please find your license key from the the website<br />þ    and include it in your project's AndroidManifest.xml file as follows:þþ    ```þ    <applicationþ        ...þ        <meta-dataþ                android:name=""license_key""þ                android:value=""yourLicenseKey"" />þ        ...þ    </application>þþ    ````þ þ5.  既存コードからバージョンアップする場合は、以下追加してください<br />þ今回のパーションアップでは、バージョンの数字だけでなく①～⑤を追加修正する必要があります。<br />þ①tapia-sample/app/build.gradle を追加・修正しますþ    ```þ    + compileOptions {þ    +     sourceCompatibility 1.8þ    +      targetCompatibility 1.8þ    + }þ    + packagingOptions {þ    +     exclude 'META-INF/DEPENDENCIES'þ    +     exclude 'META-INF/INDEX.LIST'þ    + }þ    ```þþ    ```þ    dependencies {þ    -  compile'com.tapia.mji:tapialib:1.0.10.2'þ    +    compile 'com.tapia.mji:tapialib:2.0.1'þ    } þ    ``` þþ    ②tapia-sample/app/src/main/java/com/tapia/mji/demo/Languages/English_US.javaを追加修正しますþþ    ``` þ    + import com.tapia.mji.tapialib.Providers.DosmonoOnlineSTTProvider;þ    ``` þ    ``` þ    public English_US(){þþ       -  onlineSTTProvider          = Fuetrek.class;þ       +  onlineSTTProvider          = DosmonoOnlineSTTProvider.class;þ    ``` þþ    ③tapia-sample/app/src/main/java/com/tapia/mji/demo/Languages/Japanese.java を追加修正しますþ     ``` þ    + import com.tapia.mji.tapialib.Providers.DosmonoOnlineSTTProvider;þ    ``` þ    ``` þ    public English_US(){þþ       -  onlineSTTProvider          = Fuetrek.class;þ       +  onlineSTTProvider          = DosmonoOnlineSTTProvider.class;þ    ``` þ    ④tapia-sample/build.gradle を追加修正しますþ    ``` þ    buildscript {þ        repositories {þ        　     jcenter()þ            +  google()þ        }þ        dependencies {þ            - 　classpath 'com.android.tools.build:gradle:2.3.3'þ            +  classpath 'com.android.tools.build:gradle:3.6.3'þ    ``` þ    ```þ        allprojects {þ            repositories {þ                jcenter()þ            +   google()þ    ```þ    ```þ            +    maven { url 'https://csspeechstorage.blob.core.windows.net/maven/' }þ            +    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }þ            +    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }þ                 maven {þ    ```þ    ⑤tapia-sample/gradle/wrapper/gradle-wrapper.properties を追加修正しますþ    ```þ    -　distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zipþ    +　distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.4-all.zipþ    ```þ<br/>þþ## Release Noteþþver.2.0.1<br />þ機能追加<br />þ・ タピアの音声認識を変更しました。þþver.1.0.10.2<br />þ機能追加<br />þ・ タピアの音声認識の速度を向上しました。þþver.1.0.9<br />þ機能追加<br />þ・ タピアの話すスピードを１～５段階で設定する事が出来るようになりました。þþver.1.0.8<br />þ機能追加<br />þ・ 日本語入力画面の「送信」ボタンの名称を、別の名前へ変更出来るようになりました。þþver.1.0.7<br />þ機能追加<br />þ・ 日本語入力画面の初期表示時に、テキスト入力ボックスに文字をセット出来るようになりました。þþver.1.0.6<br />þ・ 日本語入力画面が使用出来るようになりました。þþver1.0.5<br />þ・ フッターのブラックバーの不具合修正をしました。"
mnunesp/NavRPI,,False,False,735,0,0,4,User,False,,,,126,Java,"{'': 3, 'un~': 1, 'xml': 33, 'xml~': 1, 'gitignore': 1, 'gradle': 3, 'pro': 1, 'java': 33, 'pdf': 6, 'png': 39, 'json': 1, 'properties': 2, 'jar': 1, 'bat': 1}",180,1,0,4,0,632,False,,,,,0,31,0,0,8,0,0,0,0,0,0,0,,,0,,
lafontantb/Infinity-Stoners,,False,False,673,0,1,1,User,False,,,,40,Java,"{'': 1, 'DS_Store': 5, 'classpath': 1, 'gitignore': 2, 'project': 1, 'prefs': 2, 'java': 10, 'log': 2, '1': 2, 'lck': 4, 'sh': 2, 'class': 5, 'md': 2, 'mp4': 1}",41,2,0,3,0,610,True,0,0,0,0,1,1,0,0,8,0,0,0,0,0,0,0,,,0,,"# Infinity Stonersþ---þ## Project Descriptionþ----þ### What?þA multiplayer card game of war. Create a deck of cards and split evenly between players. Highest card wins. Player that wins gets all the cards played that round. Games goes until one player has the whole deck or until all players quit.þ---þ### Deliverables þ---þ- Online *War* card gameþ- Card game backendþ    A player, deck, game, hand, pile, rank, runner, and suit class that controls different elements of the gameþ- Documentationþ---þ### Planþ---þ1. Week one: create deck of cards in pythonþ2. Week two: Distribute cards between playersþ3. Week three: connect clients and server so they can play gameþ4. Week four: Work on socket connection if it still needs to be implementedþ5. Week five: make sure everything works and see if improvements can be madeþ---þ### Team membersþKeegan Whelan, Brandon Lafontant, and Ryan Changþþ# Commentsþ1. Good description of the game scenarioþ2. Need to be more specific on the deliverables by adding description to each of the items in the deliverables section þþFor example:þ* Cardgame backend: What do you implement for the backend?þ3. Adjust the plan as we have total 5 weeks for the project and rougly 4 weeks for implementation.þ4. ProgressUpdates.md is missing!"
Telkh/WITAssistant,,False,False,524,1,1,2,User,False,Organizer for WIT Students,,,31,Java,"{'': 4, 'prefs': 1, 'fxbuild': 1, 'csv': 2, 'jar': 1, 'fxml': 5, 'java': 14, 'png': 2, 'css': 1}",102,1,0,3,0,604,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,
cerijerome/ceri,,False,False,281191,1,1,2,User,False,,,,1700,Java,"{'': 16, 'gitignore': 13, 'project': 13, 'md': 9, 'iml': 10, 'pdf': 10, 'h': 18, 'xml': 17, 'java': 1187, 'wav': 197, 'json': 14, 'txt': 38, 'properties': 15, 'classpath': 1, 'png': 3, 'csv': 1, 'zip': 2, 'css': 12, 'ttf': 22, 'js': 12, 'htm': 1, 'jpg': 8, 'rar': 1, 'gz': 2, 'in': 9, 'c': 18, 'html': 1, 'jsgf': 12, 'tif': 1, 'gif': 1, 'ids': 1, 'conf': 1, 'pkg': 1, '1-7/INSTALL': 1, 'jar': 8, 'so': 13, 'jnilib': 6, '2cmu/README': 1, '2pre1/README': 1, '2pre2/README': 1, 'x/README': 1, 'map': 1}",763,2,0,2,0,2768,True,1,2,0,0,1,4,0,1,7,0,1,54,49227,41434,0,0,,,0,,
pngochop/uwt_css,,False,False,54645,0,0,1,User,False,,,,306,Java,"{'pdf': 2, 'c': 1, 'md': 1, 'asm': 1, 'bin': 1, 'hex': 1, 'lst': 1, 'obj': 1, 'sym': 1, 'zip': 4, 'class': 101, 'png': 22, 'rce': 3, 'java': 79, 'xml': 42, 'jar': 6, 'rar': 2, 'txt': 19, 'gif': 12, 'src': 1, 'wav': 5}",11,1,0,1,0,626,True,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,,,0,,# uwt_css
